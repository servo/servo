name: Linux WPT Tests
on:
  workflow_call:
    inputs:
      profile:
        required: true
        type: string
      wpt-tests-to-run:
        default: ""
        required: false
        type: string
      wpt-sync-from-upstream:
        default: false
        required: false
        type: boolean
      wpt-layout:
        required: true
        type: string

env:
  RUST_BACKTRACE: 1
  SHELL: /bin/bash
  WPT_COMMAND_LINE_ARG: "${{ inputs.wpt-layout == 'layout-2013' && '--legacy-layout' || '' }}"
  GST_PLUGIN_FEATURE_RANK: pulsesink:NONE,alsasink:NONE,jacksink:NONE,fakesink:MAX

jobs:
  linux-wpt:
    name: WPT ${{ inputs.wpt-layout }}
    runs-on: ubuntu-22.04
    env:
      max_chunk_id: 20
    strategy:
      fail-fast: false
      matrix:
        chunk_id: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
    steps:
      - uses: actions/checkout@v3
        if: github.event_name != 'pull_request_target'
        with:
          fetch-depth: 2
      # This is necessary to checkout the pull request if this run was triggered via a
      # `pull_request_target` event.
      - uses: actions/checkout@v3
        if: github.event_name == 'pull_request_target'
        with:
          ref: refs/pull/${{ github.event.number }}/head
          fetch-depth: 2
      - uses: actions/download-artifact@v3
        with:
          name: release-binary
          path: release-binary
      - name: unPackage binary
        run: tar -xzf release-binary/target.tar.gz
      - name: Bootstrap dependencies
        run: |
          python3 -m pip install --upgrade pip
          sudo apt update
          sudo apt install -qy --no-install-recommends mesa-vulkan-drivers
          python3 ./mach bootstrap
      - name: Sync from upstream WPT
        if: ${{ inputs.wpt-sync-from-upstream }}
        run: |
          ./mach update-wpt --sync --patch
      - name: Run tests
        if: ${{ !inputs.wpt-sync-from-upstream }}
        run: |
          python3 ./mach test-wpt $WPT_COMMAND_LINE_ARG ${{ inputs.wpt-tests-to-run }} \
            --${{ inputs.profile }} --processes $(nproc) --timeout-multiplier 2 \
            --total-chunks ${{ env.max_chunk_id }} --this-chunk ${{ matrix.chunk_id }} \
            --log-raw test-wpt.${{ matrix.chunk_id }}.log \
            --log-raw-unexpected unexpected-test-wpt.${{ matrix.chunk_id }}.log \
            --filter-intermittents filtered-test-wpt.${{ matrix.chunk_id }}.json
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          INTERMITTENT_TRACKER_DASHBOARD_SECRET: ${{ secrets.INTERMITTENT_TRACKER_DASHBOARD_SECRET }}
      - name: Run tests (sync)
        if: ${{ inputs.wpt-sync-from-upstream }}
        run: |
          python3 ./mach test-wpt $WPT_COMMAND_LINE_ARG \
            --${{ inputs.profile }} --processes $(nproc) --timeout-multiplier 2 \
            --total-chunks ${{ env.max_chunk_id }} --this-chunk ${{ matrix.chunk_id }} \
            --log-raw test-wpt.${{ matrix.chunk_id }}.log \
            --always-succeed
      - name: Archive filtered results
        uses: actions/upload-artifact@v3
        if: ${{ always() && !inputs.wpt-sync-from-upstream }}
        with:
          name: wpt-filtered-results-linux-${{ inputs.wpt-layout }}
          path: |
            filtered-test-wpt.${{ matrix.chunk_id }}.json
            unexpected-test-wpt.${{ matrix.chunk_id }}.log
      - name: Archive logs
        uses: actions/upload-artifact@v3
        if: ${{ failure() && !inputs.wpt-sync-from-upstream }}
        with:
          name: wpt-logs-linux-${{ inputs.wpt-layout }}
          path: |
            test-wpt.${{ matrix.chunk_id }}.log
      - name: Archive logs
        uses: actions/upload-artifact@v3
        if: ${{ inputs.wpt-sync-from-upstream }}
        with:
          name: wpt-logs-linux-${{ inputs.wpt-layout }}
          path: |
            test-wpt.${{ matrix.chunk_id }}.log
            wpt-jsonsummary.${{ matrix.chunk_id }}.log

  report-test-results:
    name: Report WPT Results
    runs-on: ubuntu-latest
    if: ${{ always() && !cancelled() && !inputs.wpt-sync-from-upstream }}
    needs:
      - "linux-wpt"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: actions/download-artifact@v3
        with:
          name: wpt-filtered-results-linux-${{ inputs.wpt-layout }}
          path: wpt-filtered-results-linux
      - name: Create aggregated unexpected results
        run: |
          cat wpt-filtered-results-linux/*.log > unexpected-test-wpt-${{ inputs.wpt-layout }}.log
      - name: Archive aggregate results
        uses: actions/upload-artifact@v3
        with:
          name: wpt-filtered-results-linux
          path: |
            unexpected-test-wpt-${{ inputs.wpt-layout }}.log
      - name: Comment on PR with results
        run: |
          etc/ci/report_aggregated_expected_results.py --tag="linux-wpt-${{ inputs.wpt-layout }}" wpt-filtered-results-linux/*.json
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RESULTS: ${{ toJson(needs.*.result) }}
