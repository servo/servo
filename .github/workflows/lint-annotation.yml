name: Lint Annotation On PR

on:
  workflow_run:
    workflows: [Main]
    types:
      - completed

permissions:
  checks: write
  contents: read

jobs:
  pr-annotation:
    name: Create PR annotation
    runs-on: ubuntu-22.04
    steps:
      - name: Download Artifact Clippy Result and Head Sha
        uses: actions/download-artifact@v4
        with:
          name: clippy-lint-result
          github-token: ${{ secrets.GH_PAT }}
          run-id: ${{ github.event.workflow_run.id }}
      - name: Retrieve Head Sha
        run: |
          echo "HEAD_SHA=$(cat ./pr/head_sha)" >> $GITHUB_OUTPUT
        id: head_sha
      - name: Rust linter Clippy annotation on PR
        if: ${{ !cancelled() }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs')
            const headSha = fs.readFileSync('./pr/head_sha', 'utf8').trim()
            const data = fs.readFileSync('./temp/clippy-output.json', 'utf8')
            const annotations = JSON.parse(data)

            if (!Array.isArray(annotations) || annotations.length === 0) {
              console.log("âœ… No annotations to report.");
              await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: context.payload.workflow_run.id
              head_sha: headSha,
              status: "completed",
              conclusion: "success",
              output: {
                title: "Rust Clippy Code Annotations",
                summary: "No error or warning",
              }
            });
              return;
            }

            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: context.payload.workflow_run.id
              head_sha: headSha,
              status: "completed",
              conclusion: "failure",
              output: {
                title: "Rust Clippy Code Annotations",
                summary: `${annotations.length} issue(s) reported`,
                annotations: limitedAnnotations
              }
            });
