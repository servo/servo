use gecko_bindings::structs::nsIAtom;

use Atom;
use WeakAtom;

// Static atoms have a dummy AddRef/Release, so we don't bother calling
// AddRef() here. This would cause memory corruption with non-static atoms
// both because (a) we wouldn't hold the atom alive, and (b) we can't avoid
// calling Release() when the Atom is dropped, since we can't tell the
// difference between static and non-static atoms without bloating the
// size of Atom beyond word-size.
pub fn unsafe_atom_from_static(ptr: *mut nsIAtom) -> Atom {
    Atom(ptr as *mut WeakAtom)
}

cfg_if! {
    if #[cfg(not(target_env = "msvc"))] {
        extern {
            #[link_name = "_ZN9nsGkAtoms6_emptyE"]
            pub static _empty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3mozE"]
            pub static moz: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12mozframetypeE"]
            pub static mozframetype: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11_moz_absposE"]
            pub static _moz_abspos: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14_moz_activatedE"]
            pub static _moz_activated: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13_moz_resizingE"]
            pub static _moz_resizing: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18mozallowfullscreenE"]
            pub static mozallowfullscreen: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7moztypeE"]
            pub static moztype: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8mozdirtyE"]
            pub static mozdirty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms25mozdisallowselectionprintE"]
            pub static mozdisallowselectionprint: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12mozdonotsendE"]
            pub static mozdonotsend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18mozeditorbogusnodeE"]
            pub static mozeditorbogusnode: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms25mozgeneratedcontentbeforeE"]
            pub static mozgeneratedcontentbefore: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24mozgeneratedcontentafterE"]
            pub static mozgeneratedcontentafter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24mozgeneratedcontentimageE"]
            pub static mozgeneratedcontentimage: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8mozquoteE"]
            pub static mozquote: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12mozsignatureE"]
            pub static mozsignature: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13_moz_is_glyphE"]
            pub static _moz_is_glyph: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18_moz_original_sizeE"]
            pub static _moz_original_size: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11_moz_targetE"]
            pub static _moz_target: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10menuactiveE"]
            pub static menuactive: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13_poundDefaultE"]
            pub static _poundDefault: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9_asteriskE"]
            pub static _asterisk: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms1aE"]
            pub static a: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4abbrE"]
            pub static abbr: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5abortE"]
            pub static abort: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5aboveE"]
            pub static above: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9acceltextE"]
            pub static acceltext: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6acceptE"]
            pub static accept: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13acceptcharsetE"]
            pub static acceptcharset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9accesskeyE"]
            pub static accesskey: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7acronymE"]
            pub static acronym: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6actionE"]
            pub static action: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6activeE"]
            pub static active: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19activetitlebarcolorE"]
            pub static activetitlebarcolor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13activateontabE"]
            pub static activateontab: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7actuateE"]
            pub static actuate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7addressE"]
            pub static address: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5afterE"]
            pub static after: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9after_endE"]
            pub static after_end: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11after_startE"]
            pub static after_start: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5alignE"]
            pub static align: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5alinkE"]
            pub static alink: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3allE"]
            pub static all: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11alloweventsE"]
            pub static allowevents: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23allownegativeassertionsE"]
            pub static allownegativeassertions: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10allowformsE"]
            pub static allowforms: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15allowfullscreenE"]
            pub static allowfullscreen: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11allowmodalsE"]
            pub static allowmodals: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20alloworientationlockE"]
            pub static alloworientationlock: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16allowpointerlockE"]
            pub static allowpointerlock: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms26allowpopupstoescapesandboxE"]
            pub static allowpopupstoescapesandbox: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11allowpopupsE"]
            pub static allowpopups: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15allowsameoriginE"]
            pub static allowsameorigin: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12allowscriptsE"]
            pub static allowscripts: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18allowtopnavigationE"]
            pub static allowtopnavigation: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14allowuntrustedE"]
            pub static allowuntrusted: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3altE"]
            pub static alt: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9alternateE"]
            pub static alternate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6alwaysE"]
            pub static always: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8ancestorE"]
            pub static ancestor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14ancestorOrSelfE"]
            pub static ancestorOrSelf: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6anchorE"]
            pub static anchor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4_andE"]
            pub static _and: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10animationsE"]
            pub static animations: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6anonidE"]
            pub static anonid: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12anonlocationE"]
            pub static anonlocation: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3anyE"]
            pub static any: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6mozappE"]
            pub static mozapp: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9mozwidgetE"]
            pub static mozwidget: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6appletE"]
            pub static applet: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12applyImportsE"]
            pub static applyImports: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14applyTemplatesE"]
            pub static applyTemplates: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10mozapptypeE"]
            pub static mozapptype: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7archiveE"]
            pub static archive: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4areaE"]
            pub static area: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5arrowE"]
            pub static arrow: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7articleE"]
            pub static article: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9ascendingE"]
            pub static ascending: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5asideE"]
            pub static aside: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11aspectRatioE"]
            pub static aspectRatio: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6assignE"]
            pub static assign: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5asyncE"]
            pub static async: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9attributeE"]
            pub static attribute: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10attributesE"]
            pub static attributes: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12attributeSetE"]
            pub static attributeSet: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5auralE"]
            pub static aural: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5_autoE"]
            pub static _auto: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9autocheckE"]
            pub static autocheck: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12autocompleteE"]
            pub static autocomplete: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9autofocusE"]
            pub static autofocus: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8autoplayE"]
            pub static autoplay: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16autorepeatbuttonE"]
            pub static autorepeatbutton: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4axisE"]
            pub static axis: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms1bE"]
            pub static b: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13backdropFrameE"]
            pub static backdropFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10backgroundE"]
            pub static background: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4baseE"]
            pub static base: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8basefontE"]
            pub static basefont: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8baselineE"]
            pub static baseline: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3bdiE"]
            pub static bdi: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3bdoE"]
            pub static bdo: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6beforeE"]
            pub static before: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10before_endE"]
            pub static before_end: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12before_startE"]
            pub static before_start: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5belowE"]
            pub static below: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7bgcolorE"]
            pub static bgcolor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7bgsoundE"]
            pub static bgsound: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3bigE"]
            pub static big: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7bindingE"]
            pub static binding: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8bindingsE"]
            pub static bindings: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22bindToUntrustedContentE"]
            pub static bindToUntrustedContent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8blankrowE"]
            pub static blankrow: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5blockE"]
            pub static block: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10blockquoteE"]
            pub static blockquote: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4blurE"]
            pub static blur: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4bodyE"]
            pub static body: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7booleanE"]
            pub static boolean: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6borderE"]
            pub static border: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11bordercolorE"]
            pub static bordercolor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4bothE"]
            pub static both: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6bottomE"]
            pub static bottom: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9bottomendE"]
            pub static bottomend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11bottomstartE"]
            pub static bottomstart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10bottomleftE"]
            pub static bottomleft: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12bottommarginE"]
            pub static bottommargin: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13bottompaddingE"]
            pub static bottompadding: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11bottomrightE"]
            pub static bottomright: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3boxE"]
            pub static box_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2brE"]
            pub static br: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7brailleE"]
            pub static braille: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9broadcastE"]
            pub static broadcast: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11broadcasterE"]
            pub static broadcaster: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14broadcastersetE"]
            pub static broadcasterset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7browserE"]
            pub static browser: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10mozbrowserE"]
            pub static mozbrowser: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13bulletinboardE"]
            pub static bulletinboard: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6buttonE"]
            pub static button: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24brighttitlebarforegroundE"]
            pub static brighttitlebarforeground: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12callTemplateE"]
            pub static callTemplate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6cancelE"]
            pub static cancel: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6canvasE"]
            pub static canvas: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7captionE"]
            pub static caption: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7captureE"]
            pub static capture: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9caseOrderE"]
            pub static caseOrder: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20cdataSectionElementsE"]
            pub static cdataSectionElements: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7ceilingE"]
            pub static ceiling: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4cellE"]
            pub static cell: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11cellpaddingE"]
            pub static cellpadding: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11cellspacingE"]
            pub static cellspacing: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6centerE"]
            pub static center: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2chE"]
            pub static ch: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6changeE"]
            pub static change: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5_charE"]
            pub static _char: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13characterDataE"]
            pub static characterData: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8charcodeE"]
            pub static charcode: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7charoffE"]
            pub static charoff: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7charsetE"]
            pub static charset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8checkboxE"]
            pub static checkbox: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7checkedE"]
            pub static checked: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5childE"]
            pub static child: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8childrenE"]
            pub static children: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9childListE"]
            pub static childList: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6chooseE"]
            pub static choose: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12chromemarginE"]
            pub static chromemargin: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17chromeOnlyContentE"]
            pub static chromeOnlyContent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24exposeToUntrustedContentE"]
            pub static exposeToUntrustedContent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4circE"]
            pub static circ: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6circleE"]
            pub static circle: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4citeE"]
            pub static cite: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6_classE"]
            pub static _class: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7classidE"]
            pub static classid: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5clearE"]
            pub static clear: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5clickE"]
            pub static click: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10clickcountE"]
            pub static clickcount: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12clickthroughE"]
            pub static clickthrough: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11movetoclickE"]
            pub static movetoclick: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4clipE"]
            pub static clip: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5closeE"]
            pub static close: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6closedE"]
            pub static closed: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9closemenuE"]
            pub static closemenu: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21coalesceduplicatearcsE"]
            pub static coalesceduplicatearcs: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4codeE"]
            pub static code: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8codebaseE"]
            pub static codebase: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8codetypeE"]
            pub static codetype: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3colE"]
            pub static col: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8colgroupE"]
            pub static colgroup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8collapseE"]
            pub static collapse: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9collapsedE"]
            pub static collapsed: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5colorE"]
            pub static color: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10colorIndexE"]
            pub static colorIndex: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4colsE"]
            pub static cols: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7colspanE"]
            pub static colspan: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6columnE"]
            pub static column: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7columnsE"]
            pub static columns: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8comboboxE"]
            pub static combobox: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7commandE"]
            pub static command: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8commandsE"]
            pub static commands: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10commandsetE"]
            pub static commandset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13commandupdateE"]
            pub static commandupdate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14commandupdaterE"]
            pub static commandupdater: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7commentE"]
            pub static comment: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7compactE"]
            pub static compact: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6concatE"]
            pub static concat: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10conditionsE"]
            pub static conditions: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11constructorE"]
            pub static constructor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20consumeoutsideclicksE"]
            pub static consumeoutsideclicks: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9containerE"]
            pub static container: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11containmentE"]
            pub static containment: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8containsE"]
            pub static contains: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7contentE"]
            pub static content: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15contenteditableE"]
            pub static contenteditable: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24headerContentDispositionE"]
            pub static headerContentDisposition: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21headerContentLanguageE"]
            pub static headerContentLanguage: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15contentLocationE"]
            pub static contentLocation: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23headerContentScriptTypeE"]
            pub static headerContentScriptType: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22headerContentStyleTypeE"]
            pub static headerContentStyleType: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17headerContentTypeE"]
            pub static headerContentType: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13consumeanchorE"]
            pub static consumeanchor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7contextE"]
            pub static context: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11contextmenuE"]
            pub static contextmenu: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7controlE"]
            pub static control: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8controlsE"]
            pub static controls: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6coordsE"]
            pub static coords: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4copyE"]
            pub static copy: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6copyOfE"]
            pub static copyOf: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5countE"]
            pub static count: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4cropE"]
            pub static crop: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11crossoriginE"]
            pub static crossorigin: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6curposE"]
            pub static curpos: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7currentE"]
            pub static current: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6cyclerE"]
            pub static cycler: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4dataE"]
            pub static data: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8datalistE"]
            pub static datalist: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8dataTypeE"]
            pub static dataType: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8dateTimeE"]
            pub static dateTime: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11datasourcesE"]
            pub static datasources: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8datetimeE"]
            pub static datetime: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8dblclickE"]
            pub static dblclick: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2ddE"]
            pub static dd: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5debugE"]
            pub static debug: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13decimalFormatE"]
            pub static decimalFormat: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16decimalSeparatorE"]
            pub static decimalSeparator: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4deckE"]
            pub static deck: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7declareE"]
            pub static declare: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13decoderDoctorE"]
            pub static decoderDoctor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9decrementE"]
            pub static decrement: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8_defaultE"]
            pub static _default: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18headerDefaultStyleE"]
            pub static headerDefaultStyle: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13defaultActionE"]
            pub static defaultAction: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14defaultcheckedE"]
            pub static defaultchecked: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12defaultLabelE"]
            pub static defaultLabel: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15defaultselectedE"]
            pub static defaultselected: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12defaultvalueE"]
            pub static defaultvalue: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19defaultplaybackrateE"]
            pub static defaultplaybackrate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5deferE"]
            pub static defer: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3delE"]
            pub static del: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10descendantE"]
            pub static descendant: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16descendantOrSelfE"]
            pub static descendantOrSelf: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10descendingE"]
            pub static descending: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11descriptionE"]
            pub static description: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10destructorE"]
            pub static destructor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7detailsE"]
            pub static details: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17deviceAspectRatioE"]
            pub static deviceAspectRatio: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12deviceHeightE"]
            pub static deviceHeight: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16devicePixelRatioE"]
            pub static devicePixelRatio: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11deviceWidthE"]
            pub static deviceWidth: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3dfnE"]
            pub static dfn: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6dialogE"]
            pub static dialog: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10differenceE"]
            pub static difference: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5digitE"]
            pub static digit: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3dirE"]
            pub static dir: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12dirAutoSetByE"]
            pub static dirAutoSetBy: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14directionalityE"]
            pub static directionality: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9directoryE"]
            pub static directory: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21disableOutputEscapingE"]
            pub static disableOutputEscaping: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8disabledE"]
            pub static disabled: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20disableglobalhistoryE"]
            pub static disableglobalhistory: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14disablehistoryE"]
            pub static disablehistory: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7displayE"]
            pub static display: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11displayModeE"]
            pub static displayMode: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8distinctE"]
            pub static distinct: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3divE"]
            pub static div: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2dlE"]
            pub static dl: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13doctypePublicE"]
            pub static doctypePublic: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13doctypeSystemE"]
            pub static doctypeSystem: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8documentE"]
            pub static document: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8downloadE"]
            pub static download: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15DOMAttrModifiedE"]
            pub static DOMAttrModified: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24DOMCharacterDataModifiedE"]
            pub static DOMCharacterDataModified: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15DOMNodeInsertedE"]
            pub static DOMNodeInserted: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms27DOMNodeInsertedIntoDocumentE"]
            pub static DOMNodeInsertedIntoDocument: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14DOMNodeRemovedE"]
            pub static DOMNodeRemoved: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms26DOMNodeRemovedFromDocumentE"]
            pub static DOMNodeRemovedFromDocument: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18DOMSubtreeModifiedE"]
            pub static DOMSubtreeModified: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7double_E"]
            pub static double_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4dragE"]
            pub static drag: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8dragdropE"]
            pub static dragdrop: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7dragendE"]
            pub static dragend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9dragenterE"]
            pub static dragenter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9drageventE"]
            pub static dragevent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8dragexitE"]
            pub static dragexit: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9draggableE"]
            pub static draggable: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11draggestureE"]
            pub static draggesture: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8draggingE"]
            pub static dragging: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9dragleaveE"]
            pub static dragleave: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8dragoverE"]
            pub static dragover: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11dragSessionE"]
            pub static dragSession: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9dragstartE"]
            pub static dragstart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14drawintitlebarE"]
            pub static drawintitlebar: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9drawtitleE"]
            pub static drawtitle: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4dropE"]
            pub static drop: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9dropAfterE"]
            pub static dropAfter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10dropBeforeE"]
            pub static dropBefore: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6dropOnE"]
            pub static dropOn: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10dropMarkerE"]
            pub static dropMarker: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2dtE"]
            pub static dt: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8editableE"]
            pub static editable: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7editingE"]
            pub static editing: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6editorE"]
            pub static editor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17editorDisplayListE"]
            pub static editorDisplayList: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7elementE"]
            pub static element: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16elementAvailableE"]
            pub static elementAvailable: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8elementsE"]
            pub static elements: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2emE"]
            pub static em: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5embedE"]
            pub static embed: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8embossedE"]
            pub static embossed: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5emptyE"]
            pub static empty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8encodingE"]
            pub static encoding: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7enctypeE"]
            pub static enctype: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3endE"]
            pub static end: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8endEventE"]
            pub static endEvent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9end_afterE"]
            pub static end_after: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10end_beforeE"]
            pub static end_before: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9equalsizeE"]
            pub static equalsize: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5errorE"]
            pub static error: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4evenE"]
            pub static even: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5eventE"]
            pub static event: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6eventsE"]
            pub static events: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21excludeResultPrefixesE"]
            pub static excludeResultPrefixes: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8excludesE"]
            pub static excludes: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4exprE"]
            pub static expr: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7extendsE"]
            pub static extends: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24extensionElementPrefixesE"]
            pub static extensionElementPrefixes: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4faceE"]
            pub static face: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8fallbackE"]
            pub static fallback: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6_falseE"]
            pub static _false: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8farthestE"]
            pub static farthest: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5fieldE"]
            pub static field: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8fieldsetE"]
            pub static fieldset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10figcaptionE"]
            pub static figcaption: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6figureE"]
            pub static figure: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5fixedE"]
            pub static fixed: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5flagsE"]
            pub static flags: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4flexE"]
            pub static flex: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9flexgroupE"]
            pub static flexgroup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4flipE"]
            pub static flip: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8floatingE"]
            pub static floating: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5floorE"]
            pub static floor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10flowlengthE"]
            pub static flowlength: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5focusE"]
            pub static focus: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7focusedE"]
            pub static focused: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9followingE"]
            pub static following: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16followingSiblingE"]
            pub static followingSibling: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4fontE"]
            pub static font: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10fontWeightE"]
            pub static fontWeight: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10fontpickerE"]
            pub static fontpicker: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6footerE"]
            pub static footer: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4_forE"]
            pub static _for: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7forEachE"]
            pub static forEach: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21forceOwnRefreshDriverE"]
            pub static forceOwnRefreshDriver: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4formE"]
            pub static form: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10formactionE"]
            pub static formaction: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6formatE"]
            pub static format: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12formatNumberE"]
            pub static formatNumber: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11formenctypeE"]
            pub static formenctype: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10formmethodE"]
            pub static formmethod: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14formnovalidateE"]
            pub static formnovalidate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10formtargetE"]
            pub static formtarget: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5frameE"]
            pub static frame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11frameborderE"]
            pub static frameborder: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8framesetE"]
            pub static frameset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4fromE"]
            pub static from: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16fullscreenchangeE"]
            pub static fullscreenchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15fullscreenerrorE"]
            pub static fullscreenerror: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17functionAvailableE"]
            pub static functionAvailable: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10generateIdE"]
            pub static generateId: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6getterE"]
            pub static getter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9glyphcharE"]
            pub static glyphchar: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7glyphidE"]
            pub static glyphid: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4gridE"]
            pub static grid: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6grippyE"]
            pub static grippy: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5groupE"]
            pub static group: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17groupingSeparatorE"]
            pub static groupingSeparator: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12groupingSizeE"]
            pub static groupingSize: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4growE"]
            pub static grow: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6gutterE"]
            pub static gutter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2h1E"]
            pub static h1: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2h2E"]
            pub static h2: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2h3E"]
            pub static h3: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2h4E"]
            pub static h4: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2h5E"]
            pub static h5: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2h6E"]
            pub static h6: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8handheldE"]
            pub static handheld: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16handheldFriendlyE"]
            pub static handheldFriendly: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7handlerE"]
            pub static handler: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8handlersE"]
            pub static handlers: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4HARDE"]
            pub static HARD: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11hasSameNodeE"]
            pub static hasSameNode: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4hboxE"]
            pub static hbox: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4headE"]
            pub static head: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6headerE"]
            pub static header: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7headersE"]
            pub static headers: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6heightE"]
            pub static height: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6hgroupE"]
            pub static hgroup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6hiddenE"]
            pub static hidden: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10hidechromeE"]
            pub static hidechrome: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16hidecolumnpickerE"]
            pub static hidecolumnpicker: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4highE"]
            pub static high: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7highestE"]
            pub static highest: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10horizontalE"]
            pub static horizontal: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5hoverE"]
            pub static hover: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2hrE"]
            pub static hr: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4hrefE"]
            pub static href: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8hreflangE"]
            pub static hreflang: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6hspaceE"]
            pub static hspace: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4htmlE"]
            pub static html: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9httpEquivE"]
            pub static httpEquiv: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms1iE"]
            pub static i: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4iconE"]
            pub static icon: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2idE"]
            pub static id: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3_ifE"]
            pub static _if: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6iframeE"]
            pub static iframe: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10ignorecaseE"]
            pub static ignorecase: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10ignorekeysE"]
            pub static ignorekeys: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15ignoreuserfocusE"]
            pub static ignoreuserfocus: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6ilayerE"]
            pub static ilayer: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5imageE"]
            pub static image: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17imageClickedPointE"]
            pub static imageClickedPoint: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3imgE"]
            pub static img: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14implementationE"]
            pub static implementation: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10implementsE"]
            pub static implements: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6importE"]
            pub static import: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21inactivetitlebarcolorE"]
            pub static inactivetitlebarcolor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7includeE"]
            pub static include: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8includesE"]
            pub static includes: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9incrementE"]
            pub static increment: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6indentE"]
            pub static indent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13indeterminateE"]
            pub static indeterminate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5indexE"]
            pub static index: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5inferE"]
            pub static infer: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8infinityE"]
            pub static infinity: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7inheritE"]
            pub static inherit: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8inheritsE"]
            pub static inherits: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12inheritstyleE"]
            pub static inheritstyle: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13initial_scaleE"]
            pub static initial_scale: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5inputE"]
            pub static input: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9inputmodeE"]
            pub static inputmode: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3insE"]
            pub static ins: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11insertafterE"]
            pub static insertafter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12insertbeforeE"]
            pub static insertbefore: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7installE"]
            pub static install: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10instanceOfE"]
            pub static instanceOf: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5int32E"]
            pub static int32: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5int64E"]
            pub static int64: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7integerE"]
            pub static integer: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9integrityE"]
            pub static integrity: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12intersectionE"]
            pub static intersection: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2isE"]
            pub static is: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11iscontainerE"]
            pub static iscontainer: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7isemptyE"]
            pub static isempty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5ismapE"]
            pub static ismap: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6itemidE"]
            pub static itemid: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8itempropE"]
            pub static itemprop: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7itemrefE"]
            pub static itemref: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9itemscopeE"]
            pub static itemscope: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8itemtypeE"]
            pub static itemtype: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3kbdE"]
            pub static kbd: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17keepcurrentinviewE"]
            pub static keepcurrentinview: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16keepobjectsaliveE"]
            pub static keepobjectsalive: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3keyE"]
            pub static key: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7keycodeE"]
            pub static keycode: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17keystatuseschangeE"]
            pub static keystatuseschange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7keydownE"]
            pub static keydown: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6keygenE"]
            pub static keygen: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8keypressE"]
            pub static keypress: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6keysetE"]
            pub static keyset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9keysystemE"]
            pub static keysystem: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7keytextE"]
            pub static keytext: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5keyupE"]
            pub static keyup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4kindE"]
            pub static kind: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5labelE"]
            pub static label: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4langE"]
            pub static lang: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8languageE"]
            pub static language: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4lastE"]
            pub static last: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5layerE"]
            pub static layer: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13LayerActivityE"]
            pub static LayerActivity: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6layoutE"]
            pub static layout: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7leadingE"]
            pub static leading: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4leafE"]
            pub static leaf: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4leftE"]
            pub static left: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10leftmarginE"]
            pub static leftmargin: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11leftpaddingE"]
            pub static leftpadding: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6legendE"]
            pub static legend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6lengthE"]
            pub static length: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11letterValueE"]
            pub static letterValue: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5levelE"]
            pub static level: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2liE"]
            pub static li: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4lineE"]
            pub static line: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4linkE"]
            pub static link: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4listE"]
            pub static list: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7listboxE"]
            pub static listbox: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11listboxbodyE"]
            pub static listboxbody: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8listcellE"]
            pub static listcell: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7listcolE"]
            pub static listcol: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8listcolsE"]
            pub static listcols: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8listenerE"]
            pub static listener: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8listheadE"]
            pub static listhead: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10listheaderE"]
            pub static listheader: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7listingE"]
            pub static listing: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8listitemE"]
            pub static listitem: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8listrowsE"]
            pub static listrows: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4loadE"]
            pub static load: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9localedirE"]
            pub static localedir: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9localNameE"]
            pub static localName: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8longdescE"]
            pub static longdesc: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4loopE"]
            pub static loop_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3lowE"]
            pub static low: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10lowerFirstE"]
            pub static lowerFirst: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6lowestE"]
            pub static lowest: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6lowsrcE"]
            pub static lowsrc: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3ltrE"]
            pub static ltr: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7lwthemeE"]
            pub static lwtheme: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16lwthemetextcolorE"]
            pub static lwthemetextcolor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4mainE"]
            pub static main: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3mapE"]
            pub static map: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8manifestE"]
            pub static manifest: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12marginBottomE"]
            pub static marginBottom: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10marginLeftE"]
            pub static marginLeft: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11marginRightE"]
            pub static marginRight: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9marginTopE"]
            pub static marginTop: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12marginheightE"]
            pub static marginheight: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11marginwidthE"]
            pub static marginwidth: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4markE"]
            pub static mark: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7marqueeE"]
            pub static marquee: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5matchE"]
            pub static match_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3maxE"]
            pub static max: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9maxheightE"]
            pub static maxheight: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13maximum_scaleE"]
            pub static maximum_scale: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9maxlengthE"]
            pub static maxlength: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6maxposE"]
            pub static maxpos: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8maxwidthE"]
            pub static maxwidth: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9mayscriptE"]
            pub static mayscript: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5mediaE"]
            pub static media: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9mediaTypeE"]
            pub static mediaType: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6memberE"]
            pub static member: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4menuE"]
            pub static menu: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7menubarE"]
            pub static menubar: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10menubuttonE"]
            pub static menubutton: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10menuButtonE"]
            pub static menuButton: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9menugroupE"]
            pub static menugroup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8menuitemE"]
            pub static menuitem: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8menulistE"]
            pub static menulist: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9menupopupE"]
            pub static menupopup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13menuseparatorE"]
            pub static menuseparator: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7messageE"]
            pub static message: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4metaE"]
            pub static meta: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8referrerE"]
            pub static referrer: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14referrerpolicyE"]
            pub static referrerpolicy: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5meterE"]
            pub static meter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6methodE"]
            pub static method: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6middleE"]
            pub static middle: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3minE"]
            pub static min: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9minheightE"]
            pub static minheight: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13minimum_scaleE"]
            pub static minimum_scale: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6minposE"]
            pub static minpos: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9minusSignE"]
            pub static minusSign: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8minwidthE"]
            pub static minwidth: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6_mixedE"]
            pub static _mixed: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19messagemanagergroupE"]
            pub static messagemanagergroup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3modE"]
            pub static mod_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4modeE"]
            pub static mode: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9modifiersE"]
            pub static modifiers: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10monochromeE"]
            pub static monochrome: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9mousedownE"]
            pub static mousedown: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9mousemoveE"]
            pub static mousemove: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8mouseoutE"]
            pub static mouseout: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9mouseoverE"]
            pub static mouseover: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12mousethroughE"]
            pub static mousethrough: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7mouseupE"]
            pub static mouseup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15mozaudiochannelE"]
            pub static mozaudiochannel: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19mozfullscreenchangeE"]
            pub static mozfullscreenchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18mozfullscreenerrorE"]
            pub static mozfullscreenerror: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20mozpasspointereventsE"]
            pub static mozpasspointerevents: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20mozpointerlockchangeE"]
            pub static mozpointerlockchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19mozpointerlockerrorE"]
            pub static mozpointerlockerror: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18mozprivatebrowsingE"]
            pub static mozprivatebrowsing: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10moz_opaqueE"]
            pub static moz_opaque: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15moz_action_hintE"]
            pub static moz_action_hint: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18x_moz_errormessageE"]
            pub static x_moz_errormessage: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17msthemecompatibleE"]
            pub static msthemecompatible: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8multicolE"]
            pub static multicol: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8multipleE"]
            pub static multiple: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5mutedE"]
            pub static muted: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4nameE"]
            pub static name: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10_namespaceE"]
            pub static _namespace: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14namespaceAliasE"]
            pub static namespaceAlias: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12namespaceUriE"]
            pub static namespaceUri: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3NaNE"]
            pub static NaN: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24nativeAnonymousChildListE"]
            pub static nativeAnonymousChildList: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3navE"]
            pub static nav: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6negateE"]
            pub static negate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5neverE"]
            pub static never: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4_newE"]
            pub static _new: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7newlineE"]
            pub static newline: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8nextBidiE"]
            pub static nextBidi: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2noE"]
            pub static no: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11noautofocusE"]
            pub static noautofocus: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10noautohideE"]
            pub static noautohide: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16norolluponanchorE"]
            pub static norolluponanchor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4nobrE"]
            pub static nobr: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4nodeE"]
            pub static node: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12nodefaultsrcE"]
            pub static nodefaultsrc: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7nodeSetE"]
            pub static nodeSet: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7noembedE"]
            pub static noembed: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8noframesE"]
            pub static noframes: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6nohrefE"]
            pub static nohref: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11noisolationE"]
            pub static noisolation: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5nonceE"]
            pub static nonce: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4noneE"]
            pub static none: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8noresizeE"]
            pub static noresize: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6normalE"]
            pub static normal: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14normalizeSpaceE"]
            pub static normalizeSpace: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8noscriptE"]
            pub static noscript: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7noshadeE"]
            pub static noshade: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10novalidateE"]
            pub static novalidate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4_notE"]
            pub static _not: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6nowrapE"]
            pub static nowrap: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6numberE"]
            pub static number: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4nullE"]
            pub static null: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6objectE"]
            pub static object: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10objectTypeE"]
            pub static objectType: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8observerE"]
            pub static observer: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8observesE"]
            pub static observes: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3oddE"]
            pub static odd: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3OFFE"]
            pub static OFF: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2olE"]
            pub static ol: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18omitXmlDeclarationE"]
            pub static omitXmlDeclaration: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19ona2dpstatuschangedE"]
            pub static ona2dpstatuschanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7onabortE"]
            pub static onabort: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22onmozaccesskeynotfoundE"]
            pub static onmozaccesskeynotfound: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onactivateE"]
            pub static onactivate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14onadapteraddedE"]
            pub static onadapteradded: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16onadapterremovedE"]
            pub static onadapterremoved: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onafterprintE"]
            pub static onafterprint: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20onafterscriptexecuteE"]
            pub static onafterscriptexecute: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onalertingE"]
            pub static onalerting: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14onanimationendE"]
            pub static onanimationend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20onanimationiterationE"]
            pub static onanimationiteration: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16onanimationstartE"]
            pub static onanimationstart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24onantennaavailablechangeE"]
            pub static onantennaavailablechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onAppCommandE"]
            pub static onAppCommand: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18onattributechangedE"]
            pub static onattributechanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18onattributereadreqE"]
            pub static onattributereadreq: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19onattributewritereqE"]
            pub static onattributewritereq: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14onaudioprocessE"]
            pub static onaudioprocess: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onbeforecopyE"]
            pub static onbeforecopy: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onbeforecutE"]
            pub static onbeforecut: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onbeforepasteE"]
            pub static onbeforepaste: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15onbeforeevictedE"]
            pub static onbeforeevicted: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onbeforeprintE"]
            pub static onbeforeprint: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21onbeforescriptexecuteE"]
            pub static onbeforescriptexecute: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14onbeforeunloadE"]
            pub static onbeforeunload: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onblockedE"]
            pub static onblocked: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6onblurE"]
            pub static onblur: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onbroadcastE"]
            pub static onbroadcast: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6onbusyE"]
            pub static onbusy: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19onbufferedamountlowE"]
            pub static onbufferedamountlow: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8oncachedE"]
            pub static oncached: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14oncallschangedE"]
            pub static oncallschanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8oncancelE"]
            pub static oncancel: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17oncardstatechangeE"]
            pub static oncardstatechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15oncfstatechangeE"]
            pub static oncfstatechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8onchangeE"]
            pub static onchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23oncharacteristicchangedE"]
            pub static oncharacteristicchanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16onchargingchangeE"]
            pub static onchargingchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20onchargingtimechangeE"]
            pub static onchargingtimechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10oncheckingE"]
            pub static onchecking: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7onclickE"]
            pub static onclick: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16onclirmodechangeE"]
            pub static onclirmodechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7oncloseE"]
            pub static onclose: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9oncommandE"]
            pub static oncommand: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15oncommandupdateE"]
            pub static oncommandupdate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10oncompleteE"]
            pub static oncomplete: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16oncompositionendE"]
            pub static oncompositionend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18oncompositionstartE"]
            pub static oncompositionstart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19oncompositionupdateE"]
            pub static oncompositionupdate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21onconfigurationchangeE"]
            pub static onconfigurationchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onconnectE"]
            pub static onconnect: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onconnectedE"]
            pub static onconnected: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onconnectingE"]
            pub static onconnecting: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21onconnectionavailableE"]
            pub static onconnectionavailable: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24onconnectionstatechangedE"]
            pub static onconnectionstatechanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13oncontextmenuE"]
            pub static oncontextmenu: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6oncopyE"]
            pub static oncopy: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23oncurrentchannelchangedE"]
            pub static oncurrentchannelchanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22oncurrentsourcechangedE"]
            pub static oncurrentsourcechanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5oncutE"]
            pub static oncut: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12ondatachangeE"]
            pub static ondatachange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11ondataerrorE"]
            pub static ondataerror: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10ondblclickE"]
            pub static ondblclick: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9ondeletedE"]
            pub static ondeleted: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17ondeliverysuccessE"]
            pub static ondeliverysuccess: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15ondeliveryerrorE"]
            pub static ondeliveryerror: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13ondevicefoundE"]
            pub static ondevicefound: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14ondevicepairedE"]
            pub static ondevicepaired: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16ondeviceunpairedE"]
            pub static ondeviceunpaired: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9ondialingE"]
            pub static ondialing: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10ondisabledE"]
            pub static ondisabled: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23ondischargingtimechangeE"]
            pub static ondischargingtimechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12ondisconnectE"]
            pub static ondisconnect: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14ondisconnectedE"]
            pub static ondisconnected: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15ondisconnectingE"]
            pub static ondisconnecting: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19ondisplaypasskeyreqE"]
            pub static ondisplaypasskeyreq: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13ondownloadingE"]
            pub static ondownloading: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onDOMActivateE"]
            pub static onDOMActivate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17onDOMAttrModifiedE"]
            pub static onDOMAttrModified: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms26onDOMCharacterDataModifiedE"]
            pub static onDOMCharacterDataModified: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onDOMFocusInE"]
            pub static onDOMFocusIn: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onDOMFocusOutE"]
            pub static onDOMFocusOut: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16onDOMMouseScrollE"]
            pub static onDOMMouseScroll: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17onDOMNodeInsertedE"]
            pub static onDOMNodeInserted: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms29onDOMNodeInsertedIntoDocumentE"]
            pub static onDOMNodeInsertedIntoDocument: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16onDOMNodeRemovedE"]
            pub static onDOMNodeRemoved: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms28onDOMNodeRemovedFromDocumentE"]
            pub static onDOMNodeRemovedFromDocument: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20onDOMSubtreeModifiedE"]
            pub static onDOMSubtreeModified: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6ondataE"]
            pub static ondata: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6ondragE"]
            pub static ondrag: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10ondragdropE"]
            pub static ondragdrop: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9ondragendE"]
            pub static ondragend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11ondragenterE"]
            pub static ondragenter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10ondragexitE"]
            pub static ondragexit: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13ondraggestureE"]
            pub static ondraggesture: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11ondragleaveE"]
            pub static ondragleave: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10ondragoverE"]
            pub static ondragover: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11ondragstartE"]
            pub static ondragstart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7ondrainE"]
            pub static ondrain: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6ondropE"]
            pub static ondrop: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16oneitbroadcastedE"]
            pub static oneitbroadcasted: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onenabledE"]
            pub static onenabled: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17onenterpincodereqE"]
            pub static onenterpincodereq: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23onemergencycbmodechangeE"]
            pub static onemergencycbmodechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7onerrorE"]
            pub static onerror: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onevictedE"]
            pub static onevicted: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15onfacesdetectedE"]
            pub static onfacesdetected: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8onfailedE"]
            pub static onfailed: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7onfetchE"]
            pub static onfetch: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8onfinishE"]
            pub static onfinish: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7onfocusE"]
            pub static onfocus: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17onfrequencychangeE"]
            pub static onfrequencychange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18onfullscreenchangeE"]
            pub static onfullscreenchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17onfullscreenerrorE"]
            pub static onfullscreenerror: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21onspeakerforcedchangeE"]
            pub static onspeakerforcedchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5ongetE"]
            pub static onget: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13ongroupchangeE"]
            pub static ongroupchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onhashchangeE"]
            pub static onhashchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18onheadphoneschangeE"]
            pub static onheadphoneschange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6onheldE"]
            pub static onheld: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18onhfpstatuschangedE"]
            pub static onhfpstatuschanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18onhidstatuschangedE"]
            pub static onhidstatuschanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onholdingE"]
            pub static onholding: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11oniccchangeE"]
            pub static oniccchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13oniccdetectedE"]
            pub static oniccdetected: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15oniccinfochangeE"]
            pub static oniccinfochange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15oniccundetectedE"]
            pub static oniccundetected: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onincomingE"]
            pub static onincoming: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7oninputE"]
            pub static oninput: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9oninstallE"]
            pub static oninstall: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9oninvalidE"]
            pub static oninvalid: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onkeydownE"]
            pub static onkeydown: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onkeypressE"]
            pub static onkeypress: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7onkeyupE"]
            pub static onkeyup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16onlanguagechangeE"]
            pub static onlanguagechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onlevelchangeE"]
            pub static onlevelchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6onLoadE"]
            pub static onLoad: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6onloadE"]
            pub static onload: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onloadingE"]
            pub static onloading: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onloadingdoneE"]
            pub static onloadingdone: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14onloadingerrorE"]
            pub static onloadingerror: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onpopstateE"]
            pub static onpopstate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4onlyE"]
            pub static only: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onmessageE"]
            pub static onmessage: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onmousedownE"]
            pub static onmousedown: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onmouseenterE"]
            pub static onmouseenter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onmouseleaveE"]
            pub static onmouseleave: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onmousemoveE"]
            pub static onmousemove: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onmouseoutE"]
            pub static onmouseout: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onmouseoverE"]
            pub static onmouseover: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17onMozMouseHittestE"]
            pub static onMozMouseHittest: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onmouseupE"]
            pub static onmouseup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15onMozAfterPaintE"]
            pub static onMozAfterPaint: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24onmozbrowserafterkeydownE"]
            pub static onmozbrowserafterkeydown: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22onmozbrowserafterkeyupE"]
            pub static onmozbrowserafterkeyup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms25onmozbrowserbeforekeydownE"]
            pub static onmozbrowserbeforekeydown: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23onmozbrowserbeforekeyupE"]
            pub static onmozbrowserbeforekeyup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21onmozfullscreenchangeE"]
            pub static onmozfullscreenchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20onmozfullscreenerrorE"]
            pub static onmozfullscreenerror: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20onmozkeydownonpluginE"]
            pub static onmozkeydownonplugin: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18onmozkeyuponpluginE"]
            pub static onmozkeyuponplugin: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22onmozpointerlockchangeE"]
            pub static onmozpointerlockchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21onmozpointerlockerrorE"]
            pub static onmozpointerlockerror: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15onmoztimechangeE"]
            pub static onmoztimechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21onMozMousePixelScrollE"]
            pub static onMozMousePixelScroll: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24onMozScrolledAreaChangedE"]
            pub static onMozScrolledAreaChanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18onmoznetworkuploadE"]
            pub static onmoznetworkupload: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20onmoznetworkdownloadE"]
            pub static onmoznetworkdownload: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21onmapfolderlistingreqE"]
            pub static onmapfolderlistingreq: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23onmapmessageslistingreqE"]
            pub static onmapmessageslistingreq: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18onmapgetmessagereqE"]
            pub static onmapgetmessagereq: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24onmapsetmessagestatusreqE"]
            pub static onmapsetmessagestatusreq: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19onmapsendmessagereqE"]
            pub static onmapsendmessagereq: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21onmapmessageupdatereqE"]
            pub static onmapmessageupdatereq: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onnewrdsgroupE"]
            pub static onnewrdsgroup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19onnotificationclickE"]
            pub static onnotificationclick: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19onnotificationcloseE"]
            pub static onnotificationclose: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onnoupdateE"]
            pub static onnoupdate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17onobexpasswordreqE"]
            pub static onobexpasswordreq: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onobsoleteE"]
            pub static onobsolete: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8ononlineE"]
            pub static ononline: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onofflineE"]
            pub static onoffline: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6onopenE"]
            pub static onopen: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19onorientationchangeE"]
            pub static onorientationchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17onotastatuschangeE"]
            pub static onotastatuschange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onoverflowE"]
            pub static onoverflow: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17onoverflowchangedE"]
            pub static onoverflowchanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onpagehideE"]
            pub static onpagehide: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onpageshowE"]
            pub static onpageshow: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7onpaintE"]
            pub static onpaint: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16onpairingabortedE"]
            pub static onpairingaborted: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24onpairingconfirmationreqE"]
            pub static onpairingconfirmationreq: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19onpairingconsentreqE"]
            pub static onpairingconsentreq: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7onpasteE"]
            pub static onpaste: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15onpendingchangeE"]
            pub static onpendingchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onpichangeE"]
            pub static onpichange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onpictureE"]
            pub static onpicture: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onpopuphiddenE"]
            pub static onpopuphidden: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onpopuphidingE"]
            pub static onpopuphiding: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14onpopupshowingE"]
            pub static onpopupshowing: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onpopupshownE"]
            pub static onpopupshown: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8onposterE"]
            pub static onposter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20onpreviewstatechangeE"]
            pub static onpreviewstatechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18onpullphonebookreqE"]
            pub static onpullphonebookreq: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19onpullvcardentryreqE"]
            pub static onpullvcardentryreq: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21onpullvcardlistingreqE"]
            pub static onpullvcardlistingreq: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6onpushE"]
            pub static onpush: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24onpushsubscriptionchangeE"]
            pub static onpushsubscriptionchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onpschangeE"]
            pub static onpschange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onptychangeE"]
            pub static onptychange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18onradiostatechangeE"]
            pub static onradiostatechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onrdsdisabledE"]
            pub static onrdsdisabled: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onrdsenabledE"]
            pub static onrdsenabled: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onreaderrorE"]
            pub static onreaderror: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onreadsuccessE"]
            pub static onreadsuccess: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7onreadyE"]
            pub static onready: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18onreadystatechangeE"]
            pub static onreadystatechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onreceivedE"]
            pub static onreceived: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21onrecorderstatechangeE"]
            pub static onrecorderstatechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onremoteheldE"]
            pub static onremoteheld: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15onremoteresumedE"]
            pub static onremoteresumed: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms26onresourcetimingbufferfullE"]
            pub static onresourcetimingbufferfull: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onretrievingE"]
            pub static onretrieving: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onRequestE"]
            pub static onRequest: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24onrequestmediaplaystatusE"]
            pub static onrequestmediaplaystatus: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7onresetE"]
            pub static onreset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onresumingE"]
            pub static onresuming: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8onresizeE"]
            pub static onresize: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onrtchangeE"]
            pub static onrtchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22onscanningstatechangedE"]
            pub static onscanningstatechanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18onscostatuschangedE"]
            pub static onscostatuschanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8onscrollE"]
            pub static onscroll: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8onselectE"]
            pub static onselect: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17onselectionchangeE"]
            pub static onselectionchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onselectstartE"]
            pub static onselectstart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onsendingE"]
            pub static onsending: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6onsentE"]
            pub static onsent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5onsetE"]
            pub static onset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6onshowE"]
            pub static onshow: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onshutterE"]
            pub static onshutter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onstatechangeE"]
            pub static onstatechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15onstatuschangedE"]
            pub static onstatuschanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onstkcommandE"]
            pub static onstkcommand: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15onstksessionendE"]
            pub static onstksessionend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onstorageE"]
            pub static onstorage: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20onstorageareachangedE"]
            pub static onstorageareachanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8onsubmitE"]
            pub static onsubmit: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onsuccessE"]
            pub static onsuccess: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12ontypechangeE"]
            pub static ontypechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onterminateE"]
            pub static onterminate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6ontextE"]
            pub static ontext: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8ontoggleE"]
            pub static ontoggle: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12ontouchstartE"]
            pub static ontouchstart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10ontouchendE"]
            pub static ontouchend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11ontouchmoveE"]
            pub static ontouchmove: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13ontouchcancelE"]
            pub static ontouchcancel: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15ontransitionendE"]
            pub static ontransitionend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onunderflowE"]
            pub static onunderflow: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8onunloadE"]
            pub static onunload: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onupdatefoundE"]
            pub static onupdatefound: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onupdatereadyE"]
            pub static onupdateready: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15onupgradeneededE"]
            pub static onupgradeneeded: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14onussdreceivedE"]
            pub static onussdreceived: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15onversionchangeE"]
            pub static onversionchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onvoicechangeE"]
            pub static onvoicechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15onvoiceschangedE"]
            pub static onvoiceschanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20onwebkitAnimationEndE"]
            pub static onwebkitAnimationEnd: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms26onwebkitAnimationIterationE"]
            pub static onwebkitAnimationIteration: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22onwebkitAnimationStartE"]
            pub static onwebkitAnimationStart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21onwebkitTransitionEndE"]
            pub static onwebkitTransitionEnd: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onwebsocketE"]
            pub static onwebsocket: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7onwheelE"]
            pub static onwheel: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4openE"]
            pub static open: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8optgroupE"]
            pub static optgroup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7optimumE"]
            pub static optimum: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6optionE"]
            pub static option: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3_orE"]
            pub static _or: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5orderE"]
            pub static order: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7ordinalE"]
            pub static ordinal: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6orientE"]
            pub static orient: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11orientationE"]
            pub static orientation: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9otherwiseE"]
            pub static otherwise: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6outputE"]
            pub static output: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8overflowE"]
            pub static overflow: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15overflowchangedE"]
            pub static overflowchanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7overlayE"]
            pub static overlay: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7overlapE"]
            pub static overlap: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms1pE"]
            pub static p: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4packE"]
            pub static pack: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4pageE"]
            pub static page: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13pageincrementE"]
            pub static pageincrement: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5pagexE"]
            pub static pagex: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5pageyE"]
            pub static pagey: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11paint_orderE"]
            pub static paint_order: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11palettenameE"]
            pub static palettename: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5panelE"]
            pub static panel: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5paramE"]
            pub static param: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9parameterE"]
            pub static parameter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6parentE"]
            pub static parent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9parentappE"]
            pub static parentapp: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13parentfocusedE"]
            pub static parentfocused: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9parsetypeE"]
            pub static parsetype: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8passwordE"]
            pub static password: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7patternE"]
            pub static pattern: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16patternSeparatorE"]
            pub static patternSeparator: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8perMilleE"]
            pub static perMille: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7percentE"]
            pub static percent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7persistE"]
            pub static persist: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5phaseE"]
            pub static phase: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7pictureE"]
            pub static picture: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4pingE"]
            pub static ping: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6pinnedE"]
            pub static pinned: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11placeholderE"]
            pub static placeholder: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9plaintextE"]
            pub static plaintext: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12playbackrateE"]
            pub static playbackrate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9pointSizeE"]
            pub static pointSize: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4polyE"]
            pub static poly: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7polygonE"]
            pub static polygon: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5popupE"]
            pub static popup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10popupalignE"]
            pub static popupalign: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11popupanchorE"]
            pub static popupanchor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10popupgroupE"]
            pub static popupgroup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11popuphiddenE"]
            pub static popuphidden: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11popuphidingE"]
            pub static popuphiding: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8popupsetE"]
            pub static popupset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12popupshowingE"]
            pub static popupshowing: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10popupshownE"]
            pub static popupshown: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20popupsinherittooltipE"]
            pub static popupsinherittooltip: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8positionE"]
            pub static position: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6posterE"]
            pub static poster: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3preE"]
            pub static pre: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9precedingE"]
            pub static preceding: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16precedingSiblingE"]
            pub static precedingSibling: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9predicateE"]
            pub static predicate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6prefixE"]
            pub static prefix: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7preloadE"]
            pub static preload: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11prerenderedE"]
            pub static prerendered: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15mozpresentationE"]
            pub static mozpresentation: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8preserveE"]
            pub static preserve: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13preserveSpaceE"]
            pub static preserveSpace: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14preventdefaultE"]
            pub static preventdefault: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7primaryE"]
            pub static primary: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5printE"]
            pub static print: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8priorityE"]
            pub static priority: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21processingInstructionE"]
            pub static processingInstruction: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7profileE"]
            pub static profile: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8progressE"]
            pub static progress: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13progressmeterE"]
            pub static progressmeter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14progressNormalE"]
            pub static progressNormal: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20progressUndeterminedE"]
            pub static progressUndetermined: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10projectionE"]
            pub static projection: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6promptE"]
            pub static prompt: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9propagateE"]
            pub static propagate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10propertiesE"]
            pub static properties: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8propertyE"]
            pub static property: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7pubdateE"]
            pub static pubdate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms1qE"]
            pub static q: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5queryE"]
            pub static query: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8querysetE"]
            pub static queryset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9querytypeE"]
            pub static querytype: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5radioE"]
            pub static radio: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10radiogroupE"]
            pub static radiogroup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5rangeE"]
            pub static range: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8readonlyE"]
            pub static readonly: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4rectE"]
            pub static rect: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9rectangleE"]
            pub static rectangle: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3refE"]
            pub static ref_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7refreshE"]
            pub static refresh: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3relE"]
            pub static rel: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onreloadpageE"]
            pub static onreloadpage: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3remE"]
            pub static rem: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13removeelementE"]
            pub static removeelement: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21renderingobserverlistE"]
            pub static renderingobserverlist: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6repeatE"]
            pub static repeat: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7replaceE"]
            pub static replace: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8requiredE"]
            pub static required: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8reservedE"]
            pub static reserved: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5resetE"]
            pub static reset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11resizeafterE"]
            pub static resizeafter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12resizebeforeE"]
            pub static resizebefore: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7resizerE"]
            pub static resizer: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10resolutionE"]
            pub static resolution: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8resourceE"]
            pub static resource: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9resourcesE"]
            pub static resources: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6resultE"]
            pub static result: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12resultPrefixE"]
            pub static resultPrefix: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21retargetdocumentfocusE"]
            pub static retargetdocumentfocus: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3revE"]
            pub static rev: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7reverseE"]
            pub static reverse: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8reversedE"]
            pub static reversed: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11richlistboxE"]
            pub static richlistbox: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12richlistitemE"]
            pub static richlistitem: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5rightE"]
            pub static right: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11rightmarginE"]
            pub static rightmargin: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12rightpaddingE"]
            pub static rightpadding: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4roleE"]
            pub static role: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18rolluponmousewheelE"]
            pub static rolluponmousewheel: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5roundE"]
            pub static round: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3rowE"]
            pub static row: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4rowsE"]
            pub static rows: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7rowspanE"]
            pub static rowspan: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2rbE"]
            pub static rb: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2rpE"]
            pub static rp: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2rtE"]
            pub static rt: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3rtcE"]
            pub static rtc: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3rtlE"]
            pub static rtl: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4rubyE"]
            pub static ruby: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8rubyBaseE"]
            pub static rubyBase: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17rubyBaseContainerE"]
            pub static rubyBaseContainer: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8rubyTextE"]
            pub static rubyText: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17rubyTextContainerE"]
            pub static rubyTextContainer: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4ruleE"]
            pub static rule: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5rulesE"]
            pub static rules: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms1sE"]
            pub static s: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4sampE"]
            pub static samp: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7sandboxE"]
            pub static sandbox: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6sbattrE"]
            pub static sbattr: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5scaleE"]
            pub static scale: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4scanE"]
            pub static scan: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6schemeE"]
            pub static scheme: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5scopeE"]
            pub static scope: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6scopedE"]
            pub static scoped: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6screenE"]
            pub static screen: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7screenXE"]
            pub static screenX: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7screenYE"]
            pub static screenY: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6scriptE"]
            pub static script: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms33scriptEnabledBeforePrintOrPreviewE"]
            pub static scriptEnabledBeforePrintOrPreview: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9scrollbarE"]
            pub static scrollbar: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15scrollbarbuttonE"]
            pub static scrollbarbutton: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19scrollbarDownBottomE"]
            pub static scrollbarDownBottom: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16scrollbarDownTopE"]
            pub static scrollbarDownTop: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17scrollbarUpBottomE"]
            pub static scrollbarUpBottom: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14scrollbarUpTopE"]
            pub static scrollbarUpTop: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9scrollboxE"]
            pub static scrollbox: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12scrollcornerE"]
            pub static scrollcorner: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9scrollingE"]
            pub static scrolling: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7sectionE"]
            pub static section: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6selectE"]
            pub static select: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10selectableE"]
            pub static selectable: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8selectedE"]
            pub static selected: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13selectedIndexE"]
            pub static selectedIndex: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13selectedindexE"]
            pub static selectedindex: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4selfE"]
            pub static self_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7seltypeE"]
            pub static seltype: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9setcookieE"]
            pub static setcookie: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6setterE"]
            pub static setter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5shapeE"]
            pub static shape: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4showE"]
            pub static show: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9showcaretE"]
            pub static showcaret: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11showresizerE"]
            pub static showresizer: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6simpleE"]
            pub static simple: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6singleE"]
            pub static single: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4sizeE"]
            pub static size: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5sizesE"]
            pub static sizes: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8sizemodeE"]
            pub static sizemode: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11sizetopopupE"]
            pub static sizetopopup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6sliderE"]
            pub static slider: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5smallE"]
            pub static small: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6smoothE"]
            pub static smooth: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4snapE"]
            pub static snap: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4sortE"]
            pub static sort: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10sortActiveE"]
            pub static sortActive: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13sortDirectionE"]
            pub static sortDirection: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6sortedE"]
            pub static sorted: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9sorthintsE"]
            pub static sorthints: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10sortLockedE"]
            pub static sortLocked: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12sortResourceE"]
            pub static sortResource: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13sortResource2E"]
            pub static sortResource2: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14sortSeparatorsE"]
            pub static sortSeparators: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15sortStaticsLastE"]
            pub static sortStaticsLast: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6sourceE"]
            pub static source: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5spaceE"]
            pub static space: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6spacerE"]
            pub static spacer: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4spanE"]
            pub static span: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10spellcheckE"]
            pub static spellcheck: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7spinnerE"]
            pub static spinner: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5splitE"]
            pub static split: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9splitmenuE"]
            pub static splitmenu: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8splitterE"]
            pub static splitter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6springE"]
            pub static spring: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3srcE"]
            pub static src: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6srcdocE"]
            pub static srcdoc: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7srclangE"]
            pub static srclang: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6srcsetE"]
            pub static srcset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5stackE"]
            pub static stack: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10standaloneE"]
            pub static standalone: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7standbyE"]
            pub static standby: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5startE"]
            pub static start: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11start_afterE"]
            pub static start_after: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12start_beforeE"]
            pub static start_before: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10startsWithE"]
            pub static startsWith: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5stateE"]
            pub static state: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15statedatasourceE"]
            pub static statedatasource: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10staticHintE"]
            pub static staticHint: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9statusbarE"]
            pub static statusbar: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10statustextE"]
            pub static statustext: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4stepE"]
            pub static step: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4stopE"]
            pub static stop: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7stretchE"]
            pub static stretch: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6strikeE"]
            pub static strike: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6stringE"]
            pub static string: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12stringLengthE"]
            pub static stringLength: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10stripSpaceE"]
            pub static stripSpace: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6strongE"]
            pub static strong: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5styleE"]
            pub static style: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10stylesheetE"]
            pub static stylesheet: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16stylesheetPrefixE"]
            pub static stylesheetPrefix: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7subjectE"]
            pub static subject: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6submitE"]
            pub static submit: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8substateE"]
            pub static substate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9substringE"]
            pub static substring: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14substringAfterE"]
            pub static substringAfter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15substringBeforeE"]
            pub static substringBefore: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3subE"]
            pub static sub: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3sumE"]
            pub static sum: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3supE"]
            pub static sup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7summaryE"]
            pub static summary: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14systemPropertyE"]
            pub static systemProperty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3tabE"]
            pub static tab: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6tabboxE"]
            pub static tabbox: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8tabindexE"]
            pub static tabindex: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5tableE"]
            pub static table: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8tabpanelE"]
            pub static tabpanel: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9tabpanelsE"]
            pub static tabpanels: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3tagE"]
            pub static tag: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6targetE"]
            pub static target: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7targetsE"]
            pub static targets: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5tbodyE"]
            pub static tbody: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2tdE"]
            pub static td: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9_templateE"]
            pub static _template: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15text_decorationE"]
            pub static text_decoration: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9terminateE"]
            pub static terminate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4testE"]
            pub static test: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4textE"]
            pub static text: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9textAlignE"]
            pub static textAlign: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8textareaE"]
            pub static textarea: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7textboxE"]
            pub static textbox: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8textnodeE"]
            pub static textnode: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms25textNodeDirectionalityMapE"]
            pub static textNodeDirectionalityMap: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5tfootE"]
            pub static tfoot: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2thE"]
            pub static th: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5theadE"]
            pub static thead: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5thumbE"]
            pub static thumb: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4timeE"]
            pub static time: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5titleE"]
            pub static title: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8titlebarE"]
            pub static titlebar: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8titletipE"]
            pub static titletip: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7toggledE"]
            pub static toggled: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5tokenE"]
            pub static token: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8tokenizeE"]
            pub static tokenize: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7toolbarE"]
            pub static toolbar: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13toolbarbuttonE"]
            pub static toolbarbutton: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11toolbaritemE"]
            pub static toolbaritem: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7toolboxE"]
            pub static toolbox: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7tooltipE"]
            pub static tooltip: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11tooltiptextE"]
            pub static tooltiptext: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3topE"]
            pub static top: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7topleftE"]
            pub static topleft: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9topmarginE"]
            pub static topmargin: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10toppaddingE"]
            pub static toppadding: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8toprightE"]
            pub static topright: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2trE"]
            pub static tr: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5trackE"]
            pub static track: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8trailingE"]
            pub static trailing: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9transformE"]
            pub static transform: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12transform_3dE"]
            pub static transform_3d: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12transformiixE"]
            pub static transformiix: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9translateE"]
            pub static translate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11transparentE"]
            pub static transparent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4treeE"]
            pub static tree: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8treecellE"]
            pub static treecell: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12treechildrenE"]
            pub static treechildren: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7treecolE"]
            pub static treecol: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13treecolpickerE"]
            pub static treecolpicker: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8treecolsE"]
            pub static treecols: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8treeitemE"]
            pub static treeitem: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7treerowE"]
            pub static treerow: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13treeseparatorE"]
            pub static treeseparator: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6tripleE"]
            pub static triple: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5_trueE"]
            pub static _true: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2ttE"]
            pub static tt: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3ttyE"]
            pub static tty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2tvE"]
            pub static tv: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4typeE"]
            pub static type_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13typemustmatchE"]
            pub static typemustmatch: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms1uE"]
            pub static u: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2ulE"]
            pub static ul: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9underflowE"]
            pub static underflow: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12undeterminedE"]
            pub static undetermined: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9undoscopeE"]
            pub static undoscope: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6unloadE"]
            pub static unload: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17unparsedEntityUriE"]
            pub static unparsedEntityUri: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10upperFirstE"]
            pub static upperFirst: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3uriE"]
            pub static uri: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3useE"]
            pub static use_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16useAttributeSetsE"]
            pub static useAttributeSets: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6usemapE"]
            pub static usemap: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13user_scalableE"]
            pub static user_scalable: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9userInputE"]
            pub static userInput: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8validateE"]
            pub static validate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6valignE"]
            pub static valign: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5valueE"]
            pub static value: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6valuesE"]
            pub static values: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7valueOfE"]
            pub static valueOf: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9valuetypeE"]
            pub static valuetype: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3varE"]
            pub static var: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8variableE"]
            pub static variable: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4vboxE"]
            pub static vbox: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10vcard_nameE"]
            pub static vcard_name: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6vendorE"]
            pub static vendor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9vendorUrlE"]
            pub static vendorUrl: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7versionE"]
            pub static version: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4vertE"]
            pub static vert: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8verticalE"]
            pub static vertical: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5audioE"]
            pub static audio: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5videoE"]
            pub static video: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13videocontrolsE"]
            pub static videocontrols: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8viewportE"]
            pub static viewport: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15viewport_heightE"]
            pub static viewport_height: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22viewport_initial_scaleE"]
            pub static viewport_initial_scale: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22viewport_maximum_scaleE"]
            pub static viewport_maximum_scale: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22viewport_minimum_scaleE"]
            pub static viewport_minimum_scale: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22viewport_user_scalableE"]
            pub static viewport_user_scalable: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14viewport_widthE"]
            pub static viewport_width: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10visibilityE"]
            pub static visibility: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16visuallyselectedE"]
            pub static visuallyselected: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5vlinkE"]
            pub static vlink: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6vspaceE"]
            pub static vspace: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3wbrE"]
            pub static wbr: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15webkitdirectoryE"]
            pub static webkitdirectory: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4whenE"]
            pub static when: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5whereE"]
            pub static where_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6widgetE"]
            pub static widget: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5widthE"]
            pub static width: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6windowE"]
            pub static window: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18headerWindowTargetE"]
            pub static headerWindowTarget: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10windowtypeE"]
            pub static windowtype: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9withParamE"]
            pub static withParam: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6wizardE"]
            pub static wizard: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4wrapE"]
            pub static wrap: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24headerDNSPrefetchControlE"]
            pub static headerDNSPrefetchControl: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9headerCSPE"]
            pub static headerCSP: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19headerCSPReportOnlyE"]
            pub static headerCSPReportOnly: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9headerXFOE"]
            pub static headerXFO: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9x_westernE"]
            pub static x_western: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3xmlE"]
            pub static xml: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14xml_stylesheetE"]
            pub static xml_stylesheet: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5xmlnsE"]
            pub static xmlns: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3xmpE"]
            pub static xmp: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20xulcontentsgeneratedE"]
            pub static xulcontentsgenerated: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3yesE"]
            pub static yes: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7z_indexE"]
            pub static z_index: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9zeroDigitE"]
            pub static zeroDigit: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10percentageE"]
            pub static percentage: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms1AE"]
            pub static A: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18alignment_baselineE"]
            pub static alignment_baseline: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9amplitudeE"]
            pub static amplitude: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7animateE"]
            pub static animate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12animateColorE"]
            pub static animateColor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13animateMotionE"]
            pub static animateMotion: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16animateTransformE"]
            pub static animateTransform: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10arithmeticE"]
            pub static arithmetic: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4atopE"]
            pub static atop: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7azimuthE"]
            pub static azimuth: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms1BE"]
            pub static B: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15backgroundColorE"]
            pub static backgroundColor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16background_imageE"]
            pub static background_image: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13baseFrequencyE"]
            pub static baseFrequency: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14baseline_shiftE"]
            pub static baseline_shift: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4biasE"]
            pub static bias: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12caption_sideE"]
            pub static caption_side: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9clip_pathE"]
            pub static clip_path: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9clip_ruleE"]
            pub static clip_rule: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8clipPathE"]
            pub static clipPath: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13clipPathUnitsE"]
            pub static clipPathUnits: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2cmE"]
            pub static cm: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9colorBurnE"]
            pub static colorBurn: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10colorDodgeE"]
            pub static colorDodge: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18colorInterpolationE"]
            pub static colorInterpolation: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms25colorInterpolationFiltersE"]
            pub static colorInterpolationFilters: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12colorProfileE"]
            pub static colorProfile: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6cursorE"]
            pub static cursor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2cxE"]
            pub static cx: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2cyE"]
            pub static cy: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms1dE"]
            pub static d: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6darkenE"]
            pub static darken: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4defsE"]
            pub static defs: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3degE"]
            pub static deg: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4descE"]
            pub static desc: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15diffuseConstantE"]
            pub static diffuseConstant: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6dilateE"]
            pub static dilate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9directionE"]
            pub static direction: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7disableE"]
            pub static disable: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8discreteE"]
            pub static discrete: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7divisorE"]
            pub static divisor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17dominant_baselineE"]
            pub static dominant_baseline: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9duplicateE"]
            pub static duplicate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2dxE"]
            pub static dx: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2dyE"]
            pub static dy: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8edgeModeE"]
            pub static edgeMode: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7ellipseE"]
            pub static ellipse: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9elevationE"]
            pub static elevation: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5erodeE"]
            pub static erode: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2exE"]
            pub static ex: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5exactE"]
            pub static exact: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9exclusionE"]
            pub static exclusion: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8exponentE"]
            pub static exponent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7feBlendE"]
            pub static feBlend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13feColorMatrixE"]
            pub static feColorMatrix: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19feComponentTransferE"]
            pub static feComponentTransfer: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11feCompositeE"]
            pub static feComposite: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16feConvolveMatrixE"]
            pub static feConvolveMatrix: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17feDiffuseLightingE"]
            pub static feDiffuseLighting: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17feDisplacementMapE"]
            pub static feDisplacementMap: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14feDistantLightE"]
            pub static feDistantLight: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12feDropShadowE"]
            pub static feDropShadow: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7feFloodE"]
            pub static feFlood: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7feFuncAE"]
            pub static feFuncA: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7feFuncBE"]
            pub static feFuncB: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7feFuncGE"]
            pub static feFuncG: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7feFuncRE"]
            pub static feFuncR: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14feGaussianBlurE"]
            pub static feGaussianBlur: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7feImageE"]
            pub static feImage: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7feMergeE"]
            pub static feMerge: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11feMergeNodeE"]
            pub static feMergeNode: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12feMorphologyE"]
            pub static feMorphology: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8feOffsetE"]
            pub static feOffset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12fePointLightE"]
            pub static fePointLight: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18feSpecularLightingE"]
            pub static feSpecularLighting: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11feSpotLightE"]
            pub static feSpotLight: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6feTileE"]
            pub static feTile: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12feTurbulenceE"]
            pub static feTurbulence: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4fillE"]
            pub static fill: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12fill_opacityE"]
            pub static fill_opacity: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9fill_ruleE"]
            pub static fill_rule: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6filterE"]
            pub static filter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11filterUnitsE"]
            pub static filterUnits: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6_floatE"]
            pub static _float: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11flood_colorE"]
            pub static flood_color: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13flood_opacityE"]
            pub static flood_opacity: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9font_faceE"]
            pub static font_face: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16font_face_formatE"]
            pub static font_face_format: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14font_face_nameE"]
            pub static font_face_name: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13font_face_srcE"]
            pub static font_face_src: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13font_face_uriE"]
            pub static font_face_uri: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11font_familyE"]
            pub static font_family: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9font_sizeE"]
            pub static font_size: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16font_size_adjustE"]
            pub static font_size_adjust: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12font_stretchE"]
            pub static font_stretch: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10font_styleE"]
            pub static font_style: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12font_variantE"]
            pub static font_variant: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13foreignObjectE"]
            pub static foreignObject: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12fractalNoiseE"]
            pub static fractalNoise: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2fxE"]
            pub static fx: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2fyE"]
            pub static fy: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms1GE"]
            pub static G: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms1gE"]
            pub static g: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5gammaE"]
            pub static gamma: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8generic_E"]
            pub static generic_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8glyphRefE"]
            pub static glyphRef: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4gradE"]
            pub static grad: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17gradientTransformE"]
            pub static gradientTransform: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13gradientUnitsE"]
            pub static gradientUnits: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9hardLightE"]
            pub static hardLight: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3hueE"]
            pub static hue: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9hueRotateE"]
            pub static hueRotate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8identityE"]
            pub static identity: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15image_renderingE"]
            pub static image_rendering: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2inE"]
            pub static in_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3in2E"]
            pub static in2: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9interceptE"]
            pub static intercept: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2k1E"]
            pub static k1: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2k2E"]
            pub static k2: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2k3E"]
            pub static k3: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2k4E"]
            pub static k4: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12kernelMatrixE"]
            pub static kernelMatrix: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16kernelUnitLengthE"]
            pub static kernelUnitLength: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12lengthAdjustE"]
            pub static lengthAdjust: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14letter_spacingE"]
            pub static letter_spacing: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7lightenE"]
            pub static lighten: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14lighting_colorE"]
            pub static lighting_color: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17limitingConeAngleE"]
            pub static limitingConeAngle: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6linearE"]
            pub static linear: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14linearGradientE"]
            pub static linearGradient: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9linearRGBE"]
            pub static linearRGB: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15list_style_typeE"]
            pub static list_style_type: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16luminanceToAlphaE"]
            pub static luminanceToAlpha: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10luminosityE"]
            pub static luminosity: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7magnifyE"]
            pub static magnify: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6markerE"]
            pub static marker: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10marker_endE"]
            pub static marker_end: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10marker_midE"]
            pub static marker_mid: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12marker_startE"]
            pub static marker_start: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12markerHeightE"]
            pub static markerHeight: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11markerUnitsE"]
            pub static markerUnits: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11markerWidthE"]
            pub static markerWidth: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4maskE"]
            pub static mask: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16maskContentUnitsE"]
            pub static maskContentUnits: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9mask_typeE"]
            pub static mask_type: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9maskUnitsE"]
            pub static maskUnits: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6matrixE"]
            pub static matrix: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8metadataE"]
            pub static metadata: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12missingGlyphE"]
            pub static missingGlyph: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2mmE"]
            pub static mm: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5mpathE"]
            pub static mpath: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8noStitchE"]
            pub static noStitch: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10numOctavesE"]
            pub static numOctaves: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8multiplyE"]
            pub static multiply: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17objectBoundingBoxE"]
            pub static objectBoundingBox: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6offsetE"]
            pub static offset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onSVGLoadE"]
            pub static onSVGLoad: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onSVGResizeE"]
            pub static onSVGResize: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onSVGScrollE"]
            pub static onSVGScroll: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onSVGUnloadE"]
            pub static onSVGUnload: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onSVGZoomE"]
            pub static onSVGZoom: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6onzoomE"]
            pub static onzoom: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7opacityE"]
            pub static opacity: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9_operatorE"]
            pub static _operator: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3outE"]
            pub static out: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4overE"]
            pub static over: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms27overridePreserveAspectRatioE"]
            pub static overridePreserveAspectRatio: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3padE"]
            pub static pad: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4pathE"]
            pub static path: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10pathLengthE"]
            pub static pathLength: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19patternContentUnitsE"]
            pub static patternContentUnits: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16patternTransformE"]
            pub static patternTransform: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12patternUnitsE"]
            pub static patternUnits: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2pcE"]
            pub static pc: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14pointer_eventsE"]
            pub static pointer_events: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6pointsE"]
            pub static points: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9pointsAtXE"]
            pub static pointsAtX: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9pointsAtYE"]
            pub static pointsAtY: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9pointsAtZE"]
            pub static pointsAtZ: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8polylineE"]
            pub static polyline: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13preserveAlphaE"]
            pub static preserveAlpha: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19preserveAspectRatioE"]
            pub static preserveAspectRatio: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14primitiveUnitsE"]
            pub static primitiveUnits: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2ptE"]
            pub static pt: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2pxE"]
            pub static px: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms1RE"]
            pub static R: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms1rE"]
            pub static r: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3radE"]
            pub static rad: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14radialGradientE"]
            pub static radialGradient: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6radiusE"]
            pub static radius: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7reflectE"]
            pub static reflect: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4refXE"]
            pub static refX: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4refYE"]
            pub static refY: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18requiredExtensionsE"]
            pub static requiredExtensions: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16requiredFeaturesE"]
            pub static requiredFeatures: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6rotateE"]
            pub static rotate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2rxE"]
            pub static rx: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2ryE"]
            pub static ry: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8saturateE"]
            pub static saturate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10saturationE"]
            pub static saturation: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3setE"]
            pub static set: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4seedE"]
            pub static seed: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6shadowE"]
            pub static shadow: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15shape_renderingE"]
            pub static shape_rendering: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5skewXE"]
            pub static skewX: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5skewYE"]
            pub static skewY: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5slopeE"]
            pub static slope: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9softLightE"]
            pub static softLight: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7spacingE"]
            pub static spacing: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16spacingAndGlyphsE"]
            pub static spacingAndGlyphs: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16specularConstantE"]
            pub static specularConstant: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16specularExponentE"]
            pub static specularExponent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12spreadMethodE"]
            pub static spreadMethod: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4sRGBE"]
            pub static sRGB: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11startOffsetE"]
            pub static startOffset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12stdDeviationE"]
            pub static stdDeviation: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6stitchE"]
            pub static stitch: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11stitchTilesE"]
            pub static stitchTiles: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10stop_colorE"]
            pub static stop_color: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12stop_opacityE"]
            pub static stop_opacity: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6strokeE"]
            pub static stroke: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16stroke_dasharrayE"]
            pub static stroke_dasharray: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17stroke_dashoffsetE"]
            pub static stroke_dashoffset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14stroke_linecapE"]
            pub static stroke_linecap: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15stroke_linejoinE"]
            pub static stroke_linejoin: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17stroke_miterlimitE"]
            pub static stroke_miterlimit: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14stroke_opacityE"]
            pub static stroke_opacity: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12stroke_widthE"]
            pub static stroke_width: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11strokeWidthE"]
            pub static strokeWidth: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12surfaceScaleE"]
            pub static surfaceScale: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3svgE"]
            pub static svg: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9svgSwitchE"]
            pub static svgSwitch: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6symbolE"]
            pub static symbol: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14systemLanguageE"]
            pub static systemLanguage: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11tableValuesE"]
            pub static tableValues: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7targetXE"]
            pub static targetX: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7targetYE"]
            pub static targetY: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11text_anchorE"]
            pub static text_anchor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14text_renderingE"]
            pub static text_rendering: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10textLengthE"]
            pub static textLength: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8textPathE"]
            pub static textPath: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4trefE"]
            pub static tref: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5tspanE"]
            pub static tspan: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10turbulenceE"]
            pub static turbulence: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12unicode_bidiE"]
            pub static unicode_bidi: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14userSpaceOnUseE"]
            pub static userSpaceOnUse: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4viewE"]
            pub static view: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7viewBoxE"]
            pub static viewBox: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10viewTargetE"]
            pub static viewTarget: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11white_spaceE"]
            pub static white_space: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12word_spacingE"]
            pub static word_spacing: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12writing_modeE"]
            pub static writing_mode: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms1xE"]
            pub static x: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2x1E"]
            pub static x1: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2x2E"]
            pub static x2: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16xChannelSelectorE"]
            pub static xChannelSelector: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4xor_E"]
            pub static xor_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms1yE"]
            pub static y: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2y1E"]
            pub static y1: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2y2E"]
            pub static y2: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16yChannelSelectorE"]
            pub static yChannelSelector: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms1zE"]
            pub static z: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10zoomAndPanE"]
            pub static zoomAndPan: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13vector_effectE"]
            pub static vector_effect: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14vertical_alignE"]
            pub static vertical_align: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10accumulateE"]
            pub static accumulate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8additiveE"]
            pub static additive: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13attributeNameE"]
            pub static attributeName: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13attributeTypeE"]
            pub static attributeType: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12auto_reverseE"]
            pub static auto_reverse: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5beginE"]
            pub static begin: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10beginEventE"]
            pub static beginEvent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2byE"]
            pub static by: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8calcModeE"]
            pub static calcMode: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3cssE"]
            pub static css: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3durE"]
            pub static dur: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9keyPointsE"]
            pub static keyPoints: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10keySplinesE"]
            pub static keySplines: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8keyTimesE"]
            pub static keyTimes: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms25mozAnimateMotionDummyAttrE"]
            pub static mozAnimateMotionDummyAttr: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7onbeginE"]
            pub static onbegin: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onbeginEventE"]
            pub static onbeginEvent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5onendE"]
            pub static onend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onendEventE"]
            pub static onendEvent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8onrepeatE"]
            pub static onrepeat: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onrepeatEventE"]
            pub static onrepeatEvent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11repeatCountE"]
            pub static repeatCount: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9repeatDurE"]
            pub static repeatDur: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11repeatEventE"]
            pub static repeatEvent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7restartE"]
            pub static restart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2toE"]
            pub static to: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3XMLE"]
            pub static XML: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4abs_E"]
            pub static abs_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7accent_E"]
            pub static accent_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12accentunder_E"]
            pub static accentunder_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11actiontype_E"]
            pub static actiontype_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15alignmentscope_E"]
            pub static alignmentscope_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7altimg_E"]
            pub static altimg_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14altimg_height_E"]
            pub static altimg_height_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14altimg_valign_E"]
            pub static altimg_valign_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13altimg_width_E"]
            pub static altimg_width_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11annotation_E"]
            pub static annotation_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15annotation_xml_E"]
            pub static annotation_xml_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6apply_E"]
            pub static apply_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7approx_E"]
            pub static approx_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7arccos_E"]
            pub static arccos_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8arccosh_E"]
            pub static arccosh_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7arccot_E"]
            pub static arccot_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8arccoth_E"]
            pub static arccoth_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7arccsc_E"]
            pub static arccsc_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8arccsch_E"]
            pub static arccsch_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7arcsec_E"]
            pub static arcsec_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8arcsech_E"]
            pub static arcsech_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7arcsin_E"]
            pub static arcsin_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8arcsinh_E"]
            pub static arcsinh_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7arctan_E"]
            pub static arctan_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8arctanh_E"]
            pub static arctanh_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4arg_E"]
            pub static arg_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9bevelled_E"]
            pub static bevelled_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5bind_E"]
            pub static bind_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5bvar_E"]
            pub static bvar_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5card_E"]
            pub static card_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17cartesianproduct_E"]
            pub static cartesianproduct_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7cbytes_E"]
            pub static cbytes_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3cd_E"]
            pub static cd_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8cdgroup_E"]
            pub static cdgroup_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7cerror_E"]
            pub static cerror_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10charalign_E"]
            pub static charalign_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3ci_E"]
            pub static ci_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8closure_E"]
            pub static closure_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3cn_E"]
            pub static cn_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9codomain_E"]
            pub static codomain_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12columnalign_E"]
            pub static columnalign_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16columnalignment_E"]
            pub static columnalignment_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12columnlines_E"]
            pub static columnlines_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14columnspacing_E"]
            pub static columnspacing_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11columnspan_E"]
            pub static columnspan_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12columnwidth_E"]
            pub static columnwidth_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10complexes_E"]
            pub static complexes_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8compose_E"]
            pub static compose_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10condition_E"]
            pub static condition_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10conjugate_E"]
            pub static conjugate_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4cos_E"]
            pub static cos_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5cosh_E"]
            pub static cosh_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4cot_E"]
            pub static cot_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5coth_E"]
            pub static coth_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9crossout_E"]
            pub static crossout_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4csc_E"]
            pub static csc_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5csch_E"]
            pub static csch_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3cs_E"]
            pub static cs_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8csymbol_E"]
            pub static csymbol_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5curl_E"]
            pub static curl_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13decimalpoint_E"]
            pub static decimalpoint_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14definitionURL_E"]
            pub static definitionURL_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7degree_E"]
            pub static degree_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11denomalign_E"]
            pub static denomalign_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6depth_E"]
            pub static depth_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12determinant_E"]
            pub static determinant_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5diff_E"]
            pub static diff_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13displaystyle_E"]
            pub static displaystyle_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11divergence_E"]
            pub static divergence_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7divide_E"]
            pub static divide_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7domain_E"]
            pub static domain_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20domainofapplication_E"]
            pub static domainofapplication_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5edge_E"]
            pub static edge_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3el_E"]
            pub static el_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9emptyset_E"]
            pub static emptyset_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3eq_E"]
            pub static eq_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13equalcolumns_E"]
            pub static equalcolumns_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10equalrows_E"]
            pub static equalrows_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11equivalent_E"]
            pub static equivalent_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11eulergamma_E"]
            pub static eulergamma_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7exists_E"]
            pub static exists_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4exp_E"]
            pub static exp_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13exponentiale_E"]
            pub static exponentiale_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10factorial_E"]
            pub static factorial_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9factorof_E"]
            pub static factorof_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6fence_E"]
            pub static fence_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3fn_E"]
            pub static fn_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11fontfamily_E"]
            pub static fontfamily_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9fontsize_E"]
            pub static fontsize_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10fontstyle_E"]
            pub static fontstyle_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11fontweight_E"]
            pub static fontweight_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7forall_E"]
            pub static forall_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13framespacing_E"]
            pub static framespacing_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4gcd_E"]
            pub static gcd_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4geq_E"]
            pub static geq_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11groupalign_E"]
            pub static groupalign_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3gt_E"]
            pub static gt_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6ident_E"]
            pub static ident_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11imaginaryi_E"]
            pub static imaginaryi_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10imaginary_E"]
            pub static imaginary_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8implies_E"]
            pub static implies_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17indentalignfirst_E"]
            pub static indentalignfirst_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12indentalign_E"]
            pub static indentalign_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16indentalignlast_E"]
            pub static indentalignlast_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17indentshiftfirst_E"]
            pub static indentshiftfirst_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12indentshift_E"]
            pub static indentshift_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13indenttarget_E"]
            pub static indenttarget_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9integers_E"]
            pub static integers_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10intersect_E"]
            pub static intersect_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9interval_E"]
            pub static interval_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4int_E"]
            pub static int_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8inverse_E"]
            pub static inverse_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7lambda_E"]
            pub static lambda_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10laplacian_E"]
            pub static laplacian_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8largeop_E"]
            pub static largeop_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4lcm_E"]
            pub static lcm_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4leq_E"]
            pub static leq_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6limit_E"]
            pub static limit_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10linebreak_E"]
            pub static linebreak_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18linebreakmultchar_E"]
            pub static linebreakmultchar_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15linebreakstyle_E"]
            pub static linebreakstyle_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14linethickness_E"]
            pub static linethickness_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5list_E"]
            pub static list_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3ln_E"]
            pub static ln_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9location_E"]
            pub static location_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8logbase_E"]
            pub static logbase_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4log_E"]
            pub static log_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13longdivstyle_E"]
            pub static longdivstyle_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9lowlimit_E"]
            pub static lowlimit_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7lquote_E"]
            pub static lquote_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7lspace_E"]
            pub static lspace_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3lt_E"]
            pub static lt_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8maction_E"]
            pub static maction_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12maligngroup_E"]
            pub static maligngroup_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11malignmark_E"]
            pub static malignmark_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15mathbackground_E"]
            pub static mathbackground_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10mathcolor_E"]
            pub static mathcolor_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9mathsize_E"]
            pub static mathsize_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12mathvariant_E"]
            pub static mathvariant_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10matrixrow_E"]
            pub static matrixrow_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8maxsize_E"]
            pub static maxsize_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5mean_E"]
            pub static mean_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7median_E"]
            pub static median_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9menclose_E"]
            pub static menclose_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7merror_E"]
            pub static merror_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8mfenced_E"]
            pub static mfenced_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6mfrac_E"]
            pub static mfrac_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7mglyph_E"]
            pub static mglyph_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3mi_E"]
            pub static mi_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16minlabelspacing_E"]
            pub static minlabelspacing_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8minsize_E"]
            pub static minsize_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6minus_E"]
            pub static minus_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11mlabeledtr_E"]
            pub static mlabeledtr_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9mlongdiv_E"]
            pub static mlongdiv_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14mmultiscripts_E"]
            pub static mmultiscripts_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3mn_E"]
            pub static mn_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12momentabout_E"]
            pub static momentabout_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7moment_E"]
            pub static moment_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3mo_E"]
            pub static mo_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14movablelimits_E"]
            pub static movablelimits_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6mover_E"]
            pub static mover_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8mpadded_E"]
            pub static mpadded_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9mphantom_E"]
            pub static mphantom_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12mprescripts_E"]
            pub static mprescripts_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6mroot_E"]
            pub static mroot_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5mrow_E"]
            pub static mrow_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10mscarries_E"]
            pub static mscarries_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8mscarry_E"]
            pub static mscarry_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8msgroup_E"]
            pub static msgroup_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7msline_E"]
            pub static msline_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3ms_E"]
            pub static ms_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7mspace_E"]
            pub static mspace_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6msqrt_E"]
            pub static msqrt_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6msrow_E"]
            pub static msrow_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7mstack_E"]
            pub static mstack_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7mstyle_E"]
            pub static mstyle_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5msub_E"]
            pub static msub_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8msubsup_E"]
            pub static msubsup_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5msup_E"]
            pub static msup_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7mtable_E"]
            pub static mtable_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4mtd_E"]
            pub static mtd_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6mtext_E"]
            pub static mtext_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4mtr_E"]
            pub static mtr_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7munder_E"]
            pub static munder_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11munderover_E"]
            pub static munderover_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15naturalnumbers_E"]
            pub static naturalnumbers_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4neq_E"]
            pub static neq_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11notanumber_E"]
            pub static notanumber_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9notation_E"]
            pub static notation_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5note_E"]
            pub static note_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6notin_E"]
            pub static notin_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12notprsubset_E"]
            pub static notprsubset_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10notsubset_E"]
            pub static notsubset_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9numalign_E"]
            pub static numalign_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6other_E"]
            pub static other_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13outerproduct_E"]
            pub static outerproduct_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12partialdiff_E"]
            pub static partialdiff_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6piece_E"]
            pub static piece_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10piecewise_E"]
            pub static piecewise_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3pi_E"]
            pub static pi_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5plus_E"]
            pub static plus_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6power_E"]
            pub static power_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7primes_E"]
            pub static primes_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8product_E"]
            pub static product_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9prsubset_E"]
            pub static prsubset_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9quotient_E"]
            pub static quotient_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10rationals_E"]
            pub static rationals_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5real_E"]
            pub static real_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6reals_E"]
            pub static reals_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5reln_E"]
            pub static reln_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5root_E"]
            pub static root_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9rowalign_E"]
            pub static rowalign_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9rowlines_E"]
            pub static rowlines_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11rowspacing_E"]
            pub static rowspacing_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7rquote_E"]
            pub static rquote_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7rspace_E"]
            pub static rspace_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14scalarproduct_E"]
            pub static scalarproduct_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15schemaLocation_E"]
            pub static schemaLocation_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12scriptlevel_E"]
            pub static scriptlevel_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14scriptminsize_E"]
            pub static scriptminsize_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21scriptsizemultiplier_E"]
            pub static scriptsizemultiplier_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11scriptsize_E"]
            pub static scriptsize_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5sdev_E"]
            pub static sdev_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5sech_E"]
            pub static sech_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4sec_E"]
            pub static sec_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10selection_E"]
            pub static selection_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9selector_E"]
            pub static selector_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10semantics_E"]
            pub static semantics_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10separator_E"]
            pub static separator_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11separators_E"]
            pub static separators_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4sep_E"]
            pub static sep_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8setdiff_E"]
            pub static setdiff_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4set_E"]
            pub static set_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6share_E"]
            pub static share_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6shift_E"]
            pub static shift_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5side_E"]
            pub static side_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5sinh_E"]
            pub static sinh_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4sin_E"]
            pub static sin_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11stackalign_E"]
            pub static stackalign_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9stretchy_E"]
            pub static stretchy_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15subscriptshift_E"]
            pub static subscriptshift_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7subset_E"]
            pub static subset_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17superscriptshift_E"]
            pub static superscriptshift_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10symmetric_E"]
            pub static symmetric_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5tanh_E"]
            pub static tanh_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4tan_E"]
            pub static tan_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8tendsto_E"]
            pub static tendsto_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6times_E"]
            pub static times_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10transpose_E"]
            pub static transpose_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6union_E"]
            pub static union_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8uplimit_E"]
            pub static uplimit_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9variance_E"]
            pub static variance_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14vectorproduct_E"]
            pub static vectorproduct_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7vector_E"]
            pub static vector_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8voffset_E"]
            pub static voffset_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5xref_E"]
            pub static xref_: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4mathE"]
            pub static math: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3avgE"]
            pub static avg: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17booleanFromStringE"]
            pub static booleanFromString: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13countNonEmptyE"]
            pub static countNonEmpty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12daysFromDateE"]
            pub static daysFromDate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4initE"]
            pub static init: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8instanceE"]
            pub static instance: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6monthsE"]
            pub static months: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3nowE"]
            pub static now: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7secondsE"]
            pub static seconds: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19secondsFromDateTimeE"]
            pub static secondsFromDateTime: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms25onMozSwipeGestureMayStartE"]
            pub static onMozSwipeGestureMayStart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22onMozSwipeGestureStartE"]
            pub static onMozSwipeGestureStart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23onMozSwipeGestureUpdateE"]
            pub static onMozSwipeGestureUpdate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20onMozSwipeGestureEndE"]
            pub static onMozSwipeGestureEnd: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17onMozSwipeGestureE"]
            pub static onMozSwipeGesture: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24onMozMagnifyGestureStartE"]
            pub static onMozMagnifyGestureStart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms25onMozMagnifyGestureUpdateE"]
            pub static onMozMagnifyGestureUpdate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19onMozMagnifyGestureE"]
            pub static onMozMagnifyGesture: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23onMozRotateGestureStartE"]
            pub static onMozRotateGestureStart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24onMozRotateGestureUpdateE"]
            pub static onMozRotateGestureUpdate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18onMozRotateGestureE"]
            pub static onMozRotateGesture: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15onMozTapGestureE"]
            pub static onMozTapGesture: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20onMozPressTapGestureE"]
            pub static onMozPressTapGesture: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18onMozEdgeUIStartedE"]
            pub static onMozEdgeUIStarted: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19onMozEdgeUICanceledE"]
            pub static onMozEdgeUICanceled: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20onMozEdgeUICompletedE"]
            pub static onMozEdgeUICompleted: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onpointerdownE"]
            pub static onpointerdown: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onpointermoveE"]
            pub static onpointermove: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onpointerupE"]
            pub static onpointerup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15onpointercancelE"]
            pub static onpointercancel: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onpointeroverE"]
            pub static onpointerover: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onpointeroutE"]
            pub static onpointerout: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14onpointerenterE"]
            pub static onpointerenter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14onpointerleaveE"]
            pub static onpointerleave: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19ongotpointercaptureE"]
            pub static ongotpointercapture: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20onlostpointercaptureE"]
            pub static onlostpointercapture: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14ondevicemotionE"]
            pub static ondevicemotion: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19ondeviceorientationE"]
            pub static ondeviceorientation: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms27onabsolutedeviceorientationE"]
            pub static onabsolutedeviceorientation: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17ondeviceproximityE"]
            pub static ondeviceproximity: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22onmozorientationchangeE"]
            pub static onmozorientationchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15onuserproximityE"]
            pub static onuserproximity: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13ondevicelightE"]
            pub static ondevicelight: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19onmozinterruptbeginE"]
            pub static onmozinterruptbegin: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17onmozinterruptendE"]
            pub static onmozinterruptend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12cdataTagNameE"]
            pub static cdataTagName: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14commentTagNameE"]
            pub static commentTagName: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16documentNodeNameE"]
            pub static documentNodeName: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24documentFragmentNodeNameE"]
            pub static documentFragmentNodeName: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20documentTypeNodeNameE"]
            pub static documentTypeNodeName: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms28processingInstructionTagNameE"]
            pub static processingInstructionTagName: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11textTagNameE"]
            pub static textTagName: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16bcTableCellFrameE"]
            pub static bcTableCellFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10blockFrameE"]
            pub static blockFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8boxFrameE"]
            pub static boxFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7brFrameE"]
            pub static brFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11bulletFrameE"]
            pub static bulletFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17colorControlFrameE"]
            pub static colorControlFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14columnSetFrameE"]
            pub static columnSetFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20comboboxControlFrameE"]
            pub static comboboxControlFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20comboboxDisplayFrameE"]
            pub static comboboxDisplayFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9deckFrameE"]
            pub static deckFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12detailsFrameE"]
            pub static detailsFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13fieldSetFrameE"]
            pub static fieldSetFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18flexContainerFrameE"]
            pub static flexContainerFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16formControlFrameE"]
            pub static formControlFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13frameSetFrameE"]
            pub static frameSetFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21gfxButtonControlFrameE"]
            pub static gfxButtonControlFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18gridContainerFrameE"]
            pub static gridContainerFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22HTMLButtonControlFrameE"]
            pub static HTMLButtonControlFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15HTMLCanvasFrameE"]
            pub static HTMLCanvasFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16subDocumentFrameE"]
            pub static subDocumentFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13imageBoxFrameE"]
            pub static imageBoxFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10imageFrameE"]
            pub static imageFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17imageControlFrameE"]
            pub static imageControlFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11inlineFrameE"]
            pub static inlineFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12leafBoxFrameE"]
            pub static leafBoxFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11legendFrameE"]
            pub static legendFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11letterFrameE"]
            pub static letterFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9lineFrameE"]
            pub static lineFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16listControlFrameE"]
            pub static listControlFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9menuFrameE"]
            pub static menuFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10meterFrameE"]
            pub static meterFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14menuPopupFrameE"]
            pub static menuPopupFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18numberControlFrameE"]
            pub static numberControlFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11objectFrameE"]
            pub static objectFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9pageFrameE"]
            pub static pageFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14pageBreakFrameE"]
            pub static pageBreakFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16pageContentFrameE"]
            pub static pageContentFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16placeholderFrameE"]
            pub static placeholderFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13popupSetFrameE"]
            pub static popupSetFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13progressFrameE"]
            pub static progressFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11canvasFrameE"]
            pub static canvasFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10rangeFrameE"]
            pub static rangeFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9rootFrameE"]
            pub static rootFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22rubyBaseContainerFrameE"]
            pub static rubyBaseContainerFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13rubyBaseFrameE"]
            pub static rubyBaseFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9rubyFrameE"]
            pub static rubyFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22rubyTextContainerFrameE"]
            pub static rubyTextContainerFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13rubyTextFrameE"]
            pub static rubyTextFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11scrollFrameE"]
            pub static scrollFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14scrollbarFrameE"]
            pub static scrollbarFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13sequenceFrameE"]
            pub static sequenceFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11sliderFrameE"]
            pub static sliderFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14tableCellFrameE"]
            pub static tableCellFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13tableColFrameE"]
            pub static tableColFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18tableColGroupFrameE"]
            pub static tableColGroupFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10tableFrameE"]
            pub static tableFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17tableWrapperFrameE"]
            pub static tableWrapperFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18tableRowGroupFrameE"]
            pub static tableRowGroupFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13tableRowFrameE"]
            pub static tableRowFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14textInputFrameE"]
            pub static textInputFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9textFrameE"]
            pub static textFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13viewportFrameE"]
            pub static viewportFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13XULLabelFrameE"]
            pub static XULLabelFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9svgAFrameE"]
            pub static svgAFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16svgClipPathFrameE"]
            pub static svgClipPathFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12svgDefsFrameE"]
            pub static svgDefsFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19svgFEContainerFrameE"]
            pub static svgFEContainerFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15svgFEImageFrameE"]
            pub static svgFEImageFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14svgFELeafFrameE"]
            pub static svgFELeafFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22svgFEUnstyledLeafFrameE"]
            pub static svgFEUnstyledLeafFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14svgFilterFrameE"]
            pub static svgFilterFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21svgForeignObjectFrameE"]
            pub static svgForeignObjectFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24svgGenericContainerFrameE"]
            pub static svgGenericContainerFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9svgGFrameE"]
            pub static svgGFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16svgGradientFrameE"]
            pub static svgGradientFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13svgImageFrameE"]
            pub static svgImageFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16svgInnerSVGFrameE"]
            pub static svgInnerSVGFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22svgLinearGradientFrameE"]
            pub static svgLinearGradientFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14svgMarkerFrameE"]
            pub static svgMarkerFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23svgMarkerAnonChildFrameE"]
            pub static svgMarkerAnonChildFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12svgMaskFrameE"]
            pub static svgMaskFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16svgOuterSVGFrameE"]
            pub static svgOuterSVGFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms25svgOuterSVGAnonChildFrameE"]
            pub static svgOuterSVGAnonChildFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20svgPathGeometryFrameE"]
            pub static svgPathGeometryFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15svgPatternFrameE"]
            pub static svgPatternFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22svgRadialGradientFrameE"]
            pub static svgRadialGradientFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12svgStopFrameE"]
            pub static svgStopFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14svgSwitchFrameE"]
            pub static svgSwitchFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12svgTextFrameE"]
            pub static svgTextFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11svgUseFrameE"]
            pub static svgUseFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12svgViewFrameE"]
            pub static svgViewFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14HTMLVideoFrameE"]
            pub static HTMLVideoFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onloadendE"]
            pub static onloadend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onloadstartE"]
            pub static onloadstart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onprogressE"]
            pub static onprogress: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onsuspendE"]
            pub static onsuspend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onemptiedE"]
            pub static onemptied: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onstalledE"]
            pub static onstalled: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6onplayE"]
            pub static onplay: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7onpauseE"]
            pub static onpause: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16onloadedmetadataE"]
            pub static onloadedmetadata: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onloadeddataE"]
            pub static onloadeddata: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onwaitingE"]
            pub static onwaiting: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onplayingE"]
            pub static onplaying: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9oncanplayE"]
            pub static oncanplay: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16oncanplaythroughE"]
            pub static oncanplaythrough: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onseekingE"]
            pub static onseeking: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8onseekedE"]
            pub static onseeked: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9ontimeoutE"]
            pub static ontimeout: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12ontimeupdateE"]
            pub static ontimeupdate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7onendedE"]
            pub static onended: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onratechangeE"]
            pub static onratechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16ondurationchangeE"]
            pub static ondurationchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14onvolumechangeE"]
            pub static onvolumechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onaddtrackE"]
            pub static onaddtrack: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18oncontrollerchangeE"]
            pub static oncontrollerchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11oncuechangeE"]
            pub static oncuechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7onenterE"]
            pub static onenter: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6onexitE"]
            pub static onexit: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onencryptedE"]
            pub static onencrypted: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9encryptedE"]
            pub static encrypted: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onremovetrackE"]
            pub static onremovetrack: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9loadstartE"]
            pub static loadstart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7suspendE"]
            pub static suspend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7emptiedE"]
            pub static emptied: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7stalledE"]
            pub static stalled: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4playE"]
            pub static play: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5pauseE"]
            pub static pause: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14loadedmetadataE"]
            pub static loadedmetadata: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10loadeddataE"]
            pub static loadeddata: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7waitingE"]
            pub static waiting: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7playingE"]
            pub static playing: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7seekingE"]
            pub static seeking: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6seekedE"]
            pub static seeked: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10timeupdateE"]
            pub static timeupdate: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5endedE"]
            pub static ended: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7canplayE"]
            pub static canplay: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14canplaythroughE"]
            pub static canplaythrough: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10ratechangeE"]
            pub static ratechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14durationchangeE"]
            pub static durationchange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12volumechangeE"]
            pub static volumechange: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15ondataavailableE"]
            pub static ondataavailable: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onwarningE"]
            pub static onwarning: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7onstartE"]
            pub static onstart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6onstopE"]
            pub static onstop: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7onphotoE"]
            pub static onphoto: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20onactivestatechangedE"]
            pub static onactivestatechanged: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19ongamepadbuttondownE"]
            pub static ongamepadbuttondown: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17ongamepadbuttonupE"]
            pub static ongamepadbuttonup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17ongamepadaxismoveE"]
            pub static ongamepadaxismove: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18ongamepadconnectedE"]
            pub static ongamepadconnected: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21ongamepaddisconnectedE"]
            pub static ongamepaddisconnected: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18animationsPropertyE"]
            pub static animationsProperty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms26animationsOfBeforePropertyE"]
            pub static animationsOfBeforeProperty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms25animationsOfAfterPropertyE"]
            pub static animationsOfAfterProperty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24animationEffectsPropertyE"]
            pub static animationEffectsProperty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms33animationEffectsForBeforePropertyE"]
            pub static animationEffectsForBeforeProperty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms32animationEffectsForAfterPropertyE"]
            pub static animationEffectsForAfterProperty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms30cssPseudoElementBeforePropertyE"]
            pub static cssPseudoElementBeforeProperty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms29cssPseudoElementAfterPropertyE"]
            pub static cssPseudoElementAfterProperty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19transitionsPropertyE"]
            pub static transitionsProperty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms27transitionsOfBeforePropertyE"]
            pub static transitionsOfBeforeProperty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms26transitionsOfAfterPropertyE"]
            pub static transitionsOfAfterProperty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms25genConInitializerPropertyE"]
            pub static genConInitializerProperty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24labelMouseDownPtPropertyE"]
            pub static labelMouseDownPtProperty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15baseURIPropertyE"]
            pub static baseURIProperty: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17lockedStyleStatesE"]
            pub static lockedStyleStates: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20apzCallbackTransformE"]
            pub static apzCallbackTransform: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23restylableAnonymousNodeE"]
            pub static restylableAnonymousNode: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16paintRequestTimeE"]
            pub static paintRequestTime: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8JapaneseE"]
            pub static Japanese: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7ChineseE"]
            pub static Chinese: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9TaiwaneseE"]
            pub static Taiwanese: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15HongKongChineseE"]
            pub static HongKongChinese: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7UnicodeE"]
            pub static Unicode: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2koE"]
            pub static ko: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5zh_cnE"]
            pub static zh_cn: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5zh_hkE"]
            pub static zh_hk: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5zh_twE"]
            pub static zh_tw: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10x_cyrillicE"]
            pub static x_cyrillic: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2heE"]
            pub static he: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2arE"]
            pub static ar: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12x_devanagariE"]
            pub static x_devanagari: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7x_tamilE"]
            pub static x_tamil: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6x_armnE"]
            pub static x_armn: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6x_bengE"]
            pub static x_beng: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6x_cansE"]
            pub static x_cans: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6x_ethiE"]
            pub static x_ethi: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6x_georE"]
            pub static x_geor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6x_gujrE"]
            pub static x_gujr: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6x_guruE"]
            pub static x_guru: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6x_khmrE"]
            pub static x_khmr: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6x_kndaE"]
            pub static x_knda: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6x_mlymE"]
            pub static x_mlym: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6x_oryaE"]
            pub static x_orya: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6x_sinhE"]
            pub static x_sinh: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6x_teluE"]
            pub static x_telu: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6x_tibtE"]
            pub static x_tibt: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2azE"]
            pub static az: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2baE"]
            pub static ba: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3crhE"]
            pub static crh: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2elE"]
            pub static el: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2gaE"]
            pub static ga: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms2nlE"]
            pub static nl: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6x_mathE"]
            pub static x_math: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13TypingTxnNameE"]
            pub static TypingTxnName: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10IMETxnNameE"]
            pub static IMETxnName: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13DeleteTxnNameE"]
            pub static DeleteTxnName: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5serifE"]
            pub static serif: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10sans_serifE"]
            pub static sans_serif: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7cursiveE"]
            pub static cursive: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7fantasyE"]
            pub static fantasy: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9monospaceE"]
            pub static monospace: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6RemoteE"]
            pub static Remote: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8RemoteIdE"]
            pub static RemoteId: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11DisplayPortE"]
            pub static DisplayPort: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18DisplayPortMarginsE"]
            pub static DisplayPortMargins: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15DisplayPortBaseE"]
            pub static DisplayPortBase: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms30AsyncScrollLayerCreationFailedE"]
            pub static AsyncScrollLayerCreationFailed: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19forcemessagemanagerE"]
            pub static forcemessagemanager: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22color_picker_availableE"]
            pub static color_picker_available: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24scrollbar_start_backwardE"]
            pub static scrollbar_start_backward: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23scrollbar_start_forwardE"]
            pub static scrollbar_start_forward: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22scrollbar_end_backwardE"]
            pub static scrollbar_end_backward: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21scrollbar_end_forwardE"]
            pub static scrollbar_end_forward: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms28scrollbar_thumb_proportionalE"]
            pub static scrollbar_thumb_proportional: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15images_in_menusE"]
            pub static images_in_menus: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17images_in_buttonsE"]
            pub static images_in_buttons: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18overlay_scrollbarsE"]
            pub static overlay_scrollbars: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21windows_default_themeE"]
            pub static windows_default_theme: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18mac_graphite_themeE"]
            pub static mac_graphite_theme: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14mac_lion_themeE"]
            pub static mac_lion_theme: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18mac_yosemite_themeE"]
            pub static mac_yosemite_theme: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18windows_compositorE"]
            pub static windows_compositor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13windows_glassE"]
            pub static windows_glass: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13touch_enabledE"]
            pub static touch_enabled: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12menubar_dragE"]
            pub static menubar_drag: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23swipe_animation_enabledE"]
            pub static swipe_animation_enabled: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20physical_home_buttonE"]
            pub static physical_home_button: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15windows_classicE"]
            pub static windows_classic: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18windows_theme_aeroE"]
            pub static windows_theme_aero: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23windows_theme_aero_liteE"]
            pub static windows_theme_aero_lite: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23windows_theme_luna_blueE"]
            pub static windows_theme_luna_blue: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms24windows_theme_luna_oliveE"]
            pub static windows_theme_luna_olive: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms25windows_theme_luna_silverE"]
            pub static windows_theme_luna_silver: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20windows_theme_royaleE"]
            pub static windows_theme_royale: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18windows_theme_zuneE"]
            pub static windows_theme_zune: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21windows_theme_genericE"]
            pub static windows_theme_generic: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms27_moz_color_picker_availableE"]
            pub static _moz_color_picker_available: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms29_moz_scrollbar_start_backwardE"]
            pub static _moz_scrollbar_start_backward: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms28_moz_scrollbar_start_forwardE"]
            pub static _moz_scrollbar_start_forward: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms27_moz_scrollbar_end_backwardE"]
            pub static _moz_scrollbar_end_backward: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms26_moz_scrollbar_end_forwardE"]
            pub static _moz_scrollbar_end_forward: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms33_moz_scrollbar_thumb_proportionalE"]
            pub static _moz_scrollbar_thumb_proportional: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20_moz_images_in_menusE"]
            pub static _moz_images_in_menus: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms22_moz_images_in_buttonsE"]
            pub static _moz_images_in_buttons: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23_moz_overlay_scrollbarsE"]
            pub static _moz_overlay_scrollbars: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms26_moz_windows_default_themeE"]
            pub static _moz_windows_default_theme: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23_moz_mac_graphite_themeE"]
            pub static _moz_mac_graphite_theme: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms19_moz_mac_lion_themeE"]
            pub static _moz_mac_lion_theme: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23_moz_mac_yosemite_themeE"]
            pub static _moz_mac_yosemite_theme: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23_moz_windows_compositorE"]
            pub static _moz_windows_compositor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20_moz_windows_classicE"]
            pub static _moz_windows_classic: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18_moz_windows_glassE"]
            pub static _moz_windows_glass: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18_moz_windows_themeE"]
            pub static _moz_windows_theme: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15_moz_os_versionE"]
            pub static _moz_os_version: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18_moz_touch_enabledE"]
            pub static _moz_touch_enabled: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17_moz_menubar_dragE"]
            pub static _moz_menubar_drag: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23_moz_device_pixel_ratioE"]
            pub static _moz_device_pixel_ratio: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms23_moz_device_orientationE"]
            pub static _moz_device_orientation: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms25_moz_is_resource_documentE"]
            pub static _moz_is_resource_document: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms28_moz_swipe_animation_enabledE"]
            pub static _moz_swipe_animation_enabled: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms25_moz_physical_home_buttonE"]
            pub static _moz_physical_home_button: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4BackE"]
            pub static Back: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7ForwardE"]
            pub static Forward: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6ReloadE"]
            pub static Reload: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4StopE"]
            pub static Stop: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6SearchE"]
            pub static Search: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9BookmarksE"]
            pub static Bookmarks: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4HomeE"]
            pub static Home: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5ClearE"]
            pub static Clear: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8VolumeUpE"]
            pub static VolumeUp: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10VolumeDownE"]
            pub static VolumeDown: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9NextTrackE"]
            pub static NextTrack: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13PreviousTrackE"]
            pub static PreviousTrack: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9MediaStopE"]
            pub static MediaStop: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9PlayPauseE"]
            pub static PlayPause: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4MenuE"]
            pub static Menu: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3NewE"]
            pub static New: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4OpenE"]
            pub static Open: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5CloseE"]
            pub static Close: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4SaveE"]
            pub static Save: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4FindE"]
            pub static Find: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4HelpE"]
            pub static Help: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5PrintE"]
            pub static Print: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8SendMailE"]
            pub static SendMail: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11ForwardMailE"]
            pub static ForwardMail: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11ReplyToMailE"]
            pub static ReplyToMail: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10mouseWheelE"]
            pub static mouseWheel: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6pixelsE"]
            pub static pixels: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5linesE"]
            pub static lines: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5pagesE"]
            pub static pages: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10scrollbarsE"]
            pub static scrollbars: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5otherE"]
            pub static other: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms3apzE"]
            pub static apz: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7restoreE"]
            pub static restore: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5alertE"]
            pub static alert: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11alertdialogE"]
            pub static alertdialog: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11applicationE"]
            pub static application: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms21aria_activedescendantE"]
            pub static aria_activedescendant: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11aria_atomicE"]
            pub static aria_atomic: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17aria_autocompleteE"]
            pub static aria_autocomplete: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9aria_busyE"]
            pub static aria_busy: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12aria_checkedE"]
            pub static aria_checked: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13aria_colcountE"]
            pub static aria_colcount: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13aria_colindexE"]
            pub static aria_colindex: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13aria_controlsE"]
            pub static aria_controls: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16aria_describedbyE"]
            pub static aria_describedby: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13aria_disabledE"]
            pub static aria_disabled: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15aria_dropeffectE"]
            pub static aria_dropeffect: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13aria_expandedE"]
            pub static aria_expanded: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11aria_flowtoE"]
            pub static aria_flowto: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12aria_grabbedE"]
            pub static aria_grabbed: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13aria_haspopupE"]
            pub static aria_haspopup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11aria_hiddenE"]
            pub static aria_hidden: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12aria_invalidE"]
            pub static aria_invalid: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10aria_labelE"]
            pub static aria_label: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15aria_labelledbyE"]
            pub static aria_labelledby: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10aria_levelE"]
            pub static aria_level: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9aria_liveE"]
            pub static aria_live: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10aria_modalE"]
            pub static aria_modal: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14aria_multilineE"]
            pub static aria_multiline: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20aria_multiselectableE"]
            pub static aria_multiselectable: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16aria_orientationE"]
            pub static aria_orientation: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9aria_ownsE"]
            pub static aria_owns: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13aria_posinsetE"]
            pub static aria_posinset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12aria_pressedE"]
            pub static aria_pressed: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13aria_readonlyE"]
            pub static aria_readonly: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13aria_relevantE"]
            pub static aria_relevant: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13aria_requiredE"]
            pub static aria_required: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13aria_rowcountE"]
            pub static aria_rowcount: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13aria_rowindexE"]
            pub static aria_rowindex: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13aria_selectedE"]
            pub static aria_selected: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12aria_setsizeE"]
            pub static aria_setsize: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9aria_sortE"]
            pub static aria_sort: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13aria_valuenowE"]
            pub static aria_valuenow: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13aria_valueminE"]
            pub static aria_valuemin: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13aria_valuemaxE"]
            pub static aria_valuemax: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14aria_valuetextE"]
            pub static aria_valuetext: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9AreaFrameE"]
            pub static AreaFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14auto_generatedE"]
            pub static auto_generated: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6bannerE"]
            pub static banner: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9checkableE"]
            pub static checkable: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7choicesE"]
            pub static choices: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12columnheaderE"]
            pub static columnheader: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13complementaryE"]
            pub static complementary: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms15containerAtomicE"]
            pub static containerAtomic: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13containerBusyE"]
            pub static containerBusy: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13containerLiveE"]
            pub static containerLive: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17containerLiveRoleE"]
            pub static containerLiveRole: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms17containerRelevantE"]
            pub static containerRelevant: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11contentinfoE"]
            pub static contentinfo: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6cyclesE"]
            pub static cycles: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9datatableE"]
            pub static datatable: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14eventFromInputE"]
            pub static eventFromInput: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7grammarE"]
            pub static grammar: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8gridcellE"]
            pub static gridcell: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7headingE"]
            pub static heading: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9hitregionE"]
            pub static hitregion: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16InlineBlockFrameE"]
            pub static InlineBlockFrame: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11inlinevalueE"]
            pub static inlinevalue: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7invalidE"]
            pub static invalid: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4itemE"]
            pub static item: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7itemsetE"]
            pub static itemset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10lineNumberE"]
            pub static lineNumber: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11linkedPanelE"]
            pub static linkedPanel: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms4liveE"]
            pub static live: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16menuitemcheckboxE"]
            pub static menuitemcheckbox: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13menuitemradioE"]
            pub static menuitemradio: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5mixedE"]
            pub static mixed: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9multilineE"]
            pub static multiline: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10navigationE"]
            pub static navigation: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6politeE"]
            pub static polite: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8posinsetE"]
            pub static posinset: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12presentationE"]
            pub static presentation: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11progressbarE"]
            pub static progressbar: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6regionE"]
            pub static region: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8rowgroupE"]
            pub static rowgroup: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9rowheaderE"]
            pub static rowheader: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6searchE"]
            pub static search: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9searchboxE"]
            pub static searchbox: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7select1E"]
            pub static select1: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7setsizeE"]
            pub static setsize: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8spellingE"]
            pub static spelling: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10spinbuttonE"]
            pub static spinbutton: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6statusE"]
            pub static status: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7_switchE"]
            pub static _switch: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14tableCellIndexE"]
            pub static tableCellIndex: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms7tablistE"]
            pub static tablist: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10textIndentE"]
            pub static textIndent: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13textInputTypeE"]
            pub static textInputType: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20textLineThroughColorE"]
            pub static textLineThroughColor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms20textLineThroughStyleE"]
            pub static textLineThroughStyle: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12textPositionE"]
            pub static textPosition: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18textUnderlineColorE"]
            pub static textUnderlineColor: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms18textUnderlineStyleE"]
            pub static textUnderlineStyle: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms5timerE"]
            pub static timer: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11toolbarnameE"]
            pub static toolbarname: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms16toolbarseparatorE"]
            pub static toolbarseparator: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13toolbarspacerE"]
            pub static toolbarspacer: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13toolbarspringE"]
            pub static toolbarspring: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8treegridE"]
            pub static treegrid: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10_undefinedE"]
            pub static _undefined: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8xmlrolesE"]
            pub static xmlroles: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11close_fenceE"]
            pub static close_fence: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11denominatorE"]
            pub static denominator: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9numeratorE"]
            pub static numerator: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10open_fenceE"]
            pub static open_fence: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10overscriptE"]
            pub static overscript: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12presubscriptE"]
            pub static presubscript: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms14presuperscriptE"]
            pub static presuperscript: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10root_indexE"]
            pub static root_index: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9subscriptE"]
            pub static subscript: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11superscriptE"]
            pub static superscript: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11underscriptE"]
            pub static underscript: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onaudiostartE"]
            pub static onaudiostart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onaudioendE"]
            pub static onaudioend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12onsoundstartE"]
            pub static onsoundstart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onsoundendE"]
            pub static onsoundend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13onspeechstartE"]
            pub static onspeechstart: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11onspeechendE"]
            pub static onspeechend: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8onresultE"]
            pub static onresult: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9onnomatchE"]
            pub static onnomatch: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8onresumeE"]
            pub static onresume: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms6onmarkE"]
            pub static onmark: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10onboundaryE"]
            pub static onboundary: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms8vr_stateE"]
            pub static vr_state: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms13usercontextidE"]
            pub static usercontextid: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11nsuri_xmlnsE"]
            pub static nsuri_xmlns: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9nsuri_xmlE"]
            pub static nsuri_xml: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11nsuri_xhtmlE"]
            pub static nsuri_xhtml: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms11nsuri_xlinkE"]
            pub static nsuri_xlink: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms10nsuri_xsltE"]
            pub static nsuri_xslt: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9nsuri_xblE"]
            pub static nsuri_xbl: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms12nsuri_mathmlE"]
            pub static nsuri_mathml: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9nsuri_rdfE"]
            pub static nsuri_rdf: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9nsuri_xulE"]
            pub static nsuri_xul: *mut nsIAtom;
            #[link_name = "_ZN9nsGkAtoms9nsuri_svgE"]
            pub static nsuri_svg: *mut nsIAtom;
        }
    } else if #[cfg(target_pointer_width = "64")] {
        extern {
            #[link_name = "?_empty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _empty: *mut nsIAtom;
            #[link_name = "?moz@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static moz: *mut nsIAtom;
            #[link_name = "?mozframetype@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozframetype: *mut nsIAtom;
            #[link_name = "?_moz_abspos@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_abspos: *mut nsIAtom;
            #[link_name = "?_moz_activated@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_activated: *mut nsIAtom;
            #[link_name = "?_moz_resizing@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_resizing: *mut nsIAtom;
            #[link_name = "?mozallowfullscreen@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozallowfullscreen: *mut nsIAtom;
            #[link_name = "?moztype@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static moztype: *mut nsIAtom;
            #[link_name = "?mozdirty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozdirty: *mut nsIAtom;
            #[link_name = "?mozdisallowselectionprint@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozdisallowselectionprint: *mut nsIAtom;
            #[link_name = "?mozdonotsend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozdonotsend: *mut nsIAtom;
            #[link_name = "?mozeditorbogusnode@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozeditorbogusnode: *mut nsIAtom;
            #[link_name = "?mozgeneratedcontentbefore@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozgeneratedcontentbefore: *mut nsIAtom;
            #[link_name = "?mozgeneratedcontentafter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozgeneratedcontentafter: *mut nsIAtom;
            #[link_name = "?mozgeneratedcontentimage@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozgeneratedcontentimage: *mut nsIAtom;
            #[link_name = "?mozquote@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozquote: *mut nsIAtom;
            #[link_name = "?mozsignature@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozsignature: *mut nsIAtom;
            #[link_name = "?_moz_is_glyph@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_is_glyph: *mut nsIAtom;
            #[link_name = "?_moz_original_size@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_original_size: *mut nsIAtom;
            #[link_name = "?_moz_target@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_target: *mut nsIAtom;
            #[link_name = "?menuactive@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static menuactive: *mut nsIAtom;
            #[link_name = "?_poundDefault@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _poundDefault: *mut nsIAtom;
            #[link_name = "?_asterisk@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _asterisk: *mut nsIAtom;
            #[link_name = "?a@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static a: *mut nsIAtom;
            #[link_name = "?abbr@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static abbr: *mut nsIAtom;
            #[link_name = "?abort@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static abort: *mut nsIAtom;
            #[link_name = "?above@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static above: *mut nsIAtom;
            #[link_name = "?acceltext@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static acceltext: *mut nsIAtom;
            #[link_name = "?accept@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static accept: *mut nsIAtom;
            #[link_name = "?acceptcharset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static acceptcharset: *mut nsIAtom;
            #[link_name = "?accesskey@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static accesskey: *mut nsIAtom;
            #[link_name = "?acronym@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static acronym: *mut nsIAtom;
            #[link_name = "?action@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static action: *mut nsIAtom;
            #[link_name = "?active@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static active: *mut nsIAtom;
            #[link_name = "?activetitlebarcolor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static activetitlebarcolor: *mut nsIAtom;
            #[link_name = "?activateontab@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static activateontab: *mut nsIAtom;
            #[link_name = "?actuate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static actuate: *mut nsIAtom;
            #[link_name = "?address@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static address: *mut nsIAtom;
            #[link_name = "?after@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static after: *mut nsIAtom;
            #[link_name = "?after_end@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static after_end: *mut nsIAtom;
            #[link_name = "?after_start@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static after_start: *mut nsIAtom;
            #[link_name = "?align@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static align: *mut nsIAtom;
            #[link_name = "?alink@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static alink: *mut nsIAtom;
            #[link_name = "?all@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static all: *mut nsIAtom;
            #[link_name = "?allowevents@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static allowevents: *mut nsIAtom;
            #[link_name = "?allownegativeassertions@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static allownegativeassertions: *mut nsIAtom;
            #[link_name = "?allowforms@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static allowforms: *mut nsIAtom;
            #[link_name = "?allowfullscreen@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static allowfullscreen: *mut nsIAtom;
            #[link_name = "?allowmodals@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static allowmodals: *mut nsIAtom;
            #[link_name = "?alloworientationlock@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static alloworientationlock: *mut nsIAtom;
            #[link_name = "?allowpointerlock@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static allowpointerlock: *mut nsIAtom;
            #[link_name = "?allowpopupstoescapesandbox@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static allowpopupstoescapesandbox: *mut nsIAtom;
            #[link_name = "?allowpopups@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static allowpopups: *mut nsIAtom;
            #[link_name = "?allowsameorigin@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static allowsameorigin: *mut nsIAtom;
            #[link_name = "?allowscripts@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static allowscripts: *mut nsIAtom;
            #[link_name = "?allowtopnavigation@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static allowtopnavigation: *mut nsIAtom;
            #[link_name = "?allowuntrusted@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static allowuntrusted: *mut nsIAtom;
            #[link_name = "?alt@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static alt: *mut nsIAtom;
            #[link_name = "?alternate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static alternate: *mut nsIAtom;
            #[link_name = "?always@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static always: *mut nsIAtom;
            #[link_name = "?ancestor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ancestor: *mut nsIAtom;
            #[link_name = "?ancestorOrSelf@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ancestorOrSelf: *mut nsIAtom;
            #[link_name = "?anchor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static anchor: *mut nsIAtom;
            #[link_name = "?_and@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _and: *mut nsIAtom;
            #[link_name = "?animations@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static animations: *mut nsIAtom;
            #[link_name = "?anonid@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static anonid: *mut nsIAtom;
            #[link_name = "?anonlocation@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static anonlocation: *mut nsIAtom;
            #[link_name = "?any@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static any: *mut nsIAtom;
            #[link_name = "?mozapp@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozapp: *mut nsIAtom;
            #[link_name = "?mozwidget@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozwidget: *mut nsIAtom;
            #[link_name = "?applet@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static applet: *mut nsIAtom;
            #[link_name = "?applyImports@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static applyImports: *mut nsIAtom;
            #[link_name = "?applyTemplates@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static applyTemplates: *mut nsIAtom;
            #[link_name = "?mozapptype@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozapptype: *mut nsIAtom;
            #[link_name = "?archive@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static archive: *mut nsIAtom;
            #[link_name = "?area@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static area: *mut nsIAtom;
            #[link_name = "?arrow@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static arrow: *mut nsIAtom;
            #[link_name = "?article@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static article: *mut nsIAtom;
            #[link_name = "?ascending@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ascending: *mut nsIAtom;
            #[link_name = "?aside@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aside: *mut nsIAtom;
            #[link_name = "?aspectRatio@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aspectRatio: *mut nsIAtom;
            #[link_name = "?assign@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static assign: *mut nsIAtom;
            #[link_name = "?async@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static async: *mut nsIAtom;
            #[link_name = "?attribute@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static attribute: *mut nsIAtom;
            #[link_name = "?attributes@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static attributes: *mut nsIAtom;
            #[link_name = "?attributeSet@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static attributeSet: *mut nsIAtom;
            #[link_name = "?aural@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aural: *mut nsIAtom;
            #[link_name = "?_auto@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _auto: *mut nsIAtom;
            #[link_name = "?autocheck@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static autocheck: *mut nsIAtom;
            #[link_name = "?autocomplete@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static autocomplete: *mut nsIAtom;
            #[link_name = "?autofocus@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static autofocus: *mut nsIAtom;
            #[link_name = "?autoplay@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static autoplay: *mut nsIAtom;
            #[link_name = "?autorepeatbutton@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static autorepeatbutton: *mut nsIAtom;
            #[link_name = "?axis@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static axis: *mut nsIAtom;
            #[link_name = "?b@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static b: *mut nsIAtom;
            #[link_name = "?backdropFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static backdropFrame: *mut nsIAtom;
            #[link_name = "?background@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static background: *mut nsIAtom;
            #[link_name = "?base@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static base: *mut nsIAtom;
            #[link_name = "?basefont@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static basefont: *mut nsIAtom;
            #[link_name = "?baseline@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static baseline: *mut nsIAtom;
            #[link_name = "?bdi@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bdi: *mut nsIAtom;
            #[link_name = "?bdo@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bdo: *mut nsIAtom;
            #[link_name = "?before@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static before: *mut nsIAtom;
            #[link_name = "?before_end@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static before_end: *mut nsIAtom;
            #[link_name = "?before_start@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static before_start: *mut nsIAtom;
            #[link_name = "?below@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static below: *mut nsIAtom;
            #[link_name = "?bgcolor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bgcolor: *mut nsIAtom;
            #[link_name = "?bgsound@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bgsound: *mut nsIAtom;
            #[link_name = "?big@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static big: *mut nsIAtom;
            #[link_name = "?binding@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static binding: *mut nsIAtom;
            #[link_name = "?bindings@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bindings: *mut nsIAtom;
            #[link_name = "?bindToUntrustedContent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bindToUntrustedContent: *mut nsIAtom;
            #[link_name = "?blankrow@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static blankrow: *mut nsIAtom;
            #[link_name = "?block@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static block: *mut nsIAtom;
            #[link_name = "?blockquote@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static blockquote: *mut nsIAtom;
            #[link_name = "?blur@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static blur: *mut nsIAtom;
            #[link_name = "?body@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static body: *mut nsIAtom;
            #[link_name = "?boolean@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static boolean: *mut nsIAtom;
            #[link_name = "?border@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static border: *mut nsIAtom;
            #[link_name = "?bordercolor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bordercolor: *mut nsIAtom;
            #[link_name = "?both@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static both: *mut nsIAtom;
            #[link_name = "?bottom@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bottom: *mut nsIAtom;
            #[link_name = "?bottomend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bottomend: *mut nsIAtom;
            #[link_name = "?bottomstart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bottomstart: *mut nsIAtom;
            #[link_name = "?bottomleft@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bottomleft: *mut nsIAtom;
            #[link_name = "?bottommargin@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bottommargin: *mut nsIAtom;
            #[link_name = "?bottompadding@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bottompadding: *mut nsIAtom;
            #[link_name = "?bottomright@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bottomright: *mut nsIAtom;
            #[link_name = "?box@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static box_: *mut nsIAtom;
            #[link_name = "?br@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static br: *mut nsIAtom;
            #[link_name = "?braille@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static braille: *mut nsIAtom;
            #[link_name = "?broadcast@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static broadcast: *mut nsIAtom;
            #[link_name = "?broadcaster@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static broadcaster: *mut nsIAtom;
            #[link_name = "?broadcasterset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static broadcasterset: *mut nsIAtom;
            #[link_name = "?browser@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static browser: *mut nsIAtom;
            #[link_name = "?mozbrowser@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozbrowser: *mut nsIAtom;
            #[link_name = "?bulletinboard@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bulletinboard: *mut nsIAtom;
            #[link_name = "?button@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static button: *mut nsIAtom;
            #[link_name = "?brighttitlebarforeground@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static brighttitlebarforeground: *mut nsIAtom;
            #[link_name = "?callTemplate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static callTemplate: *mut nsIAtom;
            #[link_name = "?cancel@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cancel: *mut nsIAtom;
            #[link_name = "?canvas@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static canvas: *mut nsIAtom;
            #[link_name = "?caption@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static caption: *mut nsIAtom;
            #[link_name = "?capture@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static capture: *mut nsIAtom;
            #[link_name = "?caseOrder@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static caseOrder: *mut nsIAtom;
            #[link_name = "?cdataSectionElements@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cdataSectionElements: *mut nsIAtom;
            #[link_name = "?ceiling@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ceiling: *mut nsIAtom;
            #[link_name = "?cell@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cell: *mut nsIAtom;
            #[link_name = "?cellpadding@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cellpadding: *mut nsIAtom;
            #[link_name = "?cellspacing@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cellspacing: *mut nsIAtom;
            #[link_name = "?center@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static center: *mut nsIAtom;
            #[link_name = "?ch@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ch: *mut nsIAtom;
            #[link_name = "?change@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static change: *mut nsIAtom;
            #[link_name = "?_char@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _char: *mut nsIAtom;
            #[link_name = "?characterData@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static characterData: *mut nsIAtom;
            #[link_name = "?charcode@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static charcode: *mut nsIAtom;
            #[link_name = "?charoff@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static charoff: *mut nsIAtom;
            #[link_name = "?charset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static charset: *mut nsIAtom;
            #[link_name = "?checkbox@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static checkbox: *mut nsIAtom;
            #[link_name = "?checked@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static checked: *mut nsIAtom;
            #[link_name = "?child@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static child: *mut nsIAtom;
            #[link_name = "?children@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static children: *mut nsIAtom;
            #[link_name = "?childList@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static childList: *mut nsIAtom;
            #[link_name = "?choose@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static choose: *mut nsIAtom;
            #[link_name = "?chromemargin@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static chromemargin: *mut nsIAtom;
            #[link_name = "?chromeOnlyContent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static chromeOnlyContent: *mut nsIAtom;
            #[link_name = "?exposeToUntrustedContent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static exposeToUntrustedContent: *mut nsIAtom;
            #[link_name = "?circ@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static circ: *mut nsIAtom;
            #[link_name = "?circle@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static circle: *mut nsIAtom;
            #[link_name = "?cite@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cite: *mut nsIAtom;
            #[link_name = "?_class@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _class: *mut nsIAtom;
            #[link_name = "?classid@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static classid: *mut nsIAtom;
            #[link_name = "?clear@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static clear: *mut nsIAtom;
            #[link_name = "?click@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static click: *mut nsIAtom;
            #[link_name = "?clickcount@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static clickcount: *mut nsIAtom;
            #[link_name = "?clickthrough@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static clickthrough: *mut nsIAtom;
            #[link_name = "?movetoclick@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static movetoclick: *mut nsIAtom;
            #[link_name = "?clip@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static clip: *mut nsIAtom;
            #[link_name = "?close@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static close: *mut nsIAtom;
            #[link_name = "?closed@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static closed: *mut nsIAtom;
            #[link_name = "?closemenu@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static closemenu: *mut nsIAtom;
            #[link_name = "?coalesceduplicatearcs@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static coalesceduplicatearcs: *mut nsIAtom;
            #[link_name = "?code@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static code: *mut nsIAtom;
            #[link_name = "?codebase@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static codebase: *mut nsIAtom;
            #[link_name = "?codetype@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static codetype: *mut nsIAtom;
            #[link_name = "?col@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static col: *mut nsIAtom;
            #[link_name = "?colgroup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static colgroup: *mut nsIAtom;
            #[link_name = "?collapse@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static collapse: *mut nsIAtom;
            #[link_name = "?collapsed@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static collapsed: *mut nsIAtom;
            #[link_name = "?color@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static color: *mut nsIAtom;
            #[link_name = "?colorIndex@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static colorIndex: *mut nsIAtom;
            #[link_name = "?cols@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cols: *mut nsIAtom;
            #[link_name = "?colspan@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static colspan: *mut nsIAtom;
            #[link_name = "?column@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static column: *mut nsIAtom;
            #[link_name = "?columns@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static columns: *mut nsIAtom;
            #[link_name = "?combobox@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static combobox: *mut nsIAtom;
            #[link_name = "?command@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static command: *mut nsIAtom;
            #[link_name = "?commands@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static commands: *mut nsIAtom;
            #[link_name = "?commandset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static commandset: *mut nsIAtom;
            #[link_name = "?commandupdate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static commandupdate: *mut nsIAtom;
            #[link_name = "?commandupdater@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static commandupdater: *mut nsIAtom;
            #[link_name = "?comment@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static comment: *mut nsIAtom;
            #[link_name = "?compact@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static compact: *mut nsIAtom;
            #[link_name = "?concat@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static concat: *mut nsIAtom;
            #[link_name = "?conditions@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static conditions: *mut nsIAtom;
            #[link_name = "?constructor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static constructor: *mut nsIAtom;
            #[link_name = "?consumeoutsideclicks@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static consumeoutsideclicks: *mut nsIAtom;
            #[link_name = "?container@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static container: *mut nsIAtom;
            #[link_name = "?containment@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static containment: *mut nsIAtom;
            #[link_name = "?contains@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static contains: *mut nsIAtom;
            #[link_name = "?content@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static content: *mut nsIAtom;
            #[link_name = "?contenteditable@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static contenteditable: *mut nsIAtom;
            #[link_name = "?headerContentDisposition@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static headerContentDisposition: *mut nsIAtom;
            #[link_name = "?headerContentLanguage@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static headerContentLanguage: *mut nsIAtom;
            #[link_name = "?contentLocation@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static contentLocation: *mut nsIAtom;
            #[link_name = "?headerContentScriptType@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static headerContentScriptType: *mut nsIAtom;
            #[link_name = "?headerContentStyleType@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static headerContentStyleType: *mut nsIAtom;
            #[link_name = "?headerContentType@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static headerContentType: *mut nsIAtom;
            #[link_name = "?consumeanchor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static consumeanchor: *mut nsIAtom;
            #[link_name = "?context@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static context: *mut nsIAtom;
            #[link_name = "?contextmenu@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static contextmenu: *mut nsIAtom;
            #[link_name = "?control@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static control: *mut nsIAtom;
            #[link_name = "?controls@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static controls: *mut nsIAtom;
            #[link_name = "?coords@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static coords: *mut nsIAtom;
            #[link_name = "?copy@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static copy: *mut nsIAtom;
            #[link_name = "?copyOf@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static copyOf: *mut nsIAtom;
            #[link_name = "?count@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static count: *mut nsIAtom;
            #[link_name = "?crop@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static crop: *mut nsIAtom;
            #[link_name = "?crossorigin@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static crossorigin: *mut nsIAtom;
            #[link_name = "?curpos@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static curpos: *mut nsIAtom;
            #[link_name = "?current@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static current: *mut nsIAtom;
            #[link_name = "?cycler@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cycler: *mut nsIAtom;
            #[link_name = "?data@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static data: *mut nsIAtom;
            #[link_name = "?datalist@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static datalist: *mut nsIAtom;
            #[link_name = "?dataType@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dataType: *mut nsIAtom;
            #[link_name = "?dateTime@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dateTime: *mut nsIAtom;
            #[link_name = "?datasources@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static datasources: *mut nsIAtom;
            #[link_name = "?datetime@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static datetime: *mut nsIAtom;
            #[link_name = "?dblclick@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dblclick: *mut nsIAtom;
            #[link_name = "?dd@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dd: *mut nsIAtom;
            #[link_name = "?debug@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static debug: *mut nsIAtom;
            #[link_name = "?decimalFormat@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static decimalFormat: *mut nsIAtom;
            #[link_name = "?decimalSeparator@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static decimalSeparator: *mut nsIAtom;
            #[link_name = "?deck@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static deck: *mut nsIAtom;
            #[link_name = "?declare@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static declare: *mut nsIAtom;
            #[link_name = "?decoderDoctor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static decoderDoctor: *mut nsIAtom;
            #[link_name = "?decrement@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static decrement: *mut nsIAtom;
            #[link_name = "?_default@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _default: *mut nsIAtom;
            #[link_name = "?headerDefaultStyle@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static headerDefaultStyle: *mut nsIAtom;
            #[link_name = "?defaultAction@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static defaultAction: *mut nsIAtom;
            #[link_name = "?defaultchecked@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static defaultchecked: *mut nsIAtom;
            #[link_name = "?defaultLabel@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static defaultLabel: *mut nsIAtom;
            #[link_name = "?defaultselected@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static defaultselected: *mut nsIAtom;
            #[link_name = "?defaultvalue@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static defaultvalue: *mut nsIAtom;
            #[link_name = "?defaultplaybackrate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static defaultplaybackrate: *mut nsIAtom;
            #[link_name = "?defer@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static defer: *mut nsIAtom;
            #[link_name = "?del@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static del: *mut nsIAtom;
            #[link_name = "?descendant@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static descendant: *mut nsIAtom;
            #[link_name = "?descendantOrSelf@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static descendantOrSelf: *mut nsIAtom;
            #[link_name = "?descending@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static descending: *mut nsIAtom;
            #[link_name = "?description@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static description: *mut nsIAtom;
            #[link_name = "?destructor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static destructor: *mut nsIAtom;
            #[link_name = "?details@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static details: *mut nsIAtom;
            #[link_name = "?deviceAspectRatio@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static deviceAspectRatio: *mut nsIAtom;
            #[link_name = "?deviceHeight@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static deviceHeight: *mut nsIAtom;
            #[link_name = "?devicePixelRatio@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static devicePixelRatio: *mut nsIAtom;
            #[link_name = "?deviceWidth@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static deviceWidth: *mut nsIAtom;
            #[link_name = "?dfn@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dfn: *mut nsIAtom;
            #[link_name = "?dialog@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dialog: *mut nsIAtom;
            #[link_name = "?difference@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static difference: *mut nsIAtom;
            #[link_name = "?digit@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static digit: *mut nsIAtom;
            #[link_name = "?dir@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dir: *mut nsIAtom;
            #[link_name = "?dirAutoSetBy@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dirAutoSetBy: *mut nsIAtom;
            #[link_name = "?directionality@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static directionality: *mut nsIAtom;
            #[link_name = "?directory@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static directory: *mut nsIAtom;
            #[link_name = "?disableOutputEscaping@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static disableOutputEscaping: *mut nsIAtom;
            #[link_name = "?disabled@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static disabled: *mut nsIAtom;
            #[link_name = "?disableglobalhistory@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static disableglobalhistory: *mut nsIAtom;
            #[link_name = "?disablehistory@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static disablehistory: *mut nsIAtom;
            #[link_name = "?display@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static display: *mut nsIAtom;
            #[link_name = "?displayMode@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static displayMode: *mut nsIAtom;
            #[link_name = "?distinct@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static distinct: *mut nsIAtom;
            #[link_name = "?div@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static div: *mut nsIAtom;
            #[link_name = "?dl@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dl: *mut nsIAtom;
            #[link_name = "?doctypePublic@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static doctypePublic: *mut nsIAtom;
            #[link_name = "?doctypeSystem@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static doctypeSystem: *mut nsIAtom;
            #[link_name = "?document@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static document: *mut nsIAtom;
            #[link_name = "?download@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static download: *mut nsIAtom;
            #[link_name = "?DOMAttrModified@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static DOMAttrModified: *mut nsIAtom;
            #[link_name = "?DOMCharacterDataModified@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static DOMCharacterDataModified: *mut nsIAtom;
            #[link_name = "?DOMNodeInserted@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static DOMNodeInserted: *mut nsIAtom;
            #[link_name = "?DOMNodeInsertedIntoDocument@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static DOMNodeInsertedIntoDocument: *mut nsIAtom;
            #[link_name = "?DOMNodeRemoved@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static DOMNodeRemoved: *mut nsIAtom;
            #[link_name = "?DOMNodeRemovedFromDocument@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static DOMNodeRemovedFromDocument: *mut nsIAtom;
            #[link_name = "?DOMSubtreeModified@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static DOMSubtreeModified: *mut nsIAtom;
            #[link_name = "?double_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static double_: *mut nsIAtom;
            #[link_name = "?drag@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static drag: *mut nsIAtom;
            #[link_name = "?dragdrop@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dragdrop: *mut nsIAtom;
            #[link_name = "?dragend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dragend: *mut nsIAtom;
            #[link_name = "?dragenter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dragenter: *mut nsIAtom;
            #[link_name = "?dragevent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dragevent: *mut nsIAtom;
            #[link_name = "?dragexit@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dragexit: *mut nsIAtom;
            #[link_name = "?draggable@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static draggable: *mut nsIAtom;
            #[link_name = "?draggesture@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static draggesture: *mut nsIAtom;
            #[link_name = "?dragging@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dragging: *mut nsIAtom;
            #[link_name = "?dragleave@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dragleave: *mut nsIAtom;
            #[link_name = "?dragover@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dragover: *mut nsIAtom;
            #[link_name = "?dragSession@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dragSession: *mut nsIAtom;
            #[link_name = "?dragstart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dragstart: *mut nsIAtom;
            #[link_name = "?drawintitlebar@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static drawintitlebar: *mut nsIAtom;
            #[link_name = "?drawtitle@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static drawtitle: *mut nsIAtom;
            #[link_name = "?drop@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static drop: *mut nsIAtom;
            #[link_name = "?dropAfter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dropAfter: *mut nsIAtom;
            #[link_name = "?dropBefore@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dropBefore: *mut nsIAtom;
            #[link_name = "?dropOn@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dropOn: *mut nsIAtom;
            #[link_name = "?dropMarker@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dropMarker: *mut nsIAtom;
            #[link_name = "?dt@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dt: *mut nsIAtom;
            #[link_name = "?editable@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static editable: *mut nsIAtom;
            #[link_name = "?editing@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static editing: *mut nsIAtom;
            #[link_name = "?editor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static editor: *mut nsIAtom;
            #[link_name = "?editorDisplayList@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static editorDisplayList: *mut nsIAtom;
            #[link_name = "?element@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static element: *mut nsIAtom;
            #[link_name = "?elementAvailable@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static elementAvailable: *mut nsIAtom;
            #[link_name = "?elements@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static elements: *mut nsIAtom;
            #[link_name = "?em@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static em: *mut nsIAtom;
            #[link_name = "?embed@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static embed: *mut nsIAtom;
            #[link_name = "?embossed@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static embossed: *mut nsIAtom;
            #[link_name = "?empty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static empty: *mut nsIAtom;
            #[link_name = "?encoding@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static encoding: *mut nsIAtom;
            #[link_name = "?enctype@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static enctype: *mut nsIAtom;
            #[link_name = "?end@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static end: *mut nsIAtom;
            #[link_name = "?endEvent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static endEvent: *mut nsIAtom;
            #[link_name = "?end_after@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static end_after: *mut nsIAtom;
            #[link_name = "?end_before@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static end_before: *mut nsIAtom;
            #[link_name = "?equalsize@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static equalsize: *mut nsIAtom;
            #[link_name = "?error@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static error: *mut nsIAtom;
            #[link_name = "?even@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static even: *mut nsIAtom;
            #[link_name = "?event@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static event: *mut nsIAtom;
            #[link_name = "?events@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static events: *mut nsIAtom;
            #[link_name = "?excludeResultPrefixes@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static excludeResultPrefixes: *mut nsIAtom;
            #[link_name = "?excludes@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static excludes: *mut nsIAtom;
            #[link_name = "?expr@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static expr: *mut nsIAtom;
            #[link_name = "?extends@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static extends: *mut nsIAtom;
            #[link_name = "?extensionElementPrefixes@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static extensionElementPrefixes: *mut nsIAtom;
            #[link_name = "?face@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static face: *mut nsIAtom;
            #[link_name = "?fallback@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fallback: *mut nsIAtom;
            #[link_name = "?_false@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _false: *mut nsIAtom;
            #[link_name = "?farthest@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static farthest: *mut nsIAtom;
            #[link_name = "?field@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static field: *mut nsIAtom;
            #[link_name = "?fieldset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fieldset: *mut nsIAtom;
            #[link_name = "?figcaption@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static figcaption: *mut nsIAtom;
            #[link_name = "?figure@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static figure: *mut nsIAtom;
            #[link_name = "?fixed@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fixed: *mut nsIAtom;
            #[link_name = "?flags@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static flags: *mut nsIAtom;
            #[link_name = "?flex@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static flex: *mut nsIAtom;
            #[link_name = "?flexgroup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static flexgroup: *mut nsIAtom;
            #[link_name = "?flip@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static flip: *mut nsIAtom;
            #[link_name = "?floating@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static floating: *mut nsIAtom;
            #[link_name = "?floor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static floor: *mut nsIAtom;
            #[link_name = "?flowlength@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static flowlength: *mut nsIAtom;
            #[link_name = "?focus@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static focus: *mut nsIAtom;
            #[link_name = "?focused@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static focused: *mut nsIAtom;
            #[link_name = "?following@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static following: *mut nsIAtom;
            #[link_name = "?followingSibling@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static followingSibling: *mut nsIAtom;
            #[link_name = "?font@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static font: *mut nsIAtom;
            #[link_name = "?fontWeight@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fontWeight: *mut nsIAtom;
            #[link_name = "?fontpicker@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fontpicker: *mut nsIAtom;
            #[link_name = "?footer@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static footer: *mut nsIAtom;
            #[link_name = "?_for@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _for: *mut nsIAtom;
            #[link_name = "?forEach@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static forEach: *mut nsIAtom;
            #[link_name = "?forceOwnRefreshDriver@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static forceOwnRefreshDriver: *mut nsIAtom;
            #[link_name = "?form@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static form: *mut nsIAtom;
            #[link_name = "?formaction@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static formaction: *mut nsIAtom;
            #[link_name = "?format@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static format: *mut nsIAtom;
            #[link_name = "?formatNumber@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static formatNumber: *mut nsIAtom;
            #[link_name = "?formenctype@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static formenctype: *mut nsIAtom;
            #[link_name = "?formmethod@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static formmethod: *mut nsIAtom;
            #[link_name = "?formnovalidate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static formnovalidate: *mut nsIAtom;
            #[link_name = "?formtarget@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static formtarget: *mut nsIAtom;
            #[link_name = "?frame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static frame: *mut nsIAtom;
            #[link_name = "?frameborder@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static frameborder: *mut nsIAtom;
            #[link_name = "?frameset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static frameset: *mut nsIAtom;
            #[link_name = "?from@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static from: *mut nsIAtom;
            #[link_name = "?fullscreenchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fullscreenchange: *mut nsIAtom;
            #[link_name = "?fullscreenerror@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fullscreenerror: *mut nsIAtom;
            #[link_name = "?functionAvailable@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static functionAvailable: *mut nsIAtom;
            #[link_name = "?generateId@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static generateId: *mut nsIAtom;
            #[link_name = "?getter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static getter: *mut nsIAtom;
            #[link_name = "?glyphchar@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static glyphchar: *mut nsIAtom;
            #[link_name = "?glyphid@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static glyphid: *mut nsIAtom;
            #[link_name = "?grid@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static grid: *mut nsIAtom;
            #[link_name = "?grippy@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static grippy: *mut nsIAtom;
            #[link_name = "?group@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static group: *mut nsIAtom;
            #[link_name = "?groupingSeparator@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static groupingSeparator: *mut nsIAtom;
            #[link_name = "?groupingSize@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static groupingSize: *mut nsIAtom;
            #[link_name = "?grow@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static grow: *mut nsIAtom;
            #[link_name = "?gutter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static gutter: *mut nsIAtom;
            #[link_name = "?h1@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static h1: *mut nsIAtom;
            #[link_name = "?h2@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static h2: *mut nsIAtom;
            #[link_name = "?h3@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static h3: *mut nsIAtom;
            #[link_name = "?h4@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static h4: *mut nsIAtom;
            #[link_name = "?h5@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static h5: *mut nsIAtom;
            #[link_name = "?h6@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static h6: *mut nsIAtom;
            #[link_name = "?handheld@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static handheld: *mut nsIAtom;
            #[link_name = "?handheldFriendly@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static handheldFriendly: *mut nsIAtom;
            #[link_name = "?handler@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static handler: *mut nsIAtom;
            #[link_name = "?handlers@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static handlers: *mut nsIAtom;
            #[link_name = "?HARD@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static HARD: *mut nsIAtom;
            #[link_name = "?hasSameNode@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static hasSameNode: *mut nsIAtom;
            #[link_name = "?hbox@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static hbox: *mut nsIAtom;
            #[link_name = "?head@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static head: *mut nsIAtom;
            #[link_name = "?header@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static header: *mut nsIAtom;
            #[link_name = "?headers@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static headers: *mut nsIAtom;
            #[link_name = "?height@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static height: *mut nsIAtom;
            #[link_name = "?hgroup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static hgroup: *mut nsIAtom;
            #[link_name = "?hidden@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static hidden: *mut nsIAtom;
            #[link_name = "?hidechrome@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static hidechrome: *mut nsIAtom;
            #[link_name = "?hidecolumnpicker@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static hidecolumnpicker: *mut nsIAtom;
            #[link_name = "?high@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static high: *mut nsIAtom;
            #[link_name = "?highest@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static highest: *mut nsIAtom;
            #[link_name = "?horizontal@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static horizontal: *mut nsIAtom;
            #[link_name = "?hover@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static hover: *mut nsIAtom;
            #[link_name = "?hr@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static hr: *mut nsIAtom;
            #[link_name = "?href@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static href: *mut nsIAtom;
            #[link_name = "?hreflang@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static hreflang: *mut nsIAtom;
            #[link_name = "?hspace@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static hspace: *mut nsIAtom;
            #[link_name = "?html@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static html: *mut nsIAtom;
            #[link_name = "?httpEquiv@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static httpEquiv: *mut nsIAtom;
            #[link_name = "?i@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static i: *mut nsIAtom;
            #[link_name = "?icon@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static icon: *mut nsIAtom;
            #[link_name = "?id@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static id: *mut nsIAtom;
            #[link_name = "?_if@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _if: *mut nsIAtom;
            #[link_name = "?iframe@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static iframe: *mut nsIAtom;
            #[link_name = "?ignorecase@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ignorecase: *mut nsIAtom;
            #[link_name = "?ignorekeys@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ignorekeys: *mut nsIAtom;
            #[link_name = "?ignoreuserfocus@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ignoreuserfocus: *mut nsIAtom;
            #[link_name = "?ilayer@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ilayer: *mut nsIAtom;
            #[link_name = "?image@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static image: *mut nsIAtom;
            #[link_name = "?imageClickedPoint@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static imageClickedPoint: *mut nsIAtom;
            #[link_name = "?img@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static img: *mut nsIAtom;
            #[link_name = "?implementation@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static implementation: *mut nsIAtom;
            #[link_name = "?implements@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static implements: *mut nsIAtom;
            #[link_name = "?import@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static import: *mut nsIAtom;
            #[link_name = "?inactivetitlebarcolor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static inactivetitlebarcolor: *mut nsIAtom;
            #[link_name = "?include@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static include: *mut nsIAtom;
            #[link_name = "?includes@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static includes: *mut nsIAtom;
            #[link_name = "?increment@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static increment: *mut nsIAtom;
            #[link_name = "?indent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static indent: *mut nsIAtom;
            #[link_name = "?indeterminate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static indeterminate: *mut nsIAtom;
            #[link_name = "?index@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static index: *mut nsIAtom;
            #[link_name = "?infer@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static infer: *mut nsIAtom;
            #[link_name = "?infinity@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static infinity: *mut nsIAtom;
            #[link_name = "?inherit@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static inherit: *mut nsIAtom;
            #[link_name = "?inherits@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static inherits: *mut nsIAtom;
            #[link_name = "?inheritstyle@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static inheritstyle: *mut nsIAtom;
            #[link_name = "?initial_scale@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static initial_scale: *mut nsIAtom;
            #[link_name = "?input@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static input: *mut nsIAtom;
            #[link_name = "?inputmode@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static inputmode: *mut nsIAtom;
            #[link_name = "?ins@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ins: *mut nsIAtom;
            #[link_name = "?insertafter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static insertafter: *mut nsIAtom;
            #[link_name = "?insertbefore@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static insertbefore: *mut nsIAtom;
            #[link_name = "?install@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static install: *mut nsIAtom;
            #[link_name = "?instanceOf@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static instanceOf: *mut nsIAtom;
            #[link_name = "?int32@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static int32: *mut nsIAtom;
            #[link_name = "?int64@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static int64: *mut nsIAtom;
            #[link_name = "?integer@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static integer: *mut nsIAtom;
            #[link_name = "?integrity@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static integrity: *mut nsIAtom;
            #[link_name = "?intersection@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static intersection: *mut nsIAtom;
            #[link_name = "?is@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static is: *mut nsIAtom;
            #[link_name = "?iscontainer@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static iscontainer: *mut nsIAtom;
            #[link_name = "?isempty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static isempty: *mut nsIAtom;
            #[link_name = "?ismap@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ismap: *mut nsIAtom;
            #[link_name = "?itemid@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static itemid: *mut nsIAtom;
            #[link_name = "?itemprop@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static itemprop: *mut nsIAtom;
            #[link_name = "?itemref@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static itemref: *mut nsIAtom;
            #[link_name = "?itemscope@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static itemscope: *mut nsIAtom;
            #[link_name = "?itemtype@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static itemtype: *mut nsIAtom;
            #[link_name = "?kbd@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static kbd: *mut nsIAtom;
            #[link_name = "?keepcurrentinview@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static keepcurrentinview: *mut nsIAtom;
            #[link_name = "?keepobjectsalive@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static keepobjectsalive: *mut nsIAtom;
            #[link_name = "?key@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static key: *mut nsIAtom;
            #[link_name = "?keycode@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static keycode: *mut nsIAtom;
            #[link_name = "?keystatuseschange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static keystatuseschange: *mut nsIAtom;
            #[link_name = "?keydown@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static keydown: *mut nsIAtom;
            #[link_name = "?keygen@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static keygen: *mut nsIAtom;
            #[link_name = "?keypress@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static keypress: *mut nsIAtom;
            #[link_name = "?keyset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static keyset: *mut nsIAtom;
            #[link_name = "?keysystem@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static keysystem: *mut nsIAtom;
            #[link_name = "?keytext@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static keytext: *mut nsIAtom;
            #[link_name = "?keyup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static keyup: *mut nsIAtom;
            #[link_name = "?kind@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static kind: *mut nsIAtom;
            #[link_name = "?label@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static label: *mut nsIAtom;
            #[link_name = "?lang@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lang: *mut nsIAtom;
            #[link_name = "?language@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static language: *mut nsIAtom;
            #[link_name = "?last@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static last: *mut nsIAtom;
            #[link_name = "?layer@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static layer: *mut nsIAtom;
            #[link_name = "?LayerActivity@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static LayerActivity: *mut nsIAtom;
            #[link_name = "?layout@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static layout: *mut nsIAtom;
            #[link_name = "?leading@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static leading: *mut nsIAtom;
            #[link_name = "?leaf@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static leaf: *mut nsIAtom;
            #[link_name = "?left@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static left: *mut nsIAtom;
            #[link_name = "?leftmargin@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static leftmargin: *mut nsIAtom;
            #[link_name = "?leftpadding@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static leftpadding: *mut nsIAtom;
            #[link_name = "?legend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static legend: *mut nsIAtom;
            #[link_name = "?length@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static length: *mut nsIAtom;
            #[link_name = "?letterValue@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static letterValue: *mut nsIAtom;
            #[link_name = "?level@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static level: *mut nsIAtom;
            #[link_name = "?li@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static li: *mut nsIAtom;
            #[link_name = "?line@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static line: *mut nsIAtom;
            #[link_name = "?link@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static link: *mut nsIAtom;
            #[link_name = "?list@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static list: *mut nsIAtom;
            #[link_name = "?listbox@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static listbox: *mut nsIAtom;
            #[link_name = "?listboxbody@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static listboxbody: *mut nsIAtom;
            #[link_name = "?listcell@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static listcell: *mut nsIAtom;
            #[link_name = "?listcol@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static listcol: *mut nsIAtom;
            #[link_name = "?listcols@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static listcols: *mut nsIAtom;
            #[link_name = "?listener@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static listener: *mut nsIAtom;
            #[link_name = "?listhead@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static listhead: *mut nsIAtom;
            #[link_name = "?listheader@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static listheader: *mut nsIAtom;
            #[link_name = "?listing@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static listing: *mut nsIAtom;
            #[link_name = "?listitem@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static listitem: *mut nsIAtom;
            #[link_name = "?listrows@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static listrows: *mut nsIAtom;
            #[link_name = "?load@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static load: *mut nsIAtom;
            #[link_name = "?localedir@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static localedir: *mut nsIAtom;
            #[link_name = "?localName@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static localName: *mut nsIAtom;
            #[link_name = "?longdesc@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static longdesc: *mut nsIAtom;
            #[link_name = "?loop@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static loop_: *mut nsIAtom;
            #[link_name = "?low@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static low: *mut nsIAtom;
            #[link_name = "?lowerFirst@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lowerFirst: *mut nsIAtom;
            #[link_name = "?lowest@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lowest: *mut nsIAtom;
            #[link_name = "?lowsrc@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lowsrc: *mut nsIAtom;
            #[link_name = "?ltr@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ltr: *mut nsIAtom;
            #[link_name = "?lwtheme@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lwtheme: *mut nsIAtom;
            #[link_name = "?lwthemetextcolor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lwthemetextcolor: *mut nsIAtom;
            #[link_name = "?main@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static main: *mut nsIAtom;
            #[link_name = "?map@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static map: *mut nsIAtom;
            #[link_name = "?manifest@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static manifest: *mut nsIAtom;
            #[link_name = "?marginBottom@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static marginBottom: *mut nsIAtom;
            #[link_name = "?marginLeft@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static marginLeft: *mut nsIAtom;
            #[link_name = "?marginRight@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static marginRight: *mut nsIAtom;
            #[link_name = "?marginTop@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static marginTop: *mut nsIAtom;
            #[link_name = "?marginheight@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static marginheight: *mut nsIAtom;
            #[link_name = "?marginwidth@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static marginwidth: *mut nsIAtom;
            #[link_name = "?mark@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mark: *mut nsIAtom;
            #[link_name = "?marquee@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static marquee: *mut nsIAtom;
            #[link_name = "?match@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static match_: *mut nsIAtom;
            #[link_name = "?max@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static max: *mut nsIAtom;
            #[link_name = "?maxheight@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static maxheight: *mut nsIAtom;
            #[link_name = "?maximum_scale@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static maximum_scale: *mut nsIAtom;
            #[link_name = "?maxlength@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static maxlength: *mut nsIAtom;
            #[link_name = "?maxpos@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static maxpos: *mut nsIAtom;
            #[link_name = "?maxwidth@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static maxwidth: *mut nsIAtom;
            #[link_name = "?mayscript@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mayscript: *mut nsIAtom;
            #[link_name = "?media@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static media: *mut nsIAtom;
            #[link_name = "?mediaType@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mediaType: *mut nsIAtom;
            #[link_name = "?member@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static member: *mut nsIAtom;
            #[link_name = "?menu@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static menu: *mut nsIAtom;
            #[link_name = "?menubar@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static menubar: *mut nsIAtom;
            #[link_name = "?menubutton@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static menubutton: *mut nsIAtom;
            #[link_name = "?menuButton@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static menuButton: *mut nsIAtom;
            #[link_name = "?menugroup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static menugroup: *mut nsIAtom;
            #[link_name = "?menuitem@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static menuitem: *mut nsIAtom;
            #[link_name = "?menulist@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static menulist: *mut nsIAtom;
            #[link_name = "?menupopup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static menupopup: *mut nsIAtom;
            #[link_name = "?menuseparator@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static menuseparator: *mut nsIAtom;
            #[link_name = "?message@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static message: *mut nsIAtom;
            #[link_name = "?meta@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static meta: *mut nsIAtom;
            #[link_name = "?referrer@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static referrer: *mut nsIAtom;
            #[link_name = "?referrerpolicy@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static referrerpolicy: *mut nsIAtom;
            #[link_name = "?meter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static meter: *mut nsIAtom;
            #[link_name = "?method@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static method: *mut nsIAtom;
            #[link_name = "?middle@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static middle: *mut nsIAtom;
            #[link_name = "?min@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static min: *mut nsIAtom;
            #[link_name = "?minheight@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static minheight: *mut nsIAtom;
            #[link_name = "?minimum_scale@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static minimum_scale: *mut nsIAtom;
            #[link_name = "?minpos@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static minpos: *mut nsIAtom;
            #[link_name = "?minusSign@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static minusSign: *mut nsIAtom;
            #[link_name = "?minwidth@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static minwidth: *mut nsIAtom;
            #[link_name = "?_mixed@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _mixed: *mut nsIAtom;
            #[link_name = "?messagemanagergroup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static messagemanagergroup: *mut nsIAtom;
            #[link_name = "?mod@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mod_: *mut nsIAtom;
            #[link_name = "?mode@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mode: *mut nsIAtom;
            #[link_name = "?modifiers@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static modifiers: *mut nsIAtom;
            #[link_name = "?monochrome@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static monochrome: *mut nsIAtom;
            #[link_name = "?mousedown@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mousedown: *mut nsIAtom;
            #[link_name = "?mousemove@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mousemove: *mut nsIAtom;
            #[link_name = "?mouseout@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mouseout: *mut nsIAtom;
            #[link_name = "?mouseover@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mouseover: *mut nsIAtom;
            #[link_name = "?mousethrough@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mousethrough: *mut nsIAtom;
            #[link_name = "?mouseup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mouseup: *mut nsIAtom;
            #[link_name = "?mozaudiochannel@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozaudiochannel: *mut nsIAtom;
            #[link_name = "?mozfullscreenchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozfullscreenchange: *mut nsIAtom;
            #[link_name = "?mozfullscreenerror@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozfullscreenerror: *mut nsIAtom;
            #[link_name = "?mozpasspointerevents@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozpasspointerevents: *mut nsIAtom;
            #[link_name = "?mozpointerlockchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozpointerlockchange: *mut nsIAtom;
            #[link_name = "?mozpointerlockerror@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozpointerlockerror: *mut nsIAtom;
            #[link_name = "?mozprivatebrowsing@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozprivatebrowsing: *mut nsIAtom;
            #[link_name = "?moz_opaque@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static moz_opaque: *mut nsIAtom;
            #[link_name = "?moz_action_hint@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static moz_action_hint: *mut nsIAtom;
            #[link_name = "?x_moz_errormessage@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_moz_errormessage: *mut nsIAtom;
            #[link_name = "?msthemecompatible@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static msthemecompatible: *mut nsIAtom;
            #[link_name = "?multicol@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static multicol: *mut nsIAtom;
            #[link_name = "?multiple@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static multiple: *mut nsIAtom;
            #[link_name = "?muted@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static muted: *mut nsIAtom;
            #[link_name = "?name@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static name: *mut nsIAtom;
            #[link_name = "?_namespace@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _namespace: *mut nsIAtom;
            #[link_name = "?namespaceAlias@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static namespaceAlias: *mut nsIAtom;
            #[link_name = "?namespaceUri@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static namespaceUri: *mut nsIAtom;
            #[link_name = "?NaN@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static NaN: *mut nsIAtom;
            #[link_name = "?nativeAnonymousChildList@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nativeAnonymousChildList: *mut nsIAtom;
            #[link_name = "?nav@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nav: *mut nsIAtom;
            #[link_name = "?negate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static negate: *mut nsIAtom;
            #[link_name = "?never@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static never: *mut nsIAtom;
            #[link_name = "?_new@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _new: *mut nsIAtom;
            #[link_name = "?newline@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static newline: *mut nsIAtom;
            #[link_name = "?nextBidi@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nextBidi: *mut nsIAtom;
            #[link_name = "?no@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static no: *mut nsIAtom;
            #[link_name = "?noautofocus@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static noautofocus: *mut nsIAtom;
            #[link_name = "?noautohide@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static noautohide: *mut nsIAtom;
            #[link_name = "?norolluponanchor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static norolluponanchor: *mut nsIAtom;
            #[link_name = "?nobr@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nobr: *mut nsIAtom;
            #[link_name = "?node@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static node: *mut nsIAtom;
            #[link_name = "?nodefaultsrc@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nodefaultsrc: *mut nsIAtom;
            #[link_name = "?nodeSet@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nodeSet: *mut nsIAtom;
            #[link_name = "?noembed@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static noembed: *mut nsIAtom;
            #[link_name = "?noframes@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static noframes: *mut nsIAtom;
            #[link_name = "?nohref@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nohref: *mut nsIAtom;
            #[link_name = "?noisolation@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static noisolation: *mut nsIAtom;
            #[link_name = "?nonce@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nonce: *mut nsIAtom;
            #[link_name = "?none@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static none: *mut nsIAtom;
            #[link_name = "?noresize@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static noresize: *mut nsIAtom;
            #[link_name = "?normal@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static normal: *mut nsIAtom;
            #[link_name = "?normalizeSpace@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static normalizeSpace: *mut nsIAtom;
            #[link_name = "?noscript@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static noscript: *mut nsIAtom;
            #[link_name = "?noshade@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static noshade: *mut nsIAtom;
            #[link_name = "?novalidate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static novalidate: *mut nsIAtom;
            #[link_name = "?_not@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _not: *mut nsIAtom;
            #[link_name = "?nowrap@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nowrap: *mut nsIAtom;
            #[link_name = "?number@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static number: *mut nsIAtom;
            #[link_name = "?null@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static null: *mut nsIAtom;
            #[link_name = "?object@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static object: *mut nsIAtom;
            #[link_name = "?objectType@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static objectType: *mut nsIAtom;
            #[link_name = "?observer@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static observer: *mut nsIAtom;
            #[link_name = "?observes@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static observes: *mut nsIAtom;
            #[link_name = "?odd@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static odd: *mut nsIAtom;
            #[link_name = "?OFF@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static OFF: *mut nsIAtom;
            #[link_name = "?ol@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ol: *mut nsIAtom;
            #[link_name = "?omitXmlDeclaration@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static omitXmlDeclaration: *mut nsIAtom;
            #[link_name = "?ona2dpstatuschanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ona2dpstatuschanged: *mut nsIAtom;
            #[link_name = "?onabort@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onabort: *mut nsIAtom;
            #[link_name = "?onmozaccesskeynotfound@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmozaccesskeynotfound: *mut nsIAtom;
            #[link_name = "?onactivate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onactivate: *mut nsIAtom;
            #[link_name = "?onadapteradded@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onadapteradded: *mut nsIAtom;
            #[link_name = "?onadapterremoved@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onadapterremoved: *mut nsIAtom;
            #[link_name = "?onafterprint@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onafterprint: *mut nsIAtom;
            #[link_name = "?onafterscriptexecute@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onafterscriptexecute: *mut nsIAtom;
            #[link_name = "?onalerting@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onalerting: *mut nsIAtom;
            #[link_name = "?onanimationend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onanimationend: *mut nsIAtom;
            #[link_name = "?onanimationiteration@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onanimationiteration: *mut nsIAtom;
            #[link_name = "?onanimationstart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onanimationstart: *mut nsIAtom;
            #[link_name = "?onantennaavailablechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onantennaavailablechange: *mut nsIAtom;
            #[link_name = "?onAppCommand@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onAppCommand: *mut nsIAtom;
            #[link_name = "?onattributechanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onattributechanged: *mut nsIAtom;
            #[link_name = "?onattributereadreq@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onattributereadreq: *mut nsIAtom;
            #[link_name = "?onattributewritereq@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onattributewritereq: *mut nsIAtom;
            #[link_name = "?onaudioprocess@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onaudioprocess: *mut nsIAtom;
            #[link_name = "?onbeforecopy@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onbeforecopy: *mut nsIAtom;
            #[link_name = "?onbeforecut@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onbeforecut: *mut nsIAtom;
            #[link_name = "?onbeforepaste@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onbeforepaste: *mut nsIAtom;
            #[link_name = "?onbeforeevicted@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onbeforeevicted: *mut nsIAtom;
            #[link_name = "?onbeforeprint@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onbeforeprint: *mut nsIAtom;
            #[link_name = "?onbeforescriptexecute@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onbeforescriptexecute: *mut nsIAtom;
            #[link_name = "?onbeforeunload@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onbeforeunload: *mut nsIAtom;
            #[link_name = "?onblocked@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onblocked: *mut nsIAtom;
            #[link_name = "?onblur@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onblur: *mut nsIAtom;
            #[link_name = "?onbroadcast@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onbroadcast: *mut nsIAtom;
            #[link_name = "?onbusy@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onbusy: *mut nsIAtom;
            #[link_name = "?onbufferedamountlow@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onbufferedamountlow: *mut nsIAtom;
            #[link_name = "?oncached@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncached: *mut nsIAtom;
            #[link_name = "?oncallschanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncallschanged: *mut nsIAtom;
            #[link_name = "?oncancel@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncancel: *mut nsIAtom;
            #[link_name = "?oncardstatechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncardstatechange: *mut nsIAtom;
            #[link_name = "?oncfstatechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncfstatechange: *mut nsIAtom;
            #[link_name = "?onchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onchange: *mut nsIAtom;
            #[link_name = "?oncharacteristicchanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncharacteristicchanged: *mut nsIAtom;
            #[link_name = "?onchargingchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onchargingchange: *mut nsIAtom;
            #[link_name = "?onchargingtimechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onchargingtimechange: *mut nsIAtom;
            #[link_name = "?onchecking@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onchecking: *mut nsIAtom;
            #[link_name = "?onclick@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onclick: *mut nsIAtom;
            #[link_name = "?onclirmodechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onclirmodechange: *mut nsIAtom;
            #[link_name = "?onclose@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onclose: *mut nsIAtom;
            #[link_name = "?oncommand@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncommand: *mut nsIAtom;
            #[link_name = "?oncommandupdate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncommandupdate: *mut nsIAtom;
            #[link_name = "?oncomplete@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncomplete: *mut nsIAtom;
            #[link_name = "?oncompositionend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncompositionend: *mut nsIAtom;
            #[link_name = "?oncompositionstart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncompositionstart: *mut nsIAtom;
            #[link_name = "?oncompositionupdate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncompositionupdate: *mut nsIAtom;
            #[link_name = "?onconfigurationchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onconfigurationchange: *mut nsIAtom;
            #[link_name = "?onconnect@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onconnect: *mut nsIAtom;
            #[link_name = "?onconnected@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onconnected: *mut nsIAtom;
            #[link_name = "?onconnecting@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onconnecting: *mut nsIAtom;
            #[link_name = "?onconnectionavailable@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onconnectionavailable: *mut nsIAtom;
            #[link_name = "?onconnectionstatechanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onconnectionstatechanged: *mut nsIAtom;
            #[link_name = "?oncontextmenu@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncontextmenu: *mut nsIAtom;
            #[link_name = "?oncopy@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncopy: *mut nsIAtom;
            #[link_name = "?oncurrentchannelchanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncurrentchannelchanged: *mut nsIAtom;
            #[link_name = "?oncurrentsourcechanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncurrentsourcechanged: *mut nsIAtom;
            #[link_name = "?oncut@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncut: *mut nsIAtom;
            #[link_name = "?ondatachange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondatachange: *mut nsIAtom;
            #[link_name = "?ondataerror@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondataerror: *mut nsIAtom;
            #[link_name = "?ondblclick@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondblclick: *mut nsIAtom;
            #[link_name = "?ondeleted@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondeleted: *mut nsIAtom;
            #[link_name = "?ondeliverysuccess@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondeliverysuccess: *mut nsIAtom;
            #[link_name = "?ondeliveryerror@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondeliveryerror: *mut nsIAtom;
            #[link_name = "?ondevicefound@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondevicefound: *mut nsIAtom;
            #[link_name = "?ondevicepaired@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondevicepaired: *mut nsIAtom;
            #[link_name = "?ondeviceunpaired@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondeviceunpaired: *mut nsIAtom;
            #[link_name = "?ondialing@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondialing: *mut nsIAtom;
            #[link_name = "?ondisabled@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondisabled: *mut nsIAtom;
            #[link_name = "?ondischargingtimechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondischargingtimechange: *mut nsIAtom;
            #[link_name = "?ondisconnect@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondisconnect: *mut nsIAtom;
            #[link_name = "?ondisconnected@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondisconnected: *mut nsIAtom;
            #[link_name = "?ondisconnecting@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondisconnecting: *mut nsIAtom;
            #[link_name = "?ondisplaypasskeyreq@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondisplaypasskeyreq: *mut nsIAtom;
            #[link_name = "?ondownloading@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondownloading: *mut nsIAtom;
            #[link_name = "?onDOMActivate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onDOMActivate: *mut nsIAtom;
            #[link_name = "?onDOMAttrModified@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onDOMAttrModified: *mut nsIAtom;
            #[link_name = "?onDOMCharacterDataModified@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onDOMCharacterDataModified: *mut nsIAtom;
            #[link_name = "?onDOMFocusIn@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onDOMFocusIn: *mut nsIAtom;
            #[link_name = "?onDOMFocusOut@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onDOMFocusOut: *mut nsIAtom;
            #[link_name = "?onDOMMouseScroll@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onDOMMouseScroll: *mut nsIAtom;
            #[link_name = "?onDOMNodeInserted@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onDOMNodeInserted: *mut nsIAtom;
            #[link_name = "?onDOMNodeInsertedIntoDocument@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onDOMNodeInsertedIntoDocument: *mut nsIAtom;
            #[link_name = "?onDOMNodeRemoved@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onDOMNodeRemoved: *mut nsIAtom;
            #[link_name = "?onDOMNodeRemovedFromDocument@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onDOMNodeRemovedFromDocument: *mut nsIAtom;
            #[link_name = "?onDOMSubtreeModified@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onDOMSubtreeModified: *mut nsIAtom;
            #[link_name = "?ondata@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondata: *mut nsIAtom;
            #[link_name = "?ondrag@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondrag: *mut nsIAtom;
            #[link_name = "?ondragdrop@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondragdrop: *mut nsIAtom;
            #[link_name = "?ondragend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondragend: *mut nsIAtom;
            #[link_name = "?ondragenter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondragenter: *mut nsIAtom;
            #[link_name = "?ondragexit@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondragexit: *mut nsIAtom;
            #[link_name = "?ondraggesture@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondraggesture: *mut nsIAtom;
            #[link_name = "?ondragleave@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondragleave: *mut nsIAtom;
            #[link_name = "?ondragover@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondragover: *mut nsIAtom;
            #[link_name = "?ondragstart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondragstart: *mut nsIAtom;
            #[link_name = "?ondrain@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondrain: *mut nsIAtom;
            #[link_name = "?ondrop@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondrop: *mut nsIAtom;
            #[link_name = "?oneitbroadcasted@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oneitbroadcasted: *mut nsIAtom;
            #[link_name = "?onenabled@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onenabled: *mut nsIAtom;
            #[link_name = "?onenterpincodereq@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onenterpincodereq: *mut nsIAtom;
            #[link_name = "?onemergencycbmodechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onemergencycbmodechange: *mut nsIAtom;
            #[link_name = "?onerror@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onerror: *mut nsIAtom;
            #[link_name = "?onevicted@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onevicted: *mut nsIAtom;
            #[link_name = "?onfacesdetected@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onfacesdetected: *mut nsIAtom;
            #[link_name = "?onfailed@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onfailed: *mut nsIAtom;
            #[link_name = "?onfetch@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onfetch: *mut nsIAtom;
            #[link_name = "?onfinish@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onfinish: *mut nsIAtom;
            #[link_name = "?onfocus@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onfocus: *mut nsIAtom;
            #[link_name = "?onfrequencychange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onfrequencychange: *mut nsIAtom;
            #[link_name = "?onfullscreenchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onfullscreenchange: *mut nsIAtom;
            #[link_name = "?onfullscreenerror@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onfullscreenerror: *mut nsIAtom;
            #[link_name = "?onspeakerforcedchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onspeakerforcedchange: *mut nsIAtom;
            #[link_name = "?onget@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onget: *mut nsIAtom;
            #[link_name = "?ongroupchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ongroupchange: *mut nsIAtom;
            #[link_name = "?onhashchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onhashchange: *mut nsIAtom;
            #[link_name = "?onheadphoneschange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onheadphoneschange: *mut nsIAtom;
            #[link_name = "?onheld@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onheld: *mut nsIAtom;
            #[link_name = "?onhfpstatuschanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onhfpstatuschanged: *mut nsIAtom;
            #[link_name = "?onhidstatuschanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onhidstatuschanged: *mut nsIAtom;
            #[link_name = "?onholding@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onholding: *mut nsIAtom;
            #[link_name = "?oniccchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oniccchange: *mut nsIAtom;
            #[link_name = "?oniccdetected@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oniccdetected: *mut nsIAtom;
            #[link_name = "?oniccinfochange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oniccinfochange: *mut nsIAtom;
            #[link_name = "?oniccundetected@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oniccundetected: *mut nsIAtom;
            #[link_name = "?onincoming@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onincoming: *mut nsIAtom;
            #[link_name = "?oninput@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oninput: *mut nsIAtom;
            #[link_name = "?oninstall@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oninstall: *mut nsIAtom;
            #[link_name = "?oninvalid@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oninvalid: *mut nsIAtom;
            #[link_name = "?onkeydown@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onkeydown: *mut nsIAtom;
            #[link_name = "?onkeypress@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onkeypress: *mut nsIAtom;
            #[link_name = "?onkeyup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onkeyup: *mut nsIAtom;
            #[link_name = "?onlanguagechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onlanguagechange: *mut nsIAtom;
            #[link_name = "?onlevelchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onlevelchange: *mut nsIAtom;
            #[link_name = "?onLoad@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onLoad: *mut nsIAtom;
            #[link_name = "?onload@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onload: *mut nsIAtom;
            #[link_name = "?onloading@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onloading: *mut nsIAtom;
            #[link_name = "?onloadingdone@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onloadingdone: *mut nsIAtom;
            #[link_name = "?onloadingerror@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onloadingerror: *mut nsIAtom;
            #[link_name = "?onpopstate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpopstate: *mut nsIAtom;
            #[link_name = "?only@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static only: *mut nsIAtom;
            #[link_name = "?onmessage@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmessage: *mut nsIAtom;
            #[link_name = "?onmousedown@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmousedown: *mut nsIAtom;
            #[link_name = "?onmouseenter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmouseenter: *mut nsIAtom;
            #[link_name = "?onmouseleave@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmouseleave: *mut nsIAtom;
            #[link_name = "?onmousemove@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmousemove: *mut nsIAtom;
            #[link_name = "?onmouseout@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmouseout: *mut nsIAtom;
            #[link_name = "?onmouseover@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmouseover: *mut nsIAtom;
            #[link_name = "?onMozMouseHittest@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozMouseHittest: *mut nsIAtom;
            #[link_name = "?onmouseup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmouseup: *mut nsIAtom;
            #[link_name = "?onMozAfterPaint@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozAfterPaint: *mut nsIAtom;
            #[link_name = "?onmozbrowserafterkeydown@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmozbrowserafterkeydown: *mut nsIAtom;
            #[link_name = "?onmozbrowserafterkeyup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmozbrowserafterkeyup: *mut nsIAtom;
            #[link_name = "?onmozbrowserbeforekeydown@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmozbrowserbeforekeydown: *mut nsIAtom;
            #[link_name = "?onmozbrowserbeforekeyup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmozbrowserbeforekeyup: *mut nsIAtom;
            #[link_name = "?onmozfullscreenchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmozfullscreenchange: *mut nsIAtom;
            #[link_name = "?onmozfullscreenerror@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmozfullscreenerror: *mut nsIAtom;
            #[link_name = "?onmozkeydownonplugin@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmozkeydownonplugin: *mut nsIAtom;
            #[link_name = "?onmozkeyuponplugin@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmozkeyuponplugin: *mut nsIAtom;
            #[link_name = "?onmozpointerlockchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmozpointerlockchange: *mut nsIAtom;
            #[link_name = "?onmozpointerlockerror@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmozpointerlockerror: *mut nsIAtom;
            #[link_name = "?onmoztimechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmoztimechange: *mut nsIAtom;
            #[link_name = "?onMozMousePixelScroll@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozMousePixelScroll: *mut nsIAtom;
            #[link_name = "?onMozScrolledAreaChanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozScrolledAreaChanged: *mut nsIAtom;
            #[link_name = "?onmoznetworkupload@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmoznetworkupload: *mut nsIAtom;
            #[link_name = "?onmoznetworkdownload@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmoznetworkdownload: *mut nsIAtom;
            #[link_name = "?onmapfolderlistingreq@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmapfolderlistingreq: *mut nsIAtom;
            #[link_name = "?onmapmessageslistingreq@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmapmessageslistingreq: *mut nsIAtom;
            #[link_name = "?onmapgetmessagereq@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmapgetmessagereq: *mut nsIAtom;
            #[link_name = "?onmapsetmessagestatusreq@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmapsetmessagestatusreq: *mut nsIAtom;
            #[link_name = "?onmapsendmessagereq@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmapsendmessagereq: *mut nsIAtom;
            #[link_name = "?onmapmessageupdatereq@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmapmessageupdatereq: *mut nsIAtom;
            #[link_name = "?onnewrdsgroup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onnewrdsgroup: *mut nsIAtom;
            #[link_name = "?onnotificationclick@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onnotificationclick: *mut nsIAtom;
            #[link_name = "?onnotificationclose@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onnotificationclose: *mut nsIAtom;
            #[link_name = "?onnoupdate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onnoupdate: *mut nsIAtom;
            #[link_name = "?onobexpasswordreq@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onobexpasswordreq: *mut nsIAtom;
            #[link_name = "?onobsolete@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onobsolete: *mut nsIAtom;
            #[link_name = "?ononline@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ononline: *mut nsIAtom;
            #[link_name = "?onoffline@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onoffline: *mut nsIAtom;
            #[link_name = "?onopen@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onopen: *mut nsIAtom;
            #[link_name = "?onorientationchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onorientationchange: *mut nsIAtom;
            #[link_name = "?onotastatuschange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onotastatuschange: *mut nsIAtom;
            #[link_name = "?onoverflow@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onoverflow: *mut nsIAtom;
            #[link_name = "?onoverflowchanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onoverflowchanged: *mut nsIAtom;
            #[link_name = "?onpagehide@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpagehide: *mut nsIAtom;
            #[link_name = "?onpageshow@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpageshow: *mut nsIAtom;
            #[link_name = "?onpaint@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpaint: *mut nsIAtom;
            #[link_name = "?onpairingaborted@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpairingaborted: *mut nsIAtom;
            #[link_name = "?onpairingconfirmationreq@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpairingconfirmationreq: *mut nsIAtom;
            #[link_name = "?onpairingconsentreq@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpairingconsentreq: *mut nsIAtom;
            #[link_name = "?onpaste@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpaste: *mut nsIAtom;
            #[link_name = "?onpendingchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpendingchange: *mut nsIAtom;
            #[link_name = "?onpichange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpichange: *mut nsIAtom;
            #[link_name = "?onpicture@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpicture: *mut nsIAtom;
            #[link_name = "?onpopuphidden@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpopuphidden: *mut nsIAtom;
            #[link_name = "?onpopuphiding@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpopuphiding: *mut nsIAtom;
            #[link_name = "?onpopupshowing@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpopupshowing: *mut nsIAtom;
            #[link_name = "?onpopupshown@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpopupshown: *mut nsIAtom;
            #[link_name = "?onposter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onposter: *mut nsIAtom;
            #[link_name = "?onpreviewstatechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpreviewstatechange: *mut nsIAtom;
            #[link_name = "?onpullphonebookreq@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpullphonebookreq: *mut nsIAtom;
            #[link_name = "?onpullvcardentryreq@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpullvcardentryreq: *mut nsIAtom;
            #[link_name = "?onpullvcardlistingreq@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpullvcardlistingreq: *mut nsIAtom;
            #[link_name = "?onpush@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpush: *mut nsIAtom;
            #[link_name = "?onpushsubscriptionchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpushsubscriptionchange: *mut nsIAtom;
            #[link_name = "?onpschange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpschange: *mut nsIAtom;
            #[link_name = "?onptychange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onptychange: *mut nsIAtom;
            #[link_name = "?onradiostatechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onradiostatechange: *mut nsIAtom;
            #[link_name = "?onrdsdisabled@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onrdsdisabled: *mut nsIAtom;
            #[link_name = "?onrdsenabled@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onrdsenabled: *mut nsIAtom;
            #[link_name = "?onreaderror@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onreaderror: *mut nsIAtom;
            #[link_name = "?onreadsuccess@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onreadsuccess: *mut nsIAtom;
            #[link_name = "?onready@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onready: *mut nsIAtom;
            #[link_name = "?onreadystatechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onreadystatechange: *mut nsIAtom;
            #[link_name = "?onreceived@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onreceived: *mut nsIAtom;
            #[link_name = "?onrecorderstatechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onrecorderstatechange: *mut nsIAtom;
            #[link_name = "?onremoteheld@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onremoteheld: *mut nsIAtom;
            #[link_name = "?onremoteresumed@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onremoteresumed: *mut nsIAtom;
            #[link_name = "?onresourcetimingbufferfull@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onresourcetimingbufferfull: *mut nsIAtom;
            #[link_name = "?onretrieving@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onretrieving: *mut nsIAtom;
            #[link_name = "?onRequest@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onRequest: *mut nsIAtom;
            #[link_name = "?onrequestmediaplaystatus@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onrequestmediaplaystatus: *mut nsIAtom;
            #[link_name = "?onreset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onreset: *mut nsIAtom;
            #[link_name = "?onresuming@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onresuming: *mut nsIAtom;
            #[link_name = "?onresize@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onresize: *mut nsIAtom;
            #[link_name = "?onrtchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onrtchange: *mut nsIAtom;
            #[link_name = "?onscanningstatechanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onscanningstatechanged: *mut nsIAtom;
            #[link_name = "?onscostatuschanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onscostatuschanged: *mut nsIAtom;
            #[link_name = "?onscroll@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onscroll: *mut nsIAtom;
            #[link_name = "?onselect@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onselect: *mut nsIAtom;
            #[link_name = "?onselectionchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onselectionchange: *mut nsIAtom;
            #[link_name = "?onselectstart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onselectstart: *mut nsIAtom;
            #[link_name = "?onsending@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onsending: *mut nsIAtom;
            #[link_name = "?onsent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onsent: *mut nsIAtom;
            #[link_name = "?onset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onset: *mut nsIAtom;
            #[link_name = "?onshow@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onshow: *mut nsIAtom;
            #[link_name = "?onshutter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onshutter: *mut nsIAtom;
            #[link_name = "?onstatechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onstatechange: *mut nsIAtom;
            #[link_name = "?onstatuschanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onstatuschanged: *mut nsIAtom;
            #[link_name = "?onstkcommand@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onstkcommand: *mut nsIAtom;
            #[link_name = "?onstksessionend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onstksessionend: *mut nsIAtom;
            #[link_name = "?onstorage@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onstorage: *mut nsIAtom;
            #[link_name = "?onstorageareachanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onstorageareachanged: *mut nsIAtom;
            #[link_name = "?onsubmit@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onsubmit: *mut nsIAtom;
            #[link_name = "?onsuccess@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onsuccess: *mut nsIAtom;
            #[link_name = "?ontypechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ontypechange: *mut nsIAtom;
            #[link_name = "?onterminate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onterminate: *mut nsIAtom;
            #[link_name = "?ontext@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ontext: *mut nsIAtom;
            #[link_name = "?ontoggle@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ontoggle: *mut nsIAtom;
            #[link_name = "?ontouchstart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ontouchstart: *mut nsIAtom;
            #[link_name = "?ontouchend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ontouchend: *mut nsIAtom;
            #[link_name = "?ontouchmove@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ontouchmove: *mut nsIAtom;
            #[link_name = "?ontouchcancel@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ontouchcancel: *mut nsIAtom;
            #[link_name = "?ontransitionend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ontransitionend: *mut nsIAtom;
            #[link_name = "?onunderflow@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onunderflow: *mut nsIAtom;
            #[link_name = "?onunload@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onunload: *mut nsIAtom;
            #[link_name = "?onupdatefound@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onupdatefound: *mut nsIAtom;
            #[link_name = "?onupdateready@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onupdateready: *mut nsIAtom;
            #[link_name = "?onupgradeneeded@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onupgradeneeded: *mut nsIAtom;
            #[link_name = "?onussdreceived@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onussdreceived: *mut nsIAtom;
            #[link_name = "?onversionchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onversionchange: *mut nsIAtom;
            #[link_name = "?onvoicechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onvoicechange: *mut nsIAtom;
            #[link_name = "?onvoiceschanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onvoiceschanged: *mut nsIAtom;
            #[link_name = "?onwebkitAnimationEnd@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onwebkitAnimationEnd: *mut nsIAtom;
            #[link_name = "?onwebkitAnimationIteration@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onwebkitAnimationIteration: *mut nsIAtom;
            #[link_name = "?onwebkitAnimationStart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onwebkitAnimationStart: *mut nsIAtom;
            #[link_name = "?onwebkitTransitionEnd@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onwebkitTransitionEnd: *mut nsIAtom;
            #[link_name = "?onwebsocket@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onwebsocket: *mut nsIAtom;
            #[link_name = "?onwheel@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onwheel: *mut nsIAtom;
            #[link_name = "?open@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static open: *mut nsIAtom;
            #[link_name = "?optgroup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static optgroup: *mut nsIAtom;
            #[link_name = "?optimum@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static optimum: *mut nsIAtom;
            #[link_name = "?option@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static option: *mut nsIAtom;
            #[link_name = "?_or@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _or: *mut nsIAtom;
            #[link_name = "?order@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static order: *mut nsIAtom;
            #[link_name = "?ordinal@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ordinal: *mut nsIAtom;
            #[link_name = "?orient@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static orient: *mut nsIAtom;
            #[link_name = "?orientation@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static orientation: *mut nsIAtom;
            #[link_name = "?otherwise@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static otherwise: *mut nsIAtom;
            #[link_name = "?output@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static output: *mut nsIAtom;
            #[link_name = "?overflow@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static overflow: *mut nsIAtom;
            #[link_name = "?overflowchanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static overflowchanged: *mut nsIAtom;
            #[link_name = "?overlay@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static overlay: *mut nsIAtom;
            #[link_name = "?overlap@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static overlap: *mut nsIAtom;
            #[link_name = "?p@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static p: *mut nsIAtom;
            #[link_name = "?pack@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pack: *mut nsIAtom;
            #[link_name = "?page@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static page: *mut nsIAtom;
            #[link_name = "?pageincrement@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pageincrement: *mut nsIAtom;
            #[link_name = "?pagex@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pagex: *mut nsIAtom;
            #[link_name = "?pagey@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pagey: *mut nsIAtom;
            #[link_name = "?paint_order@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static paint_order: *mut nsIAtom;
            #[link_name = "?palettename@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static palettename: *mut nsIAtom;
            #[link_name = "?panel@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static panel: *mut nsIAtom;
            #[link_name = "?param@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static param: *mut nsIAtom;
            #[link_name = "?parameter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static parameter: *mut nsIAtom;
            #[link_name = "?parent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static parent: *mut nsIAtom;
            #[link_name = "?parentapp@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static parentapp: *mut nsIAtom;
            #[link_name = "?parentfocused@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static parentfocused: *mut nsIAtom;
            #[link_name = "?parsetype@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static parsetype: *mut nsIAtom;
            #[link_name = "?password@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static password: *mut nsIAtom;
            #[link_name = "?pattern@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pattern: *mut nsIAtom;
            #[link_name = "?patternSeparator@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static patternSeparator: *mut nsIAtom;
            #[link_name = "?perMille@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static perMille: *mut nsIAtom;
            #[link_name = "?percent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static percent: *mut nsIAtom;
            #[link_name = "?persist@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static persist: *mut nsIAtom;
            #[link_name = "?phase@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static phase: *mut nsIAtom;
            #[link_name = "?picture@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static picture: *mut nsIAtom;
            #[link_name = "?ping@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ping: *mut nsIAtom;
            #[link_name = "?pinned@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pinned: *mut nsIAtom;
            #[link_name = "?placeholder@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static placeholder: *mut nsIAtom;
            #[link_name = "?plaintext@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static plaintext: *mut nsIAtom;
            #[link_name = "?playbackrate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static playbackrate: *mut nsIAtom;
            #[link_name = "?pointSize@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pointSize: *mut nsIAtom;
            #[link_name = "?poly@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static poly: *mut nsIAtom;
            #[link_name = "?polygon@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static polygon: *mut nsIAtom;
            #[link_name = "?popup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static popup: *mut nsIAtom;
            #[link_name = "?popupalign@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static popupalign: *mut nsIAtom;
            #[link_name = "?popupanchor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static popupanchor: *mut nsIAtom;
            #[link_name = "?popupgroup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static popupgroup: *mut nsIAtom;
            #[link_name = "?popuphidden@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static popuphidden: *mut nsIAtom;
            #[link_name = "?popuphiding@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static popuphiding: *mut nsIAtom;
            #[link_name = "?popupset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static popupset: *mut nsIAtom;
            #[link_name = "?popupshowing@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static popupshowing: *mut nsIAtom;
            #[link_name = "?popupshown@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static popupshown: *mut nsIAtom;
            #[link_name = "?popupsinherittooltip@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static popupsinherittooltip: *mut nsIAtom;
            #[link_name = "?position@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static position: *mut nsIAtom;
            #[link_name = "?poster@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static poster: *mut nsIAtom;
            #[link_name = "?pre@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pre: *mut nsIAtom;
            #[link_name = "?preceding@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static preceding: *mut nsIAtom;
            #[link_name = "?precedingSibling@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static precedingSibling: *mut nsIAtom;
            #[link_name = "?predicate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static predicate: *mut nsIAtom;
            #[link_name = "?prefix@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static prefix: *mut nsIAtom;
            #[link_name = "?preload@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static preload: *mut nsIAtom;
            #[link_name = "?prerendered@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static prerendered: *mut nsIAtom;
            #[link_name = "?mozpresentation@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozpresentation: *mut nsIAtom;
            #[link_name = "?preserve@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static preserve: *mut nsIAtom;
            #[link_name = "?preserveSpace@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static preserveSpace: *mut nsIAtom;
            #[link_name = "?preventdefault@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static preventdefault: *mut nsIAtom;
            #[link_name = "?primary@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static primary: *mut nsIAtom;
            #[link_name = "?print@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static print: *mut nsIAtom;
            #[link_name = "?priority@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static priority: *mut nsIAtom;
            #[link_name = "?processingInstruction@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static processingInstruction: *mut nsIAtom;
            #[link_name = "?profile@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static profile: *mut nsIAtom;
            #[link_name = "?progress@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static progress: *mut nsIAtom;
            #[link_name = "?progressmeter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static progressmeter: *mut nsIAtom;
            #[link_name = "?progressNormal@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static progressNormal: *mut nsIAtom;
            #[link_name = "?progressUndetermined@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static progressUndetermined: *mut nsIAtom;
            #[link_name = "?projection@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static projection: *mut nsIAtom;
            #[link_name = "?prompt@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static prompt: *mut nsIAtom;
            #[link_name = "?propagate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static propagate: *mut nsIAtom;
            #[link_name = "?properties@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static properties: *mut nsIAtom;
            #[link_name = "?property@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static property: *mut nsIAtom;
            #[link_name = "?pubdate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pubdate: *mut nsIAtom;
            #[link_name = "?q@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static q: *mut nsIAtom;
            #[link_name = "?query@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static query: *mut nsIAtom;
            #[link_name = "?queryset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static queryset: *mut nsIAtom;
            #[link_name = "?querytype@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static querytype: *mut nsIAtom;
            #[link_name = "?radio@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static radio: *mut nsIAtom;
            #[link_name = "?radiogroup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static radiogroup: *mut nsIAtom;
            #[link_name = "?range@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static range: *mut nsIAtom;
            #[link_name = "?readonly@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static readonly: *mut nsIAtom;
            #[link_name = "?rect@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rect: *mut nsIAtom;
            #[link_name = "?rectangle@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rectangle: *mut nsIAtom;
            #[link_name = "?ref@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ref_: *mut nsIAtom;
            #[link_name = "?refresh@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static refresh: *mut nsIAtom;
            #[link_name = "?rel@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rel: *mut nsIAtom;
            #[link_name = "?onreloadpage@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onreloadpage: *mut nsIAtom;
            #[link_name = "?rem@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rem: *mut nsIAtom;
            #[link_name = "?removeelement@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static removeelement: *mut nsIAtom;
            #[link_name = "?renderingobserverlist@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static renderingobserverlist: *mut nsIAtom;
            #[link_name = "?repeat@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static repeat: *mut nsIAtom;
            #[link_name = "?replace@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static replace: *mut nsIAtom;
            #[link_name = "?required@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static required: *mut nsIAtom;
            #[link_name = "?reserved@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static reserved: *mut nsIAtom;
            #[link_name = "?reset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static reset: *mut nsIAtom;
            #[link_name = "?resizeafter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static resizeafter: *mut nsIAtom;
            #[link_name = "?resizebefore@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static resizebefore: *mut nsIAtom;
            #[link_name = "?resizer@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static resizer: *mut nsIAtom;
            #[link_name = "?resolution@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static resolution: *mut nsIAtom;
            #[link_name = "?resource@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static resource: *mut nsIAtom;
            #[link_name = "?resources@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static resources: *mut nsIAtom;
            #[link_name = "?result@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static result: *mut nsIAtom;
            #[link_name = "?resultPrefix@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static resultPrefix: *mut nsIAtom;
            #[link_name = "?retargetdocumentfocus@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static retargetdocumentfocus: *mut nsIAtom;
            #[link_name = "?rev@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rev: *mut nsIAtom;
            #[link_name = "?reverse@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static reverse: *mut nsIAtom;
            #[link_name = "?reversed@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static reversed: *mut nsIAtom;
            #[link_name = "?richlistbox@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static richlistbox: *mut nsIAtom;
            #[link_name = "?richlistitem@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static richlistitem: *mut nsIAtom;
            #[link_name = "?right@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static right: *mut nsIAtom;
            #[link_name = "?rightmargin@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rightmargin: *mut nsIAtom;
            #[link_name = "?rightpadding@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rightpadding: *mut nsIAtom;
            #[link_name = "?role@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static role: *mut nsIAtom;
            #[link_name = "?rolluponmousewheel@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rolluponmousewheel: *mut nsIAtom;
            #[link_name = "?round@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static round: *mut nsIAtom;
            #[link_name = "?row@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static row: *mut nsIAtom;
            #[link_name = "?rows@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rows: *mut nsIAtom;
            #[link_name = "?rowspan@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rowspan: *mut nsIAtom;
            #[link_name = "?rb@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rb: *mut nsIAtom;
            #[link_name = "?rp@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rp: *mut nsIAtom;
            #[link_name = "?rt@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rt: *mut nsIAtom;
            #[link_name = "?rtc@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rtc: *mut nsIAtom;
            #[link_name = "?rtl@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rtl: *mut nsIAtom;
            #[link_name = "?ruby@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ruby: *mut nsIAtom;
            #[link_name = "?rubyBase@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rubyBase: *mut nsIAtom;
            #[link_name = "?rubyBaseContainer@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rubyBaseContainer: *mut nsIAtom;
            #[link_name = "?rubyText@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rubyText: *mut nsIAtom;
            #[link_name = "?rubyTextContainer@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rubyTextContainer: *mut nsIAtom;
            #[link_name = "?rule@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rule: *mut nsIAtom;
            #[link_name = "?rules@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rules: *mut nsIAtom;
            #[link_name = "?s@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static s: *mut nsIAtom;
            #[link_name = "?samp@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static samp: *mut nsIAtom;
            #[link_name = "?sandbox@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sandbox: *mut nsIAtom;
            #[link_name = "?sbattr@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sbattr: *mut nsIAtom;
            #[link_name = "?scale@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scale: *mut nsIAtom;
            #[link_name = "?scan@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scan: *mut nsIAtom;
            #[link_name = "?scheme@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scheme: *mut nsIAtom;
            #[link_name = "?scope@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scope: *mut nsIAtom;
            #[link_name = "?scoped@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scoped: *mut nsIAtom;
            #[link_name = "?screen@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static screen: *mut nsIAtom;
            #[link_name = "?screenX@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static screenX: *mut nsIAtom;
            #[link_name = "?screenY@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static screenY: *mut nsIAtom;
            #[link_name = "?script@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static script: *mut nsIAtom;
            #[link_name = "?scriptEnabledBeforePrintOrPreview@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scriptEnabledBeforePrintOrPreview: *mut nsIAtom;
            #[link_name = "?scrollbar@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scrollbar: *mut nsIAtom;
            #[link_name = "?scrollbarbutton@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scrollbarbutton: *mut nsIAtom;
            #[link_name = "?scrollbarDownBottom@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scrollbarDownBottom: *mut nsIAtom;
            #[link_name = "?scrollbarDownTop@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scrollbarDownTop: *mut nsIAtom;
            #[link_name = "?scrollbarUpBottom@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scrollbarUpBottom: *mut nsIAtom;
            #[link_name = "?scrollbarUpTop@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scrollbarUpTop: *mut nsIAtom;
            #[link_name = "?scrollbox@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scrollbox: *mut nsIAtom;
            #[link_name = "?scrollcorner@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scrollcorner: *mut nsIAtom;
            #[link_name = "?scrolling@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scrolling: *mut nsIAtom;
            #[link_name = "?section@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static section: *mut nsIAtom;
            #[link_name = "?select@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static select: *mut nsIAtom;
            #[link_name = "?selectable@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static selectable: *mut nsIAtom;
            #[link_name = "?selected@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static selected: *mut nsIAtom;
            #[link_name = "?selectedIndex@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static selectedIndex: *mut nsIAtom;
            #[link_name = "?selectedindex@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static selectedindex: *mut nsIAtom;
            #[link_name = "?self@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static self_: *mut nsIAtom;
            #[link_name = "?seltype@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static seltype: *mut nsIAtom;
            #[link_name = "?setcookie@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static setcookie: *mut nsIAtom;
            #[link_name = "?setter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static setter: *mut nsIAtom;
            #[link_name = "?shape@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static shape: *mut nsIAtom;
            #[link_name = "?show@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static show: *mut nsIAtom;
            #[link_name = "?showcaret@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static showcaret: *mut nsIAtom;
            #[link_name = "?showresizer@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static showresizer: *mut nsIAtom;
            #[link_name = "?simple@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static simple: *mut nsIAtom;
            #[link_name = "?single@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static single: *mut nsIAtom;
            #[link_name = "?size@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static size: *mut nsIAtom;
            #[link_name = "?sizes@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sizes: *mut nsIAtom;
            #[link_name = "?sizemode@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sizemode: *mut nsIAtom;
            #[link_name = "?sizetopopup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sizetopopup: *mut nsIAtom;
            #[link_name = "?slider@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static slider: *mut nsIAtom;
            #[link_name = "?small@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static small: *mut nsIAtom;
            #[link_name = "?smooth@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static smooth: *mut nsIAtom;
            #[link_name = "?snap@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static snap: *mut nsIAtom;
            #[link_name = "?sort@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sort: *mut nsIAtom;
            #[link_name = "?sortActive@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sortActive: *mut nsIAtom;
            #[link_name = "?sortDirection@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sortDirection: *mut nsIAtom;
            #[link_name = "?sorted@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sorted: *mut nsIAtom;
            #[link_name = "?sorthints@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sorthints: *mut nsIAtom;
            #[link_name = "?sortLocked@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sortLocked: *mut nsIAtom;
            #[link_name = "?sortResource@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sortResource: *mut nsIAtom;
            #[link_name = "?sortResource2@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sortResource2: *mut nsIAtom;
            #[link_name = "?sortSeparators@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sortSeparators: *mut nsIAtom;
            #[link_name = "?sortStaticsLast@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sortStaticsLast: *mut nsIAtom;
            #[link_name = "?source@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static source: *mut nsIAtom;
            #[link_name = "?space@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static space: *mut nsIAtom;
            #[link_name = "?spacer@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static spacer: *mut nsIAtom;
            #[link_name = "?span@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static span: *mut nsIAtom;
            #[link_name = "?spellcheck@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static spellcheck: *mut nsIAtom;
            #[link_name = "?spinner@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static spinner: *mut nsIAtom;
            #[link_name = "?split@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static split: *mut nsIAtom;
            #[link_name = "?splitmenu@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static splitmenu: *mut nsIAtom;
            #[link_name = "?splitter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static splitter: *mut nsIAtom;
            #[link_name = "?spring@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static spring: *mut nsIAtom;
            #[link_name = "?src@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static src: *mut nsIAtom;
            #[link_name = "?srcdoc@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static srcdoc: *mut nsIAtom;
            #[link_name = "?srclang@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static srclang: *mut nsIAtom;
            #[link_name = "?srcset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static srcset: *mut nsIAtom;
            #[link_name = "?stack@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stack: *mut nsIAtom;
            #[link_name = "?standalone@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static standalone: *mut nsIAtom;
            #[link_name = "?standby@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static standby: *mut nsIAtom;
            #[link_name = "?start@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static start: *mut nsIAtom;
            #[link_name = "?start_after@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static start_after: *mut nsIAtom;
            #[link_name = "?start_before@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static start_before: *mut nsIAtom;
            #[link_name = "?startsWith@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static startsWith: *mut nsIAtom;
            #[link_name = "?state@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static state: *mut nsIAtom;
            #[link_name = "?statedatasource@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static statedatasource: *mut nsIAtom;
            #[link_name = "?staticHint@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static staticHint: *mut nsIAtom;
            #[link_name = "?statusbar@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static statusbar: *mut nsIAtom;
            #[link_name = "?statustext@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static statustext: *mut nsIAtom;
            #[link_name = "?step@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static step: *mut nsIAtom;
            #[link_name = "?stop@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stop: *mut nsIAtom;
            #[link_name = "?stretch@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stretch: *mut nsIAtom;
            #[link_name = "?strike@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static strike: *mut nsIAtom;
            #[link_name = "?string@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static string: *mut nsIAtom;
            #[link_name = "?stringLength@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stringLength: *mut nsIAtom;
            #[link_name = "?stripSpace@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stripSpace: *mut nsIAtom;
            #[link_name = "?strong@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static strong: *mut nsIAtom;
            #[link_name = "?style@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static style: *mut nsIAtom;
            #[link_name = "?stylesheet@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stylesheet: *mut nsIAtom;
            #[link_name = "?stylesheetPrefix@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stylesheetPrefix: *mut nsIAtom;
            #[link_name = "?subject@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static subject: *mut nsIAtom;
            #[link_name = "?submit@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static submit: *mut nsIAtom;
            #[link_name = "?substate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static substate: *mut nsIAtom;
            #[link_name = "?substring@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static substring: *mut nsIAtom;
            #[link_name = "?substringAfter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static substringAfter: *mut nsIAtom;
            #[link_name = "?substringBefore@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static substringBefore: *mut nsIAtom;
            #[link_name = "?sub@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sub: *mut nsIAtom;
            #[link_name = "?sum@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sum: *mut nsIAtom;
            #[link_name = "?sup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sup: *mut nsIAtom;
            #[link_name = "?summary@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static summary: *mut nsIAtom;
            #[link_name = "?systemProperty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static systemProperty: *mut nsIAtom;
            #[link_name = "?tab@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tab: *mut nsIAtom;
            #[link_name = "?tabbox@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tabbox: *mut nsIAtom;
            #[link_name = "?tabindex@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tabindex: *mut nsIAtom;
            #[link_name = "?table@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static table: *mut nsIAtom;
            #[link_name = "?tabpanel@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tabpanel: *mut nsIAtom;
            #[link_name = "?tabpanels@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tabpanels: *mut nsIAtom;
            #[link_name = "?tag@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tag: *mut nsIAtom;
            #[link_name = "?target@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static target: *mut nsIAtom;
            #[link_name = "?targets@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static targets: *mut nsIAtom;
            #[link_name = "?tbody@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tbody: *mut nsIAtom;
            #[link_name = "?td@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static td: *mut nsIAtom;
            #[link_name = "?_template@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _template: *mut nsIAtom;
            #[link_name = "?text_decoration@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static text_decoration: *mut nsIAtom;
            #[link_name = "?terminate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static terminate: *mut nsIAtom;
            #[link_name = "?test@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static test: *mut nsIAtom;
            #[link_name = "?text@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static text: *mut nsIAtom;
            #[link_name = "?textAlign@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static textAlign: *mut nsIAtom;
            #[link_name = "?textarea@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static textarea: *mut nsIAtom;
            #[link_name = "?textbox@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static textbox: *mut nsIAtom;
            #[link_name = "?textnode@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static textnode: *mut nsIAtom;
            #[link_name = "?textNodeDirectionalityMap@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static textNodeDirectionalityMap: *mut nsIAtom;
            #[link_name = "?tfoot@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tfoot: *mut nsIAtom;
            #[link_name = "?th@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static th: *mut nsIAtom;
            #[link_name = "?thead@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static thead: *mut nsIAtom;
            #[link_name = "?thumb@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static thumb: *mut nsIAtom;
            #[link_name = "?time@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static time: *mut nsIAtom;
            #[link_name = "?title@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static title: *mut nsIAtom;
            #[link_name = "?titlebar@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static titlebar: *mut nsIAtom;
            #[link_name = "?titletip@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static titletip: *mut nsIAtom;
            #[link_name = "?toggled@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static toggled: *mut nsIAtom;
            #[link_name = "?token@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static token: *mut nsIAtom;
            #[link_name = "?tokenize@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tokenize: *mut nsIAtom;
            #[link_name = "?toolbar@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static toolbar: *mut nsIAtom;
            #[link_name = "?toolbarbutton@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static toolbarbutton: *mut nsIAtom;
            #[link_name = "?toolbaritem@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static toolbaritem: *mut nsIAtom;
            #[link_name = "?toolbox@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static toolbox: *mut nsIAtom;
            #[link_name = "?tooltip@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tooltip: *mut nsIAtom;
            #[link_name = "?tooltiptext@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tooltiptext: *mut nsIAtom;
            #[link_name = "?top@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static top: *mut nsIAtom;
            #[link_name = "?topleft@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static topleft: *mut nsIAtom;
            #[link_name = "?topmargin@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static topmargin: *mut nsIAtom;
            #[link_name = "?toppadding@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static toppadding: *mut nsIAtom;
            #[link_name = "?topright@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static topright: *mut nsIAtom;
            #[link_name = "?tr@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tr: *mut nsIAtom;
            #[link_name = "?track@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static track: *mut nsIAtom;
            #[link_name = "?trailing@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static trailing: *mut nsIAtom;
            #[link_name = "?transform@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static transform: *mut nsIAtom;
            #[link_name = "?transform_3d@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static transform_3d: *mut nsIAtom;
            #[link_name = "?transformiix@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static transformiix: *mut nsIAtom;
            #[link_name = "?translate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static translate: *mut nsIAtom;
            #[link_name = "?transparent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static transparent: *mut nsIAtom;
            #[link_name = "?tree@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tree: *mut nsIAtom;
            #[link_name = "?treecell@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static treecell: *mut nsIAtom;
            #[link_name = "?treechildren@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static treechildren: *mut nsIAtom;
            #[link_name = "?treecol@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static treecol: *mut nsIAtom;
            #[link_name = "?treecolpicker@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static treecolpicker: *mut nsIAtom;
            #[link_name = "?treecols@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static treecols: *mut nsIAtom;
            #[link_name = "?treeitem@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static treeitem: *mut nsIAtom;
            #[link_name = "?treerow@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static treerow: *mut nsIAtom;
            #[link_name = "?treeseparator@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static treeseparator: *mut nsIAtom;
            #[link_name = "?triple@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static triple: *mut nsIAtom;
            #[link_name = "?_true@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _true: *mut nsIAtom;
            #[link_name = "?tt@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tt: *mut nsIAtom;
            #[link_name = "?tty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tty: *mut nsIAtom;
            #[link_name = "?tv@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tv: *mut nsIAtom;
            #[link_name = "?type@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static type_: *mut nsIAtom;
            #[link_name = "?typemustmatch@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static typemustmatch: *mut nsIAtom;
            #[link_name = "?u@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static u: *mut nsIAtom;
            #[link_name = "?ul@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ul: *mut nsIAtom;
            #[link_name = "?underflow@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static underflow: *mut nsIAtom;
            #[link_name = "?undetermined@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static undetermined: *mut nsIAtom;
            #[link_name = "?undoscope@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static undoscope: *mut nsIAtom;
            #[link_name = "?unload@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static unload: *mut nsIAtom;
            #[link_name = "?unparsedEntityUri@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static unparsedEntityUri: *mut nsIAtom;
            #[link_name = "?upperFirst@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static upperFirst: *mut nsIAtom;
            #[link_name = "?uri@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static uri: *mut nsIAtom;
            #[link_name = "?use@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static use_: *mut nsIAtom;
            #[link_name = "?useAttributeSets@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static useAttributeSets: *mut nsIAtom;
            #[link_name = "?usemap@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static usemap: *mut nsIAtom;
            #[link_name = "?user_scalable@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static user_scalable: *mut nsIAtom;
            #[link_name = "?userInput@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static userInput: *mut nsIAtom;
            #[link_name = "?validate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static validate: *mut nsIAtom;
            #[link_name = "?valign@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static valign: *mut nsIAtom;
            #[link_name = "?value@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static value: *mut nsIAtom;
            #[link_name = "?values@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static values: *mut nsIAtom;
            #[link_name = "?valueOf@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static valueOf: *mut nsIAtom;
            #[link_name = "?valuetype@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static valuetype: *mut nsIAtom;
            #[link_name = "?var@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static var: *mut nsIAtom;
            #[link_name = "?variable@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static variable: *mut nsIAtom;
            #[link_name = "?vbox@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static vbox: *mut nsIAtom;
            #[link_name = "?vcard_name@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static vcard_name: *mut nsIAtom;
            #[link_name = "?vendor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static vendor: *mut nsIAtom;
            #[link_name = "?vendorUrl@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static vendorUrl: *mut nsIAtom;
            #[link_name = "?version@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static version: *mut nsIAtom;
            #[link_name = "?vert@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static vert: *mut nsIAtom;
            #[link_name = "?vertical@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static vertical: *mut nsIAtom;
            #[link_name = "?audio@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static audio: *mut nsIAtom;
            #[link_name = "?video@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static video: *mut nsIAtom;
            #[link_name = "?videocontrols@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static videocontrols: *mut nsIAtom;
            #[link_name = "?viewport@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static viewport: *mut nsIAtom;
            #[link_name = "?viewport_height@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static viewport_height: *mut nsIAtom;
            #[link_name = "?viewport_initial_scale@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static viewport_initial_scale: *mut nsIAtom;
            #[link_name = "?viewport_maximum_scale@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static viewport_maximum_scale: *mut nsIAtom;
            #[link_name = "?viewport_minimum_scale@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static viewport_minimum_scale: *mut nsIAtom;
            #[link_name = "?viewport_user_scalable@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static viewport_user_scalable: *mut nsIAtom;
            #[link_name = "?viewport_width@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static viewport_width: *mut nsIAtom;
            #[link_name = "?visibility@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static visibility: *mut nsIAtom;
            #[link_name = "?visuallyselected@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static visuallyselected: *mut nsIAtom;
            #[link_name = "?vlink@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static vlink: *mut nsIAtom;
            #[link_name = "?vspace@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static vspace: *mut nsIAtom;
            #[link_name = "?wbr@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static wbr: *mut nsIAtom;
            #[link_name = "?webkitdirectory@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static webkitdirectory: *mut nsIAtom;
            #[link_name = "?when@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static when: *mut nsIAtom;
            #[link_name = "?where@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static where_: *mut nsIAtom;
            #[link_name = "?widget@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static widget: *mut nsIAtom;
            #[link_name = "?width@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static width: *mut nsIAtom;
            #[link_name = "?window@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static window: *mut nsIAtom;
            #[link_name = "?headerWindowTarget@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static headerWindowTarget: *mut nsIAtom;
            #[link_name = "?windowtype@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static windowtype: *mut nsIAtom;
            #[link_name = "?withParam@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static withParam: *mut nsIAtom;
            #[link_name = "?wizard@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static wizard: *mut nsIAtom;
            #[link_name = "?wrap@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static wrap: *mut nsIAtom;
            #[link_name = "?headerDNSPrefetchControl@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static headerDNSPrefetchControl: *mut nsIAtom;
            #[link_name = "?headerCSP@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static headerCSP: *mut nsIAtom;
            #[link_name = "?headerCSPReportOnly@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static headerCSPReportOnly: *mut nsIAtom;
            #[link_name = "?headerXFO@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static headerXFO: *mut nsIAtom;
            #[link_name = "?x_western@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_western: *mut nsIAtom;
            #[link_name = "?xml@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static xml: *mut nsIAtom;
            #[link_name = "?xml_stylesheet@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static xml_stylesheet: *mut nsIAtom;
            #[link_name = "?xmlns@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static xmlns: *mut nsIAtom;
            #[link_name = "?xmp@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static xmp: *mut nsIAtom;
            #[link_name = "?xulcontentsgenerated@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static xulcontentsgenerated: *mut nsIAtom;
            #[link_name = "?yes@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static yes: *mut nsIAtom;
            #[link_name = "?z_index@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static z_index: *mut nsIAtom;
            #[link_name = "?zeroDigit@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static zeroDigit: *mut nsIAtom;
            #[link_name = "?percentage@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static percentage: *mut nsIAtom;
            #[link_name = "?A@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static A: *mut nsIAtom;
            #[link_name = "?alignment_baseline@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static alignment_baseline: *mut nsIAtom;
            #[link_name = "?amplitude@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static amplitude: *mut nsIAtom;
            #[link_name = "?animate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static animate: *mut nsIAtom;
            #[link_name = "?animateColor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static animateColor: *mut nsIAtom;
            #[link_name = "?animateMotion@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static animateMotion: *mut nsIAtom;
            #[link_name = "?animateTransform@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static animateTransform: *mut nsIAtom;
            #[link_name = "?arithmetic@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static arithmetic: *mut nsIAtom;
            #[link_name = "?atop@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static atop: *mut nsIAtom;
            #[link_name = "?azimuth@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static azimuth: *mut nsIAtom;
            #[link_name = "?B@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static B: *mut nsIAtom;
            #[link_name = "?backgroundColor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static backgroundColor: *mut nsIAtom;
            #[link_name = "?background_image@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static background_image: *mut nsIAtom;
            #[link_name = "?baseFrequency@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static baseFrequency: *mut nsIAtom;
            #[link_name = "?baseline_shift@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static baseline_shift: *mut nsIAtom;
            #[link_name = "?bias@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bias: *mut nsIAtom;
            #[link_name = "?caption_side@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static caption_side: *mut nsIAtom;
            #[link_name = "?clip_path@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static clip_path: *mut nsIAtom;
            #[link_name = "?clip_rule@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static clip_rule: *mut nsIAtom;
            #[link_name = "?clipPath@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static clipPath: *mut nsIAtom;
            #[link_name = "?clipPathUnits@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static clipPathUnits: *mut nsIAtom;
            #[link_name = "?cm@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cm: *mut nsIAtom;
            #[link_name = "?colorBurn@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static colorBurn: *mut nsIAtom;
            #[link_name = "?colorDodge@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static colorDodge: *mut nsIAtom;
            #[link_name = "?colorInterpolation@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static colorInterpolation: *mut nsIAtom;
            #[link_name = "?colorInterpolationFilters@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static colorInterpolationFilters: *mut nsIAtom;
            #[link_name = "?colorProfile@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static colorProfile: *mut nsIAtom;
            #[link_name = "?cursor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cursor: *mut nsIAtom;
            #[link_name = "?cx@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cx: *mut nsIAtom;
            #[link_name = "?cy@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cy: *mut nsIAtom;
            #[link_name = "?d@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static d: *mut nsIAtom;
            #[link_name = "?darken@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static darken: *mut nsIAtom;
            #[link_name = "?defs@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static defs: *mut nsIAtom;
            #[link_name = "?deg@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static deg: *mut nsIAtom;
            #[link_name = "?desc@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static desc: *mut nsIAtom;
            #[link_name = "?diffuseConstant@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static diffuseConstant: *mut nsIAtom;
            #[link_name = "?dilate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dilate: *mut nsIAtom;
            #[link_name = "?direction@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static direction: *mut nsIAtom;
            #[link_name = "?disable@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static disable: *mut nsIAtom;
            #[link_name = "?discrete@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static discrete: *mut nsIAtom;
            #[link_name = "?divisor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static divisor: *mut nsIAtom;
            #[link_name = "?dominant_baseline@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dominant_baseline: *mut nsIAtom;
            #[link_name = "?duplicate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static duplicate: *mut nsIAtom;
            #[link_name = "?dx@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dx: *mut nsIAtom;
            #[link_name = "?dy@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dy: *mut nsIAtom;
            #[link_name = "?edgeMode@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static edgeMode: *mut nsIAtom;
            #[link_name = "?ellipse@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ellipse: *mut nsIAtom;
            #[link_name = "?elevation@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static elevation: *mut nsIAtom;
            #[link_name = "?erode@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static erode: *mut nsIAtom;
            #[link_name = "?ex@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ex: *mut nsIAtom;
            #[link_name = "?exact@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static exact: *mut nsIAtom;
            #[link_name = "?exclusion@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static exclusion: *mut nsIAtom;
            #[link_name = "?exponent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static exponent: *mut nsIAtom;
            #[link_name = "?feBlend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feBlend: *mut nsIAtom;
            #[link_name = "?feColorMatrix@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feColorMatrix: *mut nsIAtom;
            #[link_name = "?feComponentTransfer@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feComponentTransfer: *mut nsIAtom;
            #[link_name = "?feComposite@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feComposite: *mut nsIAtom;
            #[link_name = "?feConvolveMatrix@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feConvolveMatrix: *mut nsIAtom;
            #[link_name = "?feDiffuseLighting@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feDiffuseLighting: *mut nsIAtom;
            #[link_name = "?feDisplacementMap@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feDisplacementMap: *mut nsIAtom;
            #[link_name = "?feDistantLight@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feDistantLight: *mut nsIAtom;
            #[link_name = "?feDropShadow@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feDropShadow: *mut nsIAtom;
            #[link_name = "?feFlood@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feFlood: *mut nsIAtom;
            #[link_name = "?feFuncA@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feFuncA: *mut nsIAtom;
            #[link_name = "?feFuncB@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feFuncB: *mut nsIAtom;
            #[link_name = "?feFuncG@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feFuncG: *mut nsIAtom;
            #[link_name = "?feFuncR@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feFuncR: *mut nsIAtom;
            #[link_name = "?feGaussianBlur@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feGaussianBlur: *mut nsIAtom;
            #[link_name = "?feImage@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feImage: *mut nsIAtom;
            #[link_name = "?feMerge@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feMerge: *mut nsIAtom;
            #[link_name = "?feMergeNode@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feMergeNode: *mut nsIAtom;
            #[link_name = "?feMorphology@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feMorphology: *mut nsIAtom;
            #[link_name = "?feOffset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feOffset: *mut nsIAtom;
            #[link_name = "?fePointLight@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fePointLight: *mut nsIAtom;
            #[link_name = "?feSpecularLighting@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feSpecularLighting: *mut nsIAtom;
            #[link_name = "?feSpotLight@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feSpotLight: *mut nsIAtom;
            #[link_name = "?feTile@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feTile: *mut nsIAtom;
            #[link_name = "?feTurbulence@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static feTurbulence: *mut nsIAtom;
            #[link_name = "?fill@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fill: *mut nsIAtom;
            #[link_name = "?fill_opacity@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fill_opacity: *mut nsIAtom;
            #[link_name = "?fill_rule@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fill_rule: *mut nsIAtom;
            #[link_name = "?filter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static filter: *mut nsIAtom;
            #[link_name = "?filterUnits@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static filterUnits: *mut nsIAtom;
            #[link_name = "?_float@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _float: *mut nsIAtom;
            #[link_name = "?flood_color@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static flood_color: *mut nsIAtom;
            #[link_name = "?flood_opacity@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static flood_opacity: *mut nsIAtom;
            #[link_name = "?font_face@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static font_face: *mut nsIAtom;
            #[link_name = "?font_face_format@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static font_face_format: *mut nsIAtom;
            #[link_name = "?font_face_name@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static font_face_name: *mut nsIAtom;
            #[link_name = "?font_face_src@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static font_face_src: *mut nsIAtom;
            #[link_name = "?font_face_uri@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static font_face_uri: *mut nsIAtom;
            #[link_name = "?font_family@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static font_family: *mut nsIAtom;
            #[link_name = "?font_size@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static font_size: *mut nsIAtom;
            #[link_name = "?font_size_adjust@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static font_size_adjust: *mut nsIAtom;
            #[link_name = "?font_stretch@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static font_stretch: *mut nsIAtom;
            #[link_name = "?font_style@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static font_style: *mut nsIAtom;
            #[link_name = "?font_variant@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static font_variant: *mut nsIAtom;
            #[link_name = "?foreignObject@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static foreignObject: *mut nsIAtom;
            #[link_name = "?fractalNoise@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fractalNoise: *mut nsIAtom;
            #[link_name = "?fx@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fx: *mut nsIAtom;
            #[link_name = "?fy@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fy: *mut nsIAtom;
            #[link_name = "?G@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static G: *mut nsIAtom;
            #[link_name = "?g@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static g: *mut nsIAtom;
            #[link_name = "?gamma@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static gamma: *mut nsIAtom;
            #[link_name = "?generic_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static generic_: *mut nsIAtom;
            #[link_name = "?glyphRef@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static glyphRef: *mut nsIAtom;
            #[link_name = "?grad@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static grad: *mut nsIAtom;
            #[link_name = "?gradientTransform@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static gradientTransform: *mut nsIAtom;
            #[link_name = "?gradientUnits@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static gradientUnits: *mut nsIAtom;
            #[link_name = "?hardLight@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static hardLight: *mut nsIAtom;
            #[link_name = "?hue@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static hue: *mut nsIAtom;
            #[link_name = "?hueRotate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static hueRotate: *mut nsIAtom;
            #[link_name = "?identity@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static identity: *mut nsIAtom;
            #[link_name = "?image_rendering@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static image_rendering: *mut nsIAtom;
            #[link_name = "?in@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static in_: *mut nsIAtom;
            #[link_name = "?in2@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static in2: *mut nsIAtom;
            #[link_name = "?intercept@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static intercept: *mut nsIAtom;
            #[link_name = "?k1@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static k1: *mut nsIAtom;
            #[link_name = "?k2@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static k2: *mut nsIAtom;
            #[link_name = "?k3@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static k3: *mut nsIAtom;
            #[link_name = "?k4@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static k4: *mut nsIAtom;
            #[link_name = "?kernelMatrix@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static kernelMatrix: *mut nsIAtom;
            #[link_name = "?kernelUnitLength@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static kernelUnitLength: *mut nsIAtom;
            #[link_name = "?lengthAdjust@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lengthAdjust: *mut nsIAtom;
            #[link_name = "?letter_spacing@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static letter_spacing: *mut nsIAtom;
            #[link_name = "?lighten@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lighten: *mut nsIAtom;
            #[link_name = "?lighting_color@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lighting_color: *mut nsIAtom;
            #[link_name = "?limitingConeAngle@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static limitingConeAngle: *mut nsIAtom;
            #[link_name = "?linear@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static linear: *mut nsIAtom;
            #[link_name = "?linearGradient@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static linearGradient: *mut nsIAtom;
            #[link_name = "?linearRGB@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static linearRGB: *mut nsIAtom;
            #[link_name = "?list_style_type@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static list_style_type: *mut nsIAtom;
            #[link_name = "?luminanceToAlpha@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static luminanceToAlpha: *mut nsIAtom;
            #[link_name = "?luminosity@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static luminosity: *mut nsIAtom;
            #[link_name = "?magnify@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static magnify: *mut nsIAtom;
            #[link_name = "?marker@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static marker: *mut nsIAtom;
            #[link_name = "?marker_end@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static marker_end: *mut nsIAtom;
            #[link_name = "?marker_mid@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static marker_mid: *mut nsIAtom;
            #[link_name = "?marker_start@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static marker_start: *mut nsIAtom;
            #[link_name = "?markerHeight@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static markerHeight: *mut nsIAtom;
            #[link_name = "?markerUnits@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static markerUnits: *mut nsIAtom;
            #[link_name = "?markerWidth@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static markerWidth: *mut nsIAtom;
            #[link_name = "?mask@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mask: *mut nsIAtom;
            #[link_name = "?maskContentUnits@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static maskContentUnits: *mut nsIAtom;
            #[link_name = "?mask_type@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mask_type: *mut nsIAtom;
            #[link_name = "?maskUnits@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static maskUnits: *mut nsIAtom;
            #[link_name = "?matrix@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static matrix: *mut nsIAtom;
            #[link_name = "?metadata@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static metadata: *mut nsIAtom;
            #[link_name = "?missingGlyph@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static missingGlyph: *mut nsIAtom;
            #[link_name = "?mm@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mm: *mut nsIAtom;
            #[link_name = "?mpath@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mpath: *mut nsIAtom;
            #[link_name = "?noStitch@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static noStitch: *mut nsIAtom;
            #[link_name = "?numOctaves@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static numOctaves: *mut nsIAtom;
            #[link_name = "?multiply@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static multiply: *mut nsIAtom;
            #[link_name = "?objectBoundingBox@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static objectBoundingBox: *mut nsIAtom;
            #[link_name = "?offset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static offset: *mut nsIAtom;
            #[link_name = "?onSVGLoad@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onSVGLoad: *mut nsIAtom;
            #[link_name = "?onSVGResize@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onSVGResize: *mut nsIAtom;
            #[link_name = "?onSVGScroll@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onSVGScroll: *mut nsIAtom;
            #[link_name = "?onSVGUnload@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onSVGUnload: *mut nsIAtom;
            #[link_name = "?onSVGZoom@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onSVGZoom: *mut nsIAtom;
            #[link_name = "?onzoom@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onzoom: *mut nsIAtom;
            #[link_name = "?opacity@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static opacity: *mut nsIAtom;
            #[link_name = "?_operator@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _operator: *mut nsIAtom;
            #[link_name = "?out@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static out: *mut nsIAtom;
            #[link_name = "?over@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static over: *mut nsIAtom;
            #[link_name = "?overridePreserveAspectRatio@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static overridePreserveAspectRatio: *mut nsIAtom;
            #[link_name = "?pad@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pad: *mut nsIAtom;
            #[link_name = "?path@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static path: *mut nsIAtom;
            #[link_name = "?pathLength@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pathLength: *mut nsIAtom;
            #[link_name = "?patternContentUnits@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static patternContentUnits: *mut nsIAtom;
            #[link_name = "?patternTransform@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static patternTransform: *mut nsIAtom;
            #[link_name = "?patternUnits@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static patternUnits: *mut nsIAtom;
            #[link_name = "?pc@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pc: *mut nsIAtom;
            #[link_name = "?pointer_events@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pointer_events: *mut nsIAtom;
            #[link_name = "?points@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static points: *mut nsIAtom;
            #[link_name = "?pointsAtX@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pointsAtX: *mut nsIAtom;
            #[link_name = "?pointsAtY@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pointsAtY: *mut nsIAtom;
            #[link_name = "?pointsAtZ@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pointsAtZ: *mut nsIAtom;
            #[link_name = "?polyline@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static polyline: *mut nsIAtom;
            #[link_name = "?preserveAlpha@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static preserveAlpha: *mut nsIAtom;
            #[link_name = "?preserveAspectRatio@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static preserveAspectRatio: *mut nsIAtom;
            #[link_name = "?primitiveUnits@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static primitiveUnits: *mut nsIAtom;
            #[link_name = "?pt@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pt: *mut nsIAtom;
            #[link_name = "?px@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static px: *mut nsIAtom;
            #[link_name = "?R@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static R: *mut nsIAtom;
            #[link_name = "?r@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static r: *mut nsIAtom;
            #[link_name = "?rad@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rad: *mut nsIAtom;
            #[link_name = "?radialGradient@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static radialGradient: *mut nsIAtom;
            #[link_name = "?radius@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static radius: *mut nsIAtom;
            #[link_name = "?reflect@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static reflect: *mut nsIAtom;
            #[link_name = "?refX@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static refX: *mut nsIAtom;
            #[link_name = "?refY@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static refY: *mut nsIAtom;
            #[link_name = "?requiredExtensions@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static requiredExtensions: *mut nsIAtom;
            #[link_name = "?requiredFeatures@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static requiredFeatures: *mut nsIAtom;
            #[link_name = "?rotate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rotate: *mut nsIAtom;
            #[link_name = "?rx@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rx: *mut nsIAtom;
            #[link_name = "?ry@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ry: *mut nsIAtom;
            #[link_name = "?saturate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static saturate: *mut nsIAtom;
            #[link_name = "?saturation@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static saturation: *mut nsIAtom;
            #[link_name = "?set@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static set: *mut nsIAtom;
            #[link_name = "?seed@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static seed: *mut nsIAtom;
            #[link_name = "?shadow@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static shadow: *mut nsIAtom;
            #[link_name = "?shape_rendering@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static shape_rendering: *mut nsIAtom;
            #[link_name = "?skewX@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static skewX: *mut nsIAtom;
            #[link_name = "?skewY@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static skewY: *mut nsIAtom;
            #[link_name = "?slope@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static slope: *mut nsIAtom;
            #[link_name = "?softLight@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static softLight: *mut nsIAtom;
            #[link_name = "?spacing@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static spacing: *mut nsIAtom;
            #[link_name = "?spacingAndGlyphs@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static spacingAndGlyphs: *mut nsIAtom;
            #[link_name = "?specularConstant@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static specularConstant: *mut nsIAtom;
            #[link_name = "?specularExponent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static specularExponent: *mut nsIAtom;
            #[link_name = "?spreadMethod@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static spreadMethod: *mut nsIAtom;
            #[link_name = "?sRGB@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sRGB: *mut nsIAtom;
            #[link_name = "?startOffset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static startOffset: *mut nsIAtom;
            #[link_name = "?stdDeviation@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stdDeviation: *mut nsIAtom;
            #[link_name = "?stitch@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stitch: *mut nsIAtom;
            #[link_name = "?stitchTiles@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stitchTiles: *mut nsIAtom;
            #[link_name = "?stop_color@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stop_color: *mut nsIAtom;
            #[link_name = "?stop_opacity@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stop_opacity: *mut nsIAtom;
            #[link_name = "?stroke@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stroke: *mut nsIAtom;
            #[link_name = "?stroke_dasharray@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stroke_dasharray: *mut nsIAtom;
            #[link_name = "?stroke_dashoffset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stroke_dashoffset: *mut nsIAtom;
            #[link_name = "?stroke_linecap@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stroke_linecap: *mut nsIAtom;
            #[link_name = "?stroke_linejoin@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stroke_linejoin: *mut nsIAtom;
            #[link_name = "?stroke_miterlimit@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stroke_miterlimit: *mut nsIAtom;
            #[link_name = "?stroke_opacity@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stroke_opacity: *mut nsIAtom;
            #[link_name = "?stroke_width@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stroke_width: *mut nsIAtom;
            #[link_name = "?strokeWidth@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static strokeWidth: *mut nsIAtom;
            #[link_name = "?surfaceScale@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static surfaceScale: *mut nsIAtom;
            #[link_name = "?svg@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svg: *mut nsIAtom;
            #[link_name = "?svgSwitch@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgSwitch: *mut nsIAtom;
            #[link_name = "?symbol@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static symbol: *mut nsIAtom;
            #[link_name = "?systemLanguage@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static systemLanguage: *mut nsIAtom;
            #[link_name = "?tableValues@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tableValues: *mut nsIAtom;
            #[link_name = "?targetX@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static targetX: *mut nsIAtom;
            #[link_name = "?targetY@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static targetY: *mut nsIAtom;
            #[link_name = "?text_anchor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static text_anchor: *mut nsIAtom;
            #[link_name = "?text_rendering@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static text_rendering: *mut nsIAtom;
            #[link_name = "?textLength@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static textLength: *mut nsIAtom;
            #[link_name = "?textPath@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static textPath: *mut nsIAtom;
            #[link_name = "?tref@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tref: *mut nsIAtom;
            #[link_name = "?tspan@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tspan: *mut nsIAtom;
            #[link_name = "?turbulence@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static turbulence: *mut nsIAtom;
            #[link_name = "?unicode_bidi@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static unicode_bidi: *mut nsIAtom;
            #[link_name = "?userSpaceOnUse@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static userSpaceOnUse: *mut nsIAtom;
            #[link_name = "?view@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static view: *mut nsIAtom;
            #[link_name = "?viewBox@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static viewBox: *mut nsIAtom;
            #[link_name = "?viewTarget@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static viewTarget: *mut nsIAtom;
            #[link_name = "?white_space@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static white_space: *mut nsIAtom;
            #[link_name = "?word_spacing@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static word_spacing: *mut nsIAtom;
            #[link_name = "?writing_mode@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static writing_mode: *mut nsIAtom;
            #[link_name = "?x@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x: *mut nsIAtom;
            #[link_name = "?x1@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x1: *mut nsIAtom;
            #[link_name = "?x2@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x2: *mut nsIAtom;
            #[link_name = "?xChannelSelector@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static xChannelSelector: *mut nsIAtom;
            #[link_name = "?xor_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static xor_: *mut nsIAtom;
            #[link_name = "?y@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static y: *mut nsIAtom;
            #[link_name = "?y1@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static y1: *mut nsIAtom;
            #[link_name = "?y2@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static y2: *mut nsIAtom;
            #[link_name = "?yChannelSelector@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static yChannelSelector: *mut nsIAtom;
            #[link_name = "?z@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static z: *mut nsIAtom;
            #[link_name = "?zoomAndPan@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static zoomAndPan: *mut nsIAtom;
            #[link_name = "?vector_effect@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static vector_effect: *mut nsIAtom;
            #[link_name = "?vertical_align@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static vertical_align: *mut nsIAtom;
            #[link_name = "?accumulate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static accumulate: *mut nsIAtom;
            #[link_name = "?additive@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static additive: *mut nsIAtom;
            #[link_name = "?attributeName@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static attributeName: *mut nsIAtom;
            #[link_name = "?attributeType@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static attributeType: *mut nsIAtom;
            #[link_name = "?auto_reverse@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static auto_reverse: *mut nsIAtom;
            #[link_name = "?begin@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static begin: *mut nsIAtom;
            #[link_name = "?beginEvent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static beginEvent: *mut nsIAtom;
            #[link_name = "?by@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static by: *mut nsIAtom;
            #[link_name = "?calcMode@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static calcMode: *mut nsIAtom;
            #[link_name = "?css@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static css: *mut nsIAtom;
            #[link_name = "?dur@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static dur: *mut nsIAtom;
            #[link_name = "?keyPoints@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static keyPoints: *mut nsIAtom;
            #[link_name = "?keySplines@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static keySplines: *mut nsIAtom;
            #[link_name = "?keyTimes@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static keyTimes: *mut nsIAtom;
            #[link_name = "?mozAnimateMotionDummyAttr@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mozAnimateMotionDummyAttr: *mut nsIAtom;
            #[link_name = "?onbegin@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onbegin: *mut nsIAtom;
            #[link_name = "?onbeginEvent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onbeginEvent: *mut nsIAtom;
            #[link_name = "?onend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onend: *mut nsIAtom;
            #[link_name = "?onendEvent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onendEvent: *mut nsIAtom;
            #[link_name = "?onrepeat@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onrepeat: *mut nsIAtom;
            #[link_name = "?onrepeatEvent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onrepeatEvent: *mut nsIAtom;
            #[link_name = "?repeatCount@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static repeatCount: *mut nsIAtom;
            #[link_name = "?repeatDur@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static repeatDur: *mut nsIAtom;
            #[link_name = "?repeatEvent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static repeatEvent: *mut nsIAtom;
            #[link_name = "?restart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static restart: *mut nsIAtom;
            #[link_name = "?to@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static to: *mut nsIAtom;
            #[link_name = "?XML@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static XML: *mut nsIAtom;
            #[link_name = "?abs_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static abs_: *mut nsIAtom;
            #[link_name = "?accent_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static accent_: *mut nsIAtom;
            #[link_name = "?accentunder_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static accentunder_: *mut nsIAtom;
            #[link_name = "?actiontype_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static actiontype_: *mut nsIAtom;
            #[link_name = "?alignmentscope_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static alignmentscope_: *mut nsIAtom;
            #[link_name = "?altimg_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static altimg_: *mut nsIAtom;
            #[link_name = "?altimg_height_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static altimg_height_: *mut nsIAtom;
            #[link_name = "?altimg_valign_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static altimg_valign_: *mut nsIAtom;
            #[link_name = "?altimg_width_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static altimg_width_: *mut nsIAtom;
            #[link_name = "?annotation_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static annotation_: *mut nsIAtom;
            #[link_name = "?annotation_xml_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static annotation_xml_: *mut nsIAtom;
            #[link_name = "?apply_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static apply_: *mut nsIAtom;
            #[link_name = "?approx_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static approx_: *mut nsIAtom;
            #[link_name = "?arccos_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static arccos_: *mut nsIAtom;
            #[link_name = "?arccosh_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static arccosh_: *mut nsIAtom;
            #[link_name = "?arccot_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static arccot_: *mut nsIAtom;
            #[link_name = "?arccoth_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static arccoth_: *mut nsIAtom;
            #[link_name = "?arccsc_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static arccsc_: *mut nsIAtom;
            #[link_name = "?arccsch_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static arccsch_: *mut nsIAtom;
            #[link_name = "?arcsec_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static arcsec_: *mut nsIAtom;
            #[link_name = "?arcsech_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static arcsech_: *mut nsIAtom;
            #[link_name = "?arcsin_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static arcsin_: *mut nsIAtom;
            #[link_name = "?arcsinh_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static arcsinh_: *mut nsIAtom;
            #[link_name = "?arctan_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static arctan_: *mut nsIAtom;
            #[link_name = "?arctanh_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static arctanh_: *mut nsIAtom;
            #[link_name = "?arg_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static arg_: *mut nsIAtom;
            #[link_name = "?bevelled_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bevelled_: *mut nsIAtom;
            #[link_name = "?bind_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bind_: *mut nsIAtom;
            #[link_name = "?bvar_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bvar_: *mut nsIAtom;
            #[link_name = "?card_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static card_: *mut nsIAtom;
            #[link_name = "?cartesianproduct_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cartesianproduct_: *mut nsIAtom;
            #[link_name = "?cbytes_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cbytes_: *mut nsIAtom;
            #[link_name = "?cd_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cd_: *mut nsIAtom;
            #[link_name = "?cdgroup_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cdgroup_: *mut nsIAtom;
            #[link_name = "?cerror_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cerror_: *mut nsIAtom;
            #[link_name = "?charalign_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static charalign_: *mut nsIAtom;
            #[link_name = "?ci_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ci_: *mut nsIAtom;
            #[link_name = "?closure_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static closure_: *mut nsIAtom;
            #[link_name = "?cn_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cn_: *mut nsIAtom;
            #[link_name = "?codomain_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static codomain_: *mut nsIAtom;
            #[link_name = "?columnalign_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static columnalign_: *mut nsIAtom;
            #[link_name = "?columnalignment_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static columnalignment_: *mut nsIAtom;
            #[link_name = "?columnlines_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static columnlines_: *mut nsIAtom;
            #[link_name = "?columnspacing_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static columnspacing_: *mut nsIAtom;
            #[link_name = "?columnspan_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static columnspan_: *mut nsIAtom;
            #[link_name = "?columnwidth_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static columnwidth_: *mut nsIAtom;
            #[link_name = "?complexes_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static complexes_: *mut nsIAtom;
            #[link_name = "?compose_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static compose_: *mut nsIAtom;
            #[link_name = "?condition_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static condition_: *mut nsIAtom;
            #[link_name = "?conjugate_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static conjugate_: *mut nsIAtom;
            #[link_name = "?cos_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cos_: *mut nsIAtom;
            #[link_name = "?cosh_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cosh_: *mut nsIAtom;
            #[link_name = "?cot_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cot_: *mut nsIAtom;
            #[link_name = "?coth_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static coth_: *mut nsIAtom;
            #[link_name = "?crossout_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static crossout_: *mut nsIAtom;
            #[link_name = "?csc_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static csc_: *mut nsIAtom;
            #[link_name = "?csch_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static csch_: *mut nsIAtom;
            #[link_name = "?cs_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cs_: *mut nsIAtom;
            #[link_name = "?csymbol_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static csymbol_: *mut nsIAtom;
            #[link_name = "?curl_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static curl_: *mut nsIAtom;
            #[link_name = "?decimalpoint_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static decimalpoint_: *mut nsIAtom;
            #[link_name = "?definitionURL_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static definitionURL_: *mut nsIAtom;
            #[link_name = "?degree_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static degree_: *mut nsIAtom;
            #[link_name = "?denomalign_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static denomalign_: *mut nsIAtom;
            #[link_name = "?depth_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static depth_: *mut nsIAtom;
            #[link_name = "?determinant_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static determinant_: *mut nsIAtom;
            #[link_name = "?diff_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static diff_: *mut nsIAtom;
            #[link_name = "?displaystyle_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static displaystyle_: *mut nsIAtom;
            #[link_name = "?divergence_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static divergence_: *mut nsIAtom;
            #[link_name = "?divide_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static divide_: *mut nsIAtom;
            #[link_name = "?domain_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static domain_: *mut nsIAtom;
            #[link_name = "?domainofapplication_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static domainofapplication_: *mut nsIAtom;
            #[link_name = "?edge_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static edge_: *mut nsIAtom;
            #[link_name = "?el_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static el_: *mut nsIAtom;
            #[link_name = "?emptyset_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static emptyset_: *mut nsIAtom;
            #[link_name = "?eq_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static eq_: *mut nsIAtom;
            #[link_name = "?equalcolumns_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static equalcolumns_: *mut nsIAtom;
            #[link_name = "?equalrows_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static equalrows_: *mut nsIAtom;
            #[link_name = "?equivalent_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static equivalent_: *mut nsIAtom;
            #[link_name = "?eulergamma_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static eulergamma_: *mut nsIAtom;
            #[link_name = "?exists_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static exists_: *mut nsIAtom;
            #[link_name = "?exp_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static exp_: *mut nsIAtom;
            #[link_name = "?exponentiale_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static exponentiale_: *mut nsIAtom;
            #[link_name = "?factorial_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static factorial_: *mut nsIAtom;
            #[link_name = "?factorof_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static factorof_: *mut nsIAtom;
            #[link_name = "?fence_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fence_: *mut nsIAtom;
            #[link_name = "?fn_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fn_: *mut nsIAtom;
            #[link_name = "?fontfamily_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fontfamily_: *mut nsIAtom;
            #[link_name = "?fontsize_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fontsize_: *mut nsIAtom;
            #[link_name = "?fontstyle_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fontstyle_: *mut nsIAtom;
            #[link_name = "?fontweight_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fontweight_: *mut nsIAtom;
            #[link_name = "?forall_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static forall_: *mut nsIAtom;
            #[link_name = "?framespacing_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static framespacing_: *mut nsIAtom;
            #[link_name = "?gcd_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static gcd_: *mut nsIAtom;
            #[link_name = "?geq_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static geq_: *mut nsIAtom;
            #[link_name = "?groupalign_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static groupalign_: *mut nsIAtom;
            #[link_name = "?gt_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static gt_: *mut nsIAtom;
            #[link_name = "?ident_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ident_: *mut nsIAtom;
            #[link_name = "?imaginaryi_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static imaginaryi_: *mut nsIAtom;
            #[link_name = "?imaginary_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static imaginary_: *mut nsIAtom;
            #[link_name = "?implies_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static implies_: *mut nsIAtom;
            #[link_name = "?indentalignfirst_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static indentalignfirst_: *mut nsIAtom;
            #[link_name = "?indentalign_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static indentalign_: *mut nsIAtom;
            #[link_name = "?indentalignlast_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static indentalignlast_: *mut nsIAtom;
            #[link_name = "?indentshiftfirst_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static indentshiftfirst_: *mut nsIAtom;
            #[link_name = "?indentshift_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static indentshift_: *mut nsIAtom;
            #[link_name = "?indenttarget_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static indenttarget_: *mut nsIAtom;
            #[link_name = "?integers_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static integers_: *mut nsIAtom;
            #[link_name = "?intersect_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static intersect_: *mut nsIAtom;
            #[link_name = "?interval_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static interval_: *mut nsIAtom;
            #[link_name = "?int_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static int_: *mut nsIAtom;
            #[link_name = "?inverse_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static inverse_: *mut nsIAtom;
            #[link_name = "?lambda_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lambda_: *mut nsIAtom;
            #[link_name = "?laplacian_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static laplacian_: *mut nsIAtom;
            #[link_name = "?largeop_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static largeop_: *mut nsIAtom;
            #[link_name = "?lcm_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lcm_: *mut nsIAtom;
            #[link_name = "?leq_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static leq_: *mut nsIAtom;
            #[link_name = "?limit_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static limit_: *mut nsIAtom;
            #[link_name = "?linebreak_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static linebreak_: *mut nsIAtom;
            #[link_name = "?linebreakmultchar_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static linebreakmultchar_: *mut nsIAtom;
            #[link_name = "?linebreakstyle_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static linebreakstyle_: *mut nsIAtom;
            #[link_name = "?linethickness_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static linethickness_: *mut nsIAtom;
            #[link_name = "?list_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static list_: *mut nsIAtom;
            #[link_name = "?ln_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ln_: *mut nsIAtom;
            #[link_name = "?location_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static location_: *mut nsIAtom;
            #[link_name = "?logbase_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static logbase_: *mut nsIAtom;
            #[link_name = "?log_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static log_: *mut nsIAtom;
            #[link_name = "?longdivstyle_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static longdivstyle_: *mut nsIAtom;
            #[link_name = "?lowlimit_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lowlimit_: *mut nsIAtom;
            #[link_name = "?lquote_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lquote_: *mut nsIAtom;
            #[link_name = "?lspace_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lspace_: *mut nsIAtom;
            #[link_name = "?lt_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lt_: *mut nsIAtom;
            #[link_name = "?maction_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static maction_: *mut nsIAtom;
            #[link_name = "?maligngroup_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static maligngroup_: *mut nsIAtom;
            #[link_name = "?malignmark_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static malignmark_: *mut nsIAtom;
            #[link_name = "?mathbackground_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mathbackground_: *mut nsIAtom;
            #[link_name = "?mathcolor_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mathcolor_: *mut nsIAtom;
            #[link_name = "?mathsize_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mathsize_: *mut nsIAtom;
            #[link_name = "?mathvariant_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mathvariant_: *mut nsIAtom;
            #[link_name = "?matrixrow_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static matrixrow_: *mut nsIAtom;
            #[link_name = "?maxsize_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static maxsize_: *mut nsIAtom;
            #[link_name = "?mean_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mean_: *mut nsIAtom;
            #[link_name = "?median_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static median_: *mut nsIAtom;
            #[link_name = "?menclose_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static menclose_: *mut nsIAtom;
            #[link_name = "?merror_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static merror_: *mut nsIAtom;
            #[link_name = "?mfenced_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mfenced_: *mut nsIAtom;
            #[link_name = "?mfrac_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mfrac_: *mut nsIAtom;
            #[link_name = "?mglyph_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mglyph_: *mut nsIAtom;
            #[link_name = "?mi_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mi_: *mut nsIAtom;
            #[link_name = "?minlabelspacing_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static minlabelspacing_: *mut nsIAtom;
            #[link_name = "?minsize_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static minsize_: *mut nsIAtom;
            #[link_name = "?minus_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static minus_: *mut nsIAtom;
            #[link_name = "?mlabeledtr_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mlabeledtr_: *mut nsIAtom;
            #[link_name = "?mlongdiv_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mlongdiv_: *mut nsIAtom;
            #[link_name = "?mmultiscripts_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mmultiscripts_: *mut nsIAtom;
            #[link_name = "?mn_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mn_: *mut nsIAtom;
            #[link_name = "?momentabout_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static momentabout_: *mut nsIAtom;
            #[link_name = "?moment_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static moment_: *mut nsIAtom;
            #[link_name = "?mo_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mo_: *mut nsIAtom;
            #[link_name = "?movablelimits_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static movablelimits_: *mut nsIAtom;
            #[link_name = "?mover_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mover_: *mut nsIAtom;
            #[link_name = "?mpadded_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mpadded_: *mut nsIAtom;
            #[link_name = "?mphantom_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mphantom_: *mut nsIAtom;
            #[link_name = "?mprescripts_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mprescripts_: *mut nsIAtom;
            #[link_name = "?mroot_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mroot_: *mut nsIAtom;
            #[link_name = "?mrow_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mrow_: *mut nsIAtom;
            #[link_name = "?mscarries_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mscarries_: *mut nsIAtom;
            #[link_name = "?mscarry_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mscarry_: *mut nsIAtom;
            #[link_name = "?msgroup_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static msgroup_: *mut nsIAtom;
            #[link_name = "?msline_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static msline_: *mut nsIAtom;
            #[link_name = "?ms_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ms_: *mut nsIAtom;
            #[link_name = "?mspace_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mspace_: *mut nsIAtom;
            #[link_name = "?msqrt_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static msqrt_: *mut nsIAtom;
            #[link_name = "?msrow_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static msrow_: *mut nsIAtom;
            #[link_name = "?mstack_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mstack_: *mut nsIAtom;
            #[link_name = "?mstyle_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mstyle_: *mut nsIAtom;
            #[link_name = "?msub_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static msub_: *mut nsIAtom;
            #[link_name = "?msubsup_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static msubsup_: *mut nsIAtom;
            #[link_name = "?msup_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static msup_: *mut nsIAtom;
            #[link_name = "?mtable_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mtable_: *mut nsIAtom;
            #[link_name = "?mtd_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mtd_: *mut nsIAtom;
            #[link_name = "?mtext_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mtext_: *mut nsIAtom;
            #[link_name = "?mtr_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mtr_: *mut nsIAtom;
            #[link_name = "?munder_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static munder_: *mut nsIAtom;
            #[link_name = "?munderover_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static munderover_: *mut nsIAtom;
            #[link_name = "?naturalnumbers_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static naturalnumbers_: *mut nsIAtom;
            #[link_name = "?neq_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static neq_: *mut nsIAtom;
            #[link_name = "?notanumber_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static notanumber_: *mut nsIAtom;
            #[link_name = "?notation_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static notation_: *mut nsIAtom;
            #[link_name = "?note_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static note_: *mut nsIAtom;
            #[link_name = "?notin_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static notin_: *mut nsIAtom;
            #[link_name = "?notprsubset_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static notprsubset_: *mut nsIAtom;
            #[link_name = "?notsubset_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static notsubset_: *mut nsIAtom;
            #[link_name = "?numalign_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static numalign_: *mut nsIAtom;
            #[link_name = "?other_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static other_: *mut nsIAtom;
            #[link_name = "?outerproduct_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static outerproduct_: *mut nsIAtom;
            #[link_name = "?partialdiff_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static partialdiff_: *mut nsIAtom;
            #[link_name = "?piece_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static piece_: *mut nsIAtom;
            #[link_name = "?piecewise_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static piecewise_: *mut nsIAtom;
            #[link_name = "?pi_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pi_: *mut nsIAtom;
            #[link_name = "?plus_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static plus_: *mut nsIAtom;
            #[link_name = "?power_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static power_: *mut nsIAtom;
            #[link_name = "?primes_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static primes_: *mut nsIAtom;
            #[link_name = "?product_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static product_: *mut nsIAtom;
            #[link_name = "?prsubset_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static prsubset_: *mut nsIAtom;
            #[link_name = "?quotient_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static quotient_: *mut nsIAtom;
            #[link_name = "?rationals_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rationals_: *mut nsIAtom;
            #[link_name = "?real_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static real_: *mut nsIAtom;
            #[link_name = "?reals_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static reals_: *mut nsIAtom;
            #[link_name = "?reln_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static reln_: *mut nsIAtom;
            #[link_name = "?root_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static root_: *mut nsIAtom;
            #[link_name = "?rowalign_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rowalign_: *mut nsIAtom;
            #[link_name = "?rowlines_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rowlines_: *mut nsIAtom;
            #[link_name = "?rowspacing_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rowspacing_: *mut nsIAtom;
            #[link_name = "?rquote_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rquote_: *mut nsIAtom;
            #[link_name = "?rspace_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rspace_: *mut nsIAtom;
            #[link_name = "?scalarproduct_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scalarproduct_: *mut nsIAtom;
            #[link_name = "?schemaLocation_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static schemaLocation_: *mut nsIAtom;
            #[link_name = "?scriptlevel_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scriptlevel_: *mut nsIAtom;
            #[link_name = "?scriptminsize_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scriptminsize_: *mut nsIAtom;
            #[link_name = "?scriptsizemultiplier_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scriptsizemultiplier_: *mut nsIAtom;
            #[link_name = "?scriptsize_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scriptsize_: *mut nsIAtom;
            #[link_name = "?sdev_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sdev_: *mut nsIAtom;
            #[link_name = "?sech_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sech_: *mut nsIAtom;
            #[link_name = "?sec_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sec_: *mut nsIAtom;
            #[link_name = "?selection_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static selection_: *mut nsIAtom;
            #[link_name = "?selector_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static selector_: *mut nsIAtom;
            #[link_name = "?semantics_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static semantics_: *mut nsIAtom;
            #[link_name = "?separator_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static separator_: *mut nsIAtom;
            #[link_name = "?separators_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static separators_: *mut nsIAtom;
            #[link_name = "?sep_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sep_: *mut nsIAtom;
            #[link_name = "?setdiff_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static setdiff_: *mut nsIAtom;
            #[link_name = "?set_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static set_: *mut nsIAtom;
            #[link_name = "?share_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static share_: *mut nsIAtom;
            #[link_name = "?shift_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static shift_: *mut nsIAtom;
            #[link_name = "?side_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static side_: *mut nsIAtom;
            #[link_name = "?sinh_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sinh_: *mut nsIAtom;
            #[link_name = "?sin_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sin_: *mut nsIAtom;
            #[link_name = "?stackalign_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stackalign_: *mut nsIAtom;
            #[link_name = "?stretchy_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stretchy_: *mut nsIAtom;
            #[link_name = "?subscriptshift_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static subscriptshift_: *mut nsIAtom;
            #[link_name = "?subset_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static subset_: *mut nsIAtom;
            #[link_name = "?superscriptshift_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static superscriptshift_: *mut nsIAtom;
            #[link_name = "?symmetric_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static symmetric_: *mut nsIAtom;
            #[link_name = "?tanh_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tanh_: *mut nsIAtom;
            #[link_name = "?tan_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tan_: *mut nsIAtom;
            #[link_name = "?tendsto_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tendsto_: *mut nsIAtom;
            #[link_name = "?times_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static times_: *mut nsIAtom;
            #[link_name = "?transpose_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static transpose_: *mut nsIAtom;
            #[link_name = "?union_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static union_: *mut nsIAtom;
            #[link_name = "?uplimit_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static uplimit_: *mut nsIAtom;
            #[link_name = "?variance_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static variance_: *mut nsIAtom;
            #[link_name = "?vectorproduct_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static vectorproduct_: *mut nsIAtom;
            #[link_name = "?vector_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static vector_: *mut nsIAtom;
            #[link_name = "?voffset_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static voffset_: *mut nsIAtom;
            #[link_name = "?xref_@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static xref_: *mut nsIAtom;
            #[link_name = "?math@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static math: *mut nsIAtom;
            #[link_name = "?avg@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static avg: *mut nsIAtom;
            #[link_name = "?booleanFromString@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static booleanFromString: *mut nsIAtom;
            #[link_name = "?countNonEmpty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static countNonEmpty: *mut nsIAtom;
            #[link_name = "?daysFromDate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static daysFromDate: *mut nsIAtom;
            #[link_name = "?init@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static init: *mut nsIAtom;
            #[link_name = "?instance@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static instance: *mut nsIAtom;
            #[link_name = "?months@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static months: *mut nsIAtom;
            #[link_name = "?now@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static now: *mut nsIAtom;
            #[link_name = "?seconds@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static seconds: *mut nsIAtom;
            #[link_name = "?secondsFromDateTime@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static secondsFromDateTime: *mut nsIAtom;
            #[link_name = "?onMozSwipeGestureMayStart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozSwipeGestureMayStart: *mut nsIAtom;
            #[link_name = "?onMozSwipeGestureStart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozSwipeGestureStart: *mut nsIAtom;
            #[link_name = "?onMozSwipeGestureUpdate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozSwipeGestureUpdate: *mut nsIAtom;
            #[link_name = "?onMozSwipeGestureEnd@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozSwipeGestureEnd: *mut nsIAtom;
            #[link_name = "?onMozSwipeGesture@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozSwipeGesture: *mut nsIAtom;
            #[link_name = "?onMozMagnifyGestureStart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozMagnifyGestureStart: *mut nsIAtom;
            #[link_name = "?onMozMagnifyGestureUpdate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozMagnifyGestureUpdate: *mut nsIAtom;
            #[link_name = "?onMozMagnifyGesture@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozMagnifyGesture: *mut nsIAtom;
            #[link_name = "?onMozRotateGestureStart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozRotateGestureStart: *mut nsIAtom;
            #[link_name = "?onMozRotateGestureUpdate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozRotateGestureUpdate: *mut nsIAtom;
            #[link_name = "?onMozRotateGesture@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozRotateGesture: *mut nsIAtom;
            #[link_name = "?onMozTapGesture@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozTapGesture: *mut nsIAtom;
            #[link_name = "?onMozPressTapGesture@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozPressTapGesture: *mut nsIAtom;
            #[link_name = "?onMozEdgeUIStarted@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozEdgeUIStarted: *mut nsIAtom;
            #[link_name = "?onMozEdgeUICanceled@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozEdgeUICanceled: *mut nsIAtom;
            #[link_name = "?onMozEdgeUICompleted@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onMozEdgeUICompleted: *mut nsIAtom;
            #[link_name = "?onpointerdown@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpointerdown: *mut nsIAtom;
            #[link_name = "?onpointermove@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpointermove: *mut nsIAtom;
            #[link_name = "?onpointerup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpointerup: *mut nsIAtom;
            #[link_name = "?onpointercancel@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpointercancel: *mut nsIAtom;
            #[link_name = "?onpointerover@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpointerover: *mut nsIAtom;
            #[link_name = "?onpointerout@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpointerout: *mut nsIAtom;
            #[link_name = "?onpointerenter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpointerenter: *mut nsIAtom;
            #[link_name = "?onpointerleave@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpointerleave: *mut nsIAtom;
            #[link_name = "?ongotpointercapture@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ongotpointercapture: *mut nsIAtom;
            #[link_name = "?onlostpointercapture@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onlostpointercapture: *mut nsIAtom;
            #[link_name = "?ondevicemotion@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondevicemotion: *mut nsIAtom;
            #[link_name = "?ondeviceorientation@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondeviceorientation: *mut nsIAtom;
            #[link_name = "?onabsolutedeviceorientation@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onabsolutedeviceorientation: *mut nsIAtom;
            #[link_name = "?ondeviceproximity@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondeviceproximity: *mut nsIAtom;
            #[link_name = "?onmozorientationchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmozorientationchange: *mut nsIAtom;
            #[link_name = "?onuserproximity@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onuserproximity: *mut nsIAtom;
            #[link_name = "?ondevicelight@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondevicelight: *mut nsIAtom;
            #[link_name = "?onmozinterruptbegin@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmozinterruptbegin: *mut nsIAtom;
            #[link_name = "?onmozinterruptend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmozinterruptend: *mut nsIAtom;
            #[link_name = "?cdataTagName@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cdataTagName: *mut nsIAtom;
            #[link_name = "?commentTagName@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static commentTagName: *mut nsIAtom;
            #[link_name = "?documentNodeName@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static documentNodeName: *mut nsIAtom;
            #[link_name = "?documentFragmentNodeName@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static documentFragmentNodeName: *mut nsIAtom;
            #[link_name = "?documentTypeNodeName@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static documentTypeNodeName: *mut nsIAtom;
            #[link_name = "?processingInstructionTagName@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static processingInstructionTagName: *mut nsIAtom;
            #[link_name = "?textTagName@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static textTagName: *mut nsIAtom;
            #[link_name = "?bcTableCellFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bcTableCellFrame: *mut nsIAtom;
            #[link_name = "?blockFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static blockFrame: *mut nsIAtom;
            #[link_name = "?boxFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static boxFrame: *mut nsIAtom;
            #[link_name = "?brFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static brFrame: *mut nsIAtom;
            #[link_name = "?bulletFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static bulletFrame: *mut nsIAtom;
            #[link_name = "?colorControlFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static colorControlFrame: *mut nsIAtom;
            #[link_name = "?columnSetFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static columnSetFrame: *mut nsIAtom;
            #[link_name = "?comboboxControlFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static comboboxControlFrame: *mut nsIAtom;
            #[link_name = "?comboboxDisplayFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static comboboxDisplayFrame: *mut nsIAtom;
            #[link_name = "?deckFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static deckFrame: *mut nsIAtom;
            #[link_name = "?detailsFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static detailsFrame: *mut nsIAtom;
            #[link_name = "?fieldSetFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fieldSetFrame: *mut nsIAtom;
            #[link_name = "?flexContainerFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static flexContainerFrame: *mut nsIAtom;
            #[link_name = "?formControlFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static formControlFrame: *mut nsIAtom;
            #[link_name = "?frameSetFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static frameSetFrame: *mut nsIAtom;
            #[link_name = "?gfxButtonControlFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static gfxButtonControlFrame: *mut nsIAtom;
            #[link_name = "?gridContainerFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static gridContainerFrame: *mut nsIAtom;
            #[link_name = "?HTMLButtonControlFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static HTMLButtonControlFrame: *mut nsIAtom;
            #[link_name = "?HTMLCanvasFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static HTMLCanvasFrame: *mut nsIAtom;
            #[link_name = "?subDocumentFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static subDocumentFrame: *mut nsIAtom;
            #[link_name = "?imageBoxFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static imageBoxFrame: *mut nsIAtom;
            #[link_name = "?imageFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static imageFrame: *mut nsIAtom;
            #[link_name = "?imageControlFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static imageControlFrame: *mut nsIAtom;
            #[link_name = "?inlineFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static inlineFrame: *mut nsIAtom;
            #[link_name = "?leafBoxFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static leafBoxFrame: *mut nsIAtom;
            #[link_name = "?legendFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static legendFrame: *mut nsIAtom;
            #[link_name = "?letterFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static letterFrame: *mut nsIAtom;
            #[link_name = "?lineFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lineFrame: *mut nsIAtom;
            #[link_name = "?listControlFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static listControlFrame: *mut nsIAtom;
            #[link_name = "?menuFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static menuFrame: *mut nsIAtom;
            #[link_name = "?meterFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static meterFrame: *mut nsIAtom;
            #[link_name = "?menuPopupFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static menuPopupFrame: *mut nsIAtom;
            #[link_name = "?numberControlFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static numberControlFrame: *mut nsIAtom;
            #[link_name = "?objectFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static objectFrame: *mut nsIAtom;
            #[link_name = "?pageFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pageFrame: *mut nsIAtom;
            #[link_name = "?pageBreakFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pageBreakFrame: *mut nsIAtom;
            #[link_name = "?pageContentFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pageContentFrame: *mut nsIAtom;
            #[link_name = "?placeholderFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static placeholderFrame: *mut nsIAtom;
            #[link_name = "?popupSetFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static popupSetFrame: *mut nsIAtom;
            #[link_name = "?progressFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static progressFrame: *mut nsIAtom;
            #[link_name = "?canvasFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static canvasFrame: *mut nsIAtom;
            #[link_name = "?rangeFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rangeFrame: *mut nsIAtom;
            #[link_name = "?rootFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rootFrame: *mut nsIAtom;
            #[link_name = "?rubyBaseContainerFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rubyBaseContainerFrame: *mut nsIAtom;
            #[link_name = "?rubyBaseFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rubyBaseFrame: *mut nsIAtom;
            #[link_name = "?rubyFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rubyFrame: *mut nsIAtom;
            #[link_name = "?rubyTextContainerFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rubyTextContainerFrame: *mut nsIAtom;
            #[link_name = "?rubyTextFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rubyTextFrame: *mut nsIAtom;
            #[link_name = "?scrollFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scrollFrame: *mut nsIAtom;
            #[link_name = "?scrollbarFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scrollbarFrame: *mut nsIAtom;
            #[link_name = "?sequenceFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sequenceFrame: *mut nsIAtom;
            #[link_name = "?sliderFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sliderFrame: *mut nsIAtom;
            #[link_name = "?tableCellFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tableCellFrame: *mut nsIAtom;
            #[link_name = "?tableColFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tableColFrame: *mut nsIAtom;
            #[link_name = "?tableColGroupFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tableColGroupFrame: *mut nsIAtom;
            #[link_name = "?tableFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tableFrame: *mut nsIAtom;
            #[link_name = "?tableWrapperFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tableWrapperFrame: *mut nsIAtom;
            #[link_name = "?tableRowGroupFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tableRowGroupFrame: *mut nsIAtom;
            #[link_name = "?tableRowFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tableRowFrame: *mut nsIAtom;
            #[link_name = "?textInputFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static textInputFrame: *mut nsIAtom;
            #[link_name = "?textFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static textFrame: *mut nsIAtom;
            #[link_name = "?viewportFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static viewportFrame: *mut nsIAtom;
            #[link_name = "?XULLabelFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static XULLabelFrame: *mut nsIAtom;
            #[link_name = "?svgAFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgAFrame: *mut nsIAtom;
            #[link_name = "?svgClipPathFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgClipPathFrame: *mut nsIAtom;
            #[link_name = "?svgDefsFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgDefsFrame: *mut nsIAtom;
            #[link_name = "?svgFEContainerFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgFEContainerFrame: *mut nsIAtom;
            #[link_name = "?svgFEImageFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgFEImageFrame: *mut nsIAtom;
            #[link_name = "?svgFELeafFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgFELeafFrame: *mut nsIAtom;
            #[link_name = "?svgFEUnstyledLeafFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgFEUnstyledLeafFrame: *mut nsIAtom;
            #[link_name = "?svgFilterFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgFilterFrame: *mut nsIAtom;
            #[link_name = "?svgForeignObjectFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgForeignObjectFrame: *mut nsIAtom;
            #[link_name = "?svgGenericContainerFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgGenericContainerFrame: *mut nsIAtom;
            #[link_name = "?svgGFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgGFrame: *mut nsIAtom;
            #[link_name = "?svgGradientFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgGradientFrame: *mut nsIAtom;
            #[link_name = "?svgImageFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgImageFrame: *mut nsIAtom;
            #[link_name = "?svgInnerSVGFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgInnerSVGFrame: *mut nsIAtom;
            #[link_name = "?svgLinearGradientFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgLinearGradientFrame: *mut nsIAtom;
            #[link_name = "?svgMarkerFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgMarkerFrame: *mut nsIAtom;
            #[link_name = "?svgMarkerAnonChildFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgMarkerAnonChildFrame: *mut nsIAtom;
            #[link_name = "?svgMaskFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgMaskFrame: *mut nsIAtom;
            #[link_name = "?svgOuterSVGFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgOuterSVGFrame: *mut nsIAtom;
            #[link_name = "?svgOuterSVGAnonChildFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgOuterSVGAnonChildFrame: *mut nsIAtom;
            #[link_name = "?svgPathGeometryFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgPathGeometryFrame: *mut nsIAtom;
            #[link_name = "?svgPatternFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgPatternFrame: *mut nsIAtom;
            #[link_name = "?svgRadialGradientFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgRadialGradientFrame: *mut nsIAtom;
            #[link_name = "?svgStopFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgStopFrame: *mut nsIAtom;
            #[link_name = "?svgSwitchFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgSwitchFrame: *mut nsIAtom;
            #[link_name = "?svgTextFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgTextFrame: *mut nsIAtom;
            #[link_name = "?svgUseFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgUseFrame: *mut nsIAtom;
            #[link_name = "?svgViewFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static svgViewFrame: *mut nsIAtom;
            #[link_name = "?HTMLVideoFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static HTMLVideoFrame: *mut nsIAtom;
            #[link_name = "?onloadend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onloadend: *mut nsIAtom;
            #[link_name = "?onloadstart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onloadstart: *mut nsIAtom;
            #[link_name = "?onprogress@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onprogress: *mut nsIAtom;
            #[link_name = "?onsuspend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onsuspend: *mut nsIAtom;
            #[link_name = "?onemptied@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onemptied: *mut nsIAtom;
            #[link_name = "?onstalled@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onstalled: *mut nsIAtom;
            #[link_name = "?onplay@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onplay: *mut nsIAtom;
            #[link_name = "?onpause@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onpause: *mut nsIAtom;
            #[link_name = "?onloadedmetadata@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onloadedmetadata: *mut nsIAtom;
            #[link_name = "?onloadeddata@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onloadeddata: *mut nsIAtom;
            #[link_name = "?onwaiting@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onwaiting: *mut nsIAtom;
            #[link_name = "?onplaying@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onplaying: *mut nsIAtom;
            #[link_name = "?oncanplay@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncanplay: *mut nsIAtom;
            #[link_name = "?oncanplaythrough@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncanplaythrough: *mut nsIAtom;
            #[link_name = "?onseeking@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onseeking: *mut nsIAtom;
            #[link_name = "?onseeked@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onseeked: *mut nsIAtom;
            #[link_name = "?ontimeout@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ontimeout: *mut nsIAtom;
            #[link_name = "?ontimeupdate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ontimeupdate: *mut nsIAtom;
            #[link_name = "?onended@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onended: *mut nsIAtom;
            #[link_name = "?onratechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onratechange: *mut nsIAtom;
            #[link_name = "?ondurationchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondurationchange: *mut nsIAtom;
            #[link_name = "?onvolumechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onvolumechange: *mut nsIAtom;
            #[link_name = "?onaddtrack@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onaddtrack: *mut nsIAtom;
            #[link_name = "?oncontrollerchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncontrollerchange: *mut nsIAtom;
            #[link_name = "?oncuechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static oncuechange: *mut nsIAtom;
            #[link_name = "?onenter@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onenter: *mut nsIAtom;
            #[link_name = "?onexit@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onexit: *mut nsIAtom;
            #[link_name = "?onencrypted@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onencrypted: *mut nsIAtom;
            #[link_name = "?encrypted@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static encrypted: *mut nsIAtom;
            #[link_name = "?onremovetrack@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onremovetrack: *mut nsIAtom;
            #[link_name = "?loadstart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static loadstart: *mut nsIAtom;
            #[link_name = "?suspend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static suspend: *mut nsIAtom;
            #[link_name = "?emptied@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static emptied: *mut nsIAtom;
            #[link_name = "?stalled@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static stalled: *mut nsIAtom;
            #[link_name = "?play@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static play: *mut nsIAtom;
            #[link_name = "?pause@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pause: *mut nsIAtom;
            #[link_name = "?loadedmetadata@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static loadedmetadata: *mut nsIAtom;
            #[link_name = "?loadeddata@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static loadeddata: *mut nsIAtom;
            #[link_name = "?waiting@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static waiting: *mut nsIAtom;
            #[link_name = "?playing@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static playing: *mut nsIAtom;
            #[link_name = "?seeking@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static seeking: *mut nsIAtom;
            #[link_name = "?seeked@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static seeked: *mut nsIAtom;
            #[link_name = "?timeupdate@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static timeupdate: *mut nsIAtom;
            #[link_name = "?ended@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ended: *mut nsIAtom;
            #[link_name = "?canplay@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static canplay: *mut nsIAtom;
            #[link_name = "?canplaythrough@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static canplaythrough: *mut nsIAtom;
            #[link_name = "?ratechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ratechange: *mut nsIAtom;
            #[link_name = "?durationchange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static durationchange: *mut nsIAtom;
            #[link_name = "?volumechange@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static volumechange: *mut nsIAtom;
            #[link_name = "?ondataavailable@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ondataavailable: *mut nsIAtom;
            #[link_name = "?onwarning@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onwarning: *mut nsIAtom;
            #[link_name = "?onstart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onstart: *mut nsIAtom;
            #[link_name = "?onstop@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onstop: *mut nsIAtom;
            #[link_name = "?onphoto@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onphoto: *mut nsIAtom;
            #[link_name = "?onactivestatechanged@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onactivestatechanged: *mut nsIAtom;
            #[link_name = "?ongamepadbuttondown@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ongamepadbuttondown: *mut nsIAtom;
            #[link_name = "?ongamepadbuttonup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ongamepadbuttonup: *mut nsIAtom;
            #[link_name = "?ongamepadaxismove@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ongamepadaxismove: *mut nsIAtom;
            #[link_name = "?ongamepadconnected@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ongamepadconnected: *mut nsIAtom;
            #[link_name = "?ongamepaddisconnected@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ongamepaddisconnected: *mut nsIAtom;
            #[link_name = "?animationsProperty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static animationsProperty: *mut nsIAtom;
            #[link_name = "?animationsOfBeforeProperty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static animationsOfBeforeProperty: *mut nsIAtom;
            #[link_name = "?animationsOfAfterProperty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static animationsOfAfterProperty: *mut nsIAtom;
            #[link_name = "?animationEffectsProperty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static animationEffectsProperty: *mut nsIAtom;
            #[link_name = "?animationEffectsForBeforeProperty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static animationEffectsForBeforeProperty: *mut nsIAtom;
            #[link_name = "?animationEffectsForAfterProperty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static animationEffectsForAfterProperty: *mut nsIAtom;
            #[link_name = "?cssPseudoElementBeforeProperty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cssPseudoElementBeforeProperty: *mut nsIAtom;
            #[link_name = "?cssPseudoElementAfterProperty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cssPseudoElementAfterProperty: *mut nsIAtom;
            #[link_name = "?transitionsProperty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static transitionsProperty: *mut nsIAtom;
            #[link_name = "?transitionsOfBeforeProperty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static transitionsOfBeforeProperty: *mut nsIAtom;
            #[link_name = "?transitionsOfAfterProperty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static transitionsOfAfterProperty: *mut nsIAtom;
            #[link_name = "?genConInitializerProperty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static genConInitializerProperty: *mut nsIAtom;
            #[link_name = "?labelMouseDownPtProperty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static labelMouseDownPtProperty: *mut nsIAtom;
            #[link_name = "?baseURIProperty@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static baseURIProperty: *mut nsIAtom;
            #[link_name = "?lockedStyleStates@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lockedStyleStates: *mut nsIAtom;
            #[link_name = "?apzCallbackTransform@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static apzCallbackTransform: *mut nsIAtom;
            #[link_name = "?restylableAnonymousNode@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static restylableAnonymousNode: *mut nsIAtom;
            #[link_name = "?paintRequestTime@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static paintRequestTime: *mut nsIAtom;
            #[link_name = "?Japanese@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Japanese: *mut nsIAtom;
            #[link_name = "?Chinese@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Chinese: *mut nsIAtom;
            #[link_name = "?Taiwanese@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Taiwanese: *mut nsIAtom;
            #[link_name = "?HongKongChinese@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static HongKongChinese: *mut nsIAtom;
            #[link_name = "?Unicode@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Unicode: *mut nsIAtom;
            #[link_name = "?ko@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ko: *mut nsIAtom;
            #[link_name = "?zh_cn@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static zh_cn: *mut nsIAtom;
            #[link_name = "?zh_hk@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static zh_hk: *mut nsIAtom;
            #[link_name = "?zh_tw@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static zh_tw: *mut nsIAtom;
            #[link_name = "?x_cyrillic@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_cyrillic: *mut nsIAtom;
            #[link_name = "?he@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static he: *mut nsIAtom;
            #[link_name = "?ar@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ar: *mut nsIAtom;
            #[link_name = "?x_devanagari@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_devanagari: *mut nsIAtom;
            #[link_name = "?x_tamil@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_tamil: *mut nsIAtom;
            #[link_name = "?x_armn@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_armn: *mut nsIAtom;
            #[link_name = "?x_beng@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_beng: *mut nsIAtom;
            #[link_name = "?x_cans@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_cans: *mut nsIAtom;
            #[link_name = "?x_ethi@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_ethi: *mut nsIAtom;
            #[link_name = "?x_geor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_geor: *mut nsIAtom;
            #[link_name = "?x_gujr@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_gujr: *mut nsIAtom;
            #[link_name = "?x_guru@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_guru: *mut nsIAtom;
            #[link_name = "?x_khmr@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_khmr: *mut nsIAtom;
            #[link_name = "?x_knda@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_knda: *mut nsIAtom;
            #[link_name = "?x_mlym@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_mlym: *mut nsIAtom;
            #[link_name = "?x_orya@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_orya: *mut nsIAtom;
            #[link_name = "?x_sinh@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_sinh: *mut nsIAtom;
            #[link_name = "?x_telu@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_telu: *mut nsIAtom;
            #[link_name = "?x_tibt@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_tibt: *mut nsIAtom;
            #[link_name = "?az@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static az: *mut nsIAtom;
            #[link_name = "?ba@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ba: *mut nsIAtom;
            #[link_name = "?crh@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static crh: *mut nsIAtom;
            #[link_name = "?el@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static el: *mut nsIAtom;
            #[link_name = "?ga@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ga: *mut nsIAtom;
            #[link_name = "?nl@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nl: *mut nsIAtom;
            #[link_name = "?x_math@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static x_math: *mut nsIAtom;
            #[link_name = "?TypingTxnName@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static TypingTxnName: *mut nsIAtom;
            #[link_name = "?IMETxnName@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static IMETxnName: *mut nsIAtom;
            #[link_name = "?DeleteTxnName@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static DeleteTxnName: *mut nsIAtom;
            #[link_name = "?serif@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static serif: *mut nsIAtom;
            #[link_name = "?sans_serif@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static sans_serif: *mut nsIAtom;
            #[link_name = "?cursive@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cursive: *mut nsIAtom;
            #[link_name = "?fantasy@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static fantasy: *mut nsIAtom;
            #[link_name = "?monospace@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static monospace: *mut nsIAtom;
            #[link_name = "?Remote@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Remote: *mut nsIAtom;
            #[link_name = "?RemoteId@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static RemoteId: *mut nsIAtom;
            #[link_name = "?DisplayPort@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static DisplayPort: *mut nsIAtom;
            #[link_name = "?DisplayPortMargins@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static DisplayPortMargins: *mut nsIAtom;
            #[link_name = "?DisplayPortBase@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static DisplayPortBase: *mut nsIAtom;
            #[link_name = "?AsyncScrollLayerCreationFailed@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static AsyncScrollLayerCreationFailed: *mut nsIAtom;
            #[link_name = "?forcemessagemanager@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static forcemessagemanager: *mut nsIAtom;
            #[link_name = "?color_picker_available@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static color_picker_available: *mut nsIAtom;
            #[link_name = "?scrollbar_start_backward@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scrollbar_start_backward: *mut nsIAtom;
            #[link_name = "?scrollbar_start_forward@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scrollbar_start_forward: *mut nsIAtom;
            #[link_name = "?scrollbar_end_backward@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scrollbar_end_backward: *mut nsIAtom;
            #[link_name = "?scrollbar_end_forward@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scrollbar_end_forward: *mut nsIAtom;
            #[link_name = "?scrollbar_thumb_proportional@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scrollbar_thumb_proportional: *mut nsIAtom;
            #[link_name = "?images_in_menus@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static images_in_menus: *mut nsIAtom;
            #[link_name = "?images_in_buttons@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static images_in_buttons: *mut nsIAtom;
            #[link_name = "?overlay_scrollbars@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static overlay_scrollbars: *mut nsIAtom;
            #[link_name = "?windows_default_theme@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static windows_default_theme: *mut nsIAtom;
            #[link_name = "?mac_graphite_theme@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mac_graphite_theme: *mut nsIAtom;
            #[link_name = "?mac_lion_theme@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mac_lion_theme: *mut nsIAtom;
            #[link_name = "?mac_yosemite_theme@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mac_yosemite_theme: *mut nsIAtom;
            #[link_name = "?windows_compositor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static windows_compositor: *mut nsIAtom;
            #[link_name = "?windows_glass@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static windows_glass: *mut nsIAtom;
            #[link_name = "?touch_enabled@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static touch_enabled: *mut nsIAtom;
            #[link_name = "?menubar_drag@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static menubar_drag: *mut nsIAtom;
            #[link_name = "?swipe_animation_enabled@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static swipe_animation_enabled: *mut nsIAtom;
            #[link_name = "?physical_home_button@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static physical_home_button: *mut nsIAtom;
            #[link_name = "?windows_classic@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static windows_classic: *mut nsIAtom;
            #[link_name = "?windows_theme_aero@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static windows_theme_aero: *mut nsIAtom;
            #[link_name = "?windows_theme_aero_lite@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static windows_theme_aero_lite: *mut nsIAtom;
            #[link_name = "?windows_theme_luna_blue@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static windows_theme_luna_blue: *mut nsIAtom;
            #[link_name = "?windows_theme_luna_olive@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static windows_theme_luna_olive: *mut nsIAtom;
            #[link_name = "?windows_theme_luna_silver@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static windows_theme_luna_silver: *mut nsIAtom;
            #[link_name = "?windows_theme_royale@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static windows_theme_royale: *mut nsIAtom;
            #[link_name = "?windows_theme_zune@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static windows_theme_zune: *mut nsIAtom;
            #[link_name = "?windows_theme_generic@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static windows_theme_generic: *mut nsIAtom;
            #[link_name = "?_moz_color_picker_available@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_color_picker_available: *mut nsIAtom;
            #[link_name = "?_moz_scrollbar_start_backward@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_scrollbar_start_backward: *mut nsIAtom;
            #[link_name = "?_moz_scrollbar_start_forward@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_scrollbar_start_forward: *mut nsIAtom;
            #[link_name = "?_moz_scrollbar_end_backward@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_scrollbar_end_backward: *mut nsIAtom;
            #[link_name = "?_moz_scrollbar_end_forward@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_scrollbar_end_forward: *mut nsIAtom;
            #[link_name = "?_moz_scrollbar_thumb_proportional@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_scrollbar_thumb_proportional: *mut nsIAtom;
            #[link_name = "?_moz_images_in_menus@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_images_in_menus: *mut nsIAtom;
            #[link_name = "?_moz_images_in_buttons@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_images_in_buttons: *mut nsIAtom;
            #[link_name = "?_moz_overlay_scrollbars@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_overlay_scrollbars: *mut nsIAtom;
            #[link_name = "?_moz_windows_default_theme@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_windows_default_theme: *mut nsIAtom;
            #[link_name = "?_moz_mac_graphite_theme@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_mac_graphite_theme: *mut nsIAtom;
            #[link_name = "?_moz_mac_lion_theme@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_mac_lion_theme: *mut nsIAtom;
            #[link_name = "?_moz_mac_yosemite_theme@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_mac_yosemite_theme: *mut nsIAtom;
            #[link_name = "?_moz_windows_compositor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_windows_compositor: *mut nsIAtom;
            #[link_name = "?_moz_windows_classic@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_windows_classic: *mut nsIAtom;
            #[link_name = "?_moz_windows_glass@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_windows_glass: *mut nsIAtom;
            #[link_name = "?_moz_windows_theme@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_windows_theme: *mut nsIAtom;
            #[link_name = "?_moz_os_version@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_os_version: *mut nsIAtom;
            #[link_name = "?_moz_touch_enabled@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_touch_enabled: *mut nsIAtom;
            #[link_name = "?_moz_menubar_drag@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_menubar_drag: *mut nsIAtom;
            #[link_name = "?_moz_device_pixel_ratio@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_device_pixel_ratio: *mut nsIAtom;
            #[link_name = "?_moz_device_orientation@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_device_orientation: *mut nsIAtom;
            #[link_name = "?_moz_is_resource_document@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_is_resource_document: *mut nsIAtom;
            #[link_name = "?_moz_swipe_animation_enabled@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_swipe_animation_enabled: *mut nsIAtom;
            #[link_name = "?_moz_physical_home_button@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _moz_physical_home_button: *mut nsIAtom;
            #[link_name = "?Back@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Back: *mut nsIAtom;
            #[link_name = "?Forward@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Forward: *mut nsIAtom;
            #[link_name = "?Reload@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Reload: *mut nsIAtom;
            #[link_name = "?Stop@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Stop: *mut nsIAtom;
            #[link_name = "?Search@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Search: *mut nsIAtom;
            #[link_name = "?Bookmarks@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Bookmarks: *mut nsIAtom;
            #[link_name = "?Home@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Home: *mut nsIAtom;
            #[link_name = "?Clear@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Clear: *mut nsIAtom;
            #[link_name = "?VolumeUp@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static VolumeUp: *mut nsIAtom;
            #[link_name = "?VolumeDown@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static VolumeDown: *mut nsIAtom;
            #[link_name = "?NextTrack@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static NextTrack: *mut nsIAtom;
            #[link_name = "?PreviousTrack@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static PreviousTrack: *mut nsIAtom;
            #[link_name = "?MediaStop@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static MediaStop: *mut nsIAtom;
            #[link_name = "?PlayPause@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static PlayPause: *mut nsIAtom;
            #[link_name = "?Menu@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Menu: *mut nsIAtom;
            #[link_name = "?New@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static New: *mut nsIAtom;
            #[link_name = "?Open@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Open: *mut nsIAtom;
            #[link_name = "?Close@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Close: *mut nsIAtom;
            #[link_name = "?Save@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Save: *mut nsIAtom;
            #[link_name = "?Find@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Find: *mut nsIAtom;
            #[link_name = "?Help@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Help: *mut nsIAtom;
            #[link_name = "?Print@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static Print: *mut nsIAtom;
            #[link_name = "?SendMail@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static SendMail: *mut nsIAtom;
            #[link_name = "?ForwardMail@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ForwardMail: *mut nsIAtom;
            #[link_name = "?ReplyToMail@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static ReplyToMail: *mut nsIAtom;
            #[link_name = "?mouseWheel@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mouseWheel: *mut nsIAtom;
            #[link_name = "?pixels@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pixels: *mut nsIAtom;
            #[link_name = "?lines@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lines: *mut nsIAtom;
            #[link_name = "?pages@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static pages: *mut nsIAtom;
            #[link_name = "?scrollbars@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static scrollbars: *mut nsIAtom;
            #[link_name = "?other@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static other: *mut nsIAtom;
            #[link_name = "?apz@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static apz: *mut nsIAtom;
            #[link_name = "?restore@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static restore: *mut nsIAtom;
            #[link_name = "?alert@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static alert: *mut nsIAtom;
            #[link_name = "?alertdialog@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static alertdialog: *mut nsIAtom;
            #[link_name = "?application@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static application: *mut nsIAtom;
            #[link_name = "?aria_activedescendant@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_activedescendant: *mut nsIAtom;
            #[link_name = "?aria_atomic@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_atomic: *mut nsIAtom;
            #[link_name = "?aria_autocomplete@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_autocomplete: *mut nsIAtom;
            #[link_name = "?aria_busy@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_busy: *mut nsIAtom;
            #[link_name = "?aria_checked@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_checked: *mut nsIAtom;
            #[link_name = "?aria_colcount@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_colcount: *mut nsIAtom;
            #[link_name = "?aria_colindex@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_colindex: *mut nsIAtom;
            #[link_name = "?aria_controls@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_controls: *mut nsIAtom;
            #[link_name = "?aria_describedby@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_describedby: *mut nsIAtom;
            #[link_name = "?aria_disabled@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_disabled: *mut nsIAtom;
            #[link_name = "?aria_dropeffect@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_dropeffect: *mut nsIAtom;
            #[link_name = "?aria_expanded@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_expanded: *mut nsIAtom;
            #[link_name = "?aria_flowto@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_flowto: *mut nsIAtom;
            #[link_name = "?aria_grabbed@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_grabbed: *mut nsIAtom;
            #[link_name = "?aria_haspopup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_haspopup: *mut nsIAtom;
            #[link_name = "?aria_hidden@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_hidden: *mut nsIAtom;
            #[link_name = "?aria_invalid@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_invalid: *mut nsIAtom;
            #[link_name = "?aria_label@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_label: *mut nsIAtom;
            #[link_name = "?aria_labelledby@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_labelledby: *mut nsIAtom;
            #[link_name = "?aria_level@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_level: *mut nsIAtom;
            #[link_name = "?aria_live@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_live: *mut nsIAtom;
            #[link_name = "?aria_modal@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_modal: *mut nsIAtom;
            #[link_name = "?aria_multiline@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_multiline: *mut nsIAtom;
            #[link_name = "?aria_multiselectable@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_multiselectable: *mut nsIAtom;
            #[link_name = "?aria_orientation@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_orientation: *mut nsIAtom;
            #[link_name = "?aria_owns@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_owns: *mut nsIAtom;
            #[link_name = "?aria_posinset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_posinset: *mut nsIAtom;
            #[link_name = "?aria_pressed@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_pressed: *mut nsIAtom;
            #[link_name = "?aria_readonly@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_readonly: *mut nsIAtom;
            #[link_name = "?aria_relevant@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_relevant: *mut nsIAtom;
            #[link_name = "?aria_required@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_required: *mut nsIAtom;
            #[link_name = "?aria_rowcount@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_rowcount: *mut nsIAtom;
            #[link_name = "?aria_rowindex@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_rowindex: *mut nsIAtom;
            #[link_name = "?aria_selected@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_selected: *mut nsIAtom;
            #[link_name = "?aria_setsize@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_setsize: *mut nsIAtom;
            #[link_name = "?aria_sort@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_sort: *mut nsIAtom;
            #[link_name = "?aria_valuenow@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_valuenow: *mut nsIAtom;
            #[link_name = "?aria_valuemin@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_valuemin: *mut nsIAtom;
            #[link_name = "?aria_valuemax@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_valuemax: *mut nsIAtom;
            #[link_name = "?aria_valuetext@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static aria_valuetext: *mut nsIAtom;
            #[link_name = "?AreaFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static AreaFrame: *mut nsIAtom;
            #[link_name = "?auto_generated@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static auto_generated: *mut nsIAtom;
            #[link_name = "?banner@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static banner: *mut nsIAtom;
            #[link_name = "?checkable@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static checkable: *mut nsIAtom;
            #[link_name = "?choices@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static choices: *mut nsIAtom;
            #[link_name = "?columnheader@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static columnheader: *mut nsIAtom;
            #[link_name = "?complementary@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static complementary: *mut nsIAtom;
            #[link_name = "?containerAtomic@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static containerAtomic: *mut nsIAtom;
            #[link_name = "?containerBusy@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static containerBusy: *mut nsIAtom;
            #[link_name = "?containerLive@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static containerLive: *mut nsIAtom;
            #[link_name = "?containerLiveRole@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static containerLiveRole: *mut nsIAtom;
            #[link_name = "?containerRelevant@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static containerRelevant: *mut nsIAtom;
            #[link_name = "?contentinfo@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static contentinfo: *mut nsIAtom;
            #[link_name = "?cycles@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static cycles: *mut nsIAtom;
            #[link_name = "?datatable@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static datatable: *mut nsIAtom;
            #[link_name = "?eventFromInput@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static eventFromInput: *mut nsIAtom;
            #[link_name = "?grammar@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static grammar: *mut nsIAtom;
            #[link_name = "?gridcell@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static gridcell: *mut nsIAtom;
            #[link_name = "?heading@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static heading: *mut nsIAtom;
            #[link_name = "?hitregion@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static hitregion: *mut nsIAtom;
            #[link_name = "?InlineBlockFrame@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static InlineBlockFrame: *mut nsIAtom;
            #[link_name = "?inlinevalue@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static inlinevalue: *mut nsIAtom;
            #[link_name = "?invalid@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static invalid: *mut nsIAtom;
            #[link_name = "?item@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static item: *mut nsIAtom;
            #[link_name = "?itemset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static itemset: *mut nsIAtom;
            #[link_name = "?lineNumber@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static lineNumber: *mut nsIAtom;
            #[link_name = "?linkedPanel@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static linkedPanel: *mut nsIAtom;
            #[link_name = "?live@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static live: *mut nsIAtom;
            #[link_name = "?menuitemcheckbox@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static menuitemcheckbox: *mut nsIAtom;
            #[link_name = "?menuitemradio@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static menuitemradio: *mut nsIAtom;
            #[link_name = "?mixed@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static mixed: *mut nsIAtom;
            #[link_name = "?multiline@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static multiline: *mut nsIAtom;
            #[link_name = "?navigation@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static navigation: *mut nsIAtom;
            #[link_name = "?polite@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static polite: *mut nsIAtom;
            #[link_name = "?posinset@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static posinset: *mut nsIAtom;
            #[link_name = "?presentation@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static presentation: *mut nsIAtom;
            #[link_name = "?progressbar@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static progressbar: *mut nsIAtom;
            #[link_name = "?region@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static region: *mut nsIAtom;
            #[link_name = "?rowgroup@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rowgroup: *mut nsIAtom;
            #[link_name = "?rowheader@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static rowheader: *mut nsIAtom;
            #[link_name = "?search@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static search: *mut nsIAtom;
            #[link_name = "?searchbox@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static searchbox: *mut nsIAtom;
            #[link_name = "?select1@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static select1: *mut nsIAtom;
            #[link_name = "?setsize@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static setsize: *mut nsIAtom;
            #[link_name = "?spelling@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static spelling: *mut nsIAtom;
            #[link_name = "?spinbutton@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static spinbutton: *mut nsIAtom;
            #[link_name = "?status@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static status: *mut nsIAtom;
            #[link_name = "?_switch@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _switch: *mut nsIAtom;
            #[link_name = "?tableCellIndex@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tableCellIndex: *mut nsIAtom;
            #[link_name = "?tablist@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static tablist: *mut nsIAtom;
            #[link_name = "?textIndent@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static textIndent: *mut nsIAtom;
            #[link_name = "?textInputType@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static textInputType: *mut nsIAtom;
            #[link_name = "?textLineThroughColor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static textLineThroughColor: *mut nsIAtom;
            #[link_name = "?textLineThroughStyle@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static textLineThroughStyle: *mut nsIAtom;
            #[link_name = "?textPosition@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static textPosition: *mut nsIAtom;
            #[link_name = "?textUnderlineColor@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static textUnderlineColor: *mut nsIAtom;
            #[link_name = "?textUnderlineStyle@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static textUnderlineStyle: *mut nsIAtom;
            #[link_name = "?timer@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static timer: *mut nsIAtom;
            #[link_name = "?toolbarname@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static toolbarname: *mut nsIAtom;
            #[link_name = "?toolbarseparator@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static toolbarseparator: *mut nsIAtom;
            #[link_name = "?toolbarspacer@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static toolbarspacer: *mut nsIAtom;
            #[link_name = "?toolbarspring@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static toolbarspring: *mut nsIAtom;
            #[link_name = "?treegrid@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static treegrid: *mut nsIAtom;
            #[link_name = "?_undefined@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static _undefined: *mut nsIAtom;
            #[link_name = "?xmlroles@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static xmlroles: *mut nsIAtom;
            #[link_name = "?close_fence@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static close_fence: *mut nsIAtom;
            #[link_name = "?denominator@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static denominator: *mut nsIAtom;
            #[link_name = "?numerator@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static numerator: *mut nsIAtom;
            #[link_name = "?open_fence@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static open_fence: *mut nsIAtom;
            #[link_name = "?overscript@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static overscript: *mut nsIAtom;
            #[link_name = "?presubscript@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static presubscript: *mut nsIAtom;
            #[link_name = "?presuperscript@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static presuperscript: *mut nsIAtom;
            #[link_name = "?root_index@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static root_index: *mut nsIAtom;
            #[link_name = "?subscript@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static subscript: *mut nsIAtom;
            #[link_name = "?superscript@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static superscript: *mut nsIAtom;
            #[link_name = "?underscript@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static underscript: *mut nsIAtom;
            #[link_name = "?onaudiostart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onaudiostart: *mut nsIAtom;
            #[link_name = "?onaudioend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onaudioend: *mut nsIAtom;
            #[link_name = "?onsoundstart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onsoundstart: *mut nsIAtom;
            #[link_name = "?onsoundend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onsoundend: *mut nsIAtom;
            #[link_name = "?onspeechstart@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onspeechstart: *mut nsIAtom;
            #[link_name = "?onspeechend@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onspeechend: *mut nsIAtom;
            #[link_name = "?onresult@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onresult: *mut nsIAtom;
            #[link_name = "?onnomatch@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onnomatch: *mut nsIAtom;
            #[link_name = "?onresume@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onresume: *mut nsIAtom;
            #[link_name = "?onmark@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onmark: *mut nsIAtom;
            #[link_name = "?onboundary@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static onboundary: *mut nsIAtom;
            #[link_name = "?vr_state@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static vr_state: *mut nsIAtom;
            #[link_name = "?usercontextid@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static usercontextid: *mut nsIAtom;
            #[link_name = "?nsuri_xmlns@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nsuri_xmlns: *mut nsIAtom;
            #[link_name = "?nsuri_xml@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nsuri_xml: *mut nsIAtom;
            #[link_name = "?nsuri_xhtml@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nsuri_xhtml: *mut nsIAtom;
            #[link_name = "?nsuri_xlink@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nsuri_xlink: *mut nsIAtom;
            #[link_name = "?nsuri_xslt@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nsuri_xslt: *mut nsIAtom;
            #[link_name = "?nsuri_xbl@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nsuri_xbl: *mut nsIAtom;
            #[link_name = "?nsuri_mathml@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nsuri_mathml: *mut nsIAtom;
            #[link_name = "?nsuri_rdf@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nsuri_rdf: *mut nsIAtom;
            #[link_name = "?nsuri_xul@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nsuri_xul: *mut nsIAtom;
            #[link_name = "?nsuri_svg@nsGkAtoms@@2PEAVnsIAtom@@EA"]
            pub static nsuri_svg: *mut nsIAtom;
        }
    } else {
        extern {
            #[link_name = "?_empty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _empty: *mut nsIAtom;
            #[link_name = "?moz@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static moz: *mut nsIAtom;
            #[link_name = "?mozframetype@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozframetype: *mut nsIAtom;
            #[link_name = "?_moz_abspos@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_abspos: *mut nsIAtom;
            #[link_name = "?_moz_activated@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_activated: *mut nsIAtom;
            #[link_name = "?_moz_resizing@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_resizing: *mut nsIAtom;
            #[link_name = "?mozallowfullscreen@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozallowfullscreen: *mut nsIAtom;
            #[link_name = "?moztype@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static moztype: *mut nsIAtom;
            #[link_name = "?mozdirty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozdirty: *mut nsIAtom;
            #[link_name = "?mozdisallowselectionprint@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozdisallowselectionprint: *mut nsIAtom;
            #[link_name = "?mozdonotsend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozdonotsend: *mut nsIAtom;
            #[link_name = "?mozeditorbogusnode@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozeditorbogusnode: *mut nsIAtom;
            #[link_name = "?mozgeneratedcontentbefore@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozgeneratedcontentbefore: *mut nsIAtom;
            #[link_name = "?mozgeneratedcontentafter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozgeneratedcontentafter: *mut nsIAtom;
            #[link_name = "?mozgeneratedcontentimage@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozgeneratedcontentimage: *mut nsIAtom;
            #[link_name = "?mozquote@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozquote: *mut nsIAtom;
            #[link_name = "?mozsignature@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozsignature: *mut nsIAtom;
            #[link_name = "?_moz_is_glyph@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_is_glyph: *mut nsIAtom;
            #[link_name = "?_moz_original_size@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_original_size: *mut nsIAtom;
            #[link_name = "?_moz_target@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_target: *mut nsIAtom;
            #[link_name = "?menuactive@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static menuactive: *mut nsIAtom;
            #[link_name = "?_poundDefault@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _poundDefault: *mut nsIAtom;
            #[link_name = "?_asterisk@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _asterisk: *mut nsIAtom;
            #[link_name = "?a@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static a: *mut nsIAtom;
            #[link_name = "?abbr@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static abbr: *mut nsIAtom;
            #[link_name = "?abort@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static abort: *mut nsIAtom;
            #[link_name = "?above@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static above: *mut nsIAtom;
            #[link_name = "?acceltext@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static acceltext: *mut nsIAtom;
            #[link_name = "?accept@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static accept: *mut nsIAtom;
            #[link_name = "?acceptcharset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static acceptcharset: *mut nsIAtom;
            #[link_name = "?accesskey@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static accesskey: *mut nsIAtom;
            #[link_name = "?acronym@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static acronym: *mut nsIAtom;
            #[link_name = "?action@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static action: *mut nsIAtom;
            #[link_name = "?active@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static active: *mut nsIAtom;
            #[link_name = "?activetitlebarcolor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static activetitlebarcolor: *mut nsIAtom;
            #[link_name = "?activateontab@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static activateontab: *mut nsIAtom;
            #[link_name = "?actuate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static actuate: *mut nsIAtom;
            #[link_name = "?address@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static address: *mut nsIAtom;
            #[link_name = "?after@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static after: *mut nsIAtom;
            #[link_name = "?after_end@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static after_end: *mut nsIAtom;
            #[link_name = "?after_start@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static after_start: *mut nsIAtom;
            #[link_name = "?align@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static align: *mut nsIAtom;
            #[link_name = "?alink@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static alink: *mut nsIAtom;
            #[link_name = "?all@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static all: *mut nsIAtom;
            #[link_name = "?allowevents@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static allowevents: *mut nsIAtom;
            #[link_name = "?allownegativeassertions@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static allownegativeassertions: *mut nsIAtom;
            #[link_name = "?allowforms@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static allowforms: *mut nsIAtom;
            #[link_name = "?allowfullscreen@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static allowfullscreen: *mut nsIAtom;
            #[link_name = "?allowmodals@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static allowmodals: *mut nsIAtom;
            #[link_name = "?alloworientationlock@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static alloworientationlock: *mut nsIAtom;
            #[link_name = "?allowpointerlock@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static allowpointerlock: *mut nsIAtom;
            #[link_name = "?allowpopupstoescapesandbox@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static allowpopupstoescapesandbox: *mut nsIAtom;
            #[link_name = "?allowpopups@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static allowpopups: *mut nsIAtom;
            #[link_name = "?allowsameorigin@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static allowsameorigin: *mut nsIAtom;
            #[link_name = "?allowscripts@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static allowscripts: *mut nsIAtom;
            #[link_name = "?allowtopnavigation@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static allowtopnavigation: *mut nsIAtom;
            #[link_name = "?allowuntrusted@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static allowuntrusted: *mut nsIAtom;
            #[link_name = "?alt@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static alt: *mut nsIAtom;
            #[link_name = "?alternate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static alternate: *mut nsIAtom;
            #[link_name = "?always@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static always: *mut nsIAtom;
            #[link_name = "?ancestor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ancestor: *mut nsIAtom;
            #[link_name = "?ancestorOrSelf@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ancestorOrSelf: *mut nsIAtom;
            #[link_name = "?anchor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static anchor: *mut nsIAtom;
            #[link_name = "?_and@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _and: *mut nsIAtom;
            #[link_name = "?animations@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static animations: *mut nsIAtom;
            #[link_name = "?anonid@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static anonid: *mut nsIAtom;
            #[link_name = "?anonlocation@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static anonlocation: *mut nsIAtom;
            #[link_name = "?any@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static any: *mut nsIAtom;
            #[link_name = "?mozapp@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozapp: *mut nsIAtom;
            #[link_name = "?mozwidget@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozwidget: *mut nsIAtom;
            #[link_name = "?applet@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static applet: *mut nsIAtom;
            #[link_name = "?applyImports@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static applyImports: *mut nsIAtom;
            #[link_name = "?applyTemplates@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static applyTemplates: *mut nsIAtom;
            #[link_name = "?mozapptype@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozapptype: *mut nsIAtom;
            #[link_name = "?archive@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static archive: *mut nsIAtom;
            #[link_name = "?area@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static area: *mut nsIAtom;
            #[link_name = "?arrow@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static arrow: *mut nsIAtom;
            #[link_name = "?article@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static article: *mut nsIAtom;
            #[link_name = "?ascending@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ascending: *mut nsIAtom;
            #[link_name = "?aside@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aside: *mut nsIAtom;
            #[link_name = "?aspectRatio@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aspectRatio: *mut nsIAtom;
            #[link_name = "?assign@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static assign: *mut nsIAtom;
            #[link_name = "?async@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static async: *mut nsIAtom;
            #[link_name = "?attribute@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static attribute: *mut nsIAtom;
            #[link_name = "?attributes@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static attributes: *mut nsIAtom;
            #[link_name = "?attributeSet@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static attributeSet: *mut nsIAtom;
            #[link_name = "?aural@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aural: *mut nsIAtom;
            #[link_name = "?_auto@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _auto: *mut nsIAtom;
            #[link_name = "?autocheck@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static autocheck: *mut nsIAtom;
            #[link_name = "?autocomplete@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static autocomplete: *mut nsIAtom;
            #[link_name = "?autofocus@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static autofocus: *mut nsIAtom;
            #[link_name = "?autoplay@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static autoplay: *mut nsIAtom;
            #[link_name = "?autorepeatbutton@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static autorepeatbutton: *mut nsIAtom;
            #[link_name = "?axis@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static axis: *mut nsIAtom;
            #[link_name = "?b@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static b: *mut nsIAtom;
            #[link_name = "?backdropFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static backdropFrame: *mut nsIAtom;
            #[link_name = "?background@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static background: *mut nsIAtom;
            #[link_name = "?base@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static base: *mut nsIAtom;
            #[link_name = "?basefont@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static basefont: *mut nsIAtom;
            #[link_name = "?baseline@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static baseline: *mut nsIAtom;
            #[link_name = "?bdi@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bdi: *mut nsIAtom;
            #[link_name = "?bdo@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bdo: *mut nsIAtom;
            #[link_name = "?before@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static before: *mut nsIAtom;
            #[link_name = "?before_end@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static before_end: *mut nsIAtom;
            #[link_name = "?before_start@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static before_start: *mut nsIAtom;
            #[link_name = "?below@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static below: *mut nsIAtom;
            #[link_name = "?bgcolor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bgcolor: *mut nsIAtom;
            #[link_name = "?bgsound@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bgsound: *mut nsIAtom;
            #[link_name = "?big@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static big: *mut nsIAtom;
            #[link_name = "?binding@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static binding: *mut nsIAtom;
            #[link_name = "?bindings@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bindings: *mut nsIAtom;
            #[link_name = "?bindToUntrustedContent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bindToUntrustedContent: *mut nsIAtom;
            #[link_name = "?blankrow@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static blankrow: *mut nsIAtom;
            #[link_name = "?block@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static block: *mut nsIAtom;
            #[link_name = "?blockquote@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static blockquote: *mut nsIAtom;
            #[link_name = "?blur@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static blur: *mut nsIAtom;
            #[link_name = "?body@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static body: *mut nsIAtom;
            #[link_name = "?boolean@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static boolean: *mut nsIAtom;
            #[link_name = "?border@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static border: *mut nsIAtom;
            #[link_name = "?bordercolor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bordercolor: *mut nsIAtom;
            #[link_name = "?both@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static both: *mut nsIAtom;
            #[link_name = "?bottom@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bottom: *mut nsIAtom;
            #[link_name = "?bottomend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bottomend: *mut nsIAtom;
            #[link_name = "?bottomstart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bottomstart: *mut nsIAtom;
            #[link_name = "?bottomleft@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bottomleft: *mut nsIAtom;
            #[link_name = "?bottommargin@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bottommargin: *mut nsIAtom;
            #[link_name = "?bottompadding@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bottompadding: *mut nsIAtom;
            #[link_name = "?bottomright@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bottomright: *mut nsIAtom;
            #[link_name = "?box@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static box_: *mut nsIAtom;
            #[link_name = "?br@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static br: *mut nsIAtom;
            #[link_name = "?braille@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static braille: *mut nsIAtom;
            #[link_name = "?broadcast@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static broadcast: *mut nsIAtom;
            #[link_name = "?broadcaster@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static broadcaster: *mut nsIAtom;
            #[link_name = "?broadcasterset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static broadcasterset: *mut nsIAtom;
            #[link_name = "?browser@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static browser: *mut nsIAtom;
            #[link_name = "?mozbrowser@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozbrowser: *mut nsIAtom;
            #[link_name = "?bulletinboard@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bulletinboard: *mut nsIAtom;
            #[link_name = "?button@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static button: *mut nsIAtom;
            #[link_name = "?brighttitlebarforeground@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static brighttitlebarforeground: *mut nsIAtom;
            #[link_name = "?callTemplate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static callTemplate: *mut nsIAtom;
            #[link_name = "?cancel@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cancel: *mut nsIAtom;
            #[link_name = "?canvas@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static canvas: *mut nsIAtom;
            #[link_name = "?caption@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static caption: *mut nsIAtom;
            #[link_name = "?capture@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static capture: *mut nsIAtom;
            #[link_name = "?caseOrder@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static caseOrder: *mut nsIAtom;
            #[link_name = "?cdataSectionElements@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cdataSectionElements: *mut nsIAtom;
            #[link_name = "?ceiling@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ceiling: *mut nsIAtom;
            #[link_name = "?cell@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cell: *mut nsIAtom;
            #[link_name = "?cellpadding@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cellpadding: *mut nsIAtom;
            #[link_name = "?cellspacing@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cellspacing: *mut nsIAtom;
            #[link_name = "?center@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static center: *mut nsIAtom;
            #[link_name = "?ch@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ch: *mut nsIAtom;
            #[link_name = "?change@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static change: *mut nsIAtom;
            #[link_name = "?_char@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _char: *mut nsIAtom;
            #[link_name = "?characterData@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static characterData: *mut nsIAtom;
            #[link_name = "?charcode@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static charcode: *mut nsIAtom;
            #[link_name = "?charoff@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static charoff: *mut nsIAtom;
            #[link_name = "?charset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static charset: *mut nsIAtom;
            #[link_name = "?checkbox@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static checkbox: *mut nsIAtom;
            #[link_name = "?checked@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static checked: *mut nsIAtom;
            #[link_name = "?child@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static child: *mut nsIAtom;
            #[link_name = "?children@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static children: *mut nsIAtom;
            #[link_name = "?childList@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static childList: *mut nsIAtom;
            #[link_name = "?choose@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static choose: *mut nsIAtom;
            #[link_name = "?chromemargin@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static chromemargin: *mut nsIAtom;
            #[link_name = "?chromeOnlyContent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static chromeOnlyContent: *mut nsIAtom;
            #[link_name = "?exposeToUntrustedContent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static exposeToUntrustedContent: *mut nsIAtom;
            #[link_name = "?circ@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static circ: *mut nsIAtom;
            #[link_name = "?circle@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static circle: *mut nsIAtom;
            #[link_name = "?cite@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cite: *mut nsIAtom;
            #[link_name = "?_class@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _class: *mut nsIAtom;
            #[link_name = "?classid@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static classid: *mut nsIAtom;
            #[link_name = "?clear@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static clear: *mut nsIAtom;
            #[link_name = "?click@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static click: *mut nsIAtom;
            #[link_name = "?clickcount@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static clickcount: *mut nsIAtom;
            #[link_name = "?clickthrough@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static clickthrough: *mut nsIAtom;
            #[link_name = "?movetoclick@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static movetoclick: *mut nsIAtom;
            #[link_name = "?clip@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static clip: *mut nsIAtom;
            #[link_name = "?close@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static close: *mut nsIAtom;
            #[link_name = "?closed@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static closed: *mut nsIAtom;
            #[link_name = "?closemenu@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static closemenu: *mut nsIAtom;
            #[link_name = "?coalesceduplicatearcs@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static coalesceduplicatearcs: *mut nsIAtom;
            #[link_name = "?code@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static code: *mut nsIAtom;
            #[link_name = "?codebase@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static codebase: *mut nsIAtom;
            #[link_name = "?codetype@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static codetype: *mut nsIAtom;
            #[link_name = "?col@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static col: *mut nsIAtom;
            #[link_name = "?colgroup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static colgroup: *mut nsIAtom;
            #[link_name = "?collapse@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static collapse: *mut nsIAtom;
            #[link_name = "?collapsed@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static collapsed: *mut nsIAtom;
            #[link_name = "?color@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static color: *mut nsIAtom;
            #[link_name = "?colorIndex@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static colorIndex: *mut nsIAtom;
            #[link_name = "?cols@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cols: *mut nsIAtom;
            #[link_name = "?colspan@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static colspan: *mut nsIAtom;
            #[link_name = "?column@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static column: *mut nsIAtom;
            #[link_name = "?columns@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static columns: *mut nsIAtom;
            #[link_name = "?combobox@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static combobox: *mut nsIAtom;
            #[link_name = "?command@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static command: *mut nsIAtom;
            #[link_name = "?commands@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static commands: *mut nsIAtom;
            #[link_name = "?commandset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static commandset: *mut nsIAtom;
            #[link_name = "?commandupdate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static commandupdate: *mut nsIAtom;
            #[link_name = "?commandupdater@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static commandupdater: *mut nsIAtom;
            #[link_name = "?comment@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static comment: *mut nsIAtom;
            #[link_name = "?compact@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static compact: *mut nsIAtom;
            #[link_name = "?concat@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static concat: *mut nsIAtom;
            #[link_name = "?conditions@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static conditions: *mut nsIAtom;
            #[link_name = "?constructor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static constructor: *mut nsIAtom;
            #[link_name = "?consumeoutsideclicks@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static consumeoutsideclicks: *mut nsIAtom;
            #[link_name = "?container@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static container: *mut nsIAtom;
            #[link_name = "?containment@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static containment: *mut nsIAtom;
            #[link_name = "?contains@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static contains: *mut nsIAtom;
            #[link_name = "?content@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static content: *mut nsIAtom;
            #[link_name = "?contenteditable@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static contenteditable: *mut nsIAtom;
            #[link_name = "?headerContentDisposition@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static headerContentDisposition: *mut nsIAtom;
            #[link_name = "?headerContentLanguage@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static headerContentLanguage: *mut nsIAtom;
            #[link_name = "?contentLocation@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static contentLocation: *mut nsIAtom;
            #[link_name = "?headerContentScriptType@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static headerContentScriptType: *mut nsIAtom;
            #[link_name = "?headerContentStyleType@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static headerContentStyleType: *mut nsIAtom;
            #[link_name = "?headerContentType@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static headerContentType: *mut nsIAtom;
            #[link_name = "?consumeanchor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static consumeanchor: *mut nsIAtom;
            #[link_name = "?context@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static context: *mut nsIAtom;
            #[link_name = "?contextmenu@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static contextmenu: *mut nsIAtom;
            #[link_name = "?control@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static control: *mut nsIAtom;
            #[link_name = "?controls@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static controls: *mut nsIAtom;
            #[link_name = "?coords@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static coords: *mut nsIAtom;
            #[link_name = "?copy@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static copy: *mut nsIAtom;
            #[link_name = "?copyOf@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static copyOf: *mut nsIAtom;
            #[link_name = "?count@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static count: *mut nsIAtom;
            #[link_name = "?crop@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static crop: *mut nsIAtom;
            #[link_name = "?crossorigin@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static crossorigin: *mut nsIAtom;
            #[link_name = "?curpos@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static curpos: *mut nsIAtom;
            #[link_name = "?current@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static current: *mut nsIAtom;
            #[link_name = "?cycler@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cycler: *mut nsIAtom;
            #[link_name = "?data@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static data: *mut nsIAtom;
            #[link_name = "?datalist@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static datalist: *mut nsIAtom;
            #[link_name = "?dataType@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dataType: *mut nsIAtom;
            #[link_name = "?dateTime@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dateTime: *mut nsIAtom;
            #[link_name = "?datasources@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static datasources: *mut nsIAtom;
            #[link_name = "?datetime@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static datetime: *mut nsIAtom;
            #[link_name = "?dblclick@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dblclick: *mut nsIAtom;
            #[link_name = "?dd@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dd: *mut nsIAtom;
            #[link_name = "?debug@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static debug: *mut nsIAtom;
            #[link_name = "?decimalFormat@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static decimalFormat: *mut nsIAtom;
            #[link_name = "?decimalSeparator@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static decimalSeparator: *mut nsIAtom;
            #[link_name = "?deck@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static deck: *mut nsIAtom;
            #[link_name = "?declare@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static declare: *mut nsIAtom;
            #[link_name = "?decoderDoctor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static decoderDoctor: *mut nsIAtom;
            #[link_name = "?decrement@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static decrement: *mut nsIAtom;
            #[link_name = "?_default@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _default: *mut nsIAtom;
            #[link_name = "?headerDefaultStyle@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static headerDefaultStyle: *mut nsIAtom;
            #[link_name = "?defaultAction@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static defaultAction: *mut nsIAtom;
            #[link_name = "?defaultchecked@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static defaultchecked: *mut nsIAtom;
            #[link_name = "?defaultLabel@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static defaultLabel: *mut nsIAtom;
            #[link_name = "?defaultselected@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static defaultselected: *mut nsIAtom;
            #[link_name = "?defaultvalue@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static defaultvalue: *mut nsIAtom;
            #[link_name = "?defaultplaybackrate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static defaultplaybackrate: *mut nsIAtom;
            #[link_name = "?defer@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static defer: *mut nsIAtom;
            #[link_name = "?del@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static del: *mut nsIAtom;
            #[link_name = "?descendant@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static descendant: *mut nsIAtom;
            #[link_name = "?descendantOrSelf@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static descendantOrSelf: *mut nsIAtom;
            #[link_name = "?descending@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static descending: *mut nsIAtom;
            #[link_name = "?description@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static description: *mut nsIAtom;
            #[link_name = "?destructor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static destructor: *mut nsIAtom;
            #[link_name = "?details@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static details: *mut nsIAtom;
            #[link_name = "?deviceAspectRatio@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static deviceAspectRatio: *mut nsIAtom;
            #[link_name = "?deviceHeight@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static deviceHeight: *mut nsIAtom;
            #[link_name = "?devicePixelRatio@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static devicePixelRatio: *mut nsIAtom;
            #[link_name = "?deviceWidth@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static deviceWidth: *mut nsIAtom;
            #[link_name = "?dfn@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dfn: *mut nsIAtom;
            #[link_name = "?dialog@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dialog: *mut nsIAtom;
            #[link_name = "?difference@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static difference: *mut nsIAtom;
            #[link_name = "?digit@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static digit: *mut nsIAtom;
            #[link_name = "?dir@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dir: *mut nsIAtom;
            #[link_name = "?dirAutoSetBy@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dirAutoSetBy: *mut nsIAtom;
            #[link_name = "?directionality@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static directionality: *mut nsIAtom;
            #[link_name = "?directory@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static directory: *mut nsIAtom;
            #[link_name = "?disableOutputEscaping@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static disableOutputEscaping: *mut nsIAtom;
            #[link_name = "?disabled@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static disabled: *mut nsIAtom;
            #[link_name = "?disableglobalhistory@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static disableglobalhistory: *mut nsIAtom;
            #[link_name = "?disablehistory@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static disablehistory: *mut nsIAtom;
            #[link_name = "?display@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static display: *mut nsIAtom;
            #[link_name = "?displayMode@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static displayMode: *mut nsIAtom;
            #[link_name = "?distinct@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static distinct: *mut nsIAtom;
            #[link_name = "?div@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static div: *mut nsIAtom;
            #[link_name = "?dl@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dl: *mut nsIAtom;
            #[link_name = "?doctypePublic@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static doctypePublic: *mut nsIAtom;
            #[link_name = "?doctypeSystem@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static doctypeSystem: *mut nsIAtom;
            #[link_name = "?document@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static document: *mut nsIAtom;
            #[link_name = "?download@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static download: *mut nsIAtom;
            #[link_name = "?DOMAttrModified@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static DOMAttrModified: *mut nsIAtom;
            #[link_name = "?DOMCharacterDataModified@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static DOMCharacterDataModified: *mut nsIAtom;
            #[link_name = "?DOMNodeInserted@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static DOMNodeInserted: *mut nsIAtom;
            #[link_name = "?DOMNodeInsertedIntoDocument@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static DOMNodeInsertedIntoDocument: *mut nsIAtom;
            #[link_name = "?DOMNodeRemoved@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static DOMNodeRemoved: *mut nsIAtom;
            #[link_name = "?DOMNodeRemovedFromDocument@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static DOMNodeRemovedFromDocument: *mut nsIAtom;
            #[link_name = "?DOMSubtreeModified@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static DOMSubtreeModified: *mut nsIAtom;
            #[link_name = "?double_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static double_: *mut nsIAtom;
            #[link_name = "?drag@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static drag: *mut nsIAtom;
            #[link_name = "?dragdrop@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dragdrop: *mut nsIAtom;
            #[link_name = "?dragend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dragend: *mut nsIAtom;
            #[link_name = "?dragenter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dragenter: *mut nsIAtom;
            #[link_name = "?dragevent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dragevent: *mut nsIAtom;
            #[link_name = "?dragexit@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dragexit: *mut nsIAtom;
            #[link_name = "?draggable@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static draggable: *mut nsIAtom;
            #[link_name = "?draggesture@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static draggesture: *mut nsIAtom;
            #[link_name = "?dragging@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dragging: *mut nsIAtom;
            #[link_name = "?dragleave@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dragleave: *mut nsIAtom;
            #[link_name = "?dragover@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dragover: *mut nsIAtom;
            #[link_name = "?dragSession@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dragSession: *mut nsIAtom;
            #[link_name = "?dragstart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dragstart: *mut nsIAtom;
            #[link_name = "?drawintitlebar@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static drawintitlebar: *mut nsIAtom;
            #[link_name = "?drawtitle@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static drawtitle: *mut nsIAtom;
            #[link_name = "?drop@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static drop: *mut nsIAtom;
            #[link_name = "?dropAfter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dropAfter: *mut nsIAtom;
            #[link_name = "?dropBefore@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dropBefore: *mut nsIAtom;
            #[link_name = "?dropOn@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dropOn: *mut nsIAtom;
            #[link_name = "?dropMarker@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dropMarker: *mut nsIAtom;
            #[link_name = "?dt@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dt: *mut nsIAtom;
            #[link_name = "?editable@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static editable: *mut nsIAtom;
            #[link_name = "?editing@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static editing: *mut nsIAtom;
            #[link_name = "?editor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static editor: *mut nsIAtom;
            #[link_name = "?editorDisplayList@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static editorDisplayList: *mut nsIAtom;
            #[link_name = "?element@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static element: *mut nsIAtom;
            #[link_name = "?elementAvailable@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static elementAvailable: *mut nsIAtom;
            #[link_name = "?elements@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static elements: *mut nsIAtom;
            #[link_name = "?em@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static em: *mut nsIAtom;
            #[link_name = "?embed@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static embed: *mut nsIAtom;
            #[link_name = "?embossed@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static embossed: *mut nsIAtom;
            #[link_name = "?empty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static empty: *mut nsIAtom;
            #[link_name = "?encoding@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static encoding: *mut nsIAtom;
            #[link_name = "?enctype@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static enctype: *mut nsIAtom;
            #[link_name = "?end@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static end: *mut nsIAtom;
            #[link_name = "?endEvent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static endEvent: *mut nsIAtom;
            #[link_name = "?end_after@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static end_after: *mut nsIAtom;
            #[link_name = "?end_before@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static end_before: *mut nsIAtom;
            #[link_name = "?equalsize@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static equalsize: *mut nsIAtom;
            #[link_name = "?error@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static error: *mut nsIAtom;
            #[link_name = "?even@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static even: *mut nsIAtom;
            #[link_name = "?event@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static event: *mut nsIAtom;
            #[link_name = "?events@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static events: *mut nsIAtom;
            #[link_name = "?excludeResultPrefixes@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static excludeResultPrefixes: *mut nsIAtom;
            #[link_name = "?excludes@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static excludes: *mut nsIAtom;
            #[link_name = "?expr@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static expr: *mut nsIAtom;
            #[link_name = "?extends@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static extends: *mut nsIAtom;
            #[link_name = "?extensionElementPrefixes@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static extensionElementPrefixes: *mut nsIAtom;
            #[link_name = "?face@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static face: *mut nsIAtom;
            #[link_name = "?fallback@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fallback: *mut nsIAtom;
            #[link_name = "?_false@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _false: *mut nsIAtom;
            #[link_name = "?farthest@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static farthest: *mut nsIAtom;
            #[link_name = "?field@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static field: *mut nsIAtom;
            #[link_name = "?fieldset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fieldset: *mut nsIAtom;
            #[link_name = "?figcaption@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static figcaption: *mut nsIAtom;
            #[link_name = "?figure@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static figure: *mut nsIAtom;
            #[link_name = "?fixed@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fixed: *mut nsIAtom;
            #[link_name = "?flags@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static flags: *mut nsIAtom;
            #[link_name = "?flex@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static flex: *mut nsIAtom;
            #[link_name = "?flexgroup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static flexgroup: *mut nsIAtom;
            #[link_name = "?flip@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static flip: *mut nsIAtom;
            #[link_name = "?floating@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static floating: *mut nsIAtom;
            #[link_name = "?floor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static floor: *mut nsIAtom;
            #[link_name = "?flowlength@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static flowlength: *mut nsIAtom;
            #[link_name = "?focus@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static focus: *mut nsIAtom;
            #[link_name = "?focused@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static focused: *mut nsIAtom;
            #[link_name = "?following@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static following: *mut nsIAtom;
            #[link_name = "?followingSibling@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static followingSibling: *mut nsIAtom;
            #[link_name = "?font@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static font: *mut nsIAtom;
            #[link_name = "?fontWeight@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fontWeight: *mut nsIAtom;
            #[link_name = "?fontpicker@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fontpicker: *mut nsIAtom;
            #[link_name = "?footer@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static footer: *mut nsIAtom;
            #[link_name = "?_for@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _for: *mut nsIAtom;
            #[link_name = "?forEach@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static forEach: *mut nsIAtom;
            #[link_name = "?forceOwnRefreshDriver@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static forceOwnRefreshDriver: *mut nsIAtom;
            #[link_name = "?form@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static form: *mut nsIAtom;
            #[link_name = "?formaction@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static formaction: *mut nsIAtom;
            #[link_name = "?format@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static format: *mut nsIAtom;
            #[link_name = "?formatNumber@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static formatNumber: *mut nsIAtom;
            #[link_name = "?formenctype@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static formenctype: *mut nsIAtom;
            #[link_name = "?formmethod@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static formmethod: *mut nsIAtom;
            #[link_name = "?formnovalidate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static formnovalidate: *mut nsIAtom;
            #[link_name = "?formtarget@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static formtarget: *mut nsIAtom;
            #[link_name = "?frame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static frame: *mut nsIAtom;
            #[link_name = "?frameborder@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static frameborder: *mut nsIAtom;
            #[link_name = "?frameset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static frameset: *mut nsIAtom;
            #[link_name = "?from@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static from: *mut nsIAtom;
            #[link_name = "?fullscreenchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fullscreenchange: *mut nsIAtom;
            #[link_name = "?fullscreenerror@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fullscreenerror: *mut nsIAtom;
            #[link_name = "?functionAvailable@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static functionAvailable: *mut nsIAtom;
            #[link_name = "?generateId@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static generateId: *mut nsIAtom;
            #[link_name = "?getter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static getter: *mut nsIAtom;
            #[link_name = "?glyphchar@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static glyphchar: *mut nsIAtom;
            #[link_name = "?glyphid@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static glyphid: *mut nsIAtom;
            #[link_name = "?grid@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static grid: *mut nsIAtom;
            #[link_name = "?grippy@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static grippy: *mut nsIAtom;
            #[link_name = "?group@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static group: *mut nsIAtom;
            #[link_name = "?groupingSeparator@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static groupingSeparator: *mut nsIAtom;
            #[link_name = "?groupingSize@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static groupingSize: *mut nsIAtom;
            #[link_name = "?grow@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static grow: *mut nsIAtom;
            #[link_name = "?gutter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static gutter: *mut nsIAtom;
            #[link_name = "?h1@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static h1: *mut nsIAtom;
            #[link_name = "?h2@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static h2: *mut nsIAtom;
            #[link_name = "?h3@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static h3: *mut nsIAtom;
            #[link_name = "?h4@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static h4: *mut nsIAtom;
            #[link_name = "?h5@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static h5: *mut nsIAtom;
            #[link_name = "?h6@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static h6: *mut nsIAtom;
            #[link_name = "?handheld@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static handheld: *mut nsIAtom;
            #[link_name = "?handheldFriendly@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static handheldFriendly: *mut nsIAtom;
            #[link_name = "?handler@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static handler: *mut nsIAtom;
            #[link_name = "?handlers@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static handlers: *mut nsIAtom;
            #[link_name = "?HARD@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static HARD: *mut nsIAtom;
            #[link_name = "?hasSameNode@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static hasSameNode: *mut nsIAtom;
            #[link_name = "?hbox@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static hbox: *mut nsIAtom;
            #[link_name = "?head@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static head: *mut nsIAtom;
            #[link_name = "?header@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static header: *mut nsIAtom;
            #[link_name = "?headers@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static headers: *mut nsIAtom;
            #[link_name = "?height@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static height: *mut nsIAtom;
            #[link_name = "?hgroup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static hgroup: *mut nsIAtom;
            #[link_name = "?hidden@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static hidden: *mut nsIAtom;
            #[link_name = "?hidechrome@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static hidechrome: *mut nsIAtom;
            #[link_name = "?hidecolumnpicker@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static hidecolumnpicker: *mut nsIAtom;
            #[link_name = "?high@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static high: *mut nsIAtom;
            #[link_name = "?highest@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static highest: *mut nsIAtom;
            #[link_name = "?horizontal@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static horizontal: *mut nsIAtom;
            #[link_name = "?hover@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static hover: *mut nsIAtom;
            #[link_name = "?hr@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static hr: *mut nsIAtom;
            #[link_name = "?href@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static href: *mut nsIAtom;
            #[link_name = "?hreflang@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static hreflang: *mut nsIAtom;
            #[link_name = "?hspace@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static hspace: *mut nsIAtom;
            #[link_name = "?html@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static html: *mut nsIAtom;
            #[link_name = "?httpEquiv@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static httpEquiv: *mut nsIAtom;
            #[link_name = "?i@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static i: *mut nsIAtom;
            #[link_name = "?icon@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static icon: *mut nsIAtom;
            #[link_name = "?id@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static id: *mut nsIAtom;
            #[link_name = "?_if@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _if: *mut nsIAtom;
            #[link_name = "?iframe@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static iframe: *mut nsIAtom;
            #[link_name = "?ignorecase@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ignorecase: *mut nsIAtom;
            #[link_name = "?ignorekeys@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ignorekeys: *mut nsIAtom;
            #[link_name = "?ignoreuserfocus@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ignoreuserfocus: *mut nsIAtom;
            #[link_name = "?ilayer@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ilayer: *mut nsIAtom;
            #[link_name = "?image@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static image: *mut nsIAtom;
            #[link_name = "?imageClickedPoint@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static imageClickedPoint: *mut nsIAtom;
            #[link_name = "?img@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static img: *mut nsIAtom;
            #[link_name = "?implementation@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static implementation: *mut nsIAtom;
            #[link_name = "?implements@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static implements: *mut nsIAtom;
            #[link_name = "?import@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static import: *mut nsIAtom;
            #[link_name = "?inactivetitlebarcolor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static inactivetitlebarcolor: *mut nsIAtom;
            #[link_name = "?include@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static include: *mut nsIAtom;
            #[link_name = "?includes@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static includes: *mut nsIAtom;
            #[link_name = "?increment@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static increment: *mut nsIAtom;
            #[link_name = "?indent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static indent: *mut nsIAtom;
            #[link_name = "?indeterminate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static indeterminate: *mut nsIAtom;
            #[link_name = "?index@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static index: *mut nsIAtom;
            #[link_name = "?infer@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static infer: *mut nsIAtom;
            #[link_name = "?infinity@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static infinity: *mut nsIAtom;
            #[link_name = "?inherit@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static inherit: *mut nsIAtom;
            #[link_name = "?inherits@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static inherits: *mut nsIAtom;
            #[link_name = "?inheritstyle@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static inheritstyle: *mut nsIAtom;
            #[link_name = "?initial_scale@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static initial_scale: *mut nsIAtom;
            #[link_name = "?input@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static input: *mut nsIAtom;
            #[link_name = "?inputmode@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static inputmode: *mut nsIAtom;
            #[link_name = "?ins@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ins: *mut nsIAtom;
            #[link_name = "?insertafter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static insertafter: *mut nsIAtom;
            #[link_name = "?insertbefore@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static insertbefore: *mut nsIAtom;
            #[link_name = "?install@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static install: *mut nsIAtom;
            #[link_name = "?instanceOf@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static instanceOf: *mut nsIAtom;
            #[link_name = "?int32@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static int32: *mut nsIAtom;
            #[link_name = "?int64@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static int64: *mut nsIAtom;
            #[link_name = "?integer@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static integer: *mut nsIAtom;
            #[link_name = "?integrity@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static integrity: *mut nsIAtom;
            #[link_name = "?intersection@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static intersection: *mut nsIAtom;
            #[link_name = "?is@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static is: *mut nsIAtom;
            #[link_name = "?iscontainer@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static iscontainer: *mut nsIAtom;
            #[link_name = "?isempty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static isempty: *mut nsIAtom;
            #[link_name = "?ismap@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ismap: *mut nsIAtom;
            #[link_name = "?itemid@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static itemid: *mut nsIAtom;
            #[link_name = "?itemprop@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static itemprop: *mut nsIAtom;
            #[link_name = "?itemref@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static itemref: *mut nsIAtom;
            #[link_name = "?itemscope@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static itemscope: *mut nsIAtom;
            #[link_name = "?itemtype@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static itemtype: *mut nsIAtom;
            #[link_name = "?kbd@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static kbd: *mut nsIAtom;
            #[link_name = "?keepcurrentinview@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static keepcurrentinview: *mut nsIAtom;
            #[link_name = "?keepobjectsalive@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static keepobjectsalive: *mut nsIAtom;
            #[link_name = "?key@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static key: *mut nsIAtom;
            #[link_name = "?keycode@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static keycode: *mut nsIAtom;
            #[link_name = "?keystatuseschange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static keystatuseschange: *mut nsIAtom;
            #[link_name = "?keydown@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static keydown: *mut nsIAtom;
            #[link_name = "?keygen@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static keygen: *mut nsIAtom;
            #[link_name = "?keypress@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static keypress: *mut nsIAtom;
            #[link_name = "?keyset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static keyset: *mut nsIAtom;
            #[link_name = "?keysystem@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static keysystem: *mut nsIAtom;
            #[link_name = "?keytext@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static keytext: *mut nsIAtom;
            #[link_name = "?keyup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static keyup: *mut nsIAtom;
            #[link_name = "?kind@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static kind: *mut nsIAtom;
            #[link_name = "?label@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static label: *mut nsIAtom;
            #[link_name = "?lang@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lang: *mut nsIAtom;
            #[link_name = "?language@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static language: *mut nsIAtom;
            #[link_name = "?last@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static last: *mut nsIAtom;
            #[link_name = "?layer@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static layer: *mut nsIAtom;
            #[link_name = "?LayerActivity@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static LayerActivity: *mut nsIAtom;
            #[link_name = "?layout@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static layout: *mut nsIAtom;
            #[link_name = "?leading@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static leading: *mut nsIAtom;
            #[link_name = "?leaf@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static leaf: *mut nsIAtom;
            #[link_name = "?left@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static left: *mut nsIAtom;
            #[link_name = "?leftmargin@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static leftmargin: *mut nsIAtom;
            #[link_name = "?leftpadding@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static leftpadding: *mut nsIAtom;
            #[link_name = "?legend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static legend: *mut nsIAtom;
            #[link_name = "?length@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static length: *mut nsIAtom;
            #[link_name = "?letterValue@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static letterValue: *mut nsIAtom;
            #[link_name = "?level@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static level: *mut nsIAtom;
            #[link_name = "?li@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static li: *mut nsIAtom;
            #[link_name = "?line@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static line: *mut nsIAtom;
            #[link_name = "?link@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static link: *mut nsIAtom;
            #[link_name = "?list@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static list: *mut nsIAtom;
            #[link_name = "?listbox@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static listbox: *mut nsIAtom;
            #[link_name = "?listboxbody@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static listboxbody: *mut nsIAtom;
            #[link_name = "?listcell@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static listcell: *mut nsIAtom;
            #[link_name = "?listcol@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static listcol: *mut nsIAtom;
            #[link_name = "?listcols@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static listcols: *mut nsIAtom;
            #[link_name = "?listener@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static listener: *mut nsIAtom;
            #[link_name = "?listhead@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static listhead: *mut nsIAtom;
            #[link_name = "?listheader@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static listheader: *mut nsIAtom;
            #[link_name = "?listing@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static listing: *mut nsIAtom;
            #[link_name = "?listitem@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static listitem: *mut nsIAtom;
            #[link_name = "?listrows@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static listrows: *mut nsIAtom;
            #[link_name = "?load@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static load: *mut nsIAtom;
            #[link_name = "?localedir@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static localedir: *mut nsIAtom;
            #[link_name = "?localName@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static localName: *mut nsIAtom;
            #[link_name = "?longdesc@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static longdesc: *mut nsIAtom;
            #[link_name = "?loop@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static loop_: *mut nsIAtom;
            #[link_name = "?low@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static low: *mut nsIAtom;
            #[link_name = "?lowerFirst@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lowerFirst: *mut nsIAtom;
            #[link_name = "?lowest@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lowest: *mut nsIAtom;
            #[link_name = "?lowsrc@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lowsrc: *mut nsIAtom;
            #[link_name = "?ltr@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ltr: *mut nsIAtom;
            #[link_name = "?lwtheme@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lwtheme: *mut nsIAtom;
            #[link_name = "?lwthemetextcolor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lwthemetextcolor: *mut nsIAtom;
            #[link_name = "?main@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static main: *mut nsIAtom;
            #[link_name = "?map@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static map: *mut nsIAtom;
            #[link_name = "?manifest@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static manifest: *mut nsIAtom;
            #[link_name = "?marginBottom@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static marginBottom: *mut nsIAtom;
            #[link_name = "?marginLeft@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static marginLeft: *mut nsIAtom;
            #[link_name = "?marginRight@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static marginRight: *mut nsIAtom;
            #[link_name = "?marginTop@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static marginTop: *mut nsIAtom;
            #[link_name = "?marginheight@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static marginheight: *mut nsIAtom;
            #[link_name = "?marginwidth@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static marginwidth: *mut nsIAtom;
            #[link_name = "?mark@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mark: *mut nsIAtom;
            #[link_name = "?marquee@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static marquee: *mut nsIAtom;
            #[link_name = "?match@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static match_: *mut nsIAtom;
            #[link_name = "?max@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static max: *mut nsIAtom;
            #[link_name = "?maxheight@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static maxheight: *mut nsIAtom;
            #[link_name = "?maximum_scale@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static maximum_scale: *mut nsIAtom;
            #[link_name = "?maxlength@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static maxlength: *mut nsIAtom;
            #[link_name = "?maxpos@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static maxpos: *mut nsIAtom;
            #[link_name = "?maxwidth@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static maxwidth: *mut nsIAtom;
            #[link_name = "?mayscript@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mayscript: *mut nsIAtom;
            #[link_name = "?media@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static media: *mut nsIAtom;
            #[link_name = "?mediaType@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mediaType: *mut nsIAtom;
            #[link_name = "?member@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static member: *mut nsIAtom;
            #[link_name = "?menu@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static menu: *mut nsIAtom;
            #[link_name = "?menubar@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static menubar: *mut nsIAtom;
            #[link_name = "?menubutton@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static menubutton: *mut nsIAtom;
            #[link_name = "?menuButton@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static menuButton: *mut nsIAtom;
            #[link_name = "?menugroup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static menugroup: *mut nsIAtom;
            #[link_name = "?menuitem@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static menuitem: *mut nsIAtom;
            #[link_name = "?menulist@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static menulist: *mut nsIAtom;
            #[link_name = "?menupopup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static menupopup: *mut nsIAtom;
            #[link_name = "?menuseparator@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static menuseparator: *mut nsIAtom;
            #[link_name = "?message@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static message: *mut nsIAtom;
            #[link_name = "?meta@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static meta: *mut nsIAtom;
            #[link_name = "?referrer@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static referrer: *mut nsIAtom;
            #[link_name = "?referrerpolicy@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static referrerpolicy: *mut nsIAtom;
            #[link_name = "?meter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static meter: *mut nsIAtom;
            #[link_name = "?method@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static method: *mut nsIAtom;
            #[link_name = "?middle@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static middle: *mut nsIAtom;
            #[link_name = "?min@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static min: *mut nsIAtom;
            #[link_name = "?minheight@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static minheight: *mut nsIAtom;
            #[link_name = "?minimum_scale@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static minimum_scale: *mut nsIAtom;
            #[link_name = "?minpos@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static minpos: *mut nsIAtom;
            #[link_name = "?minusSign@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static minusSign: *mut nsIAtom;
            #[link_name = "?minwidth@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static minwidth: *mut nsIAtom;
            #[link_name = "?_mixed@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _mixed: *mut nsIAtom;
            #[link_name = "?messagemanagergroup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static messagemanagergroup: *mut nsIAtom;
            #[link_name = "?mod@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mod_: *mut nsIAtom;
            #[link_name = "?mode@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mode: *mut nsIAtom;
            #[link_name = "?modifiers@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static modifiers: *mut nsIAtom;
            #[link_name = "?monochrome@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static monochrome: *mut nsIAtom;
            #[link_name = "?mousedown@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mousedown: *mut nsIAtom;
            #[link_name = "?mousemove@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mousemove: *mut nsIAtom;
            #[link_name = "?mouseout@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mouseout: *mut nsIAtom;
            #[link_name = "?mouseover@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mouseover: *mut nsIAtom;
            #[link_name = "?mousethrough@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mousethrough: *mut nsIAtom;
            #[link_name = "?mouseup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mouseup: *mut nsIAtom;
            #[link_name = "?mozaudiochannel@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozaudiochannel: *mut nsIAtom;
            #[link_name = "?mozfullscreenchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozfullscreenchange: *mut nsIAtom;
            #[link_name = "?mozfullscreenerror@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozfullscreenerror: *mut nsIAtom;
            #[link_name = "?mozpasspointerevents@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozpasspointerevents: *mut nsIAtom;
            #[link_name = "?mozpointerlockchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozpointerlockchange: *mut nsIAtom;
            #[link_name = "?mozpointerlockerror@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozpointerlockerror: *mut nsIAtom;
            #[link_name = "?mozprivatebrowsing@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozprivatebrowsing: *mut nsIAtom;
            #[link_name = "?moz_opaque@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static moz_opaque: *mut nsIAtom;
            #[link_name = "?moz_action_hint@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static moz_action_hint: *mut nsIAtom;
            #[link_name = "?x_moz_errormessage@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_moz_errormessage: *mut nsIAtom;
            #[link_name = "?msthemecompatible@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static msthemecompatible: *mut nsIAtom;
            #[link_name = "?multicol@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static multicol: *mut nsIAtom;
            #[link_name = "?multiple@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static multiple: *mut nsIAtom;
            #[link_name = "?muted@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static muted: *mut nsIAtom;
            #[link_name = "?name@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static name: *mut nsIAtom;
            #[link_name = "?_namespace@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _namespace: *mut nsIAtom;
            #[link_name = "?namespaceAlias@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static namespaceAlias: *mut nsIAtom;
            #[link_name = "?namespaceUri@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static namespaceUri: *mut nsIAtom;
            #[link_name = "?NaN@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static NaN: *mut nsIAtom;
            #[link_name = "?nativeAnonymousChildList@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nativeAnonymousChildList: *mut nsIAtom;
            #[link_name = "?nav@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nav: *mut nsIAtom;
            #[link_name = "?negate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static negate: *mut nsIAtom;
            #[link_name = "?never@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static never: *mut nsIAtom;
            #[link_name = "?_new@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _new: *mut nsIAtom;
            #[link_name = "?newline@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static newline: *mut nsIAtom;
            #[link_name = "?nextBidi@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nextBidi: *mut nsIAtom;
            #[link_name = "?no@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static no: *mut nsIAtom;
            #[link_name = "?noautofocus@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static noautofocus: *mut nsIAtom;
            #[link_name = "?noautohide@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static noautohide: *mut nsIAtom;
            #[link_name = "?norolluponanchor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static norolluponanchor: *mut nsIAtom;
            #[link_name = "?nobr@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nobr: *mut nsIAtom;
            #[link_name = "?node@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static node: *mut nsIAtom;
            #[link_name = "?nodefaultsrc@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nodefaultsrc: *mut nsIAtom;
            #[link_name = "?nodeSet@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nodeSet: *mut nsIAtom;
            #[link_name = "?noembed@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static noembed: *mut nsIAtom;
            #[link_name = "?noframes@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static noframes: *mut nsIAtom;
            #[link_name = "?nohref@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nohref: *mut nsIAtom;
            #[link_name = "?noisolation@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static noisolation: *mut nsIAtom;
            #[link_name = "?nonce@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nonce: *mut nsIAtom;
            #[link_name = "?none@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static none: *mut nsIAtom;
            #[link_name = "?noresize@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static noresize: *mut nsIAtom;
            #[link_name = "?normal@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static normal: *mut nsIAtom;
            #[link_name = "?normalizeSpace@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static normalizeSpace: *mut nsIAtom;
            #[link_name = "?noscript@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static noscript: *mut nsIAtom;
            #[link_name = "?noshade@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static noshade: *mut nsIAtom;
            #[link_name = "?novalidate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static novalidate: *mut nsIAtom;
            #[link_name = "?_not@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _not: *mut nsIAtom;
            #[link_name = "?nowrap@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nowrap: *mut nsIAtom;
            #[link_name = "?number@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static number: *mut nsIAtom;
            #[link_name = "?null@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static null: *mut nsIAtom;
            #[link_name = "?object@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static object: *mut nsIAtom;
            #[link_name = "?objectType@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static objectType: *mut nsIAtom;
            #[link_name = "?observer@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static observer: *mut nsIAtom;
            #[link_name = "?observes@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static observes: *mut nsIAtom;
            #[link_name = "?odd@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static odd: *mut nsIAtom;
            #[link_name = "?OFF@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static OFF: *mut nsIAtom;
            #[link_name = "?ol@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ol: *mut nsIAtom;
            #[link_name = "?omitXmlDeclaration@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static omitXmlDeclaration: *mut nsIAtom;
            #[link_name = "?ona2dpstatuschanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ona2dpstatuschanged: *mut nsIAtom;
            #[link_name = "?onabort@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onabort: *mut nsIAtom;
            #[link_name = "?onmozaccesskeynotfound@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmozaccesskeynotfound: *mut nsIAtom;
            #[link_name = "?onactivate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onactivate: *mut nsIAtom;
            #[link_name = "?onadapteradded@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onadapteradded: *mut nsIAtom;
            #[link_name = "?onadapterremoved@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onadapterremoved: *mut nsIAtom;
            #[link_name = "?onafterprint@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onafterprint: *mut nsIAtom;
            #[link_name = "?onafterscriptexecute@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onafterscriptexecute: *mut nsIAtom;
            #[link_name = "?onalerting@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onalerting: *mut nsIAtom;
            #[link_name = "?onanimationend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onanimationend: *mut nsIAtom;
            #[link_name = "?onanimationiteration@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onanimationiteration: *mut nsIAtom;
            #[link_name = "?onanimationstart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onanimationstart: *mut nsIAtom;
            #[link_name = "?onantennaavailablechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onantennaavailablechange: *mut nsIAtom;
            #[link_name = "?onAppCommand@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onAppCommand: *mut nsIAtom;
            #[link_name = "?onattributechanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onattributechanged: *mut nsIAtom;
            #[link_name = "?onattributereadreq@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onattributereadreq: *mut nsIAtom;
            #[link_name = "?onattributewritereq@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onattributewritereq: *mut nsIAtom;
            #[link_name = "?onaudioprocess@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onaudioprocess: *mut nsIAtom;
            #[link_name = "?onbeforecopy@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onbeforecopy: *mut nsIAtom;
            #[link_name = "?onbeforecut@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onbeforecut: *mut nsIAtom;
            #[link_name = "?onbeforepaste@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onbeforepaste: *mut nsIAtom;
            #[link_name = "?onbeforeevicted@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onbeforeevicted: *mut nsIAtom;
            #[link_name = "?onbeforeprint@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onbeforeprint: *mut nsIAtom;
            #[link_name = "?onbeforescriptexecute@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onbeforescriptexecute: *mut nsIAtom;
            #[link_name = "?onbeforeunload@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onbeforeunload: *mut nsIAtom;
            #[link_name = "?onblocked@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onblocked: *mut nsIAtom;
            #[link_name = "?onblur@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onblur: *mut nsIAtom;
            #[link_name = "?onbroadcast@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onbroadcast: *mut nsIAtom;
            #[link_name = "?onbusy@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onbusy: *mut nsIAtom;
            #[link_name = "?onbufferedamountlow@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onbufferedamountlow: *mut nsIAtom;
            #[link_name = "?oncached@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncached: *mut nsIAtom;
            #[link_name = "?oncallschanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncallschanged: *mut nsIAtom;
            #[link_name = "?oncancel@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncancel: *mut nsIAtom;
            #[link_name = "?oncardstatechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncardstatechange: *mut nsIAtom;
            #[link_name = "?oncfstatechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncfstatechange: *mut nsIAtom;
            #[link_name = "?onchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onchange: *mut nsIAtom;
            #[link_name = "?oncharacteristicchanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncharacteristicchanged: *mut nsIAtom;
            #[link_name = "?onchargingchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onchargingchange: *mut nsIAtom;
            #[link_name = "?onchargingtimechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onchargingtimechange: *mut nsIAtom;
            #[link_name = "?onchecking@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onchecking: *mut nsIAtom;
            #[link_name = "?onclick@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onclick: *mut nsIAtom;
            #[link_name = "?onclirmodechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onclirmodechange: *mut nsIAtom;
            #[link_name = "?onclose@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onclose: *mut nsIAtom;
            #[link_name = "?oncommand@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncommand: *mut nsIAtom;
            #[link_name = "?oncommandupdate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncommandupdate: *mut nsIAtom;
            #[link_name = "?oncomplete@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncomplete: *mut nsIAtom;
            #[link_name = "?oncompositionend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncompositionend: *mut nsIAtom;
            #[link_name = "?oncompositionstart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncompositionstart: *mut nsIAtom;
            #[link_name = "?oncompositionupdate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncompositionupdate: *mut nsIAtom;
            #[link_name = "?onconfigurationchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onconfigurationchange: *mut nsIAtom;
            #[link_name = "?onconnect@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onconnect: *mut nsIAtom;
            #[link_name = "?onconnected@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onconnected: *mut nsIAtom;
            #[link_name = "?onconnecting@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onconnecting: *mut nsIAtom;
            #[link_name = "?onconnectionavailable@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onconnectionavailable: *mut nsIAtom;
            #[link_name = "?onconnectionstatechanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onconnectionstatechanged: *mut nsIAtom;
            #[link_name = "?oncontextmenu@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncontextmenu: *mut nsIAtom;
            #[link_name = "?oncopy@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncopy: *mut nsIAtom;
            #[link_name = "?oncurrentchannelchanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncurrentchannelchanged: *mut nsIAtom;
            #[link_name = "?oncurrentsourcechanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncurrentsourcechanged: *mut nsIAtom;
            #[link_name = "?oncut@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncut: *mut nsIAtom;
            #[link_name = "?ondatachange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondatachange: *mut nsIAtom;
            #[link_name = "?ondataerror@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondataerror: *mut nsIAtom;
            #[link_name = "?ondblclick@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondblclick: *mut nsIAtom;
            #[link_name = "?ondeleted@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondeleted: *mut nsIAtom;
            #[link_name = "?ondeliverysuccess@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondeliverysuccess: *mut nsIAtom;
            #[link_name = "?ondeliveryerror@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondeliveryerror: *mut nsIAtom;
            #[link_name = "?ondevicefound@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondevicefound: *mut nsIAtom;
            #[link_name = "?ondevicepaired@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondevicepaired: *mut nsIAtom;
            #[link_name = "?ondeviceunpaired@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondeviceunpaired: *mut nsIAtom;
            #[link_name = "?ondialing@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondialing: *mut nsIAtom;
            #[link_name = "?ondisabled@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondisabled: *mut nsIAtom;
            #[link_name = "?ondischargingtimechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondischargingtimechange: *mut nsIAtom;
            #[link_name = "?ondisconnect@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondisconnect: *mut nsIAtom;
            #[link_name = "?ondisconnected@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondisconnected: *mut nsIAtom;
            #[link_name = "?ondisconnecting@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondisconnecting: *mut nsIAtom;
            #[link_name = "?ondisplaypasskeyreq@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondisplaypasskeyreq: *mut nsIAtom;
            #[link_name = "?ondownloading@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondownloading: *mut nsIAtom;
            #[link_name = "?onDOMActivate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onDOMActivate: *mut nsIAtom;
            #[link_name = "?onDOMAttrModified@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onDOMAttrModified: *mut nsIAtom;
            #[link_name = "?onDOMCharacterDataModified@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onDOMCharacterDataModified: *mut nsIAtom;
            #[link_name = "?onDOMFocusIn@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onDOMFocusIn: *mut nsIAtom;
            #[link_name = "?onDOMFocusOut@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onDOMFocusOut: *mut nsIAtom;
            #[link_name = "?onDOMMouseScroll@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onDOMMouseScroll: *mut nsIAtom;
            #[link_name = "?onDOMNodeInserted@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onDOMNodeInserted: *mut nsIAtom;
            #[link_name = "?onDOMNodeInsertedIntoDocument@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onDOMNodeInsertedIntoDocument: *mut nsIAtom;
            #[link_name = "?onDOMNodeRemoved@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onDOMNodeRemoved: *mut nsIAtom;
            #[link_name = "?onDOMNodeRemovedFromDocument@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onDOMNodeRemovedFromDocument: *mut nsIAtom;
            #[link_name = "?onDOMSubtreeModified@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onDOMSubtreeModified: *mut nsIAtom;
            #[link_name = "?ondata@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondata: *mut nsIAtom;
            #[link_name = "?ondrag@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondrag: *mut nsIAtom;
            #[link_name = "?ondragdrop@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondragdrop: *mut nsIAtom;
            #[link_name = "?ondragend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondragend: *mut nsIAtom;
            #[link_name = "?ondragenter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondragenter: *mut nsIAtom;
            #[link_name = "?ondragexit@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondragexit: *mut nsIAtom;
            #[link_name = "?ondraggesture@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondraggesture: *mut nsIAtom;
            #[link_name = "?ondragleave@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondragleave: *mut nsIAtom;
            #[link_name = "?ondragover@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondragover: *mut nsIAtom;
            #[link_name = "?ondragstart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondragstart: *mut nsIAtom;
            #[link_name = "?ondrain@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondrain: *mut nsIAtom;
            #[link_name = "?ondrop@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondrop: *mut nsIAtom;
            #[link_name = "?oneitbroadcasted@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oneitbroadcasted: *mut nsIAtom;
            #[link_name = "?onenabled@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onenabled: *mut nsIAtom;
            #[link_name = "?onenterpincodereq@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onenterpincodereq: *mut nsIAtom;
            #[link_name = "?onemergencycbmodechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onemergencycbmodechange: *mut nsIAtom;
            #[link_name = "?onerror@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onerror: *mut nsIAtom;
            #[link_name = "?onevicted@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onevicted: *mut nsIAtom;
            #[link_name = "?onfacesdetected@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onfacesdetected: *mut nsIAtom;
            #[link_name = "?onfailed@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onfailed: *mut nsIAtom;
            #[link_name = "?onfetch@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onfetch: *mut nsIAtom;
            #[link_name = "?onfinish@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onfinish: *mut nsIAtom;
            #[link_name = "?onfocus@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onfocus: *mut nsIAtom;
            #[link_name = "?onfrequencychange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onfrequencychange: *mut nsIAtom;
            #[link_name = "?onfullscreenchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onfullscreenchange: *mut nsIAtom;
            #[link_name = "?onfullscreenerror@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onfullscreenerror: *mut nsIAtom;
            #[link_name = "?onspeakerforcedchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onspeakerforcedchange: *mut nsIAtom;
            #[link_name = "?onget@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onget: *mut nsIAtom;
            #[link_name = "?ongroupchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ongroupchange: *mut nsIAtom;
            #[link_name = "?onhashchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onhashchange: *mut nsIAtom;
            #[link_name = "?onheadphoneschange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onheadphoneschange: *mut nsIAtom;
            #[link_name = "?onheld@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onheld: *mut nsIAtom;
            #[link_name = "?onhfpstatuschanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onhfpstatuschanged: *mut nsIAtom;
            #[link_name = "?onhidstatuschanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onhidstatuschanged: *mut nsIAtom;
            #[link_name = "?onholding@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onholding: *mut nsIAtom;
            #[link_name = "?oniccchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oniccchange: *mut nsIAtom;
            #[link_name = "?oniccdetected@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oniccdetected: *mut nsIAtom;
            #[link_name = "?oniccinfochange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oniccinfochange: *mut nsIAtom;
            #[link_name = "?oniccundetected@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oniccundetected: *mut nsIAtom;
            #[link_name = "?onincoming@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onincoming: *mut nsIAtom;
            #[link_name = "?oninput@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oninput: *mut nsIAtom;
            #[link_name = "?oninstall@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oninstall: *mut nsIAtom;
            #[link_name = "?oninvalid@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oninvalid: *mut nsIAtom;
            #[link_name = "?onkeydown@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onkeydown: *mut nsIAtom;
            #[link_name = "?onkeypress@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onkeypress: *mut nsIAtom;
            #[link_name = "?onkeyup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onkeyup: *mut nsIAtom;
            #[link_name = "?onlanguagechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onlanguagechange: *mut nsIAtom;
            #[link_name = "?onlevelchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onlevelchange: *mut nsIAtom;
            #[link_name = "?onLoad@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onLoad: *mut nsIAtom;
            #[link_name = "?onload@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onload: *mut nsIAtom;
            #[link_name = "?onloading@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onloading: *mut nsIAtom;
            #[link_name = "?onloadingdone@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onloadingdone: *mut nsIAtom;
            #[link_name = "?onloadingerror@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onloadingerror: *mut nsIAtom;
            #[link_name = "?onpopstate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpopstate: *mut nsIAtom;
            #[link_name = "?only@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static only: *mut nsIAtom;
            #[link_name = "?onmessage@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmessage: *mut nsIAtom;
            #[link_name = "?onmousedown@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmousedown: *mut nsIAtom;
            #[link_name = "?onmouseenter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmouseenter: *mut nsIAtom;
            #[link_name = "?onmouseleave@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmouseleave: *mut nsIAtom;
            #[link_name = "?onmousemove@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmousemove: *mut nsIAtom;
            #[link_name = "?onmouseout@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmouseout: *mut nsIAtom;
            #[link_name = "?onmouseover@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmouseover: *mut nsIAtom;
            #[link_name = "?onMozMouseHittest@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozMouseHittest: *mut nsIAtom;
            #[link_name = "?onmouseup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmouseup: *mut nsIAtom;
            #[link_name = "?onMozAfterPaint@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozAfterPaint: *mut nsIAtom;
            #[link_name = "?onmozbrowserafterkeydown@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmozbrowserafterkeydown: *mut nsIAtom;
            #[link_name = "?onmozbrowserafterkeyup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmozbrowserafterkeyup: *mut nsIAtom;
            #[link_name = "?onmozbrowserbeforekeydown@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmozbrowserbeforekeydown: *mut nsIAtom;
            #[link_name = "?onmozbrowserbeforekeyup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmozbrowserbeforekeyup: *mut nsIAtom;
            #[link_name = "?onmozfullscreenchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmozfullscreenchange: *mut nsIAtom;
            #[link_name = "?onmozfullscreenerror@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmozfullscreenerror: *mut nsIAtom;
            #[link_name = "?onmozkeydownonplugin@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmozkeydownonplugin: *mut nsIAtom;
            #[link_name = "?onmozkeyuponplugin@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmozkeyuponplugin: *mut nsIAtom;
            #[link_name = "?onmozpointerlockchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmozpointerlockchange: *mut nsIAtom;
            #[link_name = "?onmozpointerlockerror@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmozpointerlockerror: *mut nsIAtom;
            #[link_name = "?onmoztimechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmoztimechange: *mut nsIAtom;
            #[link_name = "?onMozMousePixelScroll@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozMousePixelScroll: *mut nsIAtom;
            #[link_name = "?onMozScrolledAreaChanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozScrolledAreaChanged: *mut nsIAtom;
            #[link_name = "?onmoznetworkupload@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmoznetworkupload: *mut nsIAtom;
            #[link_name = "?onmoznetworkdownload@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmoznetworkdownload: *mut nsIAtom;
            #[link_name = "?onmapfolderlistingreq@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmapfolderlistingreq: *mut nsIAtom;
            #[link_name = "?onmapmessageslistingreq@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmapmessageslistingreq: *mut nsIAtom;
            #[link_name = "?onmapgetmessagereq@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmapgetmessagereq: *mut nsIAtom;
            #[link_name = "?onmapsetmessagestatusreq@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmapsetmessagestatusreq: *mut nsIAtom;
            #[link_name = "?onmapsendmessagereq@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmapsendmessagereq: *mut nsIAtom;
            #[link_name = "?onmapmessageupdatereq@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmapmessageupdatereq: *mut nsIAtom;
            #[link_name = "?onnewrdsgroup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onnewrdsgroup: *mut nsIAtom;
            #[link_name = "?onnotificationclick@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onnotificationclick: *mut nsIAtom;
            #[link_name = "?onnotificationclose@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onnotificationclose: *mut nsIAtom;
            #[link_name = "?onnoupdate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onnoupdate: *mut nsIAtom;
            #[link_name = "?onobexpasswordreq@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onobexpasswordreq: *mut nsIAtom;
            #[link_name = "?onobsolete@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onobsolete: *mut nsIAtom;
            #[link_name = "?ononline@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ononline: *mut nsIAtom;
            #[link_name = "?onoffline@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onoffline: *mut nsIAtom;
            #[link_name = "?onopen@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onopen: *mut nsIAtom;
            #[link_name = "?onorientationchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onorientationchange: *mut nsIAtom;
            #[link_name = "?onotastatuschange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onotastatuschange: *mut nsIAtom;
            #[link_name = "?onoverflow@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onoverflow: *mut nsIAtom;
            #[link_name = "?onoverflowchanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onoverflowchanged: *mut nsIAtom;
            #[link_name = "?onpagehide@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpagehide: *mut nsIAtom;
            #[link_name = "?onpageshow@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpageshow: *mut nsIAtom;
            #[link_name = "?onpaint@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpaint: *mut nsIAtom;
            #[link_name = "?onpairingaborted@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpairingaborted: *mut nsIAtom;
            #[link_name = "?onpairingconfirmationreq@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpairingconfirmationreq: *mut nsIAtom;
            #[link_name = "?onpairingconsentreq@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpairingconsentreq: *mut nsIAtom;
            #[link_name = "?onpaste@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpaste: *mut nsIAtom;
            #[link_name = "?onpendingchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpendingchange: *mut nsIAtom;
            #[link_name = "?onpichange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpichange: *mut nsIAtom;
            #[link_name = "?onpicture@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpicture: *mut nsIAtom;
            #[link_name = "?onpopuphidden@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpopuphidden: *mut nsIAtom;
            #[link_name = "?onpopuphiding@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpopuphiding: *mut nsIAtom;
            #[link_name = "?onpopupshowing@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpopupshowing: *mut nsIAtom;
            #[link_name = "?onpopupshown@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpopupshown: *mut nsIAtom;
            #[link_name = "?onposter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onposter: *mut nsIAtom;
            #[link_name = "?onpreviewstatechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpreviewstatechange: *mut nsIAtom;
            #[link_name = "?onpullphonebookreq@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpullphonebookreq: *mut nsIAtom;
            #[link_name = "?onpullvcardentryreq@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpullvcardentryreq: *mut nsIAtom;
            #[link_name = "?onpullvcardlistingreq@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpullvcardlistingreq: *mut nsIAtom;
            #[link_name = "?onpush@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpush: *mut nsIAtom;
            #[link_name = "?onpushsubscriptionchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpushsubscriptionchange: *mut nsIAtom;
            #[link_name = "?onpschange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpschange: *mut nsIAtom;
            #[link_name = "?onptychange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onptychange: *mut nsIAtom;
            #[link_name = "?onradiostatechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onradiostatechange: *mut nsIAtom;
            #[link_name = "?onrdsdisabled@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onrdsdisabled: *mut nsIAtom;
            #[link_name = "?onrdsenabled@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onrdsenabled: *mut nsIAtom;
            #[link_name = "?onreaderror@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onreaderror: *mut nsIAtom;
            #[link_name = "?onreadsuccess@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onreadsuccess: *mut nsIAtom;
            #[link_name = "?onready@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onready: *mut nsIAtom;
            #[link_name = "?onreadystatechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onreadystatechange: *mut nsIAtom;
            #[link_name = "?onreceived@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onreceived: *mut nsIAtom;
            #[link_name = "?onrecorderstatechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onrecorderstatechange: *mut nsIAtom;
            #[link_name = "?onremoteheld@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onremoteheld: *mut nsIAtom;
            #[link_name = "?onremoteresumed@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onremoteresumed: *mut nsIAtom;
            #[link_name = "?onresourcetimingbufferfull@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onresourcetimingbufferfull: *mut nsIAtom;
            #[link_name = "?onretrieving@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onretrieving: *mut nsIAtom;
            #[link_name = "?onRequest@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onRequest: *mut nsIAtom;
            #[link_name = "?onrequestmediaplaystatus@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onrequestmediaplaystatus: *mut nsIAtom;
            #[link_name = "?onreset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onreset: *mut nsIAtom;
            #[link_name = "?onresuming@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onresuming: *mut nsIAtom;
            #[link_name = "?onresize@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onresize: *mut nsIAtom;
            #[link_name = "?onrtchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onrtchange: *mut nsIAtom;
            #[link_name = "?onscanningstatechanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onscanningstatechanged: *mut nsIAtom;
            #[link_name = "?onscostatuschanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onscostatuschanged: *mut nsIAtom;
            #[link_name = "?onscroll@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onscroll: *mut nsIAtom;
            #[link_name = "?onselect@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onselect: *mut nsIAtom;
            #[link_name = "?onselectionchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onselectionchange: *mut nsIAtom;
            #[link_name = "?onselectstart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onselectstart: *mut nsIAtom;
            #[link_name = "?onsending@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onsending: *mut nsIAtom;
            #[link_name = "?onsent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onsent: *mut nsIAtom;
            #[link_name = "?onset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onset: *mut nsIAtom;
            #[link_name = "?onshow@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onshow: *mut nsIAtom;
            #[link_name = "?onshutter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onshutter: *mut nsIAtom;
            #[link_name = "?onstatechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onstatechange: *mut nsIAtom;
            #[link_name = "?onstatuschanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onstatuschanged: *mut nsIAtom;
            #[link_name = "?onstkcommand@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onstkcommand: *mut nsIAtom;
            #[link_name = "?onstksessionend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onstksessionend: *mut nsIAtom;
            #[link_name = "?onstorage@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onstorage: *mut nsIAtom;
            #[link_name = "?onstorageareachanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onstorageareachanged: *mut nsIAtom;
            #[link_name = "?onsubmit@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onsubmit: *mut nsIAtom;
            #[link_name = "?onsuccess@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onsuccess: *mut nsIAtom;
            #[link_name = "?ontypechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ontypechange: *mut nsIAtom;
            #[link_name = "?onterminate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onterminate: *mut nsIAtom;
            #[link_name = "?ontext@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ontext: *mut nsIAtom;
            #[link_name = "?ontoggle@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ontoggle: *mut nsIAtom;
            #[link_name = "?ontouchstart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ontouchstart: *mut nsIAtom;
            #[link_name = "?ontouchend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ontouchend: *mut nsIAtom;
            #[link_name = "?ontouchmove@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ontouchmove: *mut nsIAtom;
            #[link_name = "?ontouchcancel@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ontouchcancel: *mut nsIAtom;
            #[link_name = "?ontransitionend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ontransitionend: *mut nsIAtom;
            #[link_name = "?onunderflow@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onunderflow: *mut nsIAtom;
            #[link_name = "?onunload@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onunload: *mut nsIAtom;
            #[link_name = "?onupdatefound@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onupdatefound: *mut nsIAtom;
            #[link_name = "?onupdateready@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onupdateready: *mut nsIAtom;
            #[link_name = "?onupgradeneeded@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onupgradeneeded: *mut nsIAtom;
            #[link_name = "?onussdreceived@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onussdreceived: *mut nsIAtom;
            #[link_name = "?onversionchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onversionchange: *mut nsIAtom;
            #[link_name = "?onvoicechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onvoicechange: *mut nsIAtom;
            #[link_name = "?onvoiceschanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onvoiceschanged: *mut nsIAtom;
            #[link_name = "?onwebkitAnimationEnd@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onwebkitAnimationEnd: *mut nsIAtom;
            #[link_name = "?onwebkitAnimationIteration@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onwebkitAnimationIteration: *mut nsIAtom;
            #[link_name = "?onwebkitAnimationStart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onwebkitAnimationStart: *mut nsIAtom;
            #[link_name = "?onwebkitTransitionEnd@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onwebkitTransitionEnd: *mut nsIAtom;
            #[link_name = "?onwebsocket@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onwebsocket: *mut nsIAtom;
            #[link_name = "?onwheel@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onwheel: *mut nsIAtom;
            #[link_name = "?open@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static open: *mut nsIAtom;
            #[link_name = "?optgroup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static optgroup: *mut nsIAtom;
            #[link_name = "?optimum@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static optimum: *mut nsIAtom;
            #[link_name = "?option@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static option: *mut nsIAtom;
            #[link_name = "?_or@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _or: *mut nsIAtom;
            #[link_name = "?order@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static order: *mut nsIAtom;
            #[link_name = "?ordinal@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ordinal: *mut nsIAtom;
            #[link_name = "?orient@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static orient: *mut nsIAtom;
            #[link_name = "?orientation@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static orientation: *mut nsIAtom;
            #[link_name = "?otherwise@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static otherwise: *mut nsIAtom;
            #[link_name = "?output@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static output: *mut nsIAtom;
            #[link_name = "?overflow@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static overflow: *mut nsIAtom;
            #[link_name = "?overflowchanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static overflowchanged: *mut nsIAtom;
            #[link_name = "?overlay@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static overlay: *mut nsIAtom;
            #[link_name = "?overlap@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static overlap: *mut nsIAtom;
            #[link_name = "?p@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static p: *mut nsIAtom;
            #[link_name = "?pack@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pack: *mut nsIAtom;
            #[link_name = "?page@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static page: *mut nsIAtom;
            #[link_name = "?pageincrement@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pageincrement: *mut nsIAtom;
            #[link_name = "?pagex@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pagex: *mut nsIAtom;
            #[link_name = "?pagey@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pagey: *mut nsIAtom;
            #[link_name = "?paint_order@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static paint_order: *mut nsIAtom;
            #[link_name = "?palettename@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static palettename: *mut nsIAtom;
            #[link_name = "?panel@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static panel: *mut nsIAtom;
            #[link_name = "?param@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static param: *mut nsIAtom;
            #[link_name = "?parameter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static parameter: *mut nsIAtom;
            #[link_name = "?parent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static parent: *mut nsIAtom;
            #[link_name = "?parentapp@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static parentapp: *mut nsIAtom;
            #[link_name = "?parentfocused@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static parentfocused: *mut nsIAtom;
            #[link_name = "?parsetype@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static parsetype: *mut nsIAtom;
            #[link_name = "?password@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static password: *mut nsIAtom;
            #[link_name = "?pattern@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pattern: *mut nsIAtom;
            #[link_name = "?patternSeparator@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static patternSeparator: *mut nsIAtom;
            #[link_name = "?perMille@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static perMille: *mut nsIAtom;
            #[link_name = "?percent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static percent: *mut nsIAtom;
            #[link_name = "?persist@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static persist: *mut nsIAtom;
            #[link_name = "?phase@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static phase: *mut nsIAtom;
            #[link_name = "?picture@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static picture: *mut nsIAtom;
            #[link_name = "?ping@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ping: *mut nsIAtom;
            #[link_name = "?pinned@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pinned: *mut nsIAtom;
            #[link_name = "?placeholder@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static placeholder: *mut nsIAtom;
            #[link_name = "?plaintext@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static plaintext: *mut nsIAtom;
            #[link_name = "?playbackrate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static playbackrate: *mut nsIAtom;
            #[link_name = "?pointSize@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pointSize: *mut nsIAtom;
            #[link_name = "?poly@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static poly: *mut nsIAtom;
            #[link_name = "?polygon@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static polygon: *mut nsIAtom;
            #[link_name = "?popup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static popup: *mut nsIAtom;
            #[link_name = "?popupalign@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static popupalign: *mut nsIAtom;
            #[link_name = "?popupanchor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static popupanchor: *mut nsIAtom;
            #[link_name = "?popupgroup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static popupgroup: *mut nsIAtom;
            #[link_name = "?popuphidden@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static popuphidden: *mut nsIAtom;
            #[link_name = "?popuphiding@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static popuphiding: *mut nsIAtom;
            #[link_name = "?popupset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static popupset: *mut nsIAtom;
            #[link_name = "?popupshowing@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static popupshowing: *mut nsIAtom;
            #[link_name = "?popupshown@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static popupshown: *mut nsIAtom;
            #[link_name = "?popupsinherittooltip@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static popupsinherittooltip: *mut nsIAtom;
            #[link_name = "?position@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static position: *mut nsIAtom;
            #[link_name = "?poster@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static poster: *mut nsIAtom;
            #[link_name = "?pre@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pre: *mut nsIAtom;
            #[link_name = "?preceding@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static preceding: *mut nsIAtom;
            #[link_name = "?precedingSibling@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static precedingSibling: *mut nsIAtom;
            #[link_name = "?predicate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static predicate: *mut nsIAtom;
            #[link_name = "?prefix@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static prefix: *mut nsIAtom;
            #[link_name = "?preload@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static preload: *mut nsIAtom;
            #[link_name = "?prerendered@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static prerendered: *mut nsIAtom;
            #[link_name = "?mozpresentation@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozpresentation: *mut nsIAtom;
            #[link_name = "?preserve@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static preserve: *mut nsIAtom;
            #[link_name = "?preserveSpace@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static preserveSpace: *mut nsIAtom;
            #[link_name = "?preventdefault@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static preventdefault: *mut nsIAtom;
            #[link_name = "?primary@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static primary: *mut nsIAtom;
            #[link_name = "?print@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static print: *mut nsIAtom;
            #[link_name = "?priority@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static priority: *mut nsIAtom;
            #[link_name = "?processingInstruction@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static processingInstruction: *mut nsIAtom;
            #[link_name = "?profile@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static profile: *mut nsIAtom;
            #[link_name = "?progress@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static progress: *mut nsIAtom;
            #[link_name = "?progressmeter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static progressmeter: *mut nsIAtom;
            #[link_name = "?progressNormal@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static progressNormal: *mut nsIAtom;
            #[link_name = "?progressUndetermined@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static progressUndetermined: *mut nsIAtom;
            #[link_name = "?projection@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static projection: *mut nsIAtom;
            #[link_name = "?prompt@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static prompt: *mut nsIAtom;
            #[link_name = "?propagate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static propagate: *mut nsIAtom;
            #[link_name = "?properties@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static properties: *mut nsIAtom;
            #[link_name = "?property@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static property: *mut nsIAtom;
            #[link_name = "?pubdate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pubdate: *mut nsIAtom;
            #[link_name = "?q@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static q: *mut nsIAtom;
            #[link_name = "?query@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static query: *mut nsIAtom;
            #[link_name = "?queryset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static queryset: *mut nsIAtom;
            #[link_name = "?querytype@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static querytype: *mut nsIAtom;
            #[link_name = "?radio@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static radio: *mut nsIAtom;
            #[link_name = "?radiogroup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static radiogroup: *mut nsIAtom;
            #[link_name = "?range@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static range: *mut nsIAtom;
            #[link_name = "?readonly@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static readonly: *mut nsIAtom;
            #[link_name = "?rect@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rect: *mut nsIAtom;
            #[link_name = "?rectangle@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rectangle: *mut nsIAtom;
            #[link_name = "?ref@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ref_: *mut nsIAtom;
            #[link_name = "?refresh@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static refresh: *mut nsIAtom;
            #[link_name = "?rel@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rel: *mut nsIAtom;
            #[link_name = "?onreloadpage@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onreloadpage: *mut nsIAtom;
            #[link_name = "?rem@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rem: *mut nsIAtom;
            #[link_name = "?removeelement@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static removeelement: *mut nsIAtom;
            #[link_name = "?renderingobserverlist@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static renderingobserverlist: *mut nsIAtom;
            #[link_name = "?repeat@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static repeat: *mut nsIAtom;
            #[link_name = "?replace@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static replace: *mut nsIAtom;
            #[link_name = "?required@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static required: *mut nsIAtom;
            #[link_name = "?reserved@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static reserved: *mut nsIAtom;
            #[link_name = "?reset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static reset: *mut nsIAtom;
            #[link_name = "?resizeafter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static resizeafter: *mut nsIAtom;
            #[link_name = "?resizebefore@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static resizebefore: *mut nsIAtom;
            #[link_name = "?resizer@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static resizer: *mut nsIAtom;
            #[link_name = "?resolution@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static resolution: *mut nsIAtom;
            #[link_name = "?resource@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static resource: *mut nsIAtom;
            #[link_name = "?resources@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static resources: *mut nsIAtom;
            #[link_name = "?result@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static result: *mut nsIAtom;
            #[link_name = "?resultPrefix@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static resultPrefix: *mut nsIAtom;
            #[link_name = "?retargetdocumentfocus@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static retargetdocumentfocus: *mut nsIAtom;
            #[link_name = "?rev@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rev: *mut nsIAtom;
            #[link_name = "?reverse@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static reverse: *mut nsIAtom;
            #[link_name = "?reversed@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static reversed: *mut nsIAtom;
            #[link_name = "?richlistbox@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static richlistbox: *mut nsIAtom;
            #[link_name = "?richlistitem@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static richlistitem: *mut nsIAtom;
            #[link_name = "?right@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static right: *mut nsIAtom;
            #[link_name = "?rightmargin@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rightmargin: *mut nsIAtom;
            #[link_name = "?rightpadding@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rightpadding: *mut nsIAtom;
            #[link_name = "?role@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static role: *mut nsIAtom;
            #[link_name = "?rolluponmousewheel@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rolluponmousewheel: *mut nsIAtom;
            #[link_name = "?round@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static round: *mut nsIAtom;
            #[link_name = "?row@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static row: *mut nsIAtom;
            #[link_name = "?rows@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rows: *mut nsIAtom;
            #[link_name = "?rowspan@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rowspan: *mut nsIAtom;
            #[link_name = "?rb@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rb: *mut nsIAtom;
            #[link_name = "?rp@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rp: *mut nsIAtom;
            #[link_name = "?rt@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rt: *mut nsIAtom;
            #[link_name = "?rtc@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rtc: *mut nsIAtom;
            #[link_name = "?rtl@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rtl: *mut nsIAtom;
            #[link_name = "?ruby@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ruby: *mut nsIAtom;
            #[link_name = "?rubyBase@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rubyBase: *mut nsIAtom;
            #[link_name = "?rubyBaseContainer@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rubyBaseContainer: *mut nsIAtom;
            #[link_name = "?rubyText@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rubyText: *mut nsIAtom;
            #[link_name = "?rubyTextContainer@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rubyTextContainer: *mut nsIAtom;
            #[link_name = "?rule@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rule: *mut nsIAtom;
            #[link_name = "?rules@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rules: *mut nsIAtom;
            #[link_name = "?s@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static s: *mut nsIAtom;
            #[link_name = "?samp@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static samp: *mut nsIAtom;
            #[link_name = "?sandbox@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sandbox: *mut nsIAtom;
            #[link_name = "?sbattr@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sbattr: *mut nsIAtom;
            #[link_name = "?scale@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scale: *mut nsIAtom;
            #[link_name = "?scan@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scan: *mut nsIAtom;
            #[link_name = "?scheme@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scheme: *mut nsIAtom;
            #[link_name = "?scope@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scope: *mut nsIAtom;
            #[link_name = "?scoped@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scoped: *mut nsIAtom;
            #[link_name = "?screen@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static screen: *mut nsIAtom;
            #[link_name = "?screenX@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static screenX: *mut nsIAtom;
            #[link_name = "?screenY@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static screenY: *mut nsIAtom;
            #[link_name = "?script@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static script: *mut nsIAtom;
            #[link_name = "?scriptEnabledBeforePrintOrPreview@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scriptEnabledBeforePrintOrPreview: *mut nsIAtom;
            #[link_name = "?scrollbar@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scrollbar: *mut nsIAtom;
            #[link_name = "?scrollbarbutton@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scrollbarbutton: *mut nsIAtom;
            #[link_name = "?scrollbarDownBottom@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scrollbarDownBottom: *mut nsIAtom;
            #[link_name = "?scrollbarDownTop@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scrollbarDownTop: *mut nsIAtom;
            #[link_name = "?scrollbarUpBottom@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scrollbarUpBottom: *mut nsIAtom;
            #[link_name = "?scrollbarUpTop@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scrollbarUpTop: *mut nsIAtom;
            #[link_name = "?scrollbox@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scrollbox: *mut nsIAtom;
            #[link_name = "?scrollcorner@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scrollcorner: *mut nsIAtom;
            #[link_name = "?scrolling@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scrolling: *mut nsIAtom;
            #[link_name = "?section@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static section: *mut nsIAtom;
            #[link_name = "?select@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static select: *mut nsIAtom;
            #[link_name = "?selectable@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static selectable: *mut nsIAtom;
            #[link_name = "?selected@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static selected: *mut nsIAtom;
            #[link_name = "?selectedIndex@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static selectedIndex: *mut nsIAtom;
            #[link_name = "?selectedindex@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static selectedindex: *mut nsIAtom;
            #[link_name = "?self@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static self_: *mut nsIAtom;
            #[link_name = "?seltype@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static seltype: *mut nsIAtom;
            #[link_name = "?setcookie@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static setcookie: *mut nsIAtom;
            #[link_name = "?setter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static setter: *mut nsIAtom;
            #[link_name = "?shape@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static shape: *mut nsIAtom;
            #[link_name = "?show@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static show: *mut nsIAtom;
            #[link_name = "?showcaret@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static showcaret: *mut nsIAtom;
            #[link_name = "?showresizer@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static showresizer: *mut nsIAtom;
            #[link_name = "?simple@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static simple: *mut nsIAtom;
            #[link_name = "?single@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static single: *mut nsIAtom;
            #[link_name = "?size@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static size: *mut nsIAtom;
            #[link_name = "?sizes@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sizes: *mut nsIAtom;
            #[link_name = "?sizemode@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sizemode: *mut nsIAtom;
            #[link_name = "?sizetopopup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sizetopopup: *mut nsIAtom;
            #[link_name = "?slider@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static slider: *mut nsIAtom;
            #[link_name = "?small@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static small: *mut nsIAtom;
            #[link_name = "?smooth@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static smooth: *mut nsIAtom;
            #[link_name = "?snap@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static snap: *mut nsIAtom;
            #[link_name = "?sort@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sort: *mut nsIAtom;
            #[link_name = "?sortActive@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sortActive: *mut nsIAtom;
            #[link_name = "?sortDirection@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sortDirection: *mut nsIAtom;
            #[link_name = "?sorted@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sorted: *mut nsIAtom;
            #[link_name = "?sorthints@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sorthints: *mut nsIAtom;
            #[link_name = "?sortLocked@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sortLocked: *mut nsIAtom;
            #[link_name = "?sortResource@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sortResource: *mut nsIAtom;
            #[link_name = "?sortResource2@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sortResource2: *mut nsIAtom;
            #[link_name = "?sortSeparators@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sortSeparators: *mut nsIAtom;
            #[link_name = "?sortStaticsLast@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sortStaticsLast: *mut nsIAtom;
            #[link_name = "?source@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static source: *mut nsIAtom;
            #[link_name = "?space@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static space: *mut nsIAtom;
            #[link_name = "?spacer@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static spacer: *mut nsIAtom;
            #[link_name = "?span@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static span: *mut nsIAtom;
            #[link_name = "?spellcheck@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static spellcheck: *mut nsIAtom;
            #[link_name = "?spinner@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static spinner: *mut nsIAtom;
            #[link_name = "?split@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static split: *mut nsIAtom;
            #[link_name = "?splitmenu@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static splitmenu: *mut nsIAtom;
            #[link_name = "?splitter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static splitter: *mut nsIAtom;
            #[link_name = "?spring@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static spring: *mut nsIAtom;
            #[link_name = "?src@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static src: *mut nsIAtom;
            #[link_name = "?srcdoc@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static srcdoc: *mut nsIAtom;
            #[link_name = "?srclang@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static srclang: *mut nsIAtom;
            #[link_name = "?srcset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static srcset: *mut nsIAtom;
            #[link_name = "?stack@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stack: *mut nsIAtom;
            #[link_name = "?standalone@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static standalone: *mut nsIAtom;
            #[link_name = "?standby@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static standby: *mut nsIAtom;
            #[link_name = "?start@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static start: *mut nsIAtom;
            #[link_name = "?start_after@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static start_after: *mut nsIAtom;
            #[link_name = "?start_before@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static start_before: *mut nsIAtom;
            #[link_name = "?startsWith@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static startsWith: *mut nsIAtom;
            #[link_name = "?state@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static state: *mut nsIAtom;
            #[link_name = "?statedatasource@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static statedatasource: *mut nsIAtom;
            #[link_name = "?staticHint@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static staticHint: *mut nsIAtom;
            #[link_name = "?statusbar@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static statusbar: *mut nsIAtom;
            #[link_name = "?statustext@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static statustext: *mut nsIAtom;
            #[link_name = "?step@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static step: *mut nsIAtom;
            #[link_name = "?stop@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stop: *mut nsIAtom;
            #[link_name = "?stretch@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stretch: *mut nsIAtom;
            #[link_name = "?strike@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static strike: *mut nsIAtom;
            #[link_name = "?string@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static string: *mut nsIAtom;
            #[link_name = "?stringLength@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stringLength: *mut nsIAtom;
            #[link_name = "?stripSpace@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stripSpace: *mut nsIAtom;
            #[link_name = "?strong@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static strong: *mut nsIAtom;
            #[link_name = "?style@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static style: *mut nsIAtom;
            #[link_name = "?stylesheet@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stylesheet: *mut nsIAtom;
            #[link_name = "?stylesheetPrefix@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stylesheetPrefix: *mut nsIAtom;
            #[link_name = "?subject@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static subject: *mut nsIAtom;
            #[link_name = "?submit@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static submit: *mut nsIAtom;
            #[link_name = "?substate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static substate: *mut nsIAtom;
            #[link_name = "?substring@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static substring: *mut nsIAtom;
            #[link_name = "?substringAfter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static substringAfter: *mut nsIAtom;
            #[link_name = "?substringBefore@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static substringBefore: *mut nsIAtom;
            #[link_name = "?sub@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sub: *mut nsIAtom;
            #[link_name = "?sum@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sum: *mut nsIAtom;
            #[link_name = "?sup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sup: *mut nsIAtom;
            #[link_name = "?summary@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static summary: *mut nsIAtom;
            #[link_name = "?systemProperty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static systemProperty: *mut nsIAtom;
            #[link_name = "?tab@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tab: *mut nsIAtom;
            #[link_name = "?tabbox@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tabbox: *mut nsIAtom;
            #[link_name = "?tabindex@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tabindex: *mut nsIAtom;
            #[link_name = "?table@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static table: *mut nsIAtom;
            #[link_name = "?tabpanel@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tabpanel: *mut nsIAtom;
            #[link_name = "?tabpanels@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tabpanels: *mut nsIAtom;
            #[link_name = "?tag@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tag: *mut nsIAtom;
            #[link_name = "?target@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static target: *mut nsIAtom;
            #[link_name = "?targets@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static targets: *mut nsIAtom;
            #[link_name = "?tbody@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tbody: *mut nsIAtom;
            #[link_name = "?td@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static td: *mut nsIAtom;
            #[link_name = "?_template@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _template: *mut nsIAtom;
            #[link_name = "?text_decoration@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static text_decoration: *mut nsIAtom;
            #[link_name = "?terminate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static terminate: *mut nsIAtom;
            #[link_name = "?test@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static test: *mut nsIAtom;
            #[link_name = "?text@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static text: *mut nsIAtom;
            #[link_name = "?textAlign@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static textAlign: *mut nsIAtom;
            #[link_name = "?textarea@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static textarea: *mut nsIAtom;
            #[link_name = "?textbox@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static textbox: *mut nsIAtom;
            #[link_name = "?textnode@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static textnode: *mut nsIAtom;
            #[link_name = "?textNodeDirectionalityMap@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static textNodeDirectionalityMap: *mut nsIAtom;
            #[link_name = "?tfoot@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tfoot: *mut nsIAtom;
            #[link_name = "?th@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static th: *mut nsIAtom;
            #[link_name = "?thead@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static thead: *mut nsIAtom;
            #[link_name = "?thumb@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static thumb: *mut nsIAtom;
            #[link_name = "?time@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static time: *mut nsIAtom;
            #[link_name = "?title@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static title: *mut nsIAtom;
            #[link_name = "?titlebar@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static titlebar: *mut nsIAtom;
            #[link_name = "?titletip@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static titletip: *mut nsIAtom;
            #[link_name = "?toggled@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static toggled: *mut nsIAtom;
            #[link_name = "?token@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static token: *mut nsIAtom;
            #[link_name = "?tokenize@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tokenize: *mut nsIAtom;
            #[link_name = "?toolbar@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static toolbar: *mut nsIAtom;
            #[link_name = "?toolbarbutton@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static toolbarbutton: *mut nsIAtom;
            #[link_name = "?toolbaritem@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static toolbaritem: *mut nsIAtom;
            #[link_name = "?toolbox@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static toolbox: *mut nsIAtom;
            #[link_name = "?tooltip@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tooltip: *mut nsIAtom;
            #[link_name = "?tooltiptext@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tooltiptext: *mut nsIAtom;
            #[link_name = "?top@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static top: *mut nsIAtom;
            #[link_name = "?topleft@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static topleft: *mut nsIAtom;
            #[link_name = "?topmargin@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static topmargin: *mut nsIAtom;
            #[link_name = "?toppadding@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static toppadding: *mut nsIAtom;
            #[link_name = "?topright@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static topright: *mut nsIAtom;
            #[link_name = "?tr@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tr: *mut nsIAtom;
            #[link_name = "?track@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static track: *mut nsIAtom;
            #[link_name = "?trailing@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static trailing: *mut nsIAtom;
            #[link_name = "?transform@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static transform: *mut nsIAtom;
            #[link_name = "?transform_3d@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static transform_3d: *mut nsIAtom;
            #[link_name = "?transformiix@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static transformiix: *mut nsIAtom;
            #[link_name = "?translate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static translate: *mut nsIAtom;
            #[link_name = "?transparent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static transparent: *mut nsIAtom;
            #[link_name = "?tree@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tree: *mut nsIAtom;
            #[link_name = "?treecell@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static treecell: *mut nsIAtom;
            #[link_name = "?treechildren@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static treechildren: *mut nsIAtom;
            #[link_name = "?treecol@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static treecol: *mut nsIAtom;
            #[link_name = "?treecolpicker@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static treecolpicker: *mut nsIAtom;
            #[link_name = "?treecols@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static treecols: *mut nsIAtom;
            #[link_name = "?treeitem@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static treeitem: *mut nsIAtom;
            #[link_name = "?treerow@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static treerow: *mut nsIAtom;
            #[link_name = "?treeseparator@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static treeseparator: *mut nsIAtom;
            #[link_name = "?triple@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static triple: *mut nsIAtom;
            #[link_name = "?_true@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _true: *mut nsIAtom;
            #[link_name = "?tt@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tt: *mut nsIAtom;
            #[link_name = "?tty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tty: *mut nsIAtom;
            #[link_name = "?tv@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tv: *mut nsIAtom;
            #[link_name = "?type@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static type_: *mut nsIAtom;
            #[link_name = "?typemustmatch@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static typemustmatch: *mut nsIAtom;
            #[link_name = "?u@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static u: *mut nsIAtom;
            #[link_name = "?ul@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ul: *mut nsIAtom;
            #[link_name = "?underflow@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static underflow: *mut nsIAtom;
            #[link_name = "?undetermined@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static undetermined: *mut nsIAtom;
            #[link_name = "?undoscope@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static undoscope: *mut nsIAtom;
            #[link_name = "?unload@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static unload: *mut nsIAtom;
            #[link_name = "?unparsedEntityUri@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static unparsedEntityUri: *mut nsIAtom;
            #[link_name = "?upperFirst@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static upperFirst: *mut nsIAtom;
            #[link_name = "?uri@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static uri: *mut nsIAtom;
            #[link_name = "?use@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static use_: *mut nsIAtom;
            #[link_name = "?useAttributeSets@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static useAttributeSets: *mut nsIAtom;
            #[link_name = "?usemap@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static usemap: *mut nsIAtom;
            #[link_name = "?user_scalable@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static user_scalable: *mut nsIAtom;
            #[link_name = "?userInput@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static userInput: *mut nsIAtom;
            #[link_name = "?validate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static validate: *mut nsIAtom;
            #[link_name = "?valign@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static valign: *mut nsIAtom;
            #[link_name = "?value@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static value: *mut nsIAtom;
            #[link_name = "?values@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static values: *mut nsIAtom;
            #[link_name = "?valueOf@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static valueOf: *mut nsIAtom;
            #[link_name = "?valuetype@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static valuetype: *mut nsIAtom;
            #[link_name = "?var@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static var: *mut nsIAtom;
            #[link_name = "?variable@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static variable: *mut nsIAtom;
            #[link_name = "?vbox@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static vbox: *mut nsIAtom;
            #[link_name = "?vcard_name@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static vcard_name: *mut nsIAtom;
            #[link_name = "?vendor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static vendor: *mut nsIAtom;
            #[link_name = "?vendorUrl@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static vendorUrl: *mut nsIAtom;
            #[link_name = "?version@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static version: *mut nsIAtom;
            #[link_name = "?vert@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static vert: *mut nsIAtom;
            #[link_name = "?vertical@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static vertical: *mut nsIAtom;
            #[link_name = "?audio@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static audio: *mut nsIAtom;
            #[link_name = "?video@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static video: *mut nsIAtom;
            #[link_name = "?videocontrols@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static videocontrols: *mut nsIAtom;
            #[link_name = "?viewport@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static viewport: *mut nsIAtom;
            #[link_name = "?viewport_height@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static viewport_height: *mut nsIAtom;
            #[link_name = "?viewport_initial_scale@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static viewport_initial_scale: *mut nsIAtom;
            #[link_name = "?viewport_maximum_scale@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static viewport_maximum_scale: *mut nsIAtom;
            #[link_name = "?viewport_minimum_scale@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static viewport_minimum_scale: *mut nsIAtom;
            #[link_name = "?viewport_user_scalable@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static viewport_user_scalable: *mut nsIAtom;
            #[link_name = "?viewport_width@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static viewport_width: *mut nsIAtom;
            #[link_name = "?visibility@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static visibility: *mut nsIAtom;
            #[link_name = "?visuallyselected@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static visuallyselected: *mut nsIAtom;
            #[link_name = "?vlink@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static vlink: *mut nsIAtom;
            #[link_name = "?vspace@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static vspace: *mut nsIAtom;
            #[link_name = "?wbr@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static wbr: *mut nsIAtom;
            #[link_name = "?webkitdirectory@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static webkitdirectory: *mut nsIAtom;
            #[link_name = "?when@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static when: *mut nsIAtom;
            #[link_name = "?where@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static where_: *mut nsIAtom;
            #[link_name = "?widget@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static widget: *mut nsIAtom;
            #[link_name = "?width@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static width: *mut nsIAtom;
            #[link_name = "?window@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static window: *mut nsIAtom;
            #[link_name = "?headerWindowTarget@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static headerWindowTarget: *mut nsIAtom;
            #[link_name = "?windowtype@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static windowtype: *mut nsIAtom;
            #[link_name = "?withParam@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static withParam: *mut nsIAtom;
            #[link_name = "?wizard@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static wizard: *mut nsIAtom;
            #[link_name = "?wrap@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static wrap: *mut nsIAtom;
            #[link_name = "?headerDNSPrefetchControl@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static headerDNSPrefetchControl: *mut nsIAtom;
            #[link_name = "?headerCSP@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static headerCSP: *mut nsIAtom;
            #[link_name = "?headerCSPReportOnly@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static headerCSPReportOnly: *mut nsIAtom;
            #[link_name = "?headerXFO@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static headerXFO: *mut nsIAtom;
            #[link_name = "?x_western@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_western: *mut nsIAtom;
            #[link_name = "?xml@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static xml: *mut nsIAtom;
            #[link_name = "?xml_stylesheet@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static xml_stylesheet: *mut nsIAtom;
            #[link_name = "?xmlns@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static xmlns: *mut nsIAtom;
            #[link_name = "?xmp@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static xmp: *mut nsIAtom;
            #[link_name = "?xulcontentsgenerated@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static xulcontentsgenerated: *mut nsIAtom;
            #[link_name = "?yes@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static yes: *mut nsIAtom;
            #[link_name = "?z_index@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static z_index: *mut nsIAtom;
            #[link_name = "?zeroDigit@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static zeroDigit: *mut nsIAtom;
            #[link_name = "?percentage@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static percentage: *mut nsIAtom;
            #[link_name = "?A@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static A: *mut nsIAtom;
            #[link_name = "?alignment_baseline@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static alignment_baseline: *mut nsIAtom;
            #[link_name = "?amplitude@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static amplitude: *mut nsIAtom;
            #[link_name = "?animate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static animate: *mut nsIAtom;
            #[link_name = "?animateColor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static animateColor: *mut nsIAtom;
            #[link_name = "?animateMotion@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static animateMotion: *mut nsIAtom;
            #[link_name = "?animateTransform@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static animateTransform: *mut nsIAtom;
            #[link_name = "?arithmetic@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static arithmetic: *mut nsIAtom;
            #[link_name = "?atop@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static atop: *mut nsIAtom;
            #[link_name = "?azimuth@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static azimuth: *mut nsIAtom;
            #[link_name = "?B@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static B: *mut nsIAtom;
            #[link_name = "?backgroundColor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static backgroundColor: *mut nsIAtom;
            #[link_name = "?background_image@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static background_image: *mut nsIAtom;
            #[link_name = "?baseFrequency@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static baseFrequency: *mut nsIAtom;
            #[link_name = "?baseline_shift@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static baseline_shift: *mut nsIAtom;
            #[link_name = "?bias@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bias: *mut nsIAtom;
            #[link_name = "?caption_side@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static caption_side: *mut nsIAtom;
            #[link_name = "?clip_path@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static clip_path: *mut nsIAtom;
            #[link_name = "?clip_rule@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static clip_rule: *mut nsIAtom;
            #[link_name = "?clipPath@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static clipPath: *mut nsIAtom;
            #[link_name = "?clipPathUnits@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static clipPathUnits: *mut nsIAtom;
            #[link_name = "?cm@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cm: *mut nsIAtom;
            #[link_name = "?colorBurn@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static colorBurn: *mut nsIAtom;
            #[link_name = "?colorDodge@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static colorDodge: *mut nsIAtom;
            #[link_name = "?colorInterpolation@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static colorInterpolation: *mut nsIAtom;
            #[link_name = "?colorInterpolationFilters@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static colorInterpolationFilters: *mut nsIAtom;
            #[link_name = "?colorProfile@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static colorProfile: *mut nsIAtom;
            #[link_name = "?cursor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cursor: *mut nsIAtom;
            #[link_name = "?cx@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cx: *mut nsIAtom;
            #[link_name = "?cy@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cy: *mut nsIAtom;
            #[link_name = "?d@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static d: *mut nsIAtom;
            #[link_name = "?darken@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static darken: *mut nsIAtom;
            #[link_name = "?defs@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static defs: *mut nsIAtom;
            #[link_name = "?deg@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static deg: *mut nsIAtom;
            #[link_name = "?desc@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static desc: *mut nsIAtom;
            #[link_name = "?diffuseConstant@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static diffuseConstant: *mut nsIAtom;
            #[link_name = "?dilate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dilate: *mut nsIAtom;
            #[link_name = "?direction@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static direction: *mut nsIAtom;
            #[link_name = "?disable@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static disable: *mut nsIAtom;
            #[link_name = "?discrete@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static discrete: *mut nsIAtom;
            #[link_name = "?divisor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static divisor: *mut nsIAtom;
            #[link_name = "?dominant_baseline@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dominant_baseline: *mut nsIAtom;
            #[link_name = "?duplicate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static duplicate: *mut nsIAtom;
            #[link_name = "?dx@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dx: *mut nsIAtom;
            #[link_name = "?dy@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dy: *mut nsIAtom;
            #[link_name = "?edgeMode@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static edgeMode: *mut nsIAtom;
            #[link_name = "?ellipse@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ellipse: *mut nsIAtom;
            #[link_name = "?elevation@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static elevation: *mut nsIAtom;
            #[link_name = "?erode@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static erode: *mut nsIAtom;
            #[link_name = "?ex@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ex: *mut nsIAtom;
            #[link_name = "?exact@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static exact: *mut nsIAtom;
            #[link_name = "?exclusion@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static exclusion: *mut nsIAtom;
            #[link_name = "?exponent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static exponent: *mut nsIAtom;
            #[link_name = "?feBlend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feBlend: *mut nsIAtom;
            #[link_name = "?feColorMatrix@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feColorMatrix: *mut nsIAtom;
            #[link_name = "?feComponentTransfer@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feComponentTransfer: *mut nsIAtom;
            #[link_name = "?feComposite@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feComposite: *mut nsIAtom;
            #[link_name = "?feConvolveMatrix@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feConvolveMatrix: *mut nsIAtom;
            #[link_name = "?feDiffuseLighting@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feDiffuseLighting: *mut nsIAtom;
            #[link_name = "?feDisplacementMap@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feDisplacementMap: *mut nsIAtom;
            #[link_name = "?feDistantLight@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feDistantLight: *mut nsIAtom;
            #[link_name = "?feDropShadow@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feDropShadow: *mut nsIAtom;
            #[link_name = "?feFlood@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feFlood: *mut nsIAtom;
            #[link_name = "?feFuncA@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feFuncA: *mut nsIAtom;
            #[link_name = "?feFuncB@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feFuncB: *mut nsIAtom;
            #[link_name = "?feFuncG@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feFuncG: *mut nsIAtom;
            #[link_name = "?feFuncR@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feFuncR: *mut nsIAtom;
            #[link_name = "?feGaussianBlur@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feGaussianBlur: *mut nsIAtom;
            #[link_name = "?feImage@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feImage: *mut nsIAtom;
            #[link_name = "?feMerge@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feMerge: *mut nsIAtom;
            #[link_name = "?feMergeNode@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feMergeNode: *mut nsIAtom;
            #[link_name = "?feMorphology@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feMorphology: *mut nsIAtom;
            #[link_name = "?feOffset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feOffset: *mut nsIAtom;
            #[link_name = "?fePointLight@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fePointLight: *mut nsIAtom;
            #[link_name = "?feSpecularLighting@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feSpecularLighting: *mut nsIAtom;
            #[link_name = "?feSpotLight@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feSpotLight: *mut nsIAtom;
            #[link_name = "?feTile@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feTile: *mut nsIAtom;
            #[link_name = "?feTurbulence@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static feTurbulence: *mut nsIAtom;
            #[link_name = "?fill@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fill: *mut nsIAtom;
            #[link_name = "?fill_opacity@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fill_opacity: *mut nsIAtom;
            #[link_name = "?fill_rule@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fill_rule: *mut nsIAtom;
            #[link_name = "?filter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static filter: *mut nsIAtom;
            #[link_name = "?filterUnits@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static filterUnits: *mut nsIAtom;
            #[link_name = "?_float@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _float: *mut nsIAtom;
            #[link_name = "?flood_color@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static flood_color: *mut nsIAtom;
            #[link_name = "?flood_opacity@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static flood_opacity: *mut nsIAtom;
            #[link_name = "?font_face@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static font_face: *mut nsIAtom;
            #[link_name = "?font_face_format@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static font_face_format: *mut nsIAtom;
            #[link_name = "?font_face_name@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static font_face_name: *mut nsIAtom;
            #[link_name = "?font_face_src@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static font_face_src: *mut nsIAtom;
            #[link_name = "?font_face_uri@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static font_face_uri: *mut nsIAtom;
            #[link_name = "?font_family@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static font_family: *mut nsIAtom;
            #[link_name = "?font_size@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static font_size: *mut nsIAtom;
            #[link_name = "?font_size_adjust@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static font_size_adjust: *mut nsIAtom;
            #[link_name = "?font_stretch@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static font_stretch: *mut nsIAtom;
            #[link_name = "?font_style@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static font_style: *mut nsIAtom;
            #[link_name = "?font_variant@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static font_variant: *mut nsIAtom;
            #[link_name = "?foreignObject@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static foreignObject: *mut nsIAtom;
            #[link_name = "?fractalNoise@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fractalNoise: *mut nsIAtom;
            #[link_name = "?fx@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fx: *mut nsIAtom;
            #[link_name = "?fy@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fy: *mut nsIAtom;
            #[link_name = "?G@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static G: *mut nsIAtom;
            #[link_name = "?g@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static g: *mut nsIAtom;
            #[link_name = "?gamma@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static gamma: *mut nsIAtom;
            #[link_name = "?generic_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static generic_: *mut nsIAtom;
            #[link_name = "?glyphRef@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static glyphRef: *mut nsIAtom;
            #[link_name = "?grad@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static grad: *mut nsIAtom;
            #[link_name = "?gradientTransform@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static gradientTransform: *mut nsIAtom;
            #[link_name = "?gradientUnits@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static gradientUnits: *mut nsIAtom;
            #[link_name = "?hardLight@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static hardLight: *mut nsIAtom;
            #[link_name = "?hue@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static hue: *mut nsIAtom;
            #[link_name = "?hueRotate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static hueRotate: *mut nsIAtom;
            #[link_name = "?identity@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static identity: *mut nsIAtom;
            #[link_name = "?image_rendering@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static image_rendering: *mut nsIAtom;
            #[link_name = "?in@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static in_: *mut nsIAtom;
            #[link_name = "?in2@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static in2: *mut nsIAtom;
            #[link_name = "?intercept@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static intercept: *mut nsIAtom;
            #[link_name = "?k1@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static k1: *mut nsIAtom;
            #[link_name = "?k2@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static k2: *mut nsIAtom;
            #[link_name = "?k3@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static k3: *mut nsIAtom;
            #[link_name = "?k4@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static k4: *mut nsIAtom;
            #[link_name = "?kernelMatrix@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static kernelMatrix: *mut nsIAtom;
            #[link_name = "?kernelUnitLength@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static kernelUnitLength: *mut nsIAtom;
            #[link_name = "?lengthAdjust@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lengthAdjust: *mut nsIAtom;
            #[link_name = "?letter_spacing@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static letter_spacing: *mut nsIAtom;
            #[link_name = "?lighten@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lighten: *mut nsIAtom;
            #[link_name = "?lighting_color@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lighting_color: *mut nsIAtom;
            #[link_name = "?limitingConeAngle@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static limitingConeAngle: *mut nsIAtom;
            #[link_name = "?linear@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static linear: *mut nsIAtom;
            #[link_name = "?linearGradient@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static linearGradient: *mut nsIAtom;
            #[link_name = "?linearRGB@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static linearRGB: *mut nsIAtom;
            #[link_name = "?list_style_type@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static list_style_type: *mut nsIAtom;
            #[link_name = "?luminanceToAlpha@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static luminanceToAlpha: *mut nsIAtom;
            #[link_name = "?luminosity@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static luminosity: *mut nsIAtom;
            #[link_name = "?magnify@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static magnify: *mut nsIAtom;
            #[link_name = "?marker@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static marker: *mut nsIAtom;
            #[link_name = "?marker_end@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static marker_end: *mut nsIAtom;
            #[link_name = "?marker_mid@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static marker_mid: *mut nsIAtom;
            #[link_name = "?marker_start@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static marker_start: *mut nsIAtom;
            #[link_name = "?markerHeight@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static markerHeight: *mut nsIAtom;
            #[link_name = "?markerUnits@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static markerUnits: *mut nsIAtom;
            #[link_name = "?markerWidth@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static markerWidth: *mut nsIAtom;
            #[link_name = "?mask@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mask: *mut nsIAtom;
            #[link_name = "?maskContentUnits@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static maskContentUnits: *mut nsIAtom;
            #[link_name = "?mask_type@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mask_type: *mut nsIAtom;
            #[link_name = "?maskUnits@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static maskUnits: *mut nsIAtom;
            #[link_name = "?matrix@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static matrix: *mut nsIAtom;
            #[link_name = "?metadata@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static metadata: *mut nsIAtom;
            #[link_name = "?missingGlyph@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static missingGlyph: *mut nsIAtom;
            #[link_name = "?mm@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mm: *mut nsIAtom;
            #[link_name = "?mpath@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mpath: *mut nsIAtom;
            #[link_name = "?noStitch@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static noStitch: *mut nsIAtom;
            #[link_name = "?numOctaves@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static numOctaves: *mut nsIAtom;
            #[link_name = "?multiply@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static multiply: *mut nsIAtom;
            #[link_name = "?objectBoundingBox@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static objectBoundingBox: *mut nsIAtom;
            #[link_name = "?offset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static offset: *mut nsIAtom;
            #[link_name = "?onSVGLoad@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onSVGLoad: *mut nsIAtom;
            #[link_name = "?onSVGResize@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onSVGResize: *mut nsIAtom;
            #[link_name = "?onSVGScroll@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onSVGScroll: *mut nsIAtom;
            #[link_name = "?onSVGUnload@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onSVGUnload: *mut nsIAtom;
            #[link_name = "?onSVGZoom@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onSVGZoom: *mut nsIAtom;
            #[link_name = "?onzoom@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onzoom: *mut nsIAtom;
            #[link_name = "?opacity@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static opacity: *mut nsIAtom;
            #[link_name = "?_operator@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _operator: *mut nsIAtom;
            #[link_name = "?out@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static out: *mut nsIAtom;
            #[link_name = "?over@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static over: *mut nsIAtom;
            #[link_name = "?overridePreserveAspectRatio@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static overridePreserveAspectRatio: *mut nsIAtom;
            #[link_name = "?pad@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pad: *mut nsIAtom;
            #[link_name = "?path@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static path: *mut nsIAtom;
            #[link_name = "?pathLength@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pathLength: *mut nsIAtom;
            #[link_name = "?patternContentUnits@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static patternContentUnits: *mut nsIAtom;
            #[link_name = "?patternTransform@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static patternTransform: *mut nsIAtom;
            #[link_name = "?patternUnits@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static patternUnits: *mut nsIAtom;
            #[link_name = "?pc@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pc: *mut nsIAtom;
            #[link_name = "?pointer_events@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pointer_events: *mut nsIAtom;
            #[link_name = "?points@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static points: *mut nsIAtom;
            #[link_name = "?pointsAtX@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pointsAtX: *mut nsIAtom;
            #[link_name = "?pointsAtY@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pointsAtY: *mut nsIAtom;
            #[link_name = "?pointsAtZ@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pointsAtZ: *mut nsIAtom;
            #[link_name = "?polyline@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static polyline: *mut nsIAtom;
            #[link_name = "?preserveAlpha@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static preserveAlpha: *mut nsIAtom;
            #[link_name = "?preserveAspectRatio@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static preserveAspectRatio: *mut nsIAtom;
            #[link_name = "?primitiveUnits@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static primitiveUnits: *mut nsIAtom;
            #[link_name = "?pt@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pt: *mut nsIAtom;
            #[link_name = "?px@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static px: *mut nsIAtom;
            #[link_name = "?R@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static R: *mut nsIAtom;
            #[link_name = "?r@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static r: *mut nsIAtom;
            #[link_name = "?rad@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rad: *mut nsIAtom;
            #[link_name = "?radialGradient@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static radialGradient: *mut nsIAtom;
            #[link_name = "?radius@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static radius: *mut nsIAtom;
            #[link_name = "?reflect@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static reflect: *mut nsIAtom;
            #[link_name = "?refX@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static refX: *mut nsIAtom;
            #[link_name = "?refY@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static refY: *mut nsIAtom;
            #[link_name = "?requiredExtensions@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static requiredExtensions: *mut nsIAtom;
            #[link_name = "?requiredFeatures@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static requiredFeatures: *mut nsIAtom;
            #[link_name = "?rotate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rotate: *mut nsIAtom;
            #[link_name = "?rx@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rx: *mut nsIAtom;
            #[link_name = "?ry@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ry: *mut nsIAtom;
            #[link_name = "?saturate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static saturate: *mut nsIAtom;
            #[link_name = "?saturation@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static saturation: *mut nsIAtom;
            #[link_name = "?set@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static set: *mut nsIAtom;
            #[link_name = "?seed@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static seed: *mut nsIAtom;
            #[link_name = "?shadow@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static shadow: *mut nsIAtom;
            #[link_name = "?shape_rendering@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static shape_rendering: *mut nsIAtom;
            #[link_name = "?skewX@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static skewX: *mut nsIAtom;
            #[link_name = "?skewY@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static skewY: *mut nsIAtom;
            #[link_name = "?slope@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static slope: *mut nsIAtom;
            #[link_name = "?softLight@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static softLight: *mut nsIAtom;
            #[link_name = "?spacing@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static spacing: *mut nsIAtom;
            #[link_name = "?spacingAndGlyphs@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static spacingAndGlyphs: *mut nsIAtom;
            #[link_name = "?specularConstant@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static specularConstant: *mut nsIAtom;
            #[link_name = "?specularExponent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static specularExponent: *mut nsIAtom;
            #[link_name = "?spreadMethod@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static spreadMethod: *mut nsIAtom;
            #[link_name = "?sRGB@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sRGB: *mut nsIAtom;
            #[link_name = "?startOffset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static startOffset: *mut nsIAtom;
            #[link_name = "?stdDeviation@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stdDeviation: *mut nsIAtom;
            #[link_name = "?stitch@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stitch: *mut nsIAtom;
            #[link_name = "?stitchTiles@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stitchTiles: *mut nsIAtom;
            #[link_name = "?stop_color@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stop_color: *mut nsIAtom;
            #[link_name = "?stop_opacity@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stop_opacity: *mut nsIAtom;
            #[link_name = "?stroke@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stroke: *mut nsIAtom;
            #[link_name = "?stroke_dasharray@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stroke_dasharray: *mut nsIAtom;
            #[link_name = "?stroke_dashoffset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stroke_dashoffset: *mut nsIAtom;
            #[link_name = "?stroke_linecap@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stroke_linecap: *mut nsIAtom;
            #[link_name = "?stroke_linejoin@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stroke_linejoin: *mut nsIAtom;
            #[link_name = "?stroke_miterlimit@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stroke_miterlimit: *mut nsIAtom;
            #[link_name = "?stroke_opacity@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stroke_opacity: *mut nsIAtom;
            #[link_name = "?stroke_width@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stroke_width: *mut nsIAtom;
            #[link_name = "?strokeWidth@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static strokeWidth: *mut nsIAtom;
            #[link_name = "?surfaceScale@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static surfaceScale: *mut nsIAtom;
            #[link_name = "?svg@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svg: *mut nsIAtom;
            #[link_name = "?svgSwitch@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgSwitch: *mut nsIAtom;
            #[link_name = "?symbol@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static symbol: *mut nsIAtom;
            #[link_name = "?systemLanguage@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static systemLanguage: *mut nsIAtom;
            #[link_name = "?tableValues@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tableValues: *mut nsIAtom;
            #[link_name = "?targetX@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static targetX: *mut nsIAtom;
            #[link_name = "?targetY@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static targetY: *mut nsIAtom;
            #[link_name = "?text_anchor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static text_anchor: *mut nsIAtom;
            #[link_name = "?text_rendering@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static text_rendering: *mut nsIAtom;
            #[link_name = "?textLength@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static textLength: *mut nsIAtom;
            #[link_name = "?textPath@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static textPath: *mut nsIAtom;
            #[link_name = "?tref@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tref: *mut nsIAtom;
            #[link_name = "?tspan@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tspan: *mut nsIAtom;
            #[link_name = "?turbulence@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static turbulence: *mut nsIAtom;
            #[link_name = "?unicode_bidi@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static unicode_bidi: *mut nsIAtom;
            #[link_name = "?userSpaceOnUse@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static userSpaceOnUse: *mut nsIAtom;
            #[link_name = "?view@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static view: *mut nsIAtom;
            #[link_name = "?viewBox@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static viewBox: *mut nsIAtom;
            #[link_name = "?viewTarget@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static viewTarget: *mut nsIAtom;
            #[link_name = "?white_space@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static white_space: *mut nsIAtom;
            #[link_name = "?word_spacing@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static word_spacing: *mut nsIAtom;
            #[link_name = "?writing_mode@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static writing_mode: *mut nsIAtom;
            #[link_name = "?x@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x: *mut nsIAtom;
            #[link_name = "?x1@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x1: *mut nsIAtom;
            #[link_name = "?x2@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x2: *mut nsIAtom;
            #[link_name = "?xChannelSelector@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static xChannelSelector: *mut nsIAtom;
            #[link_name = "?xor_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static xor_: *mut nsIAtom;
            #[link_name = "?y@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static y: *mut nsIAtom;
            #[link_name = "?y1@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static y1: *mut nsIAtom;
            #[link_name = "?y2@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static y2: *mut nsIAtom;
            #[link_name = "?yChannelSelector@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static yChannelSelector: *mut nsIAtom;
            #[link_name = "?z@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static z: *mut nsIAtom;
            #[link_name = "?zoomAndPan@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static zoomAndPan: *mut nsIAtom;
            #[link_name = "?vector_effect@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static vector_effect: *mut nsIAtom;
            #[link_name = "?vertical_align@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static vertical_align: *mut nsIAtom;
            #[link_name = "?accumulate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static accumulate: *mut nsIAtom;
            #[link_name = "?additive@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static additive: *mut nsIAtom;
            #[link_name = "?attributeName@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static attributeName: *mut nsIAtom;
            #[link_name = "?attributeType@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static attributeType: *mut nsIAtom;
            #[link_name = "?auto_reverse@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static auto_reverse: *mut nsIAtom;
            #[link_name = "?begin@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static begin: *mut nsIAtom;
            #[link_name = "?beginEvent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static beginEvent: *mut nsIAtom;
            #[link_name = "?by@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static by: *mut nsIAtom;
            #[link_name = "?calcMode@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static calcMode: *mut nsIAtom;
            #[link_name = "?css@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static css: *mut nsIAtom;
            #[link_name = "?dur@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static dur: *mut nsIAtom;
            #[link_name = "?keyPoints@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static keyPoints: *mut nsIAtom;
            #[link_name = "?keySplines@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static keySplines: *mut nsIAtom;
            #[link_name = "?keyTimes@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static keyTimes: *mut nsIAtom;
            #[link_name = "?mozAnimateMotionDummyAttr@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mozAnimateMotionDummyAttr: *mut nsIAtom;
            #[link_name = "?onbegin@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onbegin: *mut nsIAtom;
            #[link_name = "?onbeginEvent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onbeginEvent: *mut nsIAtom;
            #[link_name = "?onend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onend: *mut nsIAtom;
            #[link_name = "?onendEvent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onendEvent: *mut nsIAtom;
            #[link_name = "?onrepeat@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onrepeat: *mut nsIAtom;
            #[link_name = "?onrepeatEvent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onrepeatEvent: *mut nsIAtom;
            #[link_name = "?repeatCount@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static repeatCount: *mut nsIAtom;
            #[link_name = "?repeatDur@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static repeatDur: *mut nsIAtom;
            #[link_name = "?repeatEvent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static repeatEvent: *mut nsIAtom;
            #[link_name = "?restart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static restart: *mut nsIAtom;
            #[link_name = "?to@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static to: *mut nsIAtom;
            #[link_name = "?XML@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static XML: *mut nsIAtom;
            #[link_name = "?abs_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static abs_: *mut nsIAtom;
            #[link_name = "?accent_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static accent_: *mut nsIAtom;
            #[link_name = "?accentunder_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static accentunder_: *mut nsIAtom;
            #[link_name = "?actiontype_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static actiontype_: *mut nsIAtom;
            #[link_name = "?alignmentscope_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static alignmentscope_: *mut nsIAtom;
            #[link_name = "?altimg_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static altimg_: *mut nsIAtom;
            #[link_name = "?altimg_height_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static altimg_height_: *mut nsIAtom;
            #[link_name = "?altimg_valign_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static altimg_valign_: *mut nsIAtom;
            #[link_name = "?altimg_width_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static altimg_width_: *mut nsIAtom;
            #[link_name = "?annotation_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static annotation_: *mut nsIAtom;
            #[link_name = "?annotation_xml_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static annotation_xml_: *mut nsIAtom;
            #[link_name = "?apply_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static apply_: *mut nsIAtom;
            #[link_name = "?approx_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static approx_: *mut nsIAtom;
            #[link_name = "?arccos_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static arccos_: *mut nsIAtom;
            #[link_name = "?arccosh_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static arccosh_: *mut nsIAtom;
            #[link_name = "?arccot_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static arccot_: *mut nsIAtom;
            #[link_name = "?arccoth_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static arccoth_: *mut nsIAtom;
            #[link_name = "?arccsc_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static arccsc_: *mut nsIAtom;
            #[link_name = "?arccsch_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static arccsch_: *mut nsIAtom;
            #[link_name = "?arcsec_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static arcsec_: *mut nsIAtom;
            #[link_name = "?arcsech_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static arcsech_: *mut nsIAtom;
            #[link_name = "?arcsin_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static arcsin_: *mut nsIAtom;
            #[link_name = "?arcsinh_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static arcsinh_: *mut nsIAtom;
            #[link_name = "?arctan_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static arctan_: *mut nsIAtom;
            #[link_name = "?arctanh_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static arctanh_: *mut nsIAtom;
            #[link_name = "?arg_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static arg_: *mut nsIAtom;
            #[link_name = "?bevelled_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bevelled_: *mut nsIAtom;
            #[link_name = "?bind_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bind_: *mut nsIAtom;
            #[link_name = "?bvar_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bvar_: *mut nsIAtom;
            #[link_name = "?card_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static card_: *mut nsIAtom;
            #[link_name = "?cartesianproduct_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cartesianproduct_: *mut nsIAtom;
            #[link_name = "?cbytes_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cbytes_: *mut nsIAtom;
            #[link_name = "?cd_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cd_: *mut nsIAtom;
            #[link_name = "?cdgroup_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cdgroup_: *mut nsIAtom;
            #[link_name = "?cerror_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cerror_: *mut nsIAtom;
            #[link_name = "?charalign_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static charalign_: *mut nsIAtom;
            #[link_name = "?ci_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ci_: *mut nsIAtom;
            #[link_name = "?closure_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static closure_: *mut nsIAtom;
            #[link_name = "?cn_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cn_: *mut nsIAtom;
            #[link_name = "?codomain_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static codomain_: *mut nsIAtom;
            #[link_name = "?columnalign_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static columnalign_: *mut nsIAtom;
            #[link_name = "?columnalignment_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static columnalignment_: *mut nsIAtom;
            #[link_name = "?columnlines_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static columnlines_: *mut nsIAtom;
            #[link_name = "?columnspacing_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static columnspacing_: *mut nsIAtom;
            #[link_name = "?columnspan_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static columnspan_: *mut nsIAtom;
            #[link_name = "?columnwidth_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static columnwidth_: *mut nsIAtom;
            #[link_name = "?complexes_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static complexes_: *mut nsIAtom;
            #[link_name = "?compose_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static compose_: *mut nsIAtom;
            #[link_name = "?condition_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static condition_: *mut nsIAtom;
            #[link_name = "?conjugate_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static conjugate_: *mut nsIAtom;
            #[link_name = "?cos_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cos_: *mut nsIAtom;
            #[link_name = "?cosh_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cosh_: *mut nsIAtom;
            #[link_name = "?cot_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cot_: *mut nsIAtom;
            #[link_name = "?coth_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static coth_: *mut nsIAtom;
            #[link_name = "?crossout_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static crossout_: *mut nsIAtom;
            #[link_name = "?csc_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static csc_: *mut nsIAtom;
            #[link_name = "?csch_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static csch_: *mut nsIAtom;
            #[link_name = "?cs_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cs_: *mut nsIAtom;
            #[link_name = "?csymbol_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static csymbol_: *mut nsIAtom;
            #[link_name = "?curl_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static curl_: *mut nsIAtom;
            #[link_name = "?decimalpoint_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static decimalpoint_: *mut nsIAtom;
            #[link_name = "?definitionURL_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static definitionURL_: *mut nsIAtom;
            #[link_name = "?degree_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static degree_: *mut nsIAtom;
            #[link_name = "?denomalign_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static denomalign_: *mut nsIAtom;
            #[link_name = "?depth_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static depth_: *mut nsIAtom;
            #[link_name = "?determinant_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static determinant_: *mut nsIAtom;
            #[link_name = "?diff_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static diff_: *mut nsIAtom;
            #[link_name = "?displaystyle_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static displaystyle_: *mut nsIAtom;
            #[link_name = "?divergence_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static divergence_: *mut nsIAtom;
            #[link_name = "?divide_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static divide_: *mut nsIAtom;
            #[link_name = "?domain_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static domain_: *mut nsIAtom;
            #[link_name = "?domainofapplication_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static domainofapplication_: *mut nsIAtom;
            #[link_name = "?edge_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static edge_: *mut nsIAtom;
            #[link_name = "?el_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static el_: *mut nsIAtom;
            #[link_name = "?emptyset_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static emptyset_: *mut nsIAtom;
            #[link_name = "?eq_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static eq_: *mut nsIAtom;
            #[link_name = "?equalcolumns_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static equalcolumns_: *mut nsIAtom;
            #[link_name = "?equalrows_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static equalrows_: *mut nsIAtom;
            #[link_name = "?equivalent_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static equivalent_: *mut nsIAtom;
            #[link_name = "?eulergamma_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static eulergamma_: *mut nsIAtom;
            #[link_name = "?exists_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static exists_: *mut nsIAtom;
            #[link_name = "?exp_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static exp_: *mut nsIAtom;
            #[link_name = "?exponentiale_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static exponentiale_: *mut nsIAtom;
            #[link_name = "?factorial_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static factorial_: *mut nsIAtom;
            #[link_name = "?factorof_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static factorof_: *mut nsIAtom;
            #[link_name = "?fence_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fence_: *mut nsIAtom;
            #[link_name = "?fn_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fn_: *mut nsIAtom;
            #[link_name = "?fontfamily_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fontfamily_: *mut nsIAtom;
            #[link_name = "?fontsize_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fontsize_: *mut nsIAtom;
            #[link_name = "?fontstyle_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fontstyle_: *mut nsIAtom;
            #[link_name = "?fontweight_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fontweight_: *mut nsIAtom;
            #[link_name = "?forall_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static forall_: *mut nsIAtom;
            #[link_name = "?framespacing_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static framespacing_: *mut nsIAtom;
            #[link_name = "?gcd_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static gcd_: *mut nsIAtom;
            #[link_name = "?geq_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static geq_: *mut nsIAtom;
            #[link_name = "?groupalign_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static groupalign_: *mut nsIAtom;
            #[link_name = "?gt_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static gt_: *mut nsIAtom;
            #[link_name = "?ident_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ident_: *mut nsIAtom;
            #[link_name = "?imaginaryi_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static imaginaryi_: *mut nsIAtom;
            #[link_name = "?imaginary_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static imaginary_: *mut nsIAtom;
            #[link_name = "?implies_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static implies_: *mut nsIAtom;
            #[link_name = "?indentalignfirst_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static indentalignfirst_: *mut nsIAtom;
            #[link_name = "?indentalign_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static indentalign_: *mut nsIAtom;
            #[link_name = "?indentalignlast_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static indentalignlast_: *mut nsIAtom;
            #[link_name = "?indentshiftfirst_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static indentshiftfirst_: *mut nsIAtom;
            #[link_name = "?indentshift_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static indentshift_: *mut nsIAtom;
            #[link_name = "?indenttarget_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static indenttarget_: *mut nsIAtom;
            #[link_name = "?integers_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static integers_: *mut nsIAtom;
            #[link_name = "?intersect_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static intersect_: *mut nsIAtom;
            #[link_name = "?interval_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static interval_: *mut nsIAtom;
            #[link_name = "?int_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static int_: *mut nsIAtom;
            #[link_name = "?inverse_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static inverse_: *mut nsIAtom;
            #[link_name = "?lambda_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lambda_: *mut nsIAtom;
            #[link_name = "?laplacian_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static laplacian_: *mut nsIAtom;
            #[link_name = "?largeop_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static largeop_: *mut nsIAtom;
            #[link_name = "?lcm_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lcm_: *mut nsIAtom;
            #[link_name = "?leq_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static leq_: *mut nsIAtom;
            #[link_name = "?limit_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static limit_: *mut nsIAtom;
            #[link_name = "?linebreak_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static linebreak_: *mut nsIAtom;
            #[link_name = "?linebreakmultchar_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static linebreakmultchar_: *mut nsIAtom;
            #[link_name = "?linebreakstyle_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static linebreakstyle_: *mut nsIAtom;
            #[link_name = "?linethickness_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static linethickness_: *mut nsIAtom;
            #[link_name = "?list_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static list_: *mut nsIAtom;
            #[link_name = "?ln_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ln_: *mut nsIAtom;
            #[link_name = "?location_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static location_: *mut nsIAtom;
            #[link_name = "?logbase_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static logbase_: *mut nsIAtom;
            #[link_name = "?log_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static log_: *mut nsIAtom;
            #[link_name = "?longdivstyle_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static longdivstyle_: *mut nsIAtom;
            #[link_name = "?lowlimit_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lowlimit_: *mut nsIAtom;
            #[link_name = "?lquote_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lquote_: *mut nsIAtom;
            #[link_name = "?lspace_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lspace_: *mut nsIAtom;
            #[link_name = "?lt_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lt_: *mut nsIAtom;
            #[link_name = "?maction_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static maction_: *mut nsIAtom;
            #[link_name = "?maligngroup_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static maligngroup_: *mut nsIAtom;
            #[link_name = "?malignmark_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static malignmark_: *mut nsIAtom;
            #[link_name = "?mathbackground_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mathbackground_: *mut nsIAtom;
            #[link_name = "?mathcolor_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mathcolor_: *mut nsIAtom;
            #[link_name = "?mathsize_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mathsize_: *mut nsIAtom;
            #[link_name = "?mathvariant_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mathvariant_: *mut nsIAtom;
            #[link_name = "?matrixrow_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static matrixrow_: *mut nsIAtom;
            #[link_name = "?maxsize_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static maxsize_: *mut nsIAtom;
            #[link_name = "?mean_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mean_: *mut nsIAtom;
            #[link_name = "?median_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static median_: *mut nsIAtom;
            #[link_name = "?menclose_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static menclose_: *mut nsIAtom;
            #[link_name = "?merror_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static merror_: *mut nsIAtom;
            #[link_name = "?mfenced_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mfenced_: *mut nsIAtom;
            #[link_name = "?mfrac_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mfrac_: *mut nsIAtom;
            #[link_name = "?mglyph_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mglyph_: *mut nsIAtom;
            #[link_name = "?mi_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mi_: *mut nsIAtom;
            #[link_name = "?minlabelspacing_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static minlabelspacing_: *mut nsIAtom;
            #[link_name = "?minsize_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static minsize_: *mut nsIAtom;
            #[link_name = "?minus_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static minus_: *mut nsIAtom;
            #[link_name = "?mlabeledtr_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mlabeledtr_: *mut nsIAtom;
            #[link_name = "?mlongdiv_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mlongdiv_: *mut nsIAtom;
            #[link_name = "?mmultiscripts_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mmultiscripts_: *mut nsIAtom;
            #[link_name = "?mn_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mn_: *mut nsIAtom;
            #[link_name = "?momentabout_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static momentabout_: *mut nsIAtom;
            #[link_name = "?moment_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static moment_: *mut nsIAtom;
            #[link_name = "?mo_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mo_: *mut nsIAtom;
            #[link_name = "?movablelimits_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static movablelimits_: *mut nsIAtom;
            #[link_name = "?mover_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mover_: *mut nsIAtom;
            #[link_name = "?mpadded_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mpadded_: *mut nsIAtom;
            #[link_name = "?mphantom_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mphantom_: *mut nsIAtom;
            #[link_name = "?mprescripts_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mprescripts_: *mut nsIAtom;
            #[link_name = "?mroot_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mroot_: *mut nsIAtom;
            #[link_name = "?mrow_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mrow_: *mut nsIAtom;
            #[link_name = "?mscarries_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mscarries_: *mut nsIAtom;
            #[link_name = "?mscarry_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mscarry_: *mut nsIAtom;
            #[link_name = "?msgroup_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static msgroup_: *mut nsIAtom;
            #[link_name = "?msline_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static msline_: *mut nsIAtom;
            #[link_name = "?ms_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ms_: *mut nsIAtom;
            #[link_name = "?mspace_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mspace_: *mut nsIAtom;
            #[link_name = "?msqrt_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static msqrt_: *mut nsIAtom;
            #[link_name = "?msrow_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static msrow_: *mut nsIAtom;
            #[link_name = "?mstack_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mstack_: *mut nsIAtom;
            #[link_name = "?mstyle_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mstyle_: *mut nsIAtom;
            #[link_name = "?msub_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static msub_: *mut nsIAtom;
            #[link_name = "?msubsup_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static msubsup_: *mut nsIAtom;
            #[link_name = "?msup_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static msup_: *mut nsIAtom;
            #[link_name = "?mtable_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mtable_: *mut nsIAtom;
            #[link_name = "?mtd_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mtd_: *mut nsIAtom;
            #[link_name = "?mtext_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mtext_: *mut nsIAtom;
            #[link_name = "?mtr_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mtr_: *mut nsIAtom;
            #[link_name = "?munder_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static munder_: *mut nsIAtom;
            #[link_name = "?munderover_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static munderover_: *mut nsIAtom;
            #[link_name = "?naturalnumbers_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static naturalnumbers_: *mut nsIAtom;
            #[link_name = "?neq_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static neq_: *mut nsIAtom;
            #[link_name = "?notanumber_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static notanumber_: *mut nsIAtom;
            #[link_name = "?notation_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static notation_: *mut nsIAtom;
            #[link_name = "?note_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static note_: *mut nsIAtom;
            #[link_name = "?notin_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static notin_: *mut nsIAtom;
            #[link_name = "?notprsubset_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static notprsubset_: *mut nsIAtom;
            #[link_name = "?notsubset_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static notsubset_: *mut nsIAtom;
            #[link_name = "?numalign_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static numalign_: *mut nsIAtom;
            #[link_name = "?other_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static other_: *mut nsIAtom;
            #[link_name = "?outerproduct_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static outerproduct_: *mut nsIAtom;
            #[link_name = "?partialdiff_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static partialdiff_: *mut nsIAtom;
            #[link_name = "?piece_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static piece_: *mut nsIAtom;
            #[link_name = "?piecewise_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static piecewise_: *mut nsIAtom;
            #[link_name = "?pi_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pi_: *mut nsIAtom;
            #[link_name = "?plus_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static plus_: *mut nsIAtom;
            #[link_name = "?power_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static power_: *mut nsIAtom;
            #[link_name = "?primes_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static primes_: *mut nsIAtom;
            #[link_name = "?product_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static product_: *mut nsIAtom;
            #[link_name = "?prsubset_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static prsubset_: *mut nsIAtom;
            #[link_name = "?quotient_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static quotient_: *mut nsIAtom;
            #[link_name = "?rationals_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rationals_: *mut nsIAtom;
            #[link_name = "?real_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static real_: *mut nsIAtom;
            #[link_name = "?reals_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static reals_: *mut nsIAtom;
            #[link_name = "?reln_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static reln_: *mut nsIAtom;
            #[link_name = "?root_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static root_: *mut nsIAtom;
            #[link_name = "?rowalign_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rowalign_: *mut nsIAtom;
            #[link_name = "?rowlines_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rowlines_: *mut nsIAtom;
            #[link_name = "?rowspacing_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rowspacing_: *mut nsIAtom;
            #[link_name = "?rquote_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rquote_: *mut nsIAtom;
            #[link_name = "?rspace_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rspace_: *mut nsIAtom;
            #[link_name = "?scalarproduct_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scalarproduct_: *mut nsIAtom;
            #[link_name = "?schemaLocation_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static schemaLocation_: *mut nsIAtom;
            #[link_name = "?scriptlevel_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scriptlevel_: *mut nsIAtom;
            #[link_name = "?scriptminsize_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scriptminsize_: *mut nsIAtom;
            #[link_name = "?scriptsizemultiplier_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scriptsizemultiplier_: *mut nsIAtom;
            #[link_name = "?scriptsize_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scriptsize_: *mut nsIAtom;
            #[link_name = "?sdev_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sdev_: *mut nsIAtom;
            #[link_name = "?sech_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sech_: *mut nsIAtom;
            #[link_name = "?sec_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sec_: *mut nsIAtom;
            #[link_name = "?selection_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static selection_: *mut nsIAtom;
            #[link_name = "?selector_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static selector_: *mut nsIAtom;
            #[link_name = "?semantics_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static semantics_: *mut nsIAtom;
            #[link_name = "?separator_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static separator_: *mut nsIAtom;
            #[link_name = "?separators_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static separators_: *mut nsIAtom;
            #[link_name = "?sep_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sep_: *mut nsIAtom;
            #[link_name = "?setdiff_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static setdiff_: *mut nsIAtom;
            #[link_name = "?set_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static set_: *mut nsIAtom;
            #[link_name = "?share_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static share_: *mut nsIAtom;
            #[link_name = "?shift_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static shift_: *mut nsIAtom;
            #[link_name = "?side_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static side_: *mut nsIAtom;
            #[link_name = "?sinh_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sinh_: *mut nsIAtom;
            #[link_name = "?sin_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sin_: *mut nsIAtom;
            #[link_name = "?stackalign_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stackalign_: *mut nsIAtom;
            #[link_name = "?stretchy_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stretchy_: *mut nsIAtom;
            #[link_name = "?subscriptshift_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static subscriptshift_: *mut nsIAtom;
            #[link_name = "?subset_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static subset_: *mut nsIAtom;
            #[link_name = "?superscriptshift_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static superscriptshift_: *mut nsIAtom;
            #[link_name = "?symmetric_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static symmetric_: *mut nsIAtom;
            #[link_name = "?tanh_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tanh_: *mut nsIAtom;
            #[link_name = "?tan_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tan_: *mut nsIAtom;
            #[link_name = "?tendsto_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tendsto_: *mut nsIAtom;
            #[link_name = "?times_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static times_: *mut nsIAtom;
            #[link_name = "?transpose_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static transpose_: *mut nsIAtom;
            #[link_name = "?union_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static union_: *mut nsIAtom;
            #[link_name = "?uplimit_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static uplimit_: *mut nsIAtom;
            #[link_name = "?variance_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static variance_: *mut nsIAtom;
            #[link_name = "?vectorproduct_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static vectorproduct_: *mut nsIAtom;
            #[link_name = "?vector_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static vector_: *mut nsIAtom;
            #[link_name = "?voffset_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static voffset_: *mut nsIAtom;
            #[link_name = "?xref_@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static xref_: *mut nsIAtom;
            #[link_name = "?math@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static math: *mut nsIAtom;
            #[link_name = "?avg@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static avg: *mut nsIAtom;
            #[link_name = "?booleanFromString@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static booleanFromString: *mut nsIAtom;
            #[link_name = "?countNonEmpty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static countNonEmpty: *mut nsIAtom;
            #[link_name = "?daysFromDate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static daysFromDate: *mut nsIAtom;
            #[link_name = "?init@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static init: *mut nsIAtom;
            #[link_name = "?instance@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static instance: *mut nsIAtom;
            #[link_name = "?months@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static months: *mut nsIAtom;
            #[link_name = "?now@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static now: *mut nsIAtom;
            #[link_name = "?seconds@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static seconds: *mut nsIAtom;
            #[link_name = "?secondsFromDateTime@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static secondsFromDateTime: *mut nsIAtom;
            #[link_name = "?onMozSwipeGestureMayStart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozSwipeGestureMayStart: *mut nsIAtom;
            #[link_name = "?onMozSwipeGestureStart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozSwipeGestureStart: *mut nsIAtom;
            #[link_name = "?onMozSwipeGestureUpdate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozSwipeGestureUpdate: *mut nsIAtom;
            #[link_name = "?onMozSwipeGestureEnd@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozSwipeGestureEnd: *mut nsIAtom;
            #[link_name = "?onMozSwipeGesture@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozSwipeGesture: *mut nsIAtom;
            #[link_name = "?onMozMagnifyGestureStart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozMagnifyGestureStart: *mut nsIAtom;
            #[link_name = "?onMozMagnifyGestureUpdate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozMagnifyGestureUpdate: *mut nsIAtom;
            #[link_name = "?onMozMagnifyGesture@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozMagnifyGesture: *mut nsIAtom;
            #[link_name = "?onMozRotateGestureStart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozRotateGestureStart: *mut nsIAtom;
            #[link_name = "?onMozRotateGestureUpdate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozRotateGestureUpdate: *mut nsIAtom;
            #[link_name = "?onMozRotateGesture@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozRotateGesture: *mut nsIAtom;
            #[link_name = "?onMozTapGesture@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozTapGesture: *mut nsIAtom;
            #[link_name = "?onMozPressTapGesture@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozPressTapGesture: *mut nsIAtom;
            #[link_name = "?onMozEdgeUIStarted@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozEdgeUIStarted: *mut nsIAtom;
            #[link_name = "?onMozEdgeUICanceled@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozEdgeUICanceled: *mut nsIAtom;
            #[link_name = "?onMozEdgeUICompleted@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onMozEdgeUICompleted: *mut nsIAtom;
            #[link_name = "?onpointerdown@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpointerdown: *mut nsIAtom;
            #[link_name = "?onpointermove@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpointermove: *mut nsIAtom;
            #[link_name = "?onpointerup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpointerup: *mut nsIAtom;
            #[link_name = "?onpointercancel@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpointercancel: *mut nsIAtom;
            #[link_name = "?onpointerover@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpointerover: *mut nsIAtom;
            #[link_name = "?onpointerout@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpointerout: *mut nsIAtom;
            #[link_name = "?onpointerenter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpointerenter: *mut nsIAtom;
            #[link_name = "?onpointerleave@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpointerleave: *mut nsIAtom;
            #[link_name = "?ongotpointercapture@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ongotpointercapture: *mut nsIAtom;
            #[link_name = "?onlostpointercapture@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onlostpointercapture: *mut nsIAtom;
            #[link_name = "?ondevicemotion@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondevicemotion: *mut nsIAtom;
            #[link_name = "?ondeviceorientation@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondeviceorientation: *mut nsIAtom;
            #[link_name = "?onabsolutedeviceorientation@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onabsolutedeviceorientation: *mut nsIAtom;
            #[link_name = "?ondeviceproximity@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondeviceproximity: *mut nsIAtom;
            #[link_name = "?onmozorientationchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmozorientationchange: *mut nsIAtom;
            #[link_name = "?onuserproximity@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onuserproximity: *mut nsIAtom;
            #[link_name = "?ondevicelight@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondevicelight: *mut nsIAtom;
            #[link_name = "?onmozinterruptbegin@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmozinterruptbegin: *mut nsIAtom;
            #[link_name = "?onmozinterruptend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmozinterruptend: *mut nsIAtom;
            #[link_name = "?cdataTagName@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cdataTagName: *mut nsIAtom;
            #[link_name = "?commentTagName@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static commentTagName: *mut nsIAtom;
            #[link_name = "?documentNodeName@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static documentNodeName: *mut nsIAtom;
            #[link_name = "?documentFragmentNodeName@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static documentFragmentNodeName: *mut nsIAtom;
            #[link_name = "?documentTypeNodeName@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static documentTypeNodeName: *mut nsIAtom;
            #[link_name = "?processingInstructionTagName@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static processingInstructionTagName: *mut nsIAtom;
            #[link_name = "?textTagName@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static textTagName: *mut nsIAtom;
            #[link_name = "?bcTableCellFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bcTableCellFrame: *mut nsIAtom;
            #[link_name = "?blockFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static blockFrame: *mut nsIAtom;
            #[link_name = "?boxFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static boxFrame: *mut nsIAtom;
            #[link_name = "?brFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static brFrame: *mut nsIAtom;
            #[link_name = "?bulletFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static bulletFrame: *mut nsIAtom;
            #[link_name = "?colorControlFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static colorControlFrame: *mut nsIAtom;
            #[link_name = "?columnSetFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static columnSetFrame: *mut nsIAtom;
            #[link_name = "?comboboxControlFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static comboboxControlFrame: *mut nsIAtom;
            #[link_name = "?comboboxDisplayFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static comboboxDisplayFrame: *mut nsIAtom;
            #[link_name = "?deckFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static deckFrame: *mut nsIAtom;
            #[link_name = "?detailsFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static detailsFrame: *mut nsIAtom;
            #[link_name = "?fieldSetFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fieldSetFrame: *mut nsIAtom;
            #[link_name = "?flexContainerFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static flexContainerFrame: *mut nsIAtom;
            #[link_name = "?formControlFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static formControlFrame: *mut nsIAtom;
            #[link_name = "?frameSetFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static frameSetFrame: *mut nsIAtom;
            #[link_name = "?gfxButtonControlFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static gfxButtonControlFrame: *mut nsIAtom;
            #[link_name = "?gridContainerFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static gridContainerFrame: *mut nsIAtom;
            #[link_name = "?HTMLButtonControlFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static HTMLButtonControlFrame: *mut nsIAtom;
            #[link_name = "?HTMLCanvasFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static HTMLCanvasFrame: *mut nsIAtom;
            #[link_name = "?subDocumentFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static subDocumentFrame: *mut nsIAtom;
            #[link_name = "?imageBoxFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static imageBoxFrame: *mut nsIAtom;
            #[link_name = "?imageFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static imageFrame: *mut nsIAtom;
            #[link_name = "?imageControlFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static imageControlFrame: *mut nsIAtom;
            #[link_name = "?inlineFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static inlineFrame: *mut nsIAtom;
            #[link_name = "?leafBoxFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static leafBoxFrame: *mut nsIAtom;
            #[link_name = "?legendFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static legendFrame: *mut nsIAtom;
            #[link_name = "?letterFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static letterFrame: *mut nsIAtom;
            #[link_name = "?lineFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lineFrame: *mut nsIAtom;
            #[link_name = "?listControlFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static listControlFrame: *mut nsIAtom;
            #[link_name = "?menuFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static menuFrame: *mut nsIAtom;
            #[link_name = "?meterFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static meterFrame: *mut nsIAtom;
            #[link_name = "?menuPopupFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static menuPopupFrame: *mut nsIAtom;
            #[link_name = "?numberControlFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static numberControlFrame: *mut nsIAtom;
            #[link_name = "?objectFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static objectFrame: *mut nsIAtom;
            #[link_name = "?pageFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pageFrame: *mut nsIAtom;
            #[link_name = "?pageBreakFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pageBreakFrame: *mut nsIAtom;
            #[link_name = "?pageContentFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pageContentFrame: *mut nsIAtom;
            #[link_name = "?placeholderFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static placeholderFrame: *mut nsIAtom;
            #[link_name = "?popupSetFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static popupSetFrame: *mut nsIAtom;
            #[link_name = "?progressFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static progressFrame: *mut nsIAtom;
            #[link_name = "?canvasFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static canvasFrame: *mut nsIAtom;
            #[link_name = "?rangeFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rangeFrame: *mut nsIAtom;
            #[link_name = "?rootFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rootFrame: *mut nsIAtom;
            #[link_name = "?rubyBaseContainerFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rubyBaseContainerFrame: *mut nsIAtom;
            #[link_name = "?rubyBaseFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rubyBaseFrame: *mut nsIAtom;
            #[link_name = "?rubyFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rubyFrame: *mut nsIAtom;
            #[link_name = "?rubyTextContainerFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rubyTextContainerFrame: *mut nsIAtom;
            #[link_name = "?rubyTextFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rubyTextFrame: *mut nsIAtom;
            #[link_name = "?scrollFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scrollFrame: *mut nsIAtom;
            #[link_name = "?scrollbarFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scrollbarFrame: *mut nsIAtom;
            #[link_name = "?sequenceFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sequenceFrame: *mut nsIAtom;
            #[link_name = "?sliderFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sliderFrame: *mut nsIAtom;
            #[link_name = "?tableCellFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tableCellFrame: *mut nsIAtom;
            #[link_name = "?tableColFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tableColFrame: *mut nsIAtom;
            #[link_name = "?tableColGroupFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tableColGroupFrame: *mut nsIAtom;
            #[link_name = "?tableFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tableFrame: *mut nsIAtom;
            #[link_name = "?tableWrapperFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tableWrapperFrame: *mut nsIAtom;
            #[link_name = "?tableRowGroupFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tableRowGroupFrame: *mut nsIAtom;
            #[link_name = "?tableRowFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tableRowFrame: *mut nsIAtom;
            #[link_name = "?textInputFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static textInputFrame: *mut nsIAtom;
            #[link_name = "?textFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static textFrame: *mut nsIAtom;
            #[link_name = "?viewportFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static viewportFrame: *mut nsIAtom;
            #[link_name = "?XULLabelFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static XULLabelFrame: *mut nsIAtom;
            #[link_name = "?svgAFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgAFrame: *mut nsIAtom;
            #[link_name = "?svgClipPathFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgClipPathFrame: *mut nsIAtom;
            #[link_name = "?svgDefsFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgDefsFrame: *mut nsIAtom;
            #[link_name = "?svgFEContainerFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgFEContainerFrame: *mut nsIAtom;
            #[link_name = "?svgFEImageFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgFEImageFrame: *mut nsIAtom;
            #[link_name = "?svgFELeafFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgFELeafFrame: *mut nsIAtom;
            #[link_name = "?svgFEUnstyledLeafFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgFEUnstyledLeafFrame: *mut nsIAtom;
            #[link_name = "?svgFilterFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgFilterFrame: *mut nsIAtom;
            #[link_name = "?svgForeignObjectFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgForeignObjectFrame: *mut nsIAtom;
            #[link_name = "?svgGenericContainerFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgGenericContainerFrame: *mut nsIAtom;
            #[link_name = "?svgGFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgGFrame: *mut nsIAtom;
            #[link_name = "?svgGradientFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgGradientFrame: *mut nsIAtom;
            #[link_name = "?svgImageFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgImageFrame: *mut nsIAtom;
            #[link_name = "?svgInnerSVGFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgInnerSVGFrame: *mut nsIAtom;
            #[link_name = "?svgLinearGradientFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgLinearGradientFrame: *mut nsIAtom;
            #[link_name = "?svgMarkerFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgMarkerFrame: *mut nsIAtom;
            #[link_name = "?svgMarkerAnonChildFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgMarkerAnonChildFrame: *mut nsIAtom;
            #[link_name = "?svgMaskFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgMaskFrame: *mut nsIAtom;
            #[link_name = "?svgOuterSVGFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgOuterSVGFrame: *mut nsIAtom;
            #[link_name = "?svgOuterSVGAnonChildFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgOuterSVGAnonChildFrame: *mut nsIAtom;
            #[link_name = "?svgPathGeometryFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgPathGeometryFrame: *mut nsIAtom;
            #[link_name = "?svgPatternFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgPatternFrame: *mut nsIAtom;
            #[link_name = "?svgRadialGradientFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgRadialGradientFrame: *mut nsIAtom;
            #[link_name = "?svgStopFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgStopFrame: *mut nsIAtom;
            #[link_name = "?svgSwitchFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgSwitchFrame: *mut nsIAtom;
            #[link_name = "?svgTextFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgTextFrame: *mut nsIAtom;
            #[link_name = "?svgUseFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgUseFrame: *mut nsIAtom;
            #[link_name = "?svgViewFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static svgViewFrame: *mut nsIAtom;
            #[link_name = "?HTMLVideoFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static HTMLVideoFrame: *mut nsIAtom;
            #[link_name = "?onloadend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onloadend: *mut nsIAtom;
            #[link_name = "?onloadstart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onloadstart: *mut nsIAtom;
            #[link_name = "?onprogress@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onprogress: *mut nsIAtom;
            #[link_name = "?onsuspend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onsuspend: *mut nsIAtom;
            #[link_name = "?onemptied@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onemptied: *mut nsIAtom;
            #[link_name = "?onstalled@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onstalled: *mut nsIAtom;
            #[link_name = "?onplay@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onplay: *mut nsIAtom;
            #[link_name = "?onpause@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onpause: *mut nsIAtom;
            #[link_name = "?onloadedmetadata@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onloadedmetadata: *mut nsIAtom;
            #[link_name = "?onloadeddata@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onloadeddata: *mut nsIAtom;
            #[link_name = "?onwaiting@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onwaiting: *mut nsIAtom;
            #[link_name = "?onplaying@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onplaying: *mut nsIAtom;
            #[link_name = "?oncanplay@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncanplay: *mut nsIAtom;
            #[link_name = "?oncanplaythrough@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncanplaythrough: *mut nsIAtom;
            #[link_name = "?onseeking@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onseeking: *mut nsIAtom;
            #[link_name = "?onseeked@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onseeked: *mut nsIAtom;
            #[link_name = "?ontimeout@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ontimeout: *mut nsIAtom;
            #[link_name = "?ontimeupdate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ontimeupdate: *mut nsIAtom;
            #[link_name = "?onended@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onended: *mut nsIAtom;
            #[link_name = "?onratechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onratechange: *mut nsIAtom;
            #[link_name = "?ondurationchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondurationchange: *mut nsIAtom;
            #[link_name = "?onvolumechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onvolumechange: *mut nsIAtom;
            #[link_name = "?onaddtrack@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onaddtrack: *mut nsIAtom;
            #[link_name = "?oncontrollerchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncontrollerchange: *mut nsIAtom;
            #[link_name = "?oncuechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static oncuechange: *mut nsIAtom;
            #[link_name = "?onenter@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onenter: *mut nsIAtom;
            #[link_name = "?onexit@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onexit: *mut nsIAtom;
            #[link_name = "?onencrypted@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onencrypted: *mut nsIAtom;
            #[link_name = "?encrypted@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static encrypted: *mut nsIAtom;
            #[link_name = "?onremovetrack@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onremovetrack: *mut nsIAtom;
            #[link_name = "?loadstart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static loadstart: *mut nsIAtom;
            #[link_name = "?suspend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static suspend: *mut nsIAtom;
            #[link_name = "?emptied@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static emptied: *mut nsIAtom;
            #[link_name = "?stalled@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static stalled: *mut nsIAtom;
            #[link_name = "?play@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static play: *mut nsIAtom;
            #[link_name = "?pause@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pause: *mut nsIAtom;
            #[link_name = "?loadedmetadata@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static loadedmetadata: *mut nsIAtom;
            #[link_name = "?loadeddata@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static loadeddata: *mut nsIAtom;
            #[link_name = "?waiting@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static waiting: *mut nsIAtom;
            #[link_name = "?playing@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static playing: *mut nsIAtom;
            #[link_name = "?seeking@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static seeking: *mut nsIAtom;
            #[link_name = "?seeked@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static seeked: *mut nsIAtom;
            #[link_name = "?timeupdate@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static timeupdate: *mut nsIAtom;
            #[link_name = "?ended@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ended: *mut nsIAtom;
            #[link_name = "?canplay@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static canplay: *mut nsIAtom;
            #[link_name = "?canplaythrough@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static canplaythrough: *mut nsIAtom;
            #[link_name = "?ratechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ratechange: *mut nsIAtom;
            #[link_name = "?durationchange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static durationchange: *mut nsIAtom;
            #[link_name = "?volumechange@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static volumechange: *mut nsIAtom;
            #[link_name = "?ondataavailable@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ondataavailable: *mut nsIAtom;
            #[link_name = "?onwarning@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onwarning: *mut nsIAtom;
            #[link_name = "?onstart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onstart: *mut nsIAtom;
            #[link_name = "?onstop@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onstop: *mut nsIAtom;
            #[link_name = "?onphoto@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onphoto: *mut nsIAtom;
            #[link_name = "?onactivestatechanged@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onactivestatechanged: *mut nsIAtom;
            #[link_name = "?ongamepadbuttondown@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ongamepadbuttondown: *mut nsIAtom;
            #[link_name = "?ongamepadbuttonup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ongamepadbuttonup: *mut nsIAtom;
            #[link_name = "?ongamepadaxismove@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ongamepadaxismove: *mut nsIAtom;
            #[link_name = "?ongamepadconnected@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ongamepadconnected: *mut nsIAtom;
            #[link_name = "?ongamepaddisconnected@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ongamepaddisconnected: *mut nsIAtom;
            #[link_name = "?animationsProperty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static animationsProperty: *mut nsIAtom;
            #[link_name = "?animationsOfBeforeProperty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static animationsOfBeforeProperty: *mut nsIAtom;
            #[link_name = "?animationsOfAfterProperty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static animationsOfAfterProperty: *mut nsIAtom;
            #[link_name = "?animationEffectsProperty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static animationEffectsProperty: *mut nsIAtom;
            #[link_name = "?animationEffectsForBeforeProperty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static animationEffectsForBeforeProperty: *mut nsIAtom;
            #[link_name = "?animationEffectsForAfterProperty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static animationEffectsForAfterProperty: *mut nsIAtom;
            #[link_name = "?cssPseudoElementBeforeProperty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cssPseudoElementBeforeProperty: *mut nsIAtom;
            #[link_name = "?cssPseudoElementAfterProperty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cssPseudoElementAfterProperty: *mut nsIAtom;
            #[link_name = "?transitionsProperty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static transitionsProperty: *mut nsIAtom;
            #[link_name = "?transitionsOfBeforeProperty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static transitionsOfBeforeProperty: *mut nsIAtom;
            #[link_name = "?transitionsOfAfterProperty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static transitionsOfAfterProperty: *mut nsIAtom;
            #[link_name = "?genConInitializerProperty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static genConInitializerProperty: *mut nsIAtom;
            #[link_name = "?labelMouseDownPtProperty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static labelMouseDownPtProperty: *mut nsIAtom;
            #[link_name = "?baseURIProperty@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static baseURIProperty: *mut nsIAtom;
            #[link_name = "?lockedStyleStates@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lockedStyleStates: *mut nsIAtom;
            #[link_name = "?apzCallbackTransform@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static apzCallbackTransform: *mut nsIAtom;
            #[link_name = "?restylableAnonymousNode@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static restylableAnonymousNode: *mut nsIAtom;
            #[link_name = "?paintRequestTime@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static paintRequestTime: *mut nsIAtom;
            #[link_name = "?Japanese@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Japanese: *mut nsIAtom;
            #[link_name = "?Chinese@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Chinese: *mut nsIAtom;
            #[link_name = "?Taiwanese@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Taiwanese: *mut nsIAtom;
            #[link_name = "?HongKongChinese@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static HongKongChinese: *mut nsIAtom;
            #[link_name = "?Unicode@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Unicode: *mut nsIAtom;
            #[link_name = "?ko@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ko: *mut nsIAtom;
            #[link_name = "?zh_cn@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static zh_cn: *mut nsIAtom;
            #[link_name = "?zh_hk@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static zh_hk: *mut nsIAtom;
            #[link_name = "?zh_tw@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static zh_tw: *mut nsIAtom;
            #[link_name = "?x_cyrillic@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_cyrillic: *mut nsIAtom;
            #[link_name = "?he@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static he: *mut nsIAtom;
            #[link_name = "?ar@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ar: *mut nsIAtom;
            #[link_name = "?x_devanagari@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_devanagari: *mut nsIAtom;
            #[link_name = "?x_tamil@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_tamil: *mut nsIAtom;
            #[link_name = "?x_armn@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_armn: *mut nsIAtom;
            #[link_name = "?x_beng@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_beng: *mut nsIAtom;
            #[link_name = "?x_cans@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_cans: *mut nsIAtom;
            #[link_name = "?x_ethi@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_ethi: *mut nsIAtom;
            #[link_name = "?x_geor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_geor: *mut nsIAtom;
            #[link_name = "?x_gujr@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_gujr: *mut nsIAtom;
            #[link_name = "?x_guru@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_guru: *mut nsIAtom;
            #[link_name = "?x_khmr@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_khmr: *mut nsIAtom;
            #[link_name = "?x_knda@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_knda: *mut nsIAtom;
            #[link_name = "?x_mlym@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_mlym: *mut nsIAtom;
            #[link_name = "?x_orya@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_orya: *mut nsIAtom;
            #[link_name = "?x_sinh@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_sinh: *mut nsIAtom;
            #[link_name = "?x_telu@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_telu: *mut nsIAtom;
            #[link_name = "?x_tibt@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_tibt: *mut nsIAtom;
            #[link_name = "?az@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static az: *mut nsIAtom;
            #[link_name = "?ba@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ba: *mut nsIAtom;
            #[link_name = "?crh@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static crh: *mut nsIAtom;
            #[link_name = "?el@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static el: *mut nsIAtom;
            #[link_name = "?ga@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ga: *mut nsIAtom;
            #[link_name = "?nl@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nl: *mut nsIAtom;
            #[link_name = "?x_math@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static x_math: *mut nsIAtom;
            #[link_name = "?TypingTxnName@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static TypingTxnName: *mut nsIAtom;
            #[link_name = "?IMETxnName@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static IMETxnName: *mut nsIAtom;
            #[link_name = "?DeleteTxnName@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static DeleteTxnName: *mut nsIAtom;
            #[link_name = "?serif@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static serif: *mut nsIAtom;
            #[link_name = "?sans_serif@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static sans_serif: *mut nsIAtom;
            #[link_name = "?cursive@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cursive: *mut nsIAtom;
            #[link_name = "?fantasy@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static fantasy: *mut nsIAtom;
            #[link_name = "?monospace@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static monospace: *mut nsIAtom;
            #[link_name = "?Remote@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Remote: *mut nsIAtom;
            #[link_name = "?RemoteId@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static RemoteId: *mut nsIAtom;
            #[link_name = "?DisplayPort@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static DisplayPort: *mut nsIAtom;
            #[link_name = "?DisplayPortMargins@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static DisplayPortMargins: *mut nsIAtom;
            #[link_name = "?DisplayPortBase@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static DisplayPortBase: *mut nsIAtom;
            #[link_name = "?AsyncScrollLayerCreationFailed@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static AsyncScrollLayerCreationFailed: *mut nsIAtom;
            #[link_name = "?forcemessagemanager@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static forcemessagemanager: *mut nsIAtom;
            #[link_name = "?color_picker_available@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static color_picker_available: *mut nsIAtom;
            #[link_name = "?scrollbar_start_backward@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scrollbar_start_backward: *mut nsIAtom;
            #[link_name = "?scrollbar_start_forward@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scrollbar_start_forward: *mut nsIAtom;
            #[link_name = "?scrollbar_end_backward@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scrollbar_end_backward: *mut nsIAtom;
            #[link_name = "?scrollbar_end_forward@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scrollbar_end_forward: *mut nsIAtom;
            #[link_name = "?scrollbar_thumb_proportional@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scrollbar_thumb_proportional: *mut nsIAtom;
            #[link_name = "?images_in_menus@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static images_in_menus: *mut nsIAtom;
            #[link_name = "?images_in_buttons@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static images_in_buttons: *mut nsIAtom;
            #[link_name = "?overlay_scrollbars@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static overlay_scrollbars: *mut nsIAtom;
            #[link_name = "?windows_default_theme@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static windows_default_theme: *mut nsIAtom;
            #[link_name = "?mac_graphite_theme@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mac_graphite_theme: *mut nsIAtom;
            #[link_name = "?mac_lion_theme@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mac_lion_theme: *mut nsIAtom;
            #[link_name = "?mac_yosemite_theme@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mac_yosemite_theme: *mut nsIAtom;
            #[link_name = "?windows_compositor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static windows_compositor: *mut nsIAtom;
            #[link_name = "?windows_glass@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static windows_glass: *mut nsIAtom;
            #[link_name = "?touch_enabled@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static touch_enabled: *mut nsIAtom;
            #[link_name = "?menubar_drag@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static menubar_drag: *mut nsIAtom;
            #[link_name = "?swipe_animation_enabled@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static swipe_animation_enabled: *mut nsIAtom;
            #[link_name = "?physical_home_button@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static physical_home_button: *mut nsIAtom;
            #[link_name = "?windows_classic@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static windows_classic: *mut nsIAtom;
            #[link_name = "?windows_theme_aero@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static windows_theme_aero: *mut nsIAtom;
            #[link_name = "?windows_theme_aero_lite@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static windows_theme_aero_lite: *mut nsIAtom;
            #[link_name = "?windows_theme_luna_blue@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static windows_theme_luna_blue: *mut nsIAtom;
            #[link_name = "?windows_theme_luna_olive@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static windows_theme_luna_olive: *mut nsIAtom;
            #[link_name = "?windows_theme_luna_silver@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static windows_theme_luna_silver: *mut nsIAtom;
            #[link_name = "?windows_theme_royale@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static windows_theme_royale: *mut nsIAtom;
            #[link_name = "?windows_theme_zune@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static windows_theme_zune: *mut nsIAtom;
            #[link_name = "?windows_theme_generic@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static windows_theme_generic: *mut nsIAtom;
            #[link_name = "?_moz_color_picker_available@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_color_picker_available: *mut nsIAtom;
            #[link_name = "?_moz_scrollbar_start_backward@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_scrollbar_start_backward: *mut nsIAtom;
            #[link_name = "?_moz_scrollbar_start_forward@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_scrollbar_start_forward: *mut nsIAtom;
            #[link_name = "?_moz_scrollbar_end_backward@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_scrollbar_end_backward: *mut nsIAtom;
            #[link_name = "?_moz_scrollbar_end_forward@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_scrollbar_end_forward: *mut nsIAtom;
            #[link_name = "?_moz_scrollbar_thumb_proportional@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_scrollbar_thumb_proportional: *mut nsIAtom;
            #[link_name = "?_moz_images_in_menus@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_images_in_menus: *mut nsIAtom;
            #[link_name = "?_moz_images_in_buttons@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_images_in_buttons: *mut nsIAtom;
            #[link_name = "?_moz_overlay_scrollbars@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_overlay_scrollbars: *mut nsIAtom;
            #[link_name = "?_moz_windows_default_theme@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_windows_default_theme: *mut nsIAtom;
            #[link_name = "?_moz_mac_graphite_theme@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_mac_graphite_theme: *mut nsIAtom;
            #[link_name = "?_moz_mac_lion_theme@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_mac_lion_theme: *mut nsIAtom;
            #[link_name = "?_moz_mac_yosemite_theme@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_mac_yosemite_theme: *mut nsIAtom;
            #[link_name = "?_moz_windows_compositor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_windows_compositor: *mut nsIAtom;
            #[link_name = "?_moz_windows_classic@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_windows_classic: *mut nsIAtom;
            #[link_name = "?_moz_windows_glass@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_windows_glass: *mut nsIAtom;
            #[link_name = "?_moz_windows_theme@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_windows_theme: *mut nsIAtom;
            #[link_name = "?_moz_os_version@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_os_version: *mut nsIAtom;
            #[link_name = "?_moz_touch_enabled@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_touch_enabled: *mut nsIAtom;
            #[link_name = "?_moz_menubar_drag@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_menubar_drag: *mut nsIAtom;
            #[link_name = "?_moz_device_pixel_ratio@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_device_pixel_ratio: *mut nsIAtom;
            #[link_name = "?_moz_device_orientation@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_device_orientation: *mut nsIAtom;
            #[link_name = "?_moz_is_resource_document@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_is_resource_document: *mut nsIAtom;
            #[link_name = "?_moz_swipe_animation_enabled@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_swipe_animation_enabled: *mut nsIAtom;
            #[link_name = "?_moz_physical_home_button@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _moz_physical_home_button: *mut nsIAtom;
            #[link_name = "?Back@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Back: *mut nsIAtom;
            #[link_name = "?Forward@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Forward: *mut nsIAtom;
            #[link_name = "?Reload@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Reload: *mut nsIAtom;
            #[link_name = "?Stop@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Stop: *mut nsIAtom;
            #[link_name = "?Search@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Search: *mut nsIAtom;
            #[link_name = "?Bookmarks@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Bookmarks: *mut nsIAtom;
            #[link_name = "?Home@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Home: *mut nsIAtom;
            #[link_name = "?Clear@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Clear: *mut nsIAtom;
            #[link_name = "?VolumeUp@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static VolumeUp: *mut nsIAtom;
            #[link_name = "?VolumeDown@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static VolumeDown: *mut nsIAtom;
            #[link_name = "?NextTrack@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static NextTrack: *mut nsIAtom;
            #[link_name = "?PreviousTrack@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static PreviousTrack: *mut nsIAtom;
            #[link_name = "?MediaStop@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static MediaStop: *mut nsIAtom;
            #[link_name = "?PlayPause@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static PlayPause: *mut nsIAtom;
            #[link_name = "?Menu@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Menu: *mut nsIAtom;
            #[link_name = "?New@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static New: *mut nsIAtom;
            #[link_name = "?Open@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Open: *mut nsIAtom;
            #[link_name = "?Close@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Close: *mut nsIAtom;
            #[link_name = "?Save@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Save: *mut nsIAtom;
            #[link_name = "?Find@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Find: *mut nsIAtom;
            #[link_name = "?Help@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Help: *mut nsIAtom;
            #[link_name = "?Print@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static Print: *mut nsIAtom;
            #[link_name = "?SendMail@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static SendMail: *mut nsIAtom;
            #[link_name = "?ForwardMail@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ForwardMail: *mut nsIAtom;
            #[link_name = "?ReplyToMail@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static ReplyToMail: *mut nsIAtom;
            #[link_name = "?mouseWheel@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mouseWheel: *mut nsIAtom;
            #[link_name = "?pixels@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pixels: *mut nsIAtom;
            #[link_name = "?lines@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lines: *mut nsIAtom;
            #[link_name = "?pages@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static pages: *mut nsIAtom;
            #[link_name = "?scrollbars@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static scrollbars: *mut nsIAtom;
            #[link_name = "?other@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static other: *mut nsIAtom;
            #[link_name = "?apz@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static apz: *mut nsIAtom;
            #[link_name = "?restore@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static restore: *mut nsIAtom;
            #[link_name = "?alert@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static alert: *mut nsIAtom;
            #[link_name = "?alertdialog@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static alertdialog: *mut nsIAtom;
            #[link_name = "?application@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static application: *mut nsIAtom;
            #[link_name = "?aria_activedescendant@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_activedescendant: *mut nsIAtom;
            #[link_name = "?aria_atomic@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_atomic: *mut nsIAtom;
            #[link_name = "?aria_autocomplete@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_autocomplete: *mut nsIAtom;
            #[link_name = "?aria_busy@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_busy: *mut nsIAtom;
            #[link_name = "?aria_checked@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_checked: *mut nsIAtom;
            #[link_name = "?aria_colcount@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_colcount: *mut nsIAtom;
            #[link_name = "?aria_colindex@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_colindex: *mut nsIAtom;
            #[link_name = "?aria_controls@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_controls: *mut nsIAtom;
            #[link_name = "?aria_describedby@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_describedby: *mut nsIAtom;
            #[link_name = "?aria_disabled@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_disabled: *mut nsIAtom;
            #[link_name = "?aria_dropeffect@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_dropeffect: *mut nsIAtom;
            #[link_name = "?aria_expanded@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_expanded: *mut nsIAtom;
            #[link_name = "?aria_flowto@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_flowto: *mut nsIAtom;
            #[link_name = "?aria_grabbed@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_grabbed: *mut nsIAtom;
            #[link_name = "?aria_haspopup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_haspopup: *mut nsIAtom;
            #[link_name = "?aria_hidden@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_hidden: *mut nsIAtom;
            #[link_name = "?aria_invalid@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_invalid: *mut nsIAtom;
            #[link_name = "?aria_label@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_label: *mut nsIAtom;
            #[link_name = "?aria_labelledby@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_labelledby: *mut nsIAtom;
            #[link_name = "?aria_level@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_level: *mut nsIAtom;
            #[link_name = "?aria_live@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_live: *mut nsIAtom;
            #[link_name = "?aria_modal@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_modal: *mut nsIAtom;
            #[link_name = "?aria_multiline@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_multiline: *mut nsIAtom;
            #[link_name = "?aria_multiselectable@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_multiselectable: *mut nsIAtom;
            #[link_name = "?aria_orientation@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_orientation: *mut nsIAtom;
            #[link_name = "?aria_owns@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_owns: *mut nsIAtom;
            #[link_name = "?aria_posinset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_posinset: *mut nsIAtom;
            #[link_name = "?aria_pressed@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_pressed: *mut nsIAtom;
            #[link_name = "?aria_readonly@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_readonly: *mut nsIAtom;
            #[link_name = "?aria_relevant@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_relevant: *mut nsIAtom;
            #[link_name = "?aria_required@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_required: *mut nsIAtom;
            #[link_name = "?aria_rowcount@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_rowcount: *mut nsIAtom;
            #[link_name = "?aria_rowindex@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_rowindex: *mut nsIAtom;
            #[link_name = "?aria_selected@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_selected: *mut nsIAtom;
            #[link_name = "?aria_setsize@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_setsize: *mut nsIAtom;
            #[link_name = "?aria_sort@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_sort: *mut nsIAtom;
            #[link_name = "?aria_valuenow@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_valuenow: *mut nsIAtom;
            #[link_name = "?aria_valuemin@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_valuemin: *mut nsIAtom;
            #[link_name = "?aria_valuemax@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_valuemax: *mut nsIAtom;
            #[link_name = "?aria_valuetext@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static aria_valuetext: *mut nsIAtom;
            #[link_name = "?AreaFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static AreaFrame: *mut nsIAtom;
            #[link_name = "?auto_generated@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static auto_generated: *mut nsIAtom;
            #[link_name = "?banner@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static banner: *mut nsIAtom;
            #[link_name = "?checkable@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static checkable: *mut nsIAtom;
            #[link_name = "?choices@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static choices: *mut nsIAtom;
            #[link_name = "?columnheader@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static columnheader: *mut nsIAtom;
            #[link_name = "?complementary@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static complementary: *mut nsIAtom;
            #[link_name = "?containerAtomic@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static containerAtomic: *mut nsIAtom;
            #[link_name = "?containerBusy@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static containerBusy: *mut nsIAtom;
            #[link_name = "?containerLive@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static containerLive: *mut nsIAtom;
            #[link_name = "?containerLiveRole@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static containerLiveRole: *mut nsIAtom;
            #[link_name = "?containerRelevant@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static containerRelevant: *mut nsIAtom;
            #[link_name = "?contentinfo@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static contentinfo: *mut nsIAtom;
            #[link_name = "?cycles@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static cycles: *mut nsIAtom;
            #[link_name = "?datatable@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static datatable: *mut nsIAtom;
            #[link_name = "?eventFromInput@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static eventFromInput: *mut nsIAtom;
            #[link_name = "?grammar@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static grammar: *mut nsIAtom;
            #[link_name = "?gridcell@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static gridcell: *mut nsIAtom;
            #[link_name = "?heading@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static heading: *mut nsIAtom;
            #[link_name = "?hitregion@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static hitregion: *mut nsIAtom;
            #[link_name = "?InlineBlockFrame@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static InlineBlockFrame: *mut nsIAtom;
            #[link_name = "?inlinevalue@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static inlinevalue: *mut nsIAtom;
            #[link_name = "?invalid@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static invalid: *mut nsIAtom;
            #[link_name = "?item@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static item: *mut nsIAtom;
            #[link_name = "?itemset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static itemset: *mut nsIAtom;
            #[link_name = "?lineNumber@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static lineNumber: *mut nsIAtom;
            #[link_name = "?linkedPanel@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static linkedPanel: *mut nsIAtom;
            #[link_name = "?live@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static live: *mut nsIAtom;
            #[link_name = "?menuitemcheckbox@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static menuitemcheckbox: *mut nsIAtom;
            #[link_name = "?menuitemradio@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static menuitemradio: *mut nsIAtom;
            #[link_name = "?mixed@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static mixed: *mut nsIAtom;
            #[link_name = "?multiline@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static multiline: *mut nsIAtom;
            #[link_name = "?navigation@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static navigation: *mut nsIAtom;
            #[link_name = "?polite@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static polite: *mut nsIAtom;
            #[link_name = "?posinset@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static posinset: *mut nsIAtom;
            #[link_name = "?presentation@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static presentation: *mut nsIAtom;
            #[link_name = "?progressbar@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static progressbar: *mut nsIAtom;
            #[link_name = "?region@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static region: *mut nsIAtom;
            #[link_name = "?rowgroup@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rowgroup: *mut nsIAtom;
            #[link_name = "?rowheader@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static rowheader: *mut nsIAtom;
            #[link_name = "?search@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static search: *mut nsIAtom;
            #[link_name = "?searchbox@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static searchbox: *mut nsIAtom;
            #[link_name = "?select1@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static select1: *mut nsIAtom;
            #[link_name = "?setsize@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static setsize: *mut nsIAtom;
            #[link_name = "?spelling@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static spelling: *mut nsIAtom;
            #[link_name = "?spinbutton@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static spinbutton: *mut nsIAtom;
            #[link_name = "?status@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static status: *mut nsIAtom;
            #[link_name = "?_switch@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _switch: *mut nsIAtom;
            #[link_name = "?tableCellIndex@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tableCellIndex: *mut nsIAtom;
            #[link_name = "?tablist@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static tablist: *mut nsIAtom;
            #[link_name = "?textIndent@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static textIndent: *mut nsIAtom;
            #[link_name = "?textInputType@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static textInputType: *mut nsIAtom;
            #[link_name = "?textLineThroughColor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static textLineThroughColor: *mut nsIAtom;
            #[link_name = "?textLineThroughStyle@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static textLineThroughStyle: *mut nsIAtom;
            #[link_name = "?textPosition@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static textPosition: *mut nsIAtom;
            #[link_name = "?textUnderlineColor@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static textUnderlineColor: *mut nsIAtom;
            #[link_name = "?textUnderlineStyle@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static textUnderlineStyle: *mut nsIAtom;
            #[link_name = "?timer@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static timer: *mut nsIAtom;
            #[link_name = "?toolbarname@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static toolbarname: *mut nsIAtom;
            #[link_name = "?toolbarseparator@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static toolbarseparator: *mut nsIAtom;
            #[link_name = "?toolbarspacer@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static toolbarspacer: *mut nsIAtom;
            #[link_name = "?toolbarspring@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static toolbarspring: *mut nsIAtom;
            #[link_name = "?treegrid@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static treegrid: *mut nsIAtom;
            #[link_name = "?_undefined@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static _undefined: *mut nsIAtom;
            #[link_name = "?xmlroles@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static xmlroles: *mut nsIAtom;
            #[link_name = "?close_fence@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static close_fence: *mut nsIAtom;
            #[link_name = "?denominator@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static denominator: *mut nsIAtom;
            #[link_name = "?numerator@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static numerator: *mut nsIAtom;
            #[link_name = "?open_fence@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static open_fence: *mut nsIAtom;
            #[link_name = "?overscript@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static overscript: *mut nsIAtom;
            #[link_name = "?presubscript@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static presubscript: *mut nsIAtom;
            #[link_name = "?presuperscript@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static presuperscript: *mut nsIAtom;
            #[link_name = "?root_index@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static root_index: *mut nsIAtom;
            #[link_name = "?subscript@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static subscript: *mut nsIAtom;
            #[link_name = "?superscript@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static superscript: *mut nsIAtom;
            #[link_name = "?underscript@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static underscript: *mut nsIAtom;
            #[link_name = "?onaudiostart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onaudiostart: *mut nsIAtom;
            #[link_name = "?onaudioend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onaudioend: *mut nsIAtom;
            #[link_name = "?onsoundstart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onsoundstart: *mut nsIAtom;
            #[link_name = "?onsoundend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onsoundend: *mut nsIAtom;
            #[link_name = "?onspeechstart@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onspeechstart: *mut nsIAtom;
            #[link_name = "?onspeechend@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onspeechend: *mut nsIAtom;
            #[link_name = "?onresult@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onresult: *mut nsIAtom;
            #[link_name = "?onnomatch@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onnomatch: *mut nsIAtom;
            #[link_name = "?onresume@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onresume: *mut nsIAtom;
            #[link_name = "?onmark@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onmark: *mut nsIAtom;
            #[link_name = "?onboundary@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static onboundary: *mut nsIAtom;
            #[link_name = "?vr_state@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static vr_state: *mut nsIAtom;
            #[link_name = "?usercontextid@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static usercontextid: *mut nsIAtom;
            #[link_name = "?nsuri_xmlns@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nsuri_xmlns: *mut nsIAtom;
            #[link_name = "?nsuri_xml@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nsuri_xml: *mut nsIAtom;
            #[link_name = "?nsuri_xhtml@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nsuri_xhtml: *mut nsIAtom;
            #[link_name = "?nsuri_xlink@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nsuri_xlink: *mut nsIAtom;
            #[link_name = "?nsuri_xslt@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nsuri_xslt: *mut nsIAtom;
            #[link_name = "?nsuri_xbl@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nsuri_xbl: *mut nsIAtom;
            #[link_name = "?nsuri_mathml@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nsuri_mathml: *mut nsIAtom;
            #[link_name = "?nsuri_rdf@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nsuri_rdf: *mut nsIAtom;
            #[link_name = "?nsuri_xul@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nsuri_xul: *mut nsIAtom;
            #[link_name = "?nsuri_svg@nsGkAtoms@@2PAVnsIAtom@@A"]
            pub static nsuri_svg: *mut nsIAtom;
        }
    }
}

#[macro_export]
macro_rules! atom {
("") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_empty) };
("_moz") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::moz) };
("mozframetype") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozframetype) };
("_moz_abspos") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_abspos) };
("_moz_activated") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_activated) };
("_moz_resizing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_resizing) };
("mozallowfullscreen") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozallowfullscreen) };
("_moz-type") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::moztype) };
("_moz_dirty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozdirty) };
("mozdisallowselectionprint") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozdisallowselectionprint) };
("moz-do-not-send") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozdonotsend) };
("_moz_editor_bogus_node") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozeditorbogusnode) };
("_moz_generated_content_before") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozgeneratedcontentbefore) };
("_moz_generated_content_after") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozgeneratedcontentafter) };
("_moz_generated_content_image") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozgeneratedcontentimage) };
("_moz_quote") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozquote) };
("moz-signature") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozsignature) };
("-moz-is-glyph") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_is_glyph) };
("_moz_original_size") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_original_size) };
("_moz_target") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_target) };
("_moz-menuactive") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::menuactive) };
("#default") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_poundDefault) };
("*") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_asterisk) };
("a") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::a) };
("abbr") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::abbr) };
("abort") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::abort) };
("above") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::above) };
("acceltext") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::acceltext) };
("accept") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::accept) };
("accept-charset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::acceptcharset) };
("accesskey") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::accesskey) };
("acronym") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::acronym) };
("action") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::action) };
("active") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::active) };
("activetitlebarcolor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::activetitlebarcolor) };
("activateontab") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::activateontab) };
("actuate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::actuate) };
("address") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::address) };
("after") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::after) };
("after_end") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::after_end) };
("after_start") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::after_start) };
("align") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::align) };
("alink") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::alink) };
("all") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::all) };
("allowevents") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::allowevents) };
("allownegativeassertions") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::allownegativeassertions) };
("allow-forms") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::allowforms) };
("allowfullscreen") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::allowfullscreen) };
("allow-modals") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::allowmodals) };
("allow-orientation-lock") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::alloworientationlock) };
("allow-pointer-lock") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::allowpointerlock) };
("allow-popups-to-escape-sandbox") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::allowpopupstoescapesandbox) };
("allow-popups") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::allowpopups) };
("allow-same-origin") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::allowsameorigin) };
("allow-scripts") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::allowscripts) };
("allow-top-navigation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::allowtopnavigation) };
("allowuntrusted") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::allowuntrusted) };
("alt") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::alt) };
("alternate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::alternate) };
("always") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::always) };
("ancestor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ancestor) };
("ancestor-or-self") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ancestorOrSelf) };
("anchor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::anchor) };
("and") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_and) };
("animations") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::animations) };
("anonid") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::anonid) };
("anonlocation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::anonlocation) };
("any") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::any) };
("mozapp") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozapp) };
("mozwidget") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozwidget) };
("applet") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::applet) };
("apply-imports") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::applyImports) };
("apply-templates") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::applyTemplates) };
("mozapptype") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozapptype) };
("archive") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::archive) };
("area") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::area) };
("arrow") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::arrow) };
("article") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::article) };
("ascending") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ascending) };
("aside") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aside) };
("aspect-ratio") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aspectRatio) };
("assign") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::assign) };
("async") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::async) };
("attribute") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::attribute) };
("attributes") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::attributes) };
("attribute-set") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::attributeSet) };
("aural") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aural) };
("auto") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_auto) };
("autocheck") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::autocheck) };
("autocomplete") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::autocomplete) };
("autofocus") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::autofocus) };
("autoplay") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::autoplay) };
("autorepeatbutton") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::autorepeatbutton) };
("axis") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::axis) };
("b") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::b) };
("BackdropFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::backdropFrame) };
("background") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::background) };
("base") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::base) };
("basefont") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::basefont) };
("baseline") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::baseline) };
("bdi") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bdi) };
("bdo") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bdo) };
("before") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::before) };
("before_end") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::before_end) };
("before_start") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::before_start) };
("below") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::below) };
("bgcolor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bgcolor) };
("bgsound") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bgsound) };
("big") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::big) };
("binding") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::binding) };
("bindings") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bindings) };
("bindToUntrustedContent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bindToUntrustedContent) };
("blankrow") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::blankrow) };
("block") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::block) };
("blockquote") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::blockquote) };
("blur") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::blur) };
("body") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::body) };
("boolean") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::boolean) };
("border") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::border) };
("bordercolor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bordercolor) };
("both") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::both) };
("bottom") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bottom) };
("bottomend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bottomend) };
("bottomstart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bottomstart) };
("bottomleft") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bottomleft) };
("bottommargin") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bottommargin) };
("bottompadding") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bottompadding) };
("bottomright") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bottomright) };
("box") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::box_) };
("br") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::br) };
("braille") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::braille) };
("broadcast") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::broadcast) };
("broadcaster") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::broadcaster) };
("broadcasterset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::broadcasterset) };
("browser") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::browser) };
("mozbrowser") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozbrowser) };
("bulletinboard") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bulletinboard) };
("button") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::button) };
("brighttitlebarforeground") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::brighttitlebarforeground) };
("call-template") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::callTemplate) };
("cancel") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cancel) };
("canvas") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::canvas) };
("caption") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::caption) };
("capture") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::capture) };
("case-order") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::caseOrder) };
("cdata-section-elements") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cdataSectionElements) };
("ceiling") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ceiling) };
("cell") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cell) };
("cellpadding") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cellpadding) };
("cellspacing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cellspacing) };
("center") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::center) };
("ch") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ch) };
("change") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::change) };
("char") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_char) };
("characterData") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::characterData) };
("charcode") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::charcode) };
("charoff") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::charoff) };
("charset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::charset) };
("checkbox") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::checkbox) };
("checked") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::checked) };
("child") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::child) };
("children") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::children) };
("childList") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::childList) };
("choose") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::choose) };
("chromemargin") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::chromemargin) };
("chromeOnlyContent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::chromeOnlyContent) };
("exposeToUntrustedContent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::exposeToUntrustedContent) };
("circ") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::circ) };
("circle") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::circle) };
("cite") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cite) };
("class") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_class) };
("classid") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::classid) };
("clear") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::clear) };
("click") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::click) };
("clickcount") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::clickcount) };
("clickthrough") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::clickthrough) };
("movetoclick") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::movetoclick) };
("clip") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::clip) };
("close") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::close) };
("closed") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::closed) };
("closemenu") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::closemenu) };
("coalesceduplicatearcs") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::coalesceduplicatearcs) };
("code") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::code) };
("codebase") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::codebase) };
("codetype") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::codetype) };
("col") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::col) };
("colgroup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::colgroup) };
("collapse") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::collapse) };
("collapsed") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::collapsed) };
("color") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::color) };
("color-index") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::colorIndex) };
("cols") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cols) };
("colspan") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::colspan) };
("column") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::column) };
("columns") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::columns) };
("combobox") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::combobox) };
("command") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::command) };
("commands") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::commands) };
("commandset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::commandset) };
("commandupdate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::commandupdate) };
("commandupdater") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::commandupdater) };
("comment") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::comment) };
("compact") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::compact) };
("concat") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::concat) };
("conditions") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::conditions) };
("constructor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::constructor) };
("consumeoutsideclicks") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::consumeoutsideclicks) };
("container") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::container) };
("containment") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::containment) };
("contains") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::contains) };
("content") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::content) };
("contenteditable") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::contenteditable) };
("content-disposition") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::headerContentDisposition) };
("content-language") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::headerContentLanguage) };
("content-location") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::contentLocation) };
("content-script-type") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::headerContentScriptType) };
("content-style-type") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::headerContentStyleType) };
("content-type") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::headerContentType) };
("consumeanchor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::consumeanchor) };
("context") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::context) };
("contextmenu") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::contextmenu) };
("control") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::control) };
("controls") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::controls) };
("coords") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::coords) };
("copy") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::copy) };
("copy-of") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::copyOf) };
("count") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::count) };
("crop") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::crop) };
("crossorigin") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::crossorigin) };
("curpos") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::curpos) };
("current") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::current) };
("cycler") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cycler) };
("data") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::data) };
("datalist") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::datalist) };
("data-type") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dataType) };
("date-time") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dateTime) };
("datasources") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::datasources) };
("datetime") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::datetime) };
("dblclick") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dblclick) };
("dd") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dd) };
("debug") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::debug) };
("decimal-format") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::decimalFormat) };
("decimal-separator") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::decimalSeparator) };
("deck") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::deck) };
("declare") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::declare) };
("decoder-doctor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::decoderDoctor) };
("decrement") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::decrement) };
("default") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_default) };
("default-style") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::headerDefaultStyle) };
("defaultAction") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::defaultAction) };
("defaultchecked") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::defaultchecked) };
("defaultLabel") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::defaultLabel) };
("defaultselected") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::defaultselected) };
("defaultvalue") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::defaultvalue) };
("defaultplaybackrate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::defaultplaybackrate) };
("defer") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::defer) };
("del") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::del) };
("descendant") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::descendant) };
("descendant-or-self") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::descendantOrSelf) };
("descending") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::descending) };
("description") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::description) };
("destructor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::destructor) };
("details") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::details) };
("device-aspect-ratio") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::deviceAspectRatio) };
("device-height") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::deviceHeight) };
("device-pixel-ratio") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::devicePixelRatio) };
("device-width") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::deviceWidth) };
("dfn") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dfn) };
("dialog") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dialog) };
("difference") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::difference) };
("digit") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::digit) };
("dir") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dir) };
("dirAutoSetBy") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dirAutoSetBy) };
("directionality") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::directionality) };
("directory") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::directory) };
("disable-output-escaping") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::disableOutputEscaping) };
("disabled") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::disabled) };
("disableglobalhistory") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::disableglobalhistory) };
("disablehistory") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::disablehistory) };
("display") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::display) };
("display-mode") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::displayMode) };
("distinct") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::distinct) };
("div") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::div) };
("dl") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dl) };
("doctype-public") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::doctypePublic) };
("doctype-system") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::doctypeSystem) };
("document") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::document) };
("download") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::download) };
("DOMAttrModified") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::DOMAttrModified) };
("DOMCharacterDataModified") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::DOMCharacterDataModified) };
("DOMNodeInserted") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::DOMNodeInserted) };
("DOMNodeInsertedIntoDocument") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::DOMNodeInsertedIntoDocument) };
("DOMNodeRemoved") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::DOMNodeRemoved) };
("DOMNodeRemovedFromDocument") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::DOMNodeRemovedFromDocument) };
("DOMSubtreeModified") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::DOMSubtreeModified) };
("double") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::double_) };
("drag") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::drag) };
("dragdrop") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dragdrop) };
("dragend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dragend) };
("dragenter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dragenter) };
("dragevent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dragevent) };
("dragexit") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dragexit) };
("draggable") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::draggable) };
("draggesture") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::draggesture) };
("dragging") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dragging) };
("dragleave") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dragleave) };
("dragover") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dragover) };
("dragSession") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dragSession) };
("dragstart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dragstart) };
("drawintitlebar") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::drawintitlebar) };
("drawtitle") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::drawtitle) };
("drop") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::drop) };
("dropAfter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dropAfter) };
("dropBefore") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dropBefore) };
("dropOn") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dropOn) };
("dropmarker") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dropMarker) };
("dt") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dt) };
("editable") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::editable) };
("editing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::editing) };
("editor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::editor) };
("EditorDisplay-List") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::editorDisplayList) };
("element") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::element) };
("element-available") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::elementAvailable) };
("elements") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::elements) };
("em") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::em) };
("embed") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::embed) };
("embossed") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::embossed) };
("empty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::empty) };
("encoding") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::encoding) };
("enctype") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::enctype) };
("end") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::end) };
("endEvent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::endEvent) };
("end_after") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::end_after) };
("end_before") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::end_before) };
("equalsize") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::equalsize) };
("error") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::error) };
("even") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::even) };
("event") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::event) };
("events") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::events) };
("exclude-result-prefixes") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::excludeResultPrefixes) };
("excludes") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::excludes) };
("expr") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::expr) };
("extends") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::extends) };
("extension-element-prefixes") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::extensionElementPrefixes) };
("face") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::face) };
("fallback") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fallback) };
("false") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_false) };
("farthest") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::farthest) };
("field") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::field) };
("fieldset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fieldset) };
("figcaption") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::figcaption) };
("figure") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::figure) };
("fixed") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fixed) };
("flags") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::flags) };
("flex") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::flex) };
("flexgroup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::flexgroup) };
("flip") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::flip) };
("floating") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::floating) };
("floor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::floor) };
("flowlength") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::flowlength) };
("focus") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::focus) };
("focused") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::focused) };
("following") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::following) };
("following-sibling") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::followingSibling) };
("font") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::font) };
("font-weight") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fontWeight) };
("fontpicker") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fontpicker) };
("footer") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::footer) };
("for") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_for) };
("for-each") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::forEach) };
("forceOwnRefreshDriver") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::forceOwnRefreshDriver) };
("form") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::form) };
("formaction") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::formaction) };
("format") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::format) };
("format-number") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::formatNumber) };
("formenctype") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::formenctype) };
("formmethod") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::formmethod) };
("formnovalidate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::formnovalidate) };
("formtarget") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::formtarget) };
("frame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::frame) };
("frameborder") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::frameborder) };
("frameset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::frameset) };
("from") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::from) };
("fullscreenchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fullscreenchange) };
("fullscreenerror") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fullscreenerror) };
("function-available") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::functionAvailable) };
("generate-id") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::generateId) };
("getter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::getter) };
("glyphchar") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::glyphchar) };
("glyphid") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::glyphid) };
("grid") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::grid) };
("grippy") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::grippy) };
("group") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::group) };
("grouping-separator") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::groupingSeparator) };
("grouping-size") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::groupingSize) };
("grow") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::grow) };
("gutter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::gutter) };
("h1") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::h1) };
("h2") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::h2) };
("h3") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::h3) };
("h4") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::h4) };
("h5") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::h5) };
("h6") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::h6) };
("handheld") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::handheld) };
("HandheldFriendly") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::handheldFriendly) };
("handler") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::handler) };
("handlers") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::handlers) };
("HARD") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::HARD) };
("has-same-node") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::hasSameNode) };
("hbox") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::hbox) };
("head") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::head) };
("header") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::header) };
("headers") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::headers) };
("height") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::height) };
("hgroup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::hgroup) };
("hidden") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::hidden) };
("hidechrome") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::hidechrome) };
("hidecolumnpicker") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::hidecolumnpicker) };
("high") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::high) };
("highest") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::highest) };
("horizontal") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::horizontal) };
("hover") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::hover) };
("hr") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::hr) };
("href") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::href) };
("hreflang") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::hreflang) };
("hspace") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::hspace) };
("html") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::html) };
("http-equiv") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::httpEquiv) };
("i") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::i) };
("icon") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::icon) };
("id") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::id) };
("if") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_if) };
("iframe") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::iframe) };
("ignorecase") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ignorecase) };
("ignorekeys") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ignorekeys) };
("ignoreuserfocus") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ignoreuserfocus) };
("ilayer") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ilayer) };
("image") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::image) };
("image-clicked-point") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::imageClickedPoint) };
("img") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::img) };
("implementation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::implementation) };
("implements") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::implements) };
("import") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::import) };
("inactivetitlebarcolor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::inactivetitlebarcolor) };
("include") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::include) };
("includes") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::includes) };
("increment") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::increment) };
("indent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::indent) };
("indeterminate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::indeterminate) };
("index") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::index) };
("infer") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::infer) };
("infinity") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::infinity) };
("inherit") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::inherit) };
("inherits") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::inherits) };
("inheritstyle") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::inheritstyle) };
("initial-scale") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::initial_scale) };
("input") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::input) };
("inputmode") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::inputmode) };
("ins") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ins) };
("insertafter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::insertafter) };
("insertbefore") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::insertbefore) };
("install") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::install) };
("instanceOf") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::instanceOf) };
("int32") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::int32) };
("int64") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::int64) };
("integer") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::integer) };
("integrity") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::integrity) };
("intersection") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::intersection) };
("is") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::is) };
("iscontainer") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::iscontainer) };
("isempty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::isempty) };
("ismap") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ismap) };
("itemid") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::itemid) };
("itemprop") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::itemprop) };
("itemref") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::itemref) };
("itemscope") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::itemscope) };
("itemtype") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::itemtype) };
("kbd") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::kbd) };
("keepcurrentinview") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::keepcurrentinview) };
("keepobjectsalive") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::keepobjectsalive) };
("key") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::key) };
("keycode") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::keycode) };
("keystatuseschange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::keystatuseschange) };
("keydown") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::keydown) };
("keygen") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::keygen) };
("keypress") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::keypress) };
("keyset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::keyset) };
("keysystem") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::keysystem) };
("keytext") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::keytext) };
("keyup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::keyup) };
("kind") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::kind) };
("label") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::label) };
("lang") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lang) };
("language") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::language) };
("last") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::last) };
("layer") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::layer) };
("LayerActivity") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::LayerActivity) };
("layout") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::layout) };
("leading") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::leading) };
("leaf") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::leaf) };
("left") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::left) };
("leftmargin") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::leftmargin) };
("leftpadding") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::leftpadding) };
("legend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::legend) };
("length") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::length) };
("letter-value") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::letterValue) };
("level") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::level) };
("li") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::li) };
("line") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::line) };
("link") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::link) };
("list") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::list) };
("listbox") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::listbox) };
("listboxbody") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::listboxbody) };
("listcell") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::listcell) };
("listcol") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::listcol) };
("listcols") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::listcols) };
("listener") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::listener) };
("listhead") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::listhead) };
("listheader") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::listheader) };
("listing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::listing) };
("listitem") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::listitem) };
("listrows") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::listrows) };
("load") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::load) };
("localedir") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::localedir) };
("local-name") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::localName) };
("longdesc") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::longdesc) };
("loop") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::loop_) };
("low") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::low) };
("lower-first") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lowerFirst) };
("lowest") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lowest) };
("lowsrc") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lowsrc) };
("ltr") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ltr) };
("lwtheme") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lwtheme) };
("lwthemetextcolor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lwthemetextcolor) };
("main") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::main) };
("map") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::map) };
("manifest") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::manifest) };
("margin-bottom") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::marginBottom) };
("margin-left") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::marginLeft) };
("margin-right") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::marginRight) };
("margin-top") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::marginTop) };
("marginheight") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::marginheight) };
("marginwidth") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::marginwidth) };
("mark") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mark) };
("marquee") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::marquee) };
("match") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::match_) };
("max") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::max) };
("maxheight") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::maxheight) };
("maximum-scale") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::maximum_scale) };
("maxlength") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::maxlength) };
("maxpos") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::maxpos) };
("maxwidth") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::maxwidth) };
("mayscript") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mayscript) };
("media") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::media) };
("media-type") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mediaType) };
("member") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::member) };
("menu") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::menu) };
("menubar") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::menubar) };
("menubutton") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::menubutton) };
("menu-button") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::menuButton) };
("menugroup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::menugroup) };
("menuitem") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::menuitem) };
("menulist") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::menulist) };
("menupopup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::menupopup) };
("menuseparator") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::menuseparator) };
("message") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::message) };
("meta") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::meta) };
("referrer") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::referrer) };
("referrerpolicy") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::referrerpolicy) };
("meter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::meter) };
("method") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::method) };
("middle") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::middle) };
("min") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::min) };
("minheight") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::minheight) };
("minimum-scale") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::minimum_scale) };
("minpos") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::minpos) };
("minus-sign") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::minusSign) };
("minwidth") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::minwidth) };
("mixed") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_mixed) };
("messagemanagergroup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::messagemanagergroup) };
("mod") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mod_) };
("mode") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mode) };
("modifiers") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::modifiers) };
("monochrome") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::monochrome) };
("mousedown") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mousedown) };
("mousemove") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mousemove) };
("mouseout") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mouseout) };
("mouseover") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mouseover) };
("mousethrough") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mousethrough) };
("mouseup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mouseup) };
("mozaudiochannel") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozaudiochannel) };
("mozfullscreenchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozfullscreenchange) };
("mozfullscreenerror") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozfullscreenerror) };
("mozpasspointerevents") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozpasspointerevents) };
("mozpointerlockchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozpointerlockchange) };
("mozpointerlockerror") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozpointerlockerror) };
("mozprivatebrowsing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozprivatebrowsing) };
("moz-opaque") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::moz_opaque) };
("mozactionhint") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::moz_action_hint) };
("x-moz-errormessage") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_moz_errormessage) };
("msthemecompatible") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::msthemecompatible) };
("multicol") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::multicol) };
("multiple") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::multiple) };
("muted") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::muted) };
("name") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::name) };
("namespace") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_namespace) };
("namespace-alias") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::namespaceAlias) };
("namespace-uri") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::namespaceUri) };
("NaN") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::NaN) };
("nativeAnonymousChildList") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nativeAnonymousChildList) };
("nav") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nav) };
("negate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::negate) };
("never") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::never) };
("new") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_new) };
("newline") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::newline) };
("NextBidi") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nextBidi) };
("no") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::no) };
("noautofocus") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::noautofocus) };
("noautohide") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::noautohide) };
("norolluponanchor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::norolluponanchor) };
("nobr") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nobr) };
("node") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::node) };
("nodefaultsrc") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nodefaultsrc) };
("node-set") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nodeSet) };
("noembed") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::noembed) };
("noframes") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::noframes) };
("nohref") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nohref) };
("noisolation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::noisolation) };
("nonce") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nonce) };
("none") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::none) };
("noresize") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::noresize) };
("normal") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::normal) };
("normalize-space") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::normalizeSpace) };
("noscript") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::noscript) };
("noshade") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::noshade) };
("novalidate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::novalidate) };
("not") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_not) };
("nowrap") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nowrap) };
("number") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::number) };
("null") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::null) };
("object") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::object) };
("object-type") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::objectType) };
("observer") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::observer) };
("observes") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::observes) };
("odd") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::odd) };
("OFF") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::OFF) };
("ol") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ol) };
("omit-xml-declaration") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::omitXmlDeclaration) };
("ona2dpstatuschanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ona2dpstatuschanged) };
("onabort") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onabort) };
("onmozaccesskeynotfound") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmozaccesskeynotfound) };
("onactivate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onactivate) };
("onadapteradded") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onadapteradded) };
("onadapterremoved") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onadapterremoved) };
("onafterprint") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onafterprint) };
("onafterscriptexecute") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onafterscriptexecute) };
("onalerting") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onalerting) };
("onanimationend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onanimationend) };
("onanimationiteration") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onanimationiteration) };
("onanimationstart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onanimationstart) };
("onantennaavailablechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onantennaavailablechange) };
("onAppCommand") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onAppCommand) };
("onattributechanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onattributechanged) };
("onattributereadreq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onattributereadreq) };
("onattributewritereq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onattributewritereq) };
("onaudioprocess") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onaudioprocess) };
("onbeforecopy") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onbeforecopy) };
("onbeforecut") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onbeforecut) };
("onbeforepaste") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onbeforepaste) };
("onbeforeevicted") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onbeforeevicted) };
("onbeforeprint") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onbeforeprint) };
("onbeforescriptexecute") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onbeforescriptexecute) };
("onbeforeunload") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onbeforeunload) };
("onblocked") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onblocked) };
("onblur") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onblur) };
("onbroadcast") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onbroadcast) };
("onbusy") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onbusy) };
("onbufferedamountlow") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onbufferedamountlow) };
("oncached") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncached) };
("oncallschanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncallschanged) };
("oncancel") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncancel) };
("oncardstatechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncardstatechange) };
("oncfstatechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncfstatechange) };
("onchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onchange) };
("oncharacteristicchanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncharacteristicchanged) };
("onchargingchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onchargingchange) };
("onchargingtimechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onchargingtimechange) };
("onchecking") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onchecking) };
("onclick") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onclick) };
("onclirmodechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onclirmodechange) };
("onclose") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onclose) };
("oncommand") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncommand) };
("oncommandupdate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncommandupdate) };
("oncomplete") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncomplete) };
("oncompositionend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncompositionend) };
("oncompositionstart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncompositionstart) };
("oncompositionupdate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncompositionupdate) };
("onconfigurationchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onconfigurationchange) };
("onconnect") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onconnect) };
("onconnected") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onconnected) };
("onconnecting") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onconnecting) };
("onconnectionavailable") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onconnectionavailable) };
("onconnectionstatechanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onconnectionstatechanged) };
("oncontextmenu") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncontextmenu) };
("oncopy") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncopy) };
("oncurrentchannelchanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncurrentchannelchanged) };
("oncurrentsourcechanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncurrentsourcechanged) };
("oncut") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncut) };
("ondatachange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondatachange) };
("ondataerror") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondataerror) };
("ondblclick") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondblclick) };
("ondeleted") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondeleted) };
("ondeliverysuccess") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondeliverysuccess) };
("ondeliveryerror") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondeliveryerror) };
("ondevicefound") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondevicefound) };
("ondevicepaired") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondevicepaired) };
("ondeviceunpaired") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondeviceunpaired) };
("ondialing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondialing) };
("ondisabled") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondisabled) };
("ondischargingtimechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondischargingtimechange) };
("ondisconnect") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondisconnect) };
("ondisconnected") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondisconnected) };
("ondisconnecting") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondisconnecting) };
("ondisplaypasskeyreq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondisplaypasskeyreq) };
("ondownloading") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondownloading) };
("onDOMActivate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onDOMActivate) };
("onDOMAttrModified") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onDOMAttrModified) };
("onDOMCharacterDataModified") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onDOMCharacterDataModified) };
("onDOMFocusIn") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onDOMFocusIn) };
("onDOMFocusOut") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onDOMFocusOut) };
("onDOMMouseScroll") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onDOMMouseScroll) };
("onDOMNodeInserted") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onDOMNodeInserted) };
("onDOMNodeInsertedIntoDocument") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onDOMNodeInsertedIntoDocument) };
("onDOMNodeRemoved") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onDOMNodeRemoved) };
("onDOMNodeRemovedFromDocument") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onDOMNodeRemovedFromDocument) };
("onDOMSubtreeModified") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onDOMSubtreeModified) };
("ondata") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondata) };
("ondrag") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondrag) };
("ondragdrop") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondragdrop) };
("ondragend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondragend) };
("ondragenter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondragenter) };
("ondragexit") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondragexit) };
("ondraggesture") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondraggesture) };
("ondragleave") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondragleave) };
("ondragover") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondragover) };
("ondragstart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondragstart) };
("ondrain") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondrain) };
("ondrop") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondrop) };
("oneitbroadcasted") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oneitbroadcasted) };
("onenabled") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onenabled) };
("onenterpincodereq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onenterpincodereq) };
("onemergencycbmodechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onemergencycbmodechange) };
("onerror") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onerror) };
("onevicted") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onevicted) };
("onfacesdetected") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onfacesdetected) };
("onfailed") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onfailed) };
("onfetch") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onfetch) };
("onfinish") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onfinish) };
("onfocus") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onfocus) };
("onfrequencychange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onfrequencychange) };
("onfullscreenchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onfullscreenchange) };
("onfullscreenerror") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onfullscreenerror) };
("onspeakerforcedchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onspeakerforcedchange) };
("onget") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onget) };
("ongroupchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ongroupchange) };
("onhashchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onhashchange) };
("onheadphoneschange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onheadphoneschange) };
("onheld") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onheld) };
("onhfpstatuschanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onhfpstatuschanged) };
("onhidstatuschanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onhidstatuschanged) };
("onholding") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onholding) };
("oniccchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oniccchange) };
("oniccdetected") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oniccdetected) };
("oniccinfochange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oniccinfochange) };
("oniccundetected") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oniccundetected) };
("onincoming") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onincoming) };
("oninput") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oninput) };
("oninstall") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oninstall) };
("oninvalid") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oninvalid) };
("onkeydown") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onkeydown) };
("onkeypress") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onkeypress) };
("onkeyup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onkeyup) };
("onlanguagechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onlanguagechange) };
("onlevelchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onlevelchange) };
("onLoad") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onLoad) };
("onload") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onload) };
("onloading") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onloading) };
("onloadingdone") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onloadingdone) };
("onloadingerror") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onloadingerror) };
("onpopstate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpopstate) };
("only") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::only) };
("onmessage") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmessage) };
("onmousedown") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmousedown) };
("onmouseenter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmouseenter) };
("onmouseleave") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmouseleave) };
("onmousemove") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmousemove) };
("onmouseout") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmouseout) };
("onmouseover") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmouseover) };
("onMozMouseHittest") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozMouseHittest) };
("onmouseup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmouseup) };
("onMozAfterPaint") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozAfterPaint) };
("onmozbrowserafterkeydown") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmozbrowserafterkeydown) };
("onmozbrowserafterkeyup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmozbrowserafterkeyup) };
("onmozbrowserbeforekeydown") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmozbrowserbeforekeydown) };
("onmozbrowserbeforekeyup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmozbrowserbeforekeyup) };
("onmozfullscreenchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmozfullscreenchange) };
("onmozfullscreenerror") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmozfullscreenerror) };
("onmozkeydownonplugin") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmozkeydownonplugin) };
("onmozkeyuponplugin") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmozkeyuponplugin) };
("onmozpointerlockchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmozpointerlockchange) };
("onmozpointerlockerror") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmozpointerlockerror) };
("onmoztimechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmoztimechange) };
("onMozMousePixelScroll") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozMousePixelScroll) };
("onMozScrolledAreaChanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozScrolledAreaChanged) };
("onmoznetworkupload") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmoznetworkupload) };
("onmoznetworkdownload") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmoznetworkdownload) };
("onmapfolderlistingreq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmapfolderlistingreq) };
("onmapmessageslistingreq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmapmessageslistingreq) };
("onmapgetmessagereq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmapgetmessagereq) };
("onmapsetmessagestatusreq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmapsetmessagestatusreq) };
("onmapsendmessagereq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmapsendmessagereq) };
("onmapmessageupdatereq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmapmessageupdatereq) };
("onnewrdsgroup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onnewrdsgroup) };
("onnotificationclick") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onnotificationclick) };
("onnotificationclose") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onnotificationclose) };
("onnoupdate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onnoupdate) };
("onobexpasswordreq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onobexpasswordreq) };
("onobsolete") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onobsolete) };
("ononline") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ononline) };
("onoffline") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onoffline) };
("onopen") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onopen) };
("onorientationchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onorientationchange) };
("onotastatuschange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onotastatuschange) };
("onoverflow") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onoverflow) };
("onoverflowchanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onoverflowchanged) };
("onpagehide") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpagehide) };
("onpageshow") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpageshow) };
("onpaint") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpaint) };
("onpairingaborted") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpairingaborted) };
("onpairingconfirmationreq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpairingconfirmationreq) };
("onpairingconsentreq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpairingconsentreq) };
("onpaste") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpaste) };
("onpendingchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpendingchange) };
("onpichange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpichange) };
("onpicture") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpicture) };
("onpopuphidden") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpopuphidden) };
("onpopuphiding") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpopuphiding) };
("onpopupshowing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpopupshowing) };
("onpopupshown") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpopupshown) };
("onposter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onposter) };
("onpreviewstatechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpreviewstatechange) };
("onpullphonebookreq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpullphonebookreq) };
("onpullvcardentryreq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpullvcardentryreq) };
("onpullvcardlistingreq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpullvcardlistingreq) };
("onpush") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpush) };
("onpushsubscriptionchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpushsubscriptionchange) };
("onpschange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpschange) };
("onptychange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onptychange) };
("onradiostatechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onradiostatechange) };
("onrdsdisabled") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onrdsdisabled) };
("onrdsenabled") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onrdsenabled) };
("onreaderror") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onreaderror) };
("onreadsuccess") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onreadsuccess) };
("onready") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onready) };
("onreadystatechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onreadystatechange) };
("onreceived") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onreceived) };
("onrecorderstatechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onrecorderstatechange) };
("onremoteheld") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onremoteheld) };
("onremoteresumed") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onremoteresumed) };
("onresourcetimingbufferfull") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onresourcetimingbufferfull) };
("onretrieving") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onretrieving) };
("onRequest") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onRequest) };
("onrequestmediaplaystatus") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onrequestmediaplaystatus) };
("onreset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onreset) };
("onresuming") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onresuming) };
("onresize") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onresize) };
("onrtchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onrtchange) };
("onscanningstatechanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onscanningstatechanged) };
("onscostatuschanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onscostatuschanged) };
("onscroll") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onscroll) };
("onselect") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onselect) };
("onselectionchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onselectionchange) };
("onselectstart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onselectstart) };
("onsending") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onsending) };
("onsent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onsent) };
("onset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onset) };
("onshow") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onshow) };
("onshutter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onshutter) };
("onstatechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onstatechange) };
("onstatuschanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onstatuschanged) };
("onstkcommand") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onstkcommand) };
("onstksessionend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onstksessionend) };
("onstorage") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onstorage) };
("onstorageareachanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onstorageareachanged) };
("onsubmit") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onsubmit) };
("onsuccess") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onsuccess) };
("ontypechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ontypechange) };
("onterminate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onterminate) };
("ontext") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ontext) };
("ontoggle") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ontoggle) };
("ontouchstart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ontouchstart) };
("ontouchend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ontouchend) };
("ontouchmove") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ontouchmove) };
("ontouchcancel") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ontouchcancel) };
("ontransitionend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ontransitionend) };
("onunderflow") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onunderflow) };
("onunload") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onunload) };
("onupdatefound") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onupdatefound) };
("onupdateready") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onupdateready) };
("onupgradeneeded") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onupgradeneeded) };
("onussdreceived") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onussdreceived) };
("onversionchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onversionchange) };
("onvoicechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onvoicechange) };
("onvoiceschanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onvoiceschanged) };
("onwebkitAnimationEnd") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onwebkitAnimationEnd) };
("onwebkitAnimationIteration") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onwebkitAnimationIteration) };
("onwebkitAnimationStart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onwebkitAnimationStart) };
("onwebkitTransitionEnd") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onwebkitTransitionEnd) };
("onwebsocket") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onwebsocket) };
("onwheel") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onwheel) };
("open") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::open) };
("optgroup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::optgroup) };
("optimum") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::optimum) };
("option") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::option) };
("or") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_or) };
("order") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::order) };
("ordinal") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ordinal) };
("orient") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::orient) };
("orientation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::orientation) };
("otherwise") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::otherwise) };
("output") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::output) };
("overflow") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::overflow) };
("overflowchanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::overflowchanged) };
("overlay") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::overlay) };
("overlap") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::overlap) };
("p") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::p) };
("pack") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pack) };
("page") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::page) };
("pageincrement") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pageincrement) };
("pagex") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pagex) };
("pagey") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pagey) };
("paint-order") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::paint_order) };
("palettename") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::palettename) };
("panel") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::panel) };
("param") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::param) };
("parameter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::parameter) };
("parent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::parent) };
("parentapp") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::parentapp) };
("parentfocused") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::parentfocused) };
("parsetype") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::parsetype) };
("password") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::password) };
("pattern") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pattern) };
("pattern-separator") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::patternSeparator) };
("per-mille") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::perMille) };
("percent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::percent) };
("persist") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::persist) };
("phase") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::phase) };
("picture") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::picture) };
("ping") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ping) };
("pinned") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pinned) };
("placeholder") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::placeholder) };
("plaintext") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::plaintext) };
("playbackrate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::playbackrate) };
("point-size") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pointSize) };
("poly") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::poly) };
("polygon") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::polygon) };
("popup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::popup) };
("popupalign") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::popupalign) };
("popupanchor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::popupanchor) };
("popupgroup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::popupgroup) };
("popuphidden") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::popuphidden) };
("popuphiding") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::popuphiding) };
("popupset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::popupset) };
("popupshowing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::popupshowing) };
("popupshown") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::popupshown) };
("popupsinherittooltip") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::popupsinherittooltip) };
("position") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::position) };
("poster") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::poster) };
("pre") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pre) };
("preceding") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::preceding) };
("preceding-sibling") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::precedingSibling) };
("predicate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::predicate) };
("prefix") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::prefix) };
("preload") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::preload) };
("prerendered") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::prerendered) };
("mozpresentation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozpresentation) };
("preserve") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::preserve) };
("preserve-space") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::preserveSpace) };
("preventdefault") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::preventdefault) };
("primary") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::primary) };
("print") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::print) };
("priority") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::priority) };
("processing-instruction") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::processingInstruction) };
("profile") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::profile) };
("progress") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::progress) };
("progressmeter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::progressmeter) };
("progressNormal") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::progressNormal) };
("progressUndetermined") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::progressUndetermined) };
("projection") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::projection) };
("prompt") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::prompt) };
("propagate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::propagate) };
("properties") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::properties) };
("property") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::property) };
("pubdate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pubdate) };
("q") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::q) };
("query") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::query) };
("queryset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::queryset) };
("querytype") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::querytype) };
("radio") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::radio) };
("radiogroup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::radiogroup) };
("range") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::range) };
("readonly") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::readonly) };
("rect") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rect) };
("rectangle") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rectangle) };
("ref") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ref_) };
("refresh") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::refresh) };
("rel") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rel) };
("onreloadpage") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onreloadpage) };
("rem") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rem) };
("removeelement") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::removeelement) };
("renderingobserverlist") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::renderingobserverlist) };
("repeat") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::repeat) };
("replace") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::replace) };
("required") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::required) };
("reserved") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::reserved) };
("reset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::reset) };
("resizeafter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::resizeafter) };
("resizebefore") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::resizebefore) };
("resizer") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::resizer) };
("resolution") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::resolution) };
("resource") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::resource) };
("resources") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::resources) };
("result") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::result) };
("result-prefix") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::resultPrefix) };
("retargetdocumentfocus") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::retargetdocumentfocus) };
("rev") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rev) };
("reverse") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::reverse) };
("reversed") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::reversed) };
("richlistbox") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::richlistbox) };
("richlistitem") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::richlistitem) };
("right") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::right) };
("rightmargin") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rightmargin) };
("rightpadding") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rightpadding) };
("role") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::role) };
("rolluponmousewheel") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rolluponmousewheel) };
("round") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::round) };
("row") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::row) };
("rows") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rows) };
("rowspan") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rowspan) };
("rb") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rb) };
("rp") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rp) };
("rt") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rt) };
("rtc") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rtc) };
("rtl") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rtl) };
("ruby") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ruby) };
("ruby-base") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rubyBase) };
("ruby-base-container") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rubyBaseContainer) };
("ruby-text") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rubyText) };
("ruby-text-container") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rubyTextContainer) };
("rule") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rule) };
("rules") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rules) };
("s") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::s) };
("samp") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::samp) };
("sandbox") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sandbox) };
("sbattr") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sbattr) };
("scale") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scale) };
("scan") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scan) };
("scheme") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scheme) };
("scope") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scope) };
("scoped") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scoped) };
("screen") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::screen) };
("screenX") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::screenX) };
("screenY") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::screenY) };
("script") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::script) };
("scriptEnabledBeforePrintOrPreview") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scriptEnabledBeforePrintOrPreview) };
("scrollbar") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scrollbar) };
("scrollbarbutton") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scrollbarbutton) };
("scrollbar-down-bottom") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scrollbarDownBottom) };
("scrollbar-down-top") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scrollbarDownTop) };
("scrollbar-up-bottom") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scrollbarUpBottom) };
("scrollbar-up-top") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scrollbarUpTop) };
("scrollbox") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scrollbox) };
("scrollcorner") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scrollcorner) };
("scrolling") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scrolling) };
("section") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::section) };
("select") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::select) };
("selectable") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::selectable) };
("selected") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::selected) };
("selectedIndex") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::selectedIndex) };
("selectedindex") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::selectedindex) };
("self") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::self_) };
("seltype") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::seltype) };
("set-cookie") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::setcookie) };
("setter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::setter) };
("shape") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::shape) };
("show") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::show) };
("showcaret") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::showcaret) };
("showresizer") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::showresizer) };
("simple") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::simple) };
("single") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::single) };
("size") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::size) };
("sizes") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sizes) };
("sizemode") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sizemode) };
("sizetopopup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sizetopopup) };
("slider") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::slider) };
("small") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::small) };
("smooth") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::smooth) };
("snap") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::snap) };
("sort") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sort) };
("sortActive") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sortActive) };
("sortDirection") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sortDirection) };
("sorted") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sorted) };
("sorthints") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sorthints) };
("sortLocked") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sortLocked) };
("sortResource") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sortResource) };
("sortResource2") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sortResource2) };
("sortSeparators") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sortSeparators) };
("sortStaticsLast") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sortStaticsLast) };
("source") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::source) };
("space") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::space) };
("spacer") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::spacer) };
("span") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::span) };
("spellcheck") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::spellcheck) };
("spinner") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::spinner) };
("split") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::split) };
("splitmenu") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::splitmenu) };
("splitter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::splitter) };
("spring") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::spring) };
("src") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::src) };
("srcdoc") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::srcdoc) };
("srclang") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::srclang) };
("srcset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::srcset) };
("stack") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stack) };
("standalone") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::standalone) };
("standby") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::standby) };
("start") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::start) };
("start_after") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::start_after) };
("start_before") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::start_before) };
("starts-with") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::startsWith) };
("state") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::state) };
("statedatasource") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::statedatasource) };
("staticHint") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::staticHint) };
("statusbar") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::statusbar) };
("statustext") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::statustext) };
("step") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::step) };
("stop") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stop) };
("stretch") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stretch) };
("strike") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::strike) };
("string") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::string) };
("string-length") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stringLength) };
("strip-space") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stripSpace) };
("strong") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::strong) };
("style") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::style) };
("stylesheet") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stylesheet) };
("stylesheet-prefix") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stylesheetPrefix) };
("subject") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::subject) };
("submit") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::submit) };
("substate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::substate) };
("substring") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::substring) };
("substring-after") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::substringAfter) };
("substring-before") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::substringBefore) };
("sub") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sub) };
("sum") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sum) };
("sup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sup) };
("summary") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::summary) };
("system-property") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::systemProperty) };
("tab") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tab) };
("tabbox") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tabbox) };
("tabindex") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tabindex) };
("table") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::table) };
("tabpanel") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tabpanel) };
("tabpanels") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tabpanels) };
("tag") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tag) };
("target") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::target) };
("targets") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::targets) };
("tbody") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tbody) };
("td") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::td) };
("template") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_template) };
("text-decoration") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::text_decoration) };
("terminate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::terminate) };
("test") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::test) };
("text") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::text) };
("text-align") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::textAlign) };
("textarea") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::textarea) };
("textbox") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::textbox) };
("textnode") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::textnode) };
("textNodeDirectionalityMap") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::textNodeDirectionalityMap) };
("tfoot") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tfoot) };
("th") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::th) };
("thead") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::thead) };
("thumb") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::thumb) };
("time") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::time) };
("title") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::title) };
("titlebar") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::titlebar) };
("titletip") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::titletip) };
("toggled") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::toggled) };
("token") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::token) };
("tokenize") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tokenize) };
("toolbar") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::toolbar) };
("toolbarbutton") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::toolbarbutton) };
("toolbaritem") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::toolbaritem) };
("toolbox") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::toolbox) };
("tooltip") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tooltip) };
("tooltiptext") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tooltiptext) };
("top") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::top) };
("topleft") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::topleft) };
("topmargin") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::topmargin) };
("toppadding") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::toppadding) };
("topright") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::topright) };
("tr") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tr) };
("track") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::track) };
("trailing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::trailing) };
("transform") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::transform) };
("transform-3d") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::transform_3d) };
("transformiix") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::transformiix) };
("translate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::translate) };
("transparent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::transparent) };
("tree") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tree) };
("treecell") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::treecell) };
("treechildren") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::treechildren) };
("treecol") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::treecol) };
("treecolpicker") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::treecolpicker) };
("treecols") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::treecols) };
("treeitem") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::treeitem) };
("treerow") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::treerow) };
("treeseparator") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::treeseparator) };
("triple") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::triple) };
("true") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_true) };
("tt") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tt) };
("tty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tty) };
("tv") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tv) };
("type") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::type_) };
("typemustmatch") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::typemustmatch) };
("u") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::u) };
("ul") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ul) };
("underflow") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::underflow) };
("undetermined") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::undetermined) };
("undoscope") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::undoscope) };
("unload") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::unload) };
("unparsed-entity-uri") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::unparsedEntityUri) };
("upper-first") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::upperFirst) };
("uri") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::uri) };
("use") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::use_) };
("use-attribute-sets") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::useAttributeSets) };
("usemap") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::usemap) };
("user-scalable") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::user_scalable) };
("userInput") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::userInput) };
("validate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::validate) };
("valign") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::valign) };
("value") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::value) };
("values") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::values) };
("value-of") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::valueOf) };
("valuetype") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::valuetype) };
("var") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::var) };
("variable") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::variable) };
("vbox") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::vbox) };
("vcard_name") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::vcard_name) };
("vendor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::vendor) };
("vendor-url") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::vendorUrl) };
("version") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::version) };
("vert") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::vert) };
("vertical") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::vertical) };
("audio") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::audio) };
("video") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::video) };
("videocontrols") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::videocontrols) };
("viewport") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::viewport) };
("viewport-height") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::viewport_height) };
("viewport-initial-scale") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::viewport_initial_scale) };
("viewport-maximum-scale") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::viewport_maximum_scale) };
("viewport-minimum-scale") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::viewport_minimum_scale) };
("viewport-user-scalable") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::viewport_user_scalable) };
("viewport-width") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::viewport_width) };
("visibility") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::visibility) };
("visuallyselected") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::visuallyselected) };
("vlink") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::vlink) };
("vspace") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::vspace) };
("wbr") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::wbr) };
("webkitdirectory") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::webkitdirectory) };
("when") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::when) };
("where") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::where_) };
("widget") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::widget) };
("width") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::width) };
("window") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::window) };
("window-target") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::headerWindowTarget) };
("windowtype") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::windowtype) };
("with-param") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::withParam) };
("wizard") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::wizard) };
("wrap") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::wrap) };
("x-dns-prefetch-control") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::headerDNSPrefetchControl) };
("content-security-policy") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::headerCSP) };
("content-security-policy-report-only") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::headerCSPReportOnly) };
("x-frame-options") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::headerXFO) };
("x-western") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_western) };
("xml") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::xml) };
("xml-stylesheet") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::xml_stylesheet) };
("xmlns") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::xmlns) };
("xmp") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::xmp) };
("xulcontentsgenerated") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::xulcontentsgenerated) };
("yes") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::yes) };
("z-index") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::z_index) };
("zero-digit") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::zeroDigit) };
("%") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::percentage) };
("A") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::A) };
("alignment-baseline") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::alignment_baseline) };
("amplitude") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::amplitude) };
("animate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::animate) };
("animateColor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::animateColor) };
("animateMotion") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::animateMotion) };
("animateTransform") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::animateTransform) };
("arithmetic") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::arithmetic) };
("atop") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::atop) };
("azimuth") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::azimuth) };
("B") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::B) };
("background-color") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::backgroundColor) };
("background-image") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::background_image) };
("baseFrequency") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::baseFrequency) };
("baseline-shift") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::baseline_shift) };
("bias") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bias) };
("caption-side") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::caption_side) };
("clip-path") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::clip_path) };
("clip-rule") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::clip_rule) };
("clipPath") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::clipPath) };
("clipPathUnits") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::clipPathUnits) };
("cm") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cm) };
("color-burn") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::colorBurn) };
("color-dodge") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::colorDodge) };
("color-interpolation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::colorInterpolation) };
("color-interpolation-filters") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::colorInterpolationFilters) };
("color-profile") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::colorProfile) };
("cursor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cursor) };
("cx") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cx) };
("cy") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cy) };
("d") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::d) };
("darken") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::darken) };
("defs") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::defs) };
("deg") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::deg) };
("desc") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::desc) };
("diffuseConstant") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::diffuseConstant) };
("dilate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dilate) };
("direction") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::direction) };
("disable") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::disable) };
("discrete") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::discrete) };
("divisor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::divisor) };
("dominant-baseline") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dominant_baseline) };
("duplicate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::duplicate) };
("dx") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dx) };
("dy") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dy) };
("edgeMode") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::edgeMode) };
("ellipse") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ellipse) };
("elevation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::elevation) };
("erode") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::erode) };
("ex") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ex) };
("exact") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::exact) };
("exclusion") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::exclusion) };
("exponent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::exponent) };
("feBlend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feBlend) };
("feColorMatrix") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feColorMatrix) };
("feComponentTransfer") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feComponentTransfer) };
("feComposite") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feComposite) };
("feConvolveMatrix") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feConvolveMatrix) };
("feDiffuseLighting") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feDiffuseLighting) };
("feDisplacementMap") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feDisplacementMap) };
("feDistantLight") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feDistantLight) };
("feDropShadow") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feDropShadow) };
("feFlood") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feFlood) };
("feFuncA") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feFuncA) };
("feFuncB") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feFuncB) };
("feFuncG") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feFuncG) };
("feFuncR") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feFuncR) };
("feGaussianBlur") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feGaussianBlur) };
("feImage") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feImage) };
("feMerge") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feMerge) };
("feMergeNode") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feMergeNode) };
("feMorphology") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feMorphology) };
("feOffset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feOffset) };
("fePointLight") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fePointLight) };
("feSpecularLighting") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feSpecularLighting) };
("feSpotLight") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feSpotLight) };
("feTile") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feTile) };
("feTurbulence") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::feTurbulence) };
("fill") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fill) };
("fill-opacity") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fill_opacity) };
("fill-rule") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fill_rule) };
("filter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::filter) };
("filterUnits") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::filterUnits) };
("float") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_float) };
("flood-color") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::flood_color) };
("flood-opacity") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::flood_opacity) };
("font-face") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::font_face) };
("font-face-format") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::font_face_format) };
("font-face-name") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::font_face_name) };
("font-face-src") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::font_face_src) };
("font-face-uri") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::font_face_uri) };
("font-family") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::font_family) };
("font-size") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::font_size) };
("font-size-adjust") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::font_size_adjust) };
("font-stretch") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::font_stretch) };
("font-style") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::font_style) };
("font-variant") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::font_variant) };
("foreignObject") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::foreignObject) };
("fractalNoise") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fractalNoise) };
("fx") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fx) };
("fy") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fy) };
("G") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::G) };
("g") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::g) };
("gamma") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::gamma) };
("generic") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::generic_) };
("glyphRef") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::glyphRef) };
("grad") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::grad) };
("gradientTransform") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::gradientTransform) };
("gradientUnits") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::gradientUnits) };
("hard-light") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::hardLight) };
("hue") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::hue) };
("hueRotate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::hueRotate) };
("identity") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::identity) };
("image-rendering") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::image_rendering) };
("in") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::in_) };
("in2") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::in2) };
("intercept") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::intercept) };
("k1") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::k1) };
("k2") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::k2) };
("k3") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::k3) };
("k4") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::k4) };
("kernelMatrix") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::kernelMatrix) };
("kernelUnitLength") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::kernelUnitLength) };
("lengthAdjust") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lengthAdjust) };
("letter-spacing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::letter_spacing) };
("lighten") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lighten) };
("lighting-color") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lighting_color) };
("limitingConeAngle") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::limitingConeAngle) };
("linear") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::linear) };
("linearGradient") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::linearGradient) };
("linearRGB") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::linearRGB) };
("list-style-type") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::list_style_type) };
("luminanceToAlpha") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::luminanceToAlpha) };
("luminosity") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::luminosity) };
("magnify") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::magnify) };
("marker") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::marker) };
("marker-end") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::marker_end) };
("marker-mid") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::marker_mid) };
("marker-start") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::marker_start) };
("markerHeight") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::markerHeight) };
("markerUnits") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::markerUnits) };
("markerWidth") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::markerWidth) };
("mask") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mask) };
("maskContentUnits") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::maskContentUnits) };
("mask-type") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mask_type) };
("maskUnits") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::maskUnits) };
("matrix") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::matrix) };
("metadata") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::metadata) };
("missing-glyph") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::missingGlyph) };
("mm") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mm) };
("mpath") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mpath) };
("noStitch") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::noStitch) };
("numOctaves") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::numOctaves) };
("multiply") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::multiply) };
("objectBoundingBox") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::objectBoundingBox) };
("offset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::offset) };
("onSVGLoad") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onSVGLoad) };
("onSVGResize") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onSVGResize) };
("onSVGScroll") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onSVGScroll) };
("onSVGUnload") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onSVGUnload) };
("onSVGZoom") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onSVGZoom) };
("onzoom") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onzoom) };
("opacity") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::opacity) };
("operator") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_operator) };
("out") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::out) };
("over") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::over) };
("overridePreserveAspectRatio") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::overridePreserveAspectRatio) };
("pad") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pad) };
("path") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::path) };
("pathLength") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pathLength) };
("patternContentUnits") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::patternContentUnits) };
("patternTransform") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::patternTransform) };
("patternUnits") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::patternUnits) };
("pc") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pc) };
("pointer-events") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pointer_events) };
("points") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::points) };
("pointsAtX") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pointsAtX) };
("pointsAtY") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pointsAtY) };
("pointsAtZ") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pointsAtZ) };
("polyline") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::polyline) };
("preserveAlpha") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::preserveAlpha) };
("preserveAspectRatio") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::preserveAspectRatio) };
("primitiveUnits") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::primitiveUnits) };
("pt") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pt) };
("px") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::px) };
("R") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::R) };
("r") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::r) };
("rad") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rad) };
("radialGradient") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::radialGradient) };
("radius") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::radius) };
("reflect") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::reflect) };
("refX") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::refX) };
("refY") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::refY) };
("requiredExtensions") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::requiredExtensions) };
("requiredFeatures") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::requiredFeatures) };
("rotate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rotate) };
("rx") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rx) };
("ry") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ry) };
("saturate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::saturate) };
("saturation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::saturation) };
("set") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::set) };
("seed") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::seed) };
("shadow") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::shadow) };
("shape-rendering") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::shape_rendering) };
("skewX") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::skewX) };
("skewY") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::skewY) };
("slope") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::slope) };
("soft-light") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::softLight) };
("spacing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::spacing) };
("spacingAndGlyphs") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::spacingAndGlyphs) };
("specularConstant") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::specularConstant) };
("specularExponent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::specularExponent) };
("spreadMethod") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::spreadMethod) };
("sRGB") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sRGB) };
("startOffset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::startOffset) };
("stdDeviation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stdDeviation) };
("stitch") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stitch) };
("stitchTiles") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stitchTiles) };
("stop-color") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stop_color) };
("stop-opacity") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stop_opacity) };
("stroke") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stroke) };
("stroke-dasharray") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stroke_dasharray) };
("stroke-dashoffset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stroke_dashoffset) };
("stroke-linecap") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stroke_linecap) };
("stroke-linejoin") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stroke_linejoin) };
("stroke-miterlimit") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stroke_miterlimit) };
("stroke-opacity") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stroke_opacity) };
("stroke-width") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stroke_width) };
("strokeWidth") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::strokeWidth) };
("surfaceScale") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::surfaceScale) };
("svg") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svg) };
("switch") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgSwitch) };
("symbol") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::symbol) };
("systemLanguage") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::systemLanguage) };
("tableValues") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tableValues) };
("targetX") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::targetX) };
("targetY") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::targetY) };
("text-anchor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::text_anchor) };
("text-rendering") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::text_rendering) };
("textLength") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::textLength) };
("textPath") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::textPath) };
("tref") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tref) };
("tspan") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tspan) };
("turbulence") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::turbulence) };
("unicode-bidi") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::unicode_bidi) };
("userSpaceOnUse") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::userSpaceOnUse) };
("view") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::view) };
("viewBox") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::viewBox) };
("viewTarget") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::viewTarget) };
("white-space") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::white_space) };
("word-spacing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::word_spacing) };
("writing-mode") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::writing_mode) };
("x") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x) };
("x1") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x1) };
("x2") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x2) };
("xChannelSelector") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::xChannelSelector) };
("xor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::xor_) };
("y") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::y) };
("y1") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::y1) };
("y2") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::y2) };
("yChannelSelector") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::yChannelSelector) };
("z") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::z) };
("zoomAndPan") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::zoomAndPan) };
("vector-effect") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::vector_effect) };
("vertical-align") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::vertical_align) };
("accumulate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::accumulate) };
("additive") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::additive) };
("attributeName") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::attributeName) };
("attributeType") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::attributeType) };
("auto-reverse") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::auto_reverse) };
("begin") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::begin) };
("beginEvent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::beginEvent) };
("by") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::by) };
("calcMode") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::calcMode) };
("CSS") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::css) };
("dur") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::dur) };
("keyPoints") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::keyPoints) };
("keySplines") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::keySplines) };
("keyTimes") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::keyTimes) };
("_mozAnimateMotionDummyAttr") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mozAnimateMotionDummyAttr) };
("onbegin") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onbegin) };
("onbeginEvent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onbeginEvent) };
("onend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onend) };
("onendEvent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onendEvent) };
("onrepeat") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onrepeat) };
("onrepeatEvent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onrepeatEvent) };
("repeatCount") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::repeatCount) };
("repeatDur") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::repeatDur) };
("repeatEvent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::repeatEvent) };
("restart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::restart) };
("to") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::to) };
("XML") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::XML) };
("abs") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::abs_) };
("accent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::accent_) };
("accentunder") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::accentunder_) };
("actiontype") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::actiontype_) };
("alignmentscope") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::alignmentscope_) };
("altimg") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::altimg_) };
("altimg-height") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::altimg_height_) };
("altimg-valign") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::altimg_valign_) };
("altimg-width") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::altimg_width_) };
("annotation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::annotation_) };
("annotation-xml") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::annotation_xml_) };
("apply") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::apply_) };
("approx") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::approx_) };
("arccos") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::arccos_) };
("arccosh") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::arccosh_) };
("arccot") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::arccot_) };
("arccoth") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::arccoth_) };
("arccsc") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::arccsc_) };
("arccsch") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::arccsch_) };
("arcsec") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::arcsec_) };
("arcsech") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::arcsech_) };
("arcsin") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::arcsin_) };
("arcsinh") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::arcsinh_) };
("arctan") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::arctan_) };
("arctanh") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::arctanh_) };
("arg") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::arg_) };
("bevelled") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bevelled_) };
("bind") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bind_) };
("bvar") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bvar_) };
("card") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::card_) };
("cartesianproduct") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cartesianproduct_) };
("cbytes") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cbytes_) };
("cd") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cd_) };
("cdgroup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cdgroup_) };
("cerror") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cerror_) };
("charalign") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::charalign_) };
("ci") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ci_) };
("closure") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::closure_) };
("cn") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cn_) };
("codomain") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::codomain_) };
("columnalign") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::columnalign_) };
("columnalignment") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::columnalignment_) };
("columnlines") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::columnlines_) };
("columnspacing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::columnspacing_) };
("columnspan") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::columnspan_) };
("columnwidth") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::columnwidth_) };
("complexes") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::complexes_) };
("compose") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::compose_) };
("condition") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::condition_) };
("conjugate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::conjugate_) };
("cos") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cos_) };
("cosh") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cosh_) };
("cot") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cot_) };
("coth") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::coth_) };
("crossout") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::crossout_) };
("csc") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::csc_) };
("csch") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::csch_) };
("cs") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cs_) };
("csymbol") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::csymbol_) };
("curl") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::curl_) };
("decimalpoint") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::decimalpoint_) };
("definitionURL") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::definitionURL_) };
("degree") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::degree_) };
("denomalign") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::denomalign_) };
("depth") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::depth_) };
("determinant") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::determinant_) };
("diff") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::diff_) };
("displaystyle") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::displaystyle_) };
("divergence") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::divergence_) };
("divide") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::divide_) };
("domain") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::domain_) };
("domainofapplication") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::domainofapplication_) };
("edge") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::edge_) };
("el") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::el_) };
("emptyset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::emptyset_) };
("eq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::eq_) };
("equalcolumns") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::equalcolumns_) };
("equalrows") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::equalrows_) };
("equivalent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::equivalent_) };
("eulergamma") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::eulergamma_) };
("exists") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::exists_) };
("exp") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::exp_) };
("exponentiale") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::exponentiale_) };
("factorial") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::factorial_) };
("factorof") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::factorof_) };
("fence") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fence_) };
("fn") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fn_) };
("fontfamily") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fontfamily_) };
("fontsize") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fontsize_) };
("fontstyle") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fontstyle_) };
("fontweight") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fontweight_) };
("forall") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::forall_) };
("framespacing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::framespacing_) };
("gcd") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::gcd_) };
("geq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::geq_) };
("groupalign") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::groupalign_) };
("gt") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::gt_) };
("ident") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ident_) };
("imaginaryi") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::imaginaryi_) };
("imaginary") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::imaginary_) };
("implies") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::implies_) };
("indentalignfirst") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::indentalignfirst_) };
("indentalign") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::indentalign_) };
("indentalignlast") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::indentalignlast_) };
("indentshiftfirst") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::indentshiftfirst_) };
("indentshift") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::indentshift_) };
("indenttarget") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::indenttarget_) };
("integers") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::integers_) };
("intersect") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::intersect_) };
("interval") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::interval_) };
("int") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::int_) };
("inverse") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::inverse_) };
("lambda") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lambda_) };
("laplacian") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::laplacian_) };
("largeop") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::largeop_) };
("lcm") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lcm_) };
("leq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::leq_) };
("limit") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::limit_) };
("linebreak") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::linebreak_) };
("linebreakmultchar") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::linebreakmultchar_) };
("linebreakstyle") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::linebreakstyle_) };
("linethickness") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::linethickness_) };
("list") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::list_) };
("ln") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ln_) };
("location") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::location_) };
("logbase") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::logbase_) };
("log") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::log_) };
("longdivstyle") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::longdivstyle_) };
("lowlimit") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lowlimit_) };
("lquote") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lquote_) };
("lspace") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lspace_) };
("lt") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lt_) };
("maction") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::maction_) };
("maligngroup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::maligngroup_) };
("malignmark") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::malignmark_) };
("mathbackground") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mathbackground_) };
("mathcolor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mathcolor_) };
("mathsize") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mathsize_) };
("mathvariant") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mathvariant_) };
("matrixrow") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::matrixrow_) };
("maxsize") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::maxsize_) };
("mean") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mean_) };
("median") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::median_) };
("menclose") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::menclose_) };
("merror") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::merror_) };
("mfenced") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mfenced_) };
("mfrac") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mfrac_) };
("mglyph") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mglyph_) };
("mi") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mi_) };
("minlabelspacing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::minlabelspacing_) };
("minsize") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::minsize_) };
("minus") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::minus_) };
("mlabeledtr") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mlabeledtr_) };
("mlongdiv") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mlongdiv_) };
("mmultiscripts") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mmultiscripts_) };
("mn") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mn_) };
("momentabout") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::momentabout_) };
("moment") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::moment_) };
("mo") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mo_) };
("movablelimits") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::movablelimits_) };
("mover") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mover_) };
("mpadded") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mpadded_) };
("mphantom") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mphantom_) };
("mprescripts") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mprescripts_) };
("mroot") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mroot_) };
("mrow") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mrow_) };
("mscarries") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mscarries_) };
("mscarry") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mscarry_) };
("msgroup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::msgroup_) };
("msline") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::msline_) };
("ms") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ms_) };
("mspace") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mspace_) };
("msqrt") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::msqrt_) };
("msrow") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::msrow_) };
("mstack") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mstack_) };
("mstyle") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mstyle_) };
("msub") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::msub_) };
("msubsup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::msubsup_) };
("msup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::msup_) };
("mtable") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mtable_) };
("mtd") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mtd_) };
("mtext") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mtext_) };
("mtr") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mtr_) };
("munder") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::munder_) };
("munderover") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::munderover_) };
("naturalnumbers") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::naturalnumbers_) };
("neq") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::neq_) };
("notanumber") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::notanumber_) };
("notation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::notation_) };
("note") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::note_) };
("notin") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::notin_) };
("notprsubset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::notprsubset_) };
("notsubset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::notsubset_) };
("numalign") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::numalign_) };
("other") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::other_) };
("outerproduct") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::outerproduct_) };
("partialdiff") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::partialdiff_) };
("piece") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::piece_) };
("piecewise") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::piecewise_) };
("pi") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pi_) };
("plus") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::plus_) };
("power") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::power_) };
("primes") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::primes_) };
("product") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::product_) };
("prsubset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::prsubset_) };
("quotient") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::quotient_) };
("rationals") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rationals_) };
("real") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::real_) };
("reals") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::reals_) };
("reln") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::reln_) };
("root") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::root_) };
("rowalign") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rowalign_) };
("rowlines") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rowlines_) };
("rowspacing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rowspacing_) };
("rquote") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rquote_) };
("rspace") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rspace_) };
("scalarproduct") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scalarproduct_) };
("schemaLocation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::schemaLocation_) };
("scriptlevel") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scriptlevel_) };
("scriptminsize") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scriptminsize_) };
("scriptsizemultiplier") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scriptsizemultiplier_) };
("scriptsize") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scriptsize_) };
("sdev") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sdev_) };
("sech") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sech_) };
("sec") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sec_) };
("selection") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::selection_) };
("selector") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::selector_) };
("semantics") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::semantics_) };
("separator") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::separator_) };
("separators") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::separators_) };
("sep") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sep_) };
("setdiff") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::setdiff_) };
("set") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::set_) };
("share") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::share_) };
("shift") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::shift_) };
("side") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::side_) };
("sinh") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sinh_) };
("sin") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sin_) };
("stackalign") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stackalign_) };
("stretchy") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stretchy_) };
("subscriptshift") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::subscriptshift_) };
("subset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::subset_) };
("superscriptshift") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::superscriptshift_) };
("symmetric") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::symmetric_) };
("tanh") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tanh_) };
("tan") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tan_) };
("tendsto") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tendsto_) };
("times") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::times_) };
("transpose") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::transpose_) };
("union") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::union_) };
("uplimit") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::uplimit_) };
("variance") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::variance_) };
("vectorproduct") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::vectorproduct_) };
("vector") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::vector_) };
("voffset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::voffset_) };
("xref") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::xref_) };
("math") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::math) };
("avg") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::avg) };
("boolean-from-string") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::booleanFromString) };
("count-non-empty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::countNonEmpty) };
("days-from-date") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::daysFromDate) };
("init") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::init) };
("instance") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::instance) };
("months") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::months) };
("now") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::now) };
("seconds") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::seconds) };
("seconds-from-dateTime") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::secondsFromDateTime) };
("onMozSwipeGestureMayStart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozSwipeGestureMayStart) };
("onMozSwipeGestureStart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozSwipeGestureStart) };
("onMozSwipeGestureUpdate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozSwipeGestureUpdate) };
("onMozSwipeGestureEnd") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozSwipeGestureEnd) };
("onMozSwipeGesture") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozSwipeGesture) };
("onMozMagnifyGestureStart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozMagnifyGestureStart) };
("onMozMagnifyGestureUpdate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozMagnifyGestureUpdate) };
("onMozMagnifyGesture") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozMagnifyGesture) };
("onMozRotateGestureStart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozRotateGestureStart) };
("onMozRotateGestureUpdate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozRotateGestureUpdate) };
("onMozRotateGesture") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozRotateGesture) };
("onMozTapGesture") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozTapGesture) };
("onMozPressTapGesture") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozPressTapGesture) };
("onMozEdgeUIStarted") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozEdgeUIStarted) };
("onMozEdgeUICanceled") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozEdgeUICanceled) };
("onMozEdgeUICompleted") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onMozEdgeUICompleted) };
("onpointerdown") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpointerdown) };
("onpointermove") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpointermove) };
("onpointerup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpointerup) };
("onpointercancel") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpointercancel) };
("onpointerover") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpointerover) };
("onpointerout") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpointerout) };
("onpointerenter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpointerenter) };
("onpointerleave") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpointerleave) };
("ongotpointercapture") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ongotpointercapture) };
("onlostpointercapture") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onlostpointercapture) };
("ondevicemotion") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondevicemotion) };
("ondeviceorientation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondeviceorientation) };
("onabsolutedeviceorientation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onabsolutedeviceorientation) };
("ondeviceproximity") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondeviceproximity) };
("onmozorientationchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmozorientationchange) };
("onuserproximity") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onuserproximity) };
("ondevicelight") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondevicelight) };
("onmozinterruptbegin") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmozinterruptbegin) };
("onmozinterruptend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmozinterruptend) };
("#cdata-section") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cdataTagName) };
("#comment") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::commentTagName) };
("#document") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::documentNodeName) };
("#document-fragment") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::documentFragmentNodeName) };
("#document-type") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::documentTypeNodeName) };
("#processing-instruction") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::processingInstructionTagName) };
("#text") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::textTagName) };
("BCTableCellFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bcTableCellFrame) };
("BlockFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::blockFrame) };
("BoxFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::boxFrame) };
("BRFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::brFrame) };
("BulletFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::bulletFrame) };
("colorControlFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::colorControlFrame) };
("ColumnSetFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::columnSetFrame) };
("ComboboxControlFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::comboboxControlFrame) };
("ComboboxDisplayFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::comboboxDisplayFrame) };
("DeckFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::deckFrame) };
("DetailsFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::detailsFrame) };
("FieldSetFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fieldSetFrame) };
("FlexContainerFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::flexContainerFrame) };
("FormControlFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::formControlFrame) };
("FrameSetFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::frameSetFrame) };
("gfxButtonControlFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::gfxButtonControlFrame) };
("GridContainerFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::gridContainerFrame) };
("HTMLButtonControlFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::HTMLButtonControlFrame) };
("HTMLCanvasFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::HTMLCanvasFrame) };
("subDocumentFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::subDocumentFrame) };
("ImageBoxFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::imageBoxFrame) };
("ImageFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::imageFrame) };
("ImageControlFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::imageControlFrame) };
("InlineFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::inlineFrame) };
("LeafBoxFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::leafBoxFrame) };
("LegendFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::legendFrame) };
("LetterFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::letterFrame) };
("LineFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lineFrame) };
("ListControlFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::listControlFrame) };
("MenuFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::menuFrame) };
("MeterFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::meterFrame) };
("MenuPopupFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::menuPopupFrame) };
("NumberControlFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::numberControlFrame) };
("ObjectFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::objectFrame) };
("PageFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pageFrame) };
("PageBreakFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pageBreakFrame) };
("PageContentFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pageContentFrame) };
("PlaceholderFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::placeholderFrame) };
("PopupSetFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::popupSetFrame) };
("ProgressFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::progressFrame) };
("CanvasFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::canvasFrame) };
("RangeFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rangeFrame) };
("RootFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rootFrame) };
("RubyBaseContainerFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rubyBaseContainerFrame) };
("RubyBaseFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rubyBaseFrame) };
("RubyFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rubyFrame) };
("RubyTextContainerFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rubyTextContainerFrame) };
("RubyTextFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rubyTextFrame) };
("ScrollFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scrollFrame) };
("ScrollbarFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scrollbarFrame) };
("SequenceFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sequenceFrame) };
("sliderFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sliderFrame) };
("TableCellFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tableCellFrame) };
("TableColFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tableColFrame) };
("TableColGroupFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tableColGroupFrame) };
("TableFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tableFrame) };
("TableWrapperFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tableWrapperFrame) };
("TableRowGroupFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tableRowGroupFrame) };
("TableRowFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tableRowFrame) };
("TextInputFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::textInputFrame) };
("TextFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::textFrame) };
("ViewportFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::viewportFrame) };
("XULLabelFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::XULLabelFrame) };
("SVGAFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgAFrame) };
("SVGClipPathFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgClipPathFrame) };
("SVGDefsFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgDefsFrame) };
("SVGFEContainerFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgFEContainerFrame) };
("SVGFEImageFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgFEImageFrame) };
("SVGFELeafFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgFELeafFrame) };
("SVGFEUnstyledLeafFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgFEUnstyledLeafFrame) };
("SVGFilterFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgFilterFrame) };
("SVGForeignObjectFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgForeignObjectFrame) };
("SVGGenericContainerFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgGenericContainerFrame) };
("SVGGFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgGFrame) };
("SVGGradientFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgGradientFrame) };
("SVGImageFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgImageFrame) };
("SVGInnerSVGFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgInnerSVGFrame) };
("SVGLinearGradientFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgLinearGradientFrame) };
("SVGMarkerFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgMarkerFrame) };
("SVGMarkerAnonChildFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgMarkerAnonChildFrame) };
("SVGMaskFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgMaskFrame) };
("SVGOuterSVGFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgOuterSVGFrame) };
("SVGOuterSVGAnonChildFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgOuterSVGAnonChildFrame) };
("SVGPathGeometryFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgPathGeometryFrame) };
("SVGPatternFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgPatternFrame) };
("SVGRadialGradientFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgRadialGradientFrame) };
("SVGStopFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgStopFrame) };
("SVGSwitchFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgSwitchFrame) };
("SVGTextFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgTextFrame) };
("SVGUseFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgUseFrame) };
("SVGViewFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::svgViewFrame) };
("VideoFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::HTMLVideoFrame) };
("onloadend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onloadend) };
("onloadstart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onloadstart) };
("onprogress") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onprogress) };
("onsuspend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onsuspend) };
("onemptied") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onemptied) };
("onstalled") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onstalled) };
("onplay") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onplay) };
("onpause") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onpause) };
("onloadedmetadata") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onloadedmetadata) };
("onloadeddata") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onloadeddata) };
("onwaiting") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onwaiting) };
("onplaying") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onplaying) };
("oncanplay") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncanplay) };
("oncanplaythrough") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncanplaythrough) };
("onseeking") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onseeking) };
("onseeked") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onseeked) };
("ontimeout") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ontimeout) };
("ontimeupdate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ontimeupdate) };
("onended") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onended) };
("onratechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onratechange) };
("ondurationchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondurationchange) };
("onvolumechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onvolumechange) };
("onaddtrack") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onaddtrack) };
("oncontrollerchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncontrollerchange) };
("oncuechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::oncuechange) };
("onenter") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onenter) };
("onexit") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onexit) };
("onencrypted") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onencrypted) };
("encrypted") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::encrypted) };
("onremovetrack") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onremovetrack) };
("loadstart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::loadstart) };
("suspend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::suspend) };
("emptied") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::emptied) };
("stalled") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::stalled) };
("play") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::play) };
("pause") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pause) };
("loadedmetadata") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::loadedmetadata) };
("loadeddata") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::loadeddata) };
("waiting") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::waiting) };
("playing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::playing) };
("seeking") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::seeking) };
("seeked") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::seeked) };
("timeupdate") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::timeupdate) };
("ended") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ended) };
("canplay") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::canplay) };
("canplaythrough") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::canplaythrough) };
("ratechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ratechange) };
("durationchange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::durationchange) };
("volumechange") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::volumechange) };
("ondataavailable") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ondataavailable) };
("onwarning") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onwarning) };
("onstart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onstart) };
("onstop") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onstop) };
("onphoto") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onphoto) };
("onactivestatechanged") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onactivestatechanged) };
("ongamepadbuttondown") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ongamepadbuttondown) };
("ongamepadbuttonup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ongamepadbuttonup) };
("ongamepadaxismove") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ongamepadaxismove) };
("ongamepadconnected") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ongamepadconnected) };
("ongamepaddisconnected") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ongamepaddisconnected) };
("AnimationsProperty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::animationsProperty) };
("AnimationsOfBeforeProperty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::animationsOfBeforeProperty) };
("AnimationsOfAfterProperty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::animationsOfAfterProperty) };
("AnimationEffectsProperty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::animationEffectsProperty) };
("AnimationsEffectsForBeforeProperty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::animationEffectsForBeforeProperty) };
("AnimationsEffectsForAfterProperty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::animationEffectsForAfterProperty) };
("CSSPseudoElementBeforeProperty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cssPseudoElementBeforeProperty) };
("CSSPseudoElementAfterProperty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cssPseudoElementAfterProperty) };
("TransitionsProperty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::transitionsProperty) };
("TransitionsOfBeforeProperty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::transitionsOfBeforeProperty) };
("TransitionsOfAfterProperty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::transitionsOfAfterProperty) };
("QuoteNodeProperty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::genConInitializerProperty) };
("LabelMouseDownPtProperty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::labelMouseDownPtProperty) };
("baseURIProperty") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::baseURIProperty) };
("lockedStyleStates") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lockedStyleStates) };
("apzCallbackTransform") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::apzCallbackTransform) };
("restylableAnonymousNode") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::restylableAnonymousNode) };
("PaintRequestTime") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::paintRequestTime) };
("ja") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Japanese) };
("zh-CN") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Chinese) };
("zh-TW") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Taiwanese) };
("zh-HK") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::HongKongChinese) };
("x-unicode") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Unicode) };
("ko") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ko) };
("zh-cn") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::zh_cn) };
("zh-hk") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::zh_hk) };
("zh-tw") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::zh_tw) };
("x-cyrillic") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_cyrillic) };
("he") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::he) };
("ar") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ar) };
("x-devanagari") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_devanagari) };
("x-tamil") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_tamil) };
("x-armn") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_armn) };
("x-beng") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_beng) };
("x-cans") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_cans) };
("x-ethi") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_ethi) };
("x-geor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_geor) };
("x-gujr") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_gujr) };
("x-guru") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_guru) };
("x-khmr") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_khmr) };
("x-knda") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_knda) };
("x-mlym") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_mlym) };
("x-orya") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_orya) };
("x-sinh") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_sinh) };
("x-telu") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_telu) };
("x-tibt") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_tibt) };
("az") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::az) };
("ba") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ba) };
("crh") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::crh) };
("el") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::el) };
("ga") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ga) };
("nl") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nl) };
("x-math") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::x_math) };
("Typing") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::TypingTxnName) };
("IME") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::IMETxnName) };
("Deleting") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::DeleteTxnName) };
("serif") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::serif) };
("sans-serif") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::sans_serif) };
("cursive") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cursive) };
("fantasy") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::fantasy) };
("monospace") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::monospace) };
("remote") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Remote) };
("_remote_id") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::RemoteId) };
("_displayport") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::DisplayPort) };
("_displayportmargins") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::DisplayPortMargins) };
("_displayportbase") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::DisplayPortBase) };
("_asyncscrolllayercreationfailed") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::AsyncScrollLayerCreationFailed) };
("forcemessagemanager") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::forcemessagemanager) };
("color-picker-available") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::color_picker_available) };
("scrollbar-start-backward") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scrollbar_start_backward) };
("scrollbar-start-forward") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scrollbar_start_forward) };
("scrollbar-end-backward") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scrollbar_end_backward) };
("scrollbar-end-forward") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scrollbar_end_forward) };
("scrollbar-thumb-proportional") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scrollbar_thumb_proportional) };
("images-in-menus") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::images_in_menus) };
("images-in-buttons") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::images_in_buttons) };
("overlay-scrollbars") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::overlay_scrollbars) };
("windows-default-theme") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::windows_default_theme) };
("mac-graphite-theme") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mac_graphite_theme) };
("mac-lion-theme") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mac_lion_theme) };
("mac-yosemite-theme") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mac_yosemite_theme) };
("windows-compositor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::windows_compositor) };
("windows-glass") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::windows_glass) };
("touch-enabled") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::touch_enabled) };
("menubar-drag") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::menubar_drag) };
("swipe-animation-enabled") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::swipe_animation_enabled) };
("physical-home-button") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::physical_home_button) };
("windows-classic") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::windows_classic) };
("windows-theme-aero") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::windows_theme_aero) };
("windows-theme-aero-lite") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::windows_theme_aero_lite) };
("windows-theme-luna-blue") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::windows_theme_luna_blue) };
("windows-theme-luna-olive") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::windows_theme_luna_olive) };
("windows-theme-luna-silver") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::windows_theme_luna_silver) };
("windows-theme-royale") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::windows_theme_royale) };
("windows-theme-zune") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::windows_theme_zune) };
("windows-theme-generic") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::windows_theme_generic) };
("-moz-color-picker-available") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_color_picker_available) };
("-moz-scrollbar-start-backward") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_scrollbar_start_backward) };
("-moz-scrollbar-start-forward") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_scrollbar_start_forward) };
("-moz-scrollbar-end-backward") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_scrollbar_end_backward) };
("-moz-scrollbar-end-forward") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_scrollbar_end_forward) };
("-moz-scrollbar-thumb-proportional") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_scrollbar_thumb_proportional) };
("-moz-images-in-menus") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_images_in_menus) };
("-moz-images-in-buttons") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_images_in_buttons) };
("-moz-overlay-scrollbars") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_overlay_scrollbars) };
("-moz-windows-default-theme") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_windows_default_theme) };
("-moz-mac-graphite-theme") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_mac_graphite_theme) };
("-moz-mac-lion-theme") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_mac_lion_theme) };
("-moz-mac-yosemite-theme") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_mac_yosemite_theme) };
("-moz-windows-compositor") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_windows_compositor) };
("-moz-windows-classic") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_windows_classic) };
("-moz-windows-glass") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_windows_glass) };
("-moz-windows-theme") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_windows_theme) };
("-moz-os-version") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_os_version) };
("-moz-touch-enabled") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_touch_enabled) };
("-moz-menubar-drag") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_menubar_drag) };
("-moz-device-pixel-ratio") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_device_pixel_ratio) };
("-moz-device-orientation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_device_orientation) };
("-moz-is-resource-document") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_is_resource_document) };
("-moz-swipe-animation-enabled") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_swipe_animation_enabled) };
("-moz-physical-home-button") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_moz_physical_home_button) };
("Back") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Back) };
("Forward") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Forward) };
("Reload") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Reload) };
("Stop") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Stop) };
("Search") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Search) };
("Bookmarks") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Bookmarks) };
("Home") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Home) };
("Clear") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Clear) };
("VolumeUp") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::VolumeUp) };
("VolumeDown") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::VolumeDown) };
("NextTrack") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::NextTrack) };
("PreviousTrack") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::PreviousTrack) };
("MediaStop") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::MediaStop) };
("PlayPause") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::PlayPause) };
("Menu") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Menu) };
("New") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::New) };
("Open") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Open) };
("Close") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Close) };
("Save") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Save) };
("Find") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Find) };
("Help") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Help) };
("Print") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::Print) };
("SendMail") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::SendMail) };
("ForwardMail") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ForwardMail) };
("ReplyToMail") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::ReplyToMail) };
("mouseWheel") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mouseWheel) };
("pixels") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pixels) };
("lines") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lines) };
("pages") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::pages) };
("scrollbars") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::scrollbars) };
("other") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::other) };
("apz") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::apz) };
("restore") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::restore) };
("alert") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::alert) };
("alertdialog") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::alertdialog) };
("application") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::application) };
("aria-activedescendant") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_activedescendant) };
("aria-atomic") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_atomic) };
("aria-autocomplete") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_autocomplete) };
("aria-busy") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_busy) };
("aria-checked") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_checked) };
("aria-colcount") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_colcount) };
("aria-colindex") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_colindex) };
("aria-controls") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_controls) };
("aria-describedby") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_describedby) };
("aria-disabled") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_disabled) };
("aria-dropeffect") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_dropeffect) };
("aria-expanded") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_expanded) };
("aria-flowto") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_flowto) };
("aria-grabbed") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_grabbed) };
("aria-haspopup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_haspopup) };
("aria-hidden") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_hidden) };
("aria-invalid") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_invalid) };
("aria-label") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_label) };
("aria-labelledby") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_labelledby) };
("aria-level") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_level) };
("aria-live") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_live) };
("aria-modal") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_modal) };
("aria-multiline") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_multiline) };
("aria-multiselectable") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_multiselectable) };
("aria-orientation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_orientation) };
("aria-owns") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_owns) };
("aria-posinset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_posinset) };
("aria-pressed") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_pressed) };
("aria-readonly") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_readonly) };
("aria-relevant") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_relevant) };
("aria-required") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_required) };
("aria-rowcount") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_rowcount) };
("aria-rowindex") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_rowindex) };
("aria-selected") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_selected) };
("aria-setsize") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_setsize) };
("aria-sort") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_sort) };
("aria-valuenow") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_valuenow) };
("aria-valuemin") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_valuemin) };
("aria-valuemax") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_valuemax) };
("aria-valuetext") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::aria_valuetext) };
("AreaFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::AreaFrame) };
("auto-generated") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::auto_generated) };
("banner") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::banner) };
("checkable") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::checkable) };
("choices") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::choices) };
("columnheader") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::columnheader) };
("complementary") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::complementary) };
("container-atomic") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::containerAtomic) };
("container-busy") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::containerBusy) };
("container-live") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::containerLive) };
("container-live-role") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::containerLiveRole) };
("container-relevant") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::containerRelevant) };
("contentinfo") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::contentinfo) };
("cycles") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::cycles) };
("datatable") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::datatable) };
("event-from-input") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::eventFromInput) };
("grammar") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::grammar) };
("gridcell") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::gridcell) };
("heading") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::heading) };
("hitregion") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::hitregion) };
("InlineBlockFrame") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::InlineBlockFrame) };
("inline") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::inlinevalue) };
("invalid") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::invalid) };
("item") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::item) };
("itemset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::itemset) };
("line-number") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::lineNumber) };
("linkedpanel") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::linkedPanel) };
("live") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::live) };
("menuitemcheckbox") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::menuitemcheckbox) };
("menuitemradio") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::menuitemradio) };
("mixed") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::mixed) };
("multiline") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::multiline) };
("navigation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::navigation) };
("polite") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::polite) };
("posinset") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::posinset) };
("presentation") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::presentation) };
("progressbar") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::progressbar) };
("region") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::region) };
("rowgroup") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rowgroup) };
("rowheader") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::rowheader) };
("search") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::search) };
("searchbox") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::searchbox) };
("select1") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::select1) };
("setsize") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::setsize) };
("spelling") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::spelling) };
("spinbutton") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::spinbutton) };
("status") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::status) };
("switch") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_switch) };
("table-cell-index") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tableCellIndex) };
("tablist") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::tablist) };
("text-indent") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::textIndent) };
("text-input-type") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::textInputType) };
("text-line-through-color") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::textLineThroughColor) };
("text-line-through-style") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::textLineThroughStyle) };
("text-position") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::textPosition) };
("text-underline-color") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::textUnderlineColor) };
("text-underline-style") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::textUnderlineStyle) };
("timer") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::timer) };
("toolbarname") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::toolbarname) };
("toolbarseparator") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::toolbarseparator) };
("toolbarspacer") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::toolbarspacer) };
("toolbarspring") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::toolbarspring) };
("treegrid") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::treegrid) };
("undefined") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::_undefined) };
("xml-roles") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::xmlroles) };
("close-fence") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::close_fence) };
("denominator") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::denominator) };
("numerator") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::numerator) };
("open-fence") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::open_fence) };
("overscript") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::overscript) };
("presubscript") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::presubscript) };
("presuperscript") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::presuperscript) };
("root-index") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::root_index) };
("subscript") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::subscript) };
("superscript") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::superscript) };
("underscript") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::underscript) };
("onaudiostart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onaudiostart) };
("onaudioend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onaudioend) };
("onsoundstart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onsoundstart) };
("onsoundend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onsoundend) };
("onspeechstart") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onspeechstart) };
("onspeechend") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onspeechend) };
("onresult") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onresult) };
("onnomatch") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onnomatch) };
("onresume") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onresume) };
("onmark") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onmark) };
("onboundary") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::onboundary) };
("vr-state") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::vr_state) };
("usercontextid") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::usercontextid) };
("http://www.w3.org/2000/xmlns/") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nsuri_xmlns) };
("http://www.w3.org/XML/1998/namespace") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nsuri_xml) };
("http://www.w3.org/1999/xhtml") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nsuri_xhtml) };
("http://www.w3.org/1999/xlink") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nsuri_xlink) };
("http://www.w3.org/1999/XSL/Transform") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nsuri_xslt) };
("http://www.mozilla.org/xbl") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nsuri_xbl) };
("http://www.w3.org/1998/Math/MathML") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nsuri_mathml) };
("http://www.w3.org/1999/02/22-rdf-syntax-ns#") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nsuri_rdf) };
("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nsuri_xul) };
("http://www.w3.org/2000/svg") => { $crate::atom_macro::unsafe_atom_from_static($crate::atom_macro::nsuri_svg) };
}
