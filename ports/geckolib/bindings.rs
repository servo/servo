/* automatically generated by rust-bindgen */

pub type int64_t = ::libc::c_longlong;
pub type uint64_t = ::libc::c_ulonglong;
pub type int_least64_t = int64_t;
pub type uint_least64_t = uint64_t;
pub type int_fast64_t = int64_t;
pub type uint_fast64_t = uint64_t;
pub type int32_t = ::libc::c_int;
pub type uint32_t = ::libc::c_uint;
pub type int_least32_t = int32_t;
pub type uint_least32_t = uint32_t;
pub type int_fast32_t = int32_t;
pub type uint_fast32_t = uint32_t;
pub type int16_t = ::libc::c_short;
pub type uint16_t = ::libc::c_ushort;
pub type int_least16_t = int16_t;
pub type uint_least16_t = uint16_t;
pub type int_fast16_t = int16_t;
pub type uint_fast16_t = uint16_t;
pub type int8_t = ::libc::c_char;
pub type uint8_t = ::libc::c_uchar;
pub type int_least8_t = int8_t;
pub type uint_least8_t = uint8_t;
pub type int_fast8_t = int8_t;
pub type uint_fast8_t = uint8_t;
pub type intptr_t = int64_t;
pub type uintptr_t = uint64_t;
pub type intmax_t = ::libc::c_long;
pub type uintmax_t = ::libc::c_ulong;
pub type Enum_NodeType = ::libc::c_uint;
pub const ELEMENT_NODE: ::libc::c_uint = 1;
pub const ATTRIBUTE_NODE: ::libc::c_uint = 2;
pub const TEXT_NODE: ::libc::c_uint = 3;
pub const CDATA_SECTION_NODE: ::libc::c_uint = 4;
pub const ENTITY_REFERENCE_NODE: ::libc::c_uint = 5;
pub const ENTITY_NODE: ::libc::c_uint = 6;
pub const PROCESSING_INSTRUCTION_NODE: ::libc::c_uint = 7;
pub const COMMENT_NODE: ::libc::c_uint = 8;
pub const DOCUMENT_NODE: ::libc::c_uint = 9;
pub const DOCUMENT_TYPE_NODE: ::libc::c_uint = 10;
pub const DOCUMENT_FRAGMENT_NODE: ::libc::c_uint = 11;
pub const NOTATION_NODE: ::libc::c_uint = 12;
pub enum Struct_RawGeckoNode { }
pub type RawGeckoNode = Struct_RawGeckoNode;
pub enum Struct_RawGeckoElement { }
pub type RawGeckoElement = Struct_RawGeckoElement;
pub enum Struct_RawGeckoDocument { }
pub type RawGeckoDocument = Struct_RawGeckoDocument;
pub enum Struct_ServoNodeData { }
pub type ServoNodeData = Struct_ServoNodeData;
pub enum Struct_ServoArcStyleSheet { }
pub type ServoArcStyleSheet = Struct_ServoArcStyleSheet;
extern "C" {
    pub fn Gecko_ElementState(element: *mut RawGeckoElement) -> uint8_t;
    pub fn Gecko_GetAttrAsUTF8(element: *mut RawGeckoElement, ns: *const uint8_t,
                               name: *const uint8_t, length: *mut uint32_t)
     -> *const ::libc::c_char;
    pub fn Gecko_ChildrenCount(node: *mut RawGeckoNode) -> uint32_t;
    pub fn Gecko_GetDocumentElement(document: *mut RawGeckoDocument)
     -> *mut RawGeckoElement;
    pub fn Gecko_GetFirstChild(node: *mut RawGeckoNode) -> *mut RawGeckoNode;
    pub fn Gecko_GetLastChild(node: *mut RawGeckoNode) -> *mut RawGeckoNode;
    pub fn Gecko_GetPrevSibling(node: *mut RawGeckoNode) -> *mut RawGeckoNode;
    pub fn Gecko_GetNextSibling(node: *mut RawGeckoNode) -> *mut RawGeckoNode;
    pub fn Gecko_GetNodeData(node: *mut RawGeckoNode) -> *mut ServoNodeData;
    pub fn Gecko_GetParentNode(node: *mut RawGeckoNode) -> *mut RawGeckoNode;
    pub fn Gecko_LocalName(element: *mut RawGeckoElement, length: *mut uint32_t)
     -> *const uint16_t;
    pub fn Gecko_IsHTMLElementInHTMLDocument(element: *mut RawGeckoElement)
     -> ::libc::c_int;
    pub fn Gecko_IsLink(element: *mut RawGeckoElement) -> ::libc::c_int;
    pub fn Gecko_IsTextNode(node: *mut RawGeckoNode) -> ::libc::c_int;
    pub fn Gecko_IsVisitedLink(element: *mut RawGeckoElement) -> ::libc::c_int;
    pub fn Gecko_IsUnvisitedLink(element: *mut RawGeckoElement) -> ::libc::c_int;
    pub fn Gecko_Namespace(element: *mut RawGeckoElement, length: *mut uint32_t)
     -> *const uint16_t;
    pub fn Gecko_NodeIsElement(node: *mut RawGeckoNode) -> ::libc::c_int;
    pub fn Gecko_SetNodeData(node: *mut RawGeckoNode,
                                  data: *mut ServoNodeData) -> ();
    pub fn Servo_RestyleDocument(aDoc: *mut RawGeckoDocument) -> ();
    pub fn Servo_DropNodeData(data: *mut ServoNodeData) -> ();
    pub fn Servo_StylesheetFromUTF8Bytes(bytes: *const uint8_t,
                                         length: uint32_t)
      -> *mut ServoArcStyleSheet;
    pub fn Servo_DropStylesheet(sheet: *mut ServoArcStyleSheet) -> ();
}
