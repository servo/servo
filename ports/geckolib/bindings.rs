/* automatically generated by rust-bindgen */

pub type int64_t = i64;
pub type uint64_t = u64;
pub type int_least64_t = int64_t;
pub type uint_least64_t = uint64_t;
pub type int_fast64_t = int64_t;
pub type uint_fast64_t = uint64_t;
pub type int32_t = i32;
pub type uint32_t = u32;
pub type int_least32_t = int32_t;
pub type uint_least32_t = uint32_t;
pub type int_fast32_t = int32_t;
pub type uint_fast32_t = uint32_t;
pub type int16_t = i16;
pub type uint16_t = u16;
pub type int_least16_t = int16_t;
pub type uint_least16_t = uint16_t;
pub type int_fast16_t = int16_t;
pub type uint_fast16_t = uint16_t;
pub type int8_t = ::libc::c_char;
pub type uint8_t = u8;
pub type int_least8_t = int8_t;
pub type uint_least8_t = uint8_t;
pub type int_fast8_t = int8_t;
pub type uint_fast8_t = uint8_t;
pub type intptr_t = int64_t;
pub type uintptr_t = uint64_t;
pub type intmax_t = ::libc::c_long;
pub type uintmax_t = ::libc::c_ulong;
pub enum nsINode { }
pub type RawGeckoNode = nsINode;
pub enum Element { }
pub type RawGeckoElement = Element;
pub enum nsIDocument { }
pub type RawGeckoDocument = nsIDocument;
pub enum ServoNodeData { }
pub enum RawServoStyleSheet { }
pub enum RawServoStyleSet { }
extern "C" {
    pub fn Gecko_ChildrenCount(node: *mut RawGeckoNode) -> uint32_t;
    pub fn Gecko_NodeIsElement(node: *mut RawGeckoNode) -> bool;
    pub fn Gecko_GetParentNode(node: *mut RawGeckoNode) -> *mut RawGeckoNode;
    pub fn Gecko_GetFirstChild(node: *mut RawGeckoNode) -> *mut RawGeckoNode;
    pub fn Gecko_GetLastChild(node: *mut RawGeckoNode) -> *mut RawGeckoNode;
    pub fn Gecko_GetPrevSibling(node: *mut RawGeckoNode) -> *mut RawGeckoNode;
    pub fn Gecko_GetNextSibling(node: *mut RawGeckoNode) -> *mut RawGeckoNode;
    pub fn Gecko_GetParentElement(element: *mut RawGeckoElement)
     -> *mut RawGeckoElement;
    pub fn Gecko_GetFirstChildElement(element: *mut RawGeckoElement)
     -> *mut RawGeckoElement;
    pub fn Gecko_GetLastChildElement(element: *mut RawGeckoElement)
     -> *mut RawGeckoElement;
    pub fn Gecko_GetPrevSiblingElement(element: *mut RawGeckoElement)
     -> *mut RawGeckoElement;
    pub fn Gecko_GetNextSiblingElement(element: *mut RawGeckoElement)
     -> *mut RawGeckoElement;
    pub fn Gecko_GetDocumentElement(document: *mut RawGeckoDocument)
     -> *mut RawGeckoElement;
    pub fn Gecko_ElementState(element: *mut RawGeckoElement) -> uint8_t;
    pub fn Gecko_IsHTMLElementInHTMLDocument(element: *mut RawGeckoElement)
     -> bool;
    pub fn Gecko_IsLink(element: *mut RawGeckoElement) -> bool;
    pub fn Gecko_IsTextNode(node: *mut RawGeckoNode) -> bool;
    pub fn Gecko_IsVisitedLink(element: *mut RawGeckoElement) -> bool;
    pub fn Gecko_IsUnvisitedLink(element: *mut RawGeckoElement) -> bool;
    pub fn Gecko_IsRootElement(element: *mut RawGeckoElement) -> bool;
    pub fn Gecko_GetNodeData(node: *mut RawGeckoNode) -> *mut ServoNodeData;
    pub fn Gecko_SetNodeData(node: *mut RawGeckoNode,
                             data: *mut ServoNodeData);
    pub fn Servo_DropNodeData(data: *mut ServoNodeData);
    pub fn Servo_StylesheetFromUTF8Bytes(bytes: *const uint8_t,
                                         length: uint32_t)
     -> *mut RawServoStyleSheet;
    pub fn Servo_ReleaseStylesheet(sheet: *mut RawServoStyleSheet);
    pub fn Servo_AppendStyleSheet(sheet: *mut RawServoStyleSheet,
                                  set: *mut RawServoStyleSet);
    pub fn Servo_PrependStyleSheet(sheet: *mut RawServoStyleSheet,
                                   set: *mut RawServoStyleSet);
    pub fn Servo_RemoveStyleSheet(sheet: *mut RawServoStyleSheet,
                                  set: *mut RawServoStyleSet);
    pub fn Servo_StyleSheetHasRules(sheet: *mut RawServoStyleSheet) -> bool;
    pub fn Servo_InitStyleSet() -> *mut RawServoStyleSet;
    pub fn Servo_DropStyleSet(set: *mut RawServoStyleSet);
    pub fn Gecko_GetAttrAsUTF8(element: *mut RawGeckoElement,
                               ns: *const uint8_t, name: *const uint8_t,
                               length: *mut uint32_t)
     -> *const ::libc::c_char;
    pub fn Gecko_LocalName(element: *mut RawGeckoElement,
                           length: *mut uint32_t) -> *const uint16_t;
    pub fn Gecko_Namespace(element: *mut RawGeckoElement,
                           length: *mut uint32_t) -> *const uint16_t;
    pub fn Servo_RestyleDocument(doc: *mut RawGeckoDocument,
                                 set: *mut RawServoStyleSet);
}
