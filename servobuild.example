# Copy this file to .servobuild in the Servo root directory
# Be sure to set the cache-dir correctly, otherwise extra
# copies of the Rust compiler may get downloaded

# Paths starting with "./" are relative to the repo root

# Tool options
[tools]
# Where Rust compiler and other downloads will be stored.  Can be
# shared by multiple Servo repositories.  Defaults to <servo-repo>/.servo
cache-dir = "./.servo"

# Where Cargo stores all of its clones  Defaults to <servo-repo>/.cargo
cargo-home-dir = "./.cargo"

# If system-rust is true, will use rustc/rustdoc from the path, or if
# rust-root is specified, will make sure that rust-root is in the path
# when building. Similarly for Cargo. This takes care of PATH as well as
# [DY]LD_LIBRARY_PATH.
# rust-root and cargo-root default to <servo-repo>/
system-rust = false
#rust-root = "/path/to/rust"
system-cargo = false
#cargo-root = "/path/to/cargo"

# If rustc-with-gold is true, will try to find and use gold linker with rustc.
# Defaults to true
rustc-with-gold = true

[build]
# Set "mode = dev" or use `mach build --dev` to build the project with warning.
# or Set "mode = release" or use `mach build --release` for optimized build.
# Defaults to prompting before building
#mode = "dev"
# Set "android = true" or use `mach build --android` to build the Android app.
android = false
# Set "debug-mozjs" or use `mach build --debug-mozjs` to build a debug spidermonkey.
debug-mozjs = false
# Set to the path to your ccache binary to enable caching of compiler outputs
#ccache = "/usr/local/bin/ccache"

# Android information
[android]
# Defaults to the value of $ANDROID_SDK, $ANDROID_NDK, $ANDROID_TOOLCHAIN, $ANDROID_PLATFORM respectively
#sdk = "/opt/android-sdk"
#ndk = "/opt/android-ndk"
#toolchain = "/opt/android-toolchain"
#platform = "android-18"
