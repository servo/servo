# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# DOM Bindings Configuration.
#
# The WebIDL interfaces are defined in dom/webidls. For each such interface,
# there is a corresponding entry in the configuration table below.
# The configuration table maps each interface name to a |descriptor|.
#
# Valid fields for all descriptors:
#   * createGlobal: True for global objects.
#   * outerObjectHook: string to use in place of default value for outerObject and thisObject
#                      JS class hooks

DOMInterfaces = {

'Attr': {},
'AudioBuffer': {},
'AttrList': {},
'Blob': {},
'CanvasRenderingContext2D': {},
'CharacterData': {},
'ClientRect': {},
'ClientRectList': {},
'Comment': {},
'Console': {},
'Document': {},
'DocumentFragment': {},
'DocumentType': {},
'DOMException': {},
'DOMImplementation': {},
'DOMParser': {},
'Element': {},
'Event': {},
'EventListener': {
    'nativeType': 'EventListenerBinding::EventListener',
},
'EventTarget': {},
'FormData': {},
'HTMLAnchorElement': {},
'HTMLAppletElement': {},
'HTMLAreaElement': {},
'HTMLAudioElement': {},
'HTMLButtonElement': {},
'HTMLBaseElement': {},
'HTMLBodyElement': {},
'HTMLBRElement': {},
'HTMLCanvasElement': {},
'HTMLCollection': {},
'HTMLDataElement': {},
'HTMLDivElement': {},
'HTMLDataListElement': {},
'HTMLDirectoryElement': {},
'HTMLDListElement': {},
'HTMLElement': {},
'HTMLEmbedElement': {},
'HTMLFieldSetElement': {},
'HTMLFontElement': {},
'HTMLFormElement': {},
'HTMLFrameElement': {},
'HTMLFrameSetElement': {},
'HTMLHeadElement': {},
'HTMLHeadingElement': {},
'HTMLHtmlElement': {},
'HTMLHRElement': {},
'HTMLIFrameElement': {},
'HTMLImageElement': {},
'HTMLInputElement': {},
'HTMLLabelElement': {},
'HTMLLegendElement': {},
'HTMLLIElement': {},
'HTMLLinkElement': {},
'HTMLMapElement': {},
'HTMLMainElement': {},
'HTMLMediaElement': {},
'HTMLMetaElement': {},
'HTMLMeterElement': {},
'HTMLModElement': {},
'HTMLObjectElement': {},
'HTMLOListElement': {},
'HTMLOptGroupElement': {},
'HTMLOptionElement': {},
'HTMLOutputElement': {},
'HTMLParagraphElement': {},
'HTMLParamElement': {},
'HTMLPreElement': {},
'HTMLProgressElement': {},
'HTMLQuoteElement': {},
'HTMLScriptElement': {},
'HTMLSelectElement': {},
'HTMLSourceElement': {},
'HTMLSpanElement': {},
'HTMLStyleElement': {},
'HTMLTableCaptionElement': {},
'HTMLTableElement': {},
'HTMLTableCellElement': {},
'HTMLTableDataCellElement': {},
'HTMLTableHeaderCellElement': {},
'HTMLTableColElement': {},
'HTMLTableRowElement': {},
'HTMLTableSectionElement': {},
'HTMLTemplateElement': {},
'HTMLTextAreaElement': {},
'HTMLTimeElement': {},
'HTMLTitleElement': {},
'HTMLTrackElement': {},
'HTMLUListElement': {},
'HTMLVideoElement': {},
'HTMLUnknownElement': {},
'Location': {},
'MouseEvent': {},
'Navigator': {},
'Node': {},
'NodeList': {},
'Performance': {},
'PerformanceTiming': {},
'ProcessingInstruction': {},
'ProgressEvent': {},
'Text': {},
'UIEvent': {},
'ValidityState': {},
'Window': {
    'createGlobal': True,
    'outerObjectHook': 'Some(bindings::utils::outerize_global)',
},
'XMLHttpRequest': {},
'XMLHttpRequestEventTarget': {},
'XMLHttpRequestUpload': {},

#FIXME(jdm): This should be 'register': False, but then we don't generate enum types
'TestBinding': {},

}

