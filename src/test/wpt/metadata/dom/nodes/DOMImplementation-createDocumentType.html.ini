[DOMImplementation-createDocumentType.html]
  type: testharness
  [createDocumentType("foo", "", "") should work]
    expected: FAIL

  [createDocumentType("1foo", "", "") should throw INVALID_CHARACTER_ERR]
    expected: FAIL

  [createDocumentType("foo1", "", "") should work]
    expected: FAIL

  [createDocumentType("f1oo", "", "") should work]
    expected: FAIL

  [createDocumentType("@foo", "", "") should throw INVALID_CHARACTER_ERR]
    expected: FAIL

  [createDocumentType("foo@", "", "") should throw INVALID_CHARACTER_ERR]
    expected: FAIL

  [createDocumentType("f@oo", "", "") should throw INVALID_CHARACTER_ERR]
    expected: FAIL

  [createDocumentType("f:oo", "", "") should work]
    expected: FAIL

  [createDocumentType(":foo", "", "") should throw NAMESPACE_ERR]
    expected: FAIL

  [createDocumentType("foo:", "", "") should throw NAMESPACE_ERR]
    expected: FAIL

  [createDocumentType("foo", "foo", "") should work]
    expected: FAIL

  [createDocumentType("foo", "", "foo") should work]
    expected: FAIL

  [createDocumentType("foo", "f\'oo", "") should work]
    expected: FAIL

  [createDocumentType("foo", "", "f\'oo") should work]
    expected: FAIL

  [createDocumentType("foo", "f\\"oo", "") should work]
    expected: FAIL

  [createDocumentType("foo", "", "f\\"oo") should work]
    expected: FAIL

  [createDocumentType("foo", "f\'o\\"o", "") should work]
    expected: FAIL

  [createDocumentType("foo", "", "f\'o\\"o") should work]
    expected: FAIL

  [createDocumentType("foo", "foo>", "") should work]
    expected: FAIL

  [createDocumentType("foo", "", "foo>") should work]
    expected: FAIL

