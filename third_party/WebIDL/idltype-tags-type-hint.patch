diff --git a/third_party/WebIDL/WebIDL.py b/third_party/WebIDL/WebIDL.py
index e1e8340fc8b..b9ccd53f5f4 100644
--- a/third_party/WebIDL/WebIDL.py
+++ b/third_party/WebIDL/WebIDL.py
@@ -12,6 +12,7 @@ import string
 import traceback
 from collections import OrderedDict, defaultdict
 from itertools import chain
+from typing import Protocol
 
 from ply import lex, yacc
 
@@ -43,9 +44,14 @@ def parseInt(literal):
     return value * sign
 
 
+class CustomEnum(Protocol):
+    attrs: tuple[str, ...]
+
+    def __getattr__(self, name: str) -> int: ...
+
 # This is surprisingly faster than using the enum.IntEnum type (which doesn't
 # support 'base' anyway)
-def enum(*names: str, base = None):
+def enum(*names: str, base = None) -> CustomEnum:
     if base is not None:
         names = base.attrs + names
 
