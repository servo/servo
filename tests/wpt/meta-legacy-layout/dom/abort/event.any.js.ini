[event.any.html]
  type: testharness
  [AbortController() basics]
    expected: FAIL

  [AbortController abort() should fire event synchronously]
    expected: FAIL

  [controller.signal should always return the same object]
    expected: FAIL

  [controller.abort() should do nothing the second time it is called]
    expected: FAIL

  [event handler should not be called if added after controller.abort()]
    expected: FAIL

  [the abort event should have the right properties]
    expected: FAIL

  [AbortController abort(reason) should set signal.reason]
    expected: FAIL

  [aborting AbortController without reason creates an "AbortError" DOMException]
    expected: FAIL

  [AbortController abort(undefined) creates an "AbortError" DOMException]
    expected: FAIL

  [AbortController abort(null) should set signal.reason]
    expected: FAIL

  [static aborting signal should have right properties]
    expected: FAIL

  [static aborting signal with reason should set signal.reason]
    expected: FAIL

  [throwIfAborted() should throw abort.reason if signal aborted]
    expected: FAIL

  [throwIfAborted() should throw primitive abort.reason if signal aborted]
    expected: FAIL

  [throwIfAborted() should not throw if signal not aborted]
    expected: FAIL

  [AbortSignal.reason returns the same DOMException]
    expected: FAIL

  [AbortController.signal.reason returns the same DOMException]
    expected: FAIL


[event.any.worker.html]
  type: testharness
  [AbortController() basics]
    expected: FAIL

  [AbortController abort() should fire event synchronously]
    expected: FAIL

  [controller.signal should always return the same object]
    expected: FAIL

  [controller.abort() should do nothing the second time it is called]
    expected: FAIL

  [event handler should not be called if added after controller.abort()]
    expected: FAIL

  [the abort event should have the right properties]
    expected: FAIL

  [AbortController abort(reason) should set signal.reason]
    expected: FAIL

  [aborting AbortController without reason creates an "AbortError" DOMException]
    expected: FAIL

  [AbortController abort(undefined) creates an "AbortError" DOMException]
    expected: FAIL

  [AbortController abort(null) should set signal.reason]
    expected: FAIL

  [static aborting signal should have right properties]
    expected: FAIL

  [static aborting signal with reason should set signal.reason]
    expected: FAIL

  [throwIfAborted() should throw abort.reason if signal aborted]
    expected: FAIL

  [throwIfAborted() should throw primitive abort.reason if signal aborted]
    expected: FAIL

  [throwIfAborted() should not throw if signal not aborted]
    expected: FAIL

  [AbortSignal.reason returns the same DOMException]
    expected: FAIL

  [AbortController.signal.reason returns the same DOMException]
    expected: FAIL
