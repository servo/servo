[svgfeblendelement-mode-001.html]
  [SVGFEBlendElement.prototype.mode, getter, numeric value for "color-dodge"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, setter, invalid value]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, setter, numeric value for "hue"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, getter, numeric value for "overlay"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, getter, numeric value for "hue"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, getter, numeric value for "normal"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, setter, numeric value for "hard-light"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, setter, numeric value for "multiply"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, setter, numeric value for "color"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, getter, numeric value for "saturation"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, getter, numeric value for "multiply"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, setter, numeric value for "luminosity"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, setter, numeric value for "difference"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, getter, numeric value for "difference"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, setter, numeric value for "color-dodge"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, getter, numeric value for "screen"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, setter, numeric value for "soft-light"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, getter, numeric value for "exclusion"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, getter, numeric value for "color"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, getter, invalid value]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, getter, initial value]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, setter, numeric value for "saturation"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, getter, numeric value for "color-burn"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, setter, numeric value for "color-burn"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, getter, numeric value for "soft-light"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, getter, numeric value for "hard-light"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, getter, numeric value for "darken"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, setter, numeric value for "exclusion"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, setter, numeric value for "normal"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, getter, numeric value for "luminosity"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, setter, numeric value for "lighten"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, getter, numeric value for "lighten"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, setter, numeric value for "darken"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, setter, numeric value for "overlay"]
    expected: FAIL

  [SVGFEBlendElement.prototype.mode, setter, numeric value for "screen"]
    expected: FAIL

