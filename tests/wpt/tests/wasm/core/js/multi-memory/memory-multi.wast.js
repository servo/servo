(function memory_multi_wast_js() {

// memory-multi.wast:5
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x83\x80\x80\x80\x00\x02\x00\x00\x05\x85\x80\x80\x80\x00\x02\x00\x01\x00\x01\x07\x91\x80\x80\x80\x00\x02\x05\x69\x6e\x69\x74\x31\x00\x00\x05\x69\x6e\x69\x74\x32\x00\x01\x0c\x81\x80\x80\x80\x00\x01\x0a\xae\x80\x80\x80\x00\x02\x91\x80\x80\x80\x00\x00\x41\x01\x41\x00\x41\x04\xfc\x08\x00\x00\x41\x01\x28\x02\x00\x0b\x92\x80\x80\x80\x00\x00\x41\x01\x41\x04\x41\x04\xfc\x08\x00\x01\x41\x01\x28\x42\x01\x00\x0b\x0b\x8b\x80\x80\x80\x00\x01\x01\x08\x01\x00\x00\x00\x02\x00\x00\x00", "memory-multi.wast:5");

// memory-multi.wast:5
let $1 = instance($$1);

// memory-multi.wast:22
assert_return(() => call($1, "init1", []), "memory-multi.wast:22", 1);

// memory-multi.wast:23
assert_return(() => call($1, "init2", []), "memory-multi.wast:23", 2);

// memory-multi.wast:26
let $$2 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x83\x80\x80\x80\x00\x02\x00\x00\x05\x85\x80\x80\x80\x00\x02\x00\x01\x00\x01\x07\x91\x80\x80\x80\x00\x02\x05\x66\x69\x6c\x6c\x31\x00\x00\x05\x66\x69\x6c\x6c\x32\x00\x01\x0a\xac\x80\x80\x80\x00\x02\x90\x80\x80\x80\x00\x00\x41\x01\x41\x01\x41\x04\xfc\x0b\x00\x41\x01\x28\x02\x00\x0b\x91\x80\x80\x80\x00\x00\x41\x01\x41\x02\x41\x02\xfc\x0b\x01\x41\x01\x28\x42\x01\x00\x0b", "memory-multi.wast:26");

// memory-multi.wast:26
let $2 = instance($$2);

// memory-multi.wast:41
assert_return(() => call($2, "fill1", []), "memory-multi.wast:41", 16_843_009);

// memory-multi.wast:42
assert_return(() => call($2, "fill2", []), "memory-multi.wast:42", 514);
reinitializeRegistry();
})();
