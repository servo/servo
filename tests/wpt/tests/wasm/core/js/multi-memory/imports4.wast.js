(function imports4_wast_js() {

// imports4.wast:1
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x05\x86\x80\x80\x80\x00\x02\x00\x02\x01\x02\x04\x07\x9d\x80\x80\x80\x00\x02\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x00\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x01", "imports4.wast:1");

// imports4.wast:1
let $1 = instance($$1);

// imports4.wast:6
register("test", $1)

// imports4.wast:8
let $$2 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x7f\x01\x7f\x02\xa8\x80\x80\x80\x00\x02\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x00\x03\x03\x82\x80\x80\x80\x00\x01\x00\x07\x88\x80\x80\x80\x00\x01\x04\x67\x72\x6f\x77\x00\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x20\x00\x40\x01\x0b", "imports4.wast:8");

// imports4.wast:8
let $2 = instance($$2);

// imports4.wast:13
assert_return(() => call($2, "grow", [0]), "imports4.wast:13", 1);

// imports4.wast:14
assert_return(() => call($2, "grow", [1]), "imports4.wast:14", 1);

// imports4.wast:15
assert_return(() => call($2, "grow", [0]), "imports4.wast:15", 2);

// imports4.wast:16
assert_return(() => call($2, "grow", [1]), "imports4.wast:16", -1);

// imports4.wast:17
assert_return(() => call($2, "grow", [0]), "imports4.wast:17", 2);

// imports4.wast:19
let $$3 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x05\x87\x80\x80\x80\x00\x03\x00\x00\x00\x00\x00\x01\x07\x91\x80\x80\x80\x00\x02\x06\x6d\x65\x6d\x6f\x72\x79\x02\x02\x04\x67\x72\x6f\x77\x00\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x41\x01\x40\x02\x0b", "imports4.wast:19");
let $Mgm = $$3;

// imports4.wast:19
let $3 = instance($Mgm);
let Mgm = $3;

// imports4.wast:25
register("grown-memory", Mgm)

// imports4.wast:26
assert_return(() => call(Mgm, "grow", []), "imports4.wast:26", 1);

// imports4.wast:28
let $$4 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x02\xab\x80\x80\x80\x00\x02\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x00\x01\x0c\x67\x72\x6f\x77\x6e\x2d\x6d\x65\x6d\x6f\x72\x79\x06\x6d\x65\x6d\x6f\x72\x79\x02\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x05\x85\x80\x80\x80\x00\x02\x00\x00\x00\x00\x07\x91\x80\x80\x80\x00\x02\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x04\x67\x72\x6f\x77\x00\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x41\x01\x40\x01\x0b", "imports4.wast:28");
let $Mgim1 = $$4;

// imports4.wast:28
let $4 = instance($Mgim1);
let Mgim1 = $4;

// imports4.wast:36
register("grown-imported-memory", Mgim1)

// imports4.wast:37
assert_return(() => call(Mgim1, "grow", []), "imports4.wast:37", 2);

// imports4.wast:39
let $$5 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x02\xb4\x80\x80\x80\x00\x02\x04\x74\x65\x73\x74\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x00\x01\x15\x67\x72\x6f\x77\x6e\x2d\x69\x6d\x70\x6f\x72\x74\x65\x64\x2d\x6d\x65\x6d\x6f\x72\x79\x06\x6d\x65\x6d\x6f\x72\x79\x02\x00\x03\x03\x82\x80\x80\x80\x00\x01\x00\x05\x85\x80\x80\x80\x00\x02\x00\x00\x00\x00\x07\x88\x80\x80\x80\x00\x01\x04\x73\x69\x7a\x65\x00\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x3f\x01\x0b", "imports4.wast:39");
let $Mgim2 = $$5;

// imports4.wast:39
let $5 = instance($Mgim2);
let Mgim2 = $5;

// imports4.wast:47
assert_return(() => call(Mgim2, "size", []), "imports4.wast:47", 3);
reinitializeRegistry();
})();
