(function imports2_wast_js() {

// imports2.wast:1
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x05\x89\x80\x80\x80\x00\x03\x01\x00\x00\x00\x02\x01\x02\x04\x07\xa1\x80\x80\x80\x00\x03\x01\x7a\x02\x00\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x01\x0a\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x34\x02\x02", "imports2.wast:1");

// imports2.wast:1
let $1 = instance($$1);

// imports2.wast:7
register("test", $1)

// imports2.wast:9
let $$2 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x7f\x01\x7f\x02\x9f\x80\x80\x80\x00\x02\x04\x74\x65\x73\x74\x01\x7a\x02\x00\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x01\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x88\x80\x80\x80\x00\x01\x04\x6c\x6f\x61\x64\x00\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x20\x00\x28\x42\x01\x00\x0b\x0b\x88\x80\x80\x80\x00\x01\x02\x01\x41\x0a\x0b\x01\x10", "imports2.wast:9");

// imports2.wast:9
let $2 = instance($$2);

// imports2.wast:17
assert_return(() => call($2, "load", [0]), "imports2.wast:17", 0);

// imports2.wast:18
assert_return(() => call($2, "load", [10]), "imports2.wast:18", 16);

// imports2.wast:19
assert_return(() => call($2, "load", [8]), "imports2.wast:19", 1_048_576);

// imports2.wast:20
assert_trap(() => call($2, "load", [1_000_000]), "imports2.wast:20");

// imports2.wast:22
let $$3 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x7f\x01\x7f\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x01\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x88\x80\x80\x80\x00\x01\x04\x6c\x6f\x61\x64\x00\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x20\x00\x28\x02\x00\x0b\x0b\x87\x80\x80\x80\x00\x01\x00\x41\x0a\x0b\x01\x10", "imports2.wast:22");

// imports2.wast:22
let $3 = instance($$3);

// imports2.wast:28
assert_return(() => call($3, "load", [0]), "imports2.wast:28", 0);

// imports2.wast:29
assert_return(() => call($3, "load", [10]), "imports2.wast:29", 16);

// imports2.wast:30
assert_return(() => call($3, "load", [8]), "imports2.wast:30", 1_048_576);

// imports2.wast:31
assert_trap(() => call($3, "load", [1_000_000]), "imports2.wast:31");

// imports2.wast:33
let $$4 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\xc0\x80\x80\x80\x00\x03\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x00\x02\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x00\x00", "imports2.wast:33");

// imports2.wast:33
let $4 = instance($$4);

// imports2.wast:39
let $$5 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\xf7\x80\x80\x80\x00\x06\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x00\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x01\x02\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x00\x02\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x01\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x00\x03", "imports2.wast:39");

// imports2.wast:39
let $5 = instance($$5);

// imports2.wast:49
let $$6 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x91\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x07\x75\x6e\x6b\x6e\x6f\x77\x6e\x02\x00\x01", "imports2.wast:49");

// imports2.wast:48
assert_unlinkable($$6);

// imports2.wast:53
let $$7 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x75\x6e\x6b\x6e\x6f\x77\x6e\x02\x00\x01", "imports2.wast:53");

// imports2.wast:52
assert_unlinkable($$7);

// imports2.wast:58
let $$8 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x96\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x00\x03", "imports2.wast:58");

// imports2.wast:57
assert_unlinkable($$8);

// imports2.wast:62
let $$9 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x97\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0c\x6d\x65\x6d\x6f\x72\x79\x2d\x32\x2d\x69\x6e\x66\x02\x01\x02\x03", "imports2.wast:62");

// imports2.wast:61
assert_unlinkable($$9);

// imports2.wast:66
let $$10 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x00\x02", "imports2.wast:66");

// imports2.wast:65
assert_unlinkable($$10);

// imports2.wast:70
let $$11 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x95\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x6d\x65\x6d\x6f\x72\x79\x02\x01\x01\x01", "imports2.wast:70");

// imports2.wast:69
assert_unlinkable($$11);
reinitializeRegistry();
})();
