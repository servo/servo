(function float_memory0_wast_js() {

// float_memory0.wast:5
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8c\x80\x80\x80\x00\x03\x60\x00\x01\x7d\x60\x00\x01\x7f\x60\x00\x00\x03\x86\x80\x80\x80\x00\x05\x00\x01\x02\x02\x02\x05\x93\x80\x80\x80\x00\x06\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x01\x01\x01\x00\x00\x01\x00\x00\x07\xb7\x80\x80\x80\x00\x05\x08\x66\x33\x32\x2e\x6c\x6f\x61\x64\x00\x00\x08\x69\x33\x32\x2e\x6c\x6f\x61\x64\x00\x01\x09\x66\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x02\x09\x69\x33\x32\x2e\x73\x74\x6f\x72\x65\x00\x03\x05\x72\x65\x73\x65\x74\x00\x04\x0a\xcf\x80\x80\x80\x00\x05\x88\x80\x80\x80\x00\x00\x41\x00\x2a\x42\x03\x00\x0b\x88\x80\x80\x80\x00\x00\x41\x00\x28\x42\x03\x00\x0b\x8d\x80\x80\x80\x00\x00\x41\x00\x43\x00\x00\xa0\x7f\x38\x42\x03\x00\x0b\x8e\x80\x80\x80\x00\x00\x41\x00\x41\x80\x80\x80\xfd\x07\x36\x42\x03\x00\x0b\x8a\x80\x80\x80\x00\x00\x41\x00\x41\x00\x36\x42\x03\x00\x0b\x0b\x8b\x80\x80\x80\x00\x01\x02\x03\x41\x00\x0b\x04\x00\x00\xa0\x7f", "float_memory0.wast:5");

// float_memory0.wast:5
let $1 = instance($$1);

// float_memory0.wast:20
assert_return(() => call($1, "i32.load", []), "float_memory0.wast:20", 2_141_192_192);

// float_memory0.wast:21
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7d\x02\xb8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x08\x66\x33\x32\x2e\x6c\x6f\x61\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\xa0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "float_memory0.wast:21");  // assert_return(() => call($1, "f32.load", []), "float_memory0.wast:21", NaN)

// float_memory0.wast:22
run(() => call($1, "reset", []), "float_memory0.wast:22");

// float_memory0.wast:23
assert_return(() => call($1, "i32.load", []), "float_memory0.wast:23", 0);

// float_memory0.wast:24
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7d\x02\xb8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x08\x66\x33\x32\x2e\x6c\x6f\x61\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "float_memory0.wast:24");  // assert_return(() => call($1, "f32.load", []), "float_memory0.wast:24", 0.)

// float_memory0.wast:25
run(() => call($1, "f32.store", []), "float_memory0.wast:25");

// float_memory0.wast:26
assert_return(() => call($1, "i32.load", []), "float_memory0.wast:26", 2_141_192_192);

// float_memory0.wast:27
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7d\x02\xb8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x08\x66\x33\x32\x2e\x6c\x6f\x61\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\xa0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "float_memory0.wast:27");  // assert_return(() => call($1, "f32.load", []), "float_memory0.wast:27", NaN)

// float_memory0.wast:28
run(() => call($1, "reset", []), "float_memory0.wast:28");

// float_memory0.wast:29
assert_return(() => call($1, "i32.load", []), "float_memory0.wast:29", 0);

// float_memory0.wast:30
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7d\x02\xb8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x08\x66\x33\x32\x2e\x6c\x6f\x61\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "float_memory0.wast:30");  // assert_return(() => call($1, "f32.load", []), "float_memory0.wast:30", 0.)

// float_memory0.wast:31
run(() => call($1, "i32.store", []), "float_memory0.wast:31");

// float_memory0.wast:32
assert_return(() => call($1, "i32.load", []), "float_memory0.wast:32", 2_141_192_192);

// float_memory0.wast:33
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7d\x02\xb8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x08\x66\x33\x32\x2e\x6c\x6f\x61\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\xa0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "float_memory0.wast:33");  // assert_return(() => call($1, "f32.load", []), "float_memory0.wast:33", NaN)

// float_memory0.wast:35
let $$2 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8c\x80\x80\x80\x00\x03\x60\x00\x01\x7c\x60\x00\x01\x7e\x60\x00\x00\x03\x86\x80\x80\x80\x00\x05\x00\x01\x02\x02\x02\x05\x87\x80\x80\x80\x00\x02\x01\x00\x00\x01\x01\x01\x07\xb7\x80\x80\x80\x00\x05\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x00\x08\x69\x36\x34\x2e\x6c\x6f\x61\x64\x00\x01\x09\x66\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x02\x09\x69\x36\x34\x2e\x73\x74\x6f\x72\x65\x00\x03\x05\x72\x65\x73\x65\x74\x00\x04\x0a\xd8\x80\x80\x80\x00\x05\x88\x80\x80\x80\x00\x00\x41\x00\x2b\x43\x01\x00\x0b\x88\x80\x80\x80\x00\x00\x41\x00\x29\x43\x01\x00\x0b\x91\x80\x80\x80\x00\x00\x41\x00\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x39\x43\x01\x00\x0b\x93\x80\x80\x80\x00\x00\x41\x00\x42\x80\x80\x80\x80\x80\x80\x80\xfa\xff\x00\x37\x43\x01\x00\x0b\x8a\x80\x80\x80\x00\x00\x41\x00\x42\x00\x37\x43\x01\x00\x0b\x0b\x8f\x80\x80\x80\x00\x01\x02\x01\x41\x00\x0b\x08\x00\x00\x00\x00\x00\x00\xf4\x7f", "float_memory0.wast:35");

// float_memory0.wast:35
let $2 = instance($$2);

// float_memory0.wast:46
assert_return(() => call($2, "i64.load", []), "float_memory0.wast:46", 9_219_994_337_134_247_936n);

// float_memory0.wast:47
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7c\x02\xb8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "float_memory0.wast:47");  // assert_return(() => call($2, "f64.load", []), "float_memory0.wast:47", NaN)

// float_memory0.wast:48
run(() => call($2, "reset", []), "float_memory0.wast:48");

// float_memory0.wast:49
assert_return(() => call($2, "i64.load", []), "float_memory0.wast:49", 0n);

// float_memory0.wast:50
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7c\x02\xb8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "float_memory0.wast:50");  // assert_return(() => call($2, "f64.load", []), "float_memory0.wast:50", 0.)

// float_memory0.wast:51
run(() => call($2, "f64.store", []), "float_memory0.wast:51");

// float_memory0.wast:52
assert_return(() => call($2, "i64.load", []), "float_memory0.wast:52", 9_219_994_337_134_247_936n);

// float_memory0.wast:53
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7c\x02\xb8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "float_memory0.wast:53");  // assert_return(() => call($2, "f64.load", []), "float_memory0.wast:53", NaN)

// float_memory0.wast:54
run(() => call($2, "reset", []), "float_memory0.wast:54");

// float_memory0.wast:55
assert_return(() => call($2, "i64.load", []), "float_memory0.wast:55", 0n);

// float_memory0.wast:56
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7c\x02\xb8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "float_memory0.wast:56");  // assert_return(() => call($2, "f64.load", []), "float_memory0.wast:56", 0.)

// float_memory0.wast:57
run(() => call($2, "i64.store", []), "float_memory0.wast:57");

// float_memory0.wast:58
assert_return(() => call($2, "i64.load", []), "float_memory0.wast:58", 9_219_994_337_134_247_936n);

// float_memory0.wast:59
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7c\x02\xb8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x08\x66\x36\x34\x2e\x6c\x6f\x61\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "float_memory0.wast:59");  // assert_return(() => call($2, "f64.load", []), "float_memory0.wast:59", NaN)
reinitializeRegistry();
})();
