(function global_wast_js() {

// global.wast:3
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xb7\x80\x80\x80\x00\x0d\x60\x02\x7f\x7f\x01\x7f\x60\x00\x01\x7f\x60\x00\x01\x7e\x60\x00\x01\x6f\x60\x01\x7f\x00\x60\x01\x7e\x00\x60\x01\x6f\x00\x60\x00\x01\x7d\x60\x00\x01\x7c\x60\x01\x7d\x00\x60\x01\x7c\x00\x60\x00\x00\x60\x01\x7f\x01\x7f\x02\xaf\x80\x80\x80\x00\x02\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x69\x33\x32\x03\x7f\x00\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x69\x36\x34\x03\x7e\x00\x03\xb7\x80\x80\x80\x00\x36\x01\x02\x03\x03\x01\x02\x01\x02\x01\x02\x01\x02\x04\x05\x06\x07\x08\x07\x08\x09\x0a\x0b\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x01\x01\x0b\x0b\x01\x01\x0c\x01\x01\x0b\x01\x0c\x0c\x01\x01\x01\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x01\x01\x05\x83\x80\x80\x80\x00\x01\x00\x01\x06\x82\x81\x80\x80\x00\x11\x7f\x00\x41\x7e\x0b\x7d\x00\x43\x00\x00\x40\xc0\x0b\x7c\x00\x44\x00\x00\x00\x00\x00\x00\x10\xc0\x0b\x7e\x00\x42\x7b\x0b\x7f\x01\x41\x74\x0b\x7d\x01\x43\x00\x00\x50\xc1\x0b\x7c\x01\x44\x00\x00\x00\x00\x00\x00\x2c\xc0\x0b\x7e\x01\x42\x71\x0b\x7f\x00\x23\x00\x0b\x7e\x00\x23\x01\x0b\x7f\x00\x41\x14\x41\x02\x6c\x41\x02\x6b\x41\x04\x6a\x0b\x7e\x00\x42\x14\x42\x02\x7e\x42\x02\x7d\x42\x05\x7c\x0b\x7f\x00\x23\x00\x41\x2a\x6a\x0b\x7e\x00\x23\x01\x42\x2a\x7c\x0b\x6f\x00\xd0\x6f\x0b\x6f\x01\xd0\x6f\x0b\x70\x00\xd0\x70\x0b\x07\xd5\x85\x80\x80\x00\x33\x05\x67\x65\x74\x2d\x61\x00\x00\x05\x67\x65\x74\x2d\x62\x00\x01\x05\x67\x65\x74\x2d\x72\x00\x02\x06\x67\x65\x74\x2d\x6d\x72\x00\x03\x05\x67\x65\x74\x2d\x78\x00\x04\x05\x67\x65\x74\x2d\x79\x00\x05\x06\x67\x65\x74\x2d\x7a\x31\x00\x06\x06\x67\x65\x74\x2d\x7a\x32\x00\x07\x06\x67\x65\x74\x2d\x7a\x33\x00\x08\x06\x67\x65\x74\x2d\x7a\x34\x00\x09\x06\x67\x65\x74\x2d\x7a\x35\x00\x0a\x06\x67\x65\x74\x2d\x7a\x36\x00\x0b\x05\x73\x65\x74\x2d\x78\x00\x0c\x05\x73\x65\x74\x2d\x79\x00\x0d\x06\x73\x65\x74\x2d\x6d\x72\x00\x0e\x05\x67\x65\x74\x2d\x33\x00\x0f\x05\x67\x65\x74\x2d\x34\x00\x10\x05\x67\x65\x74\x2d\x37\x00\x11\x05\x67\x65\x74\x2d\x38\x00\x12\x05\x73\x65\x74\x2d\x37\x00\x13\x05\x73\x65\x74\x2d\x38\x00\x14\x0f\x61\x73\x2d\x73\x65\x6c\x65\x63\x74\x2d\x66\x69\x72\x73\x74\x00\x16\x0d\x61\x73\x2d\x73\x65\x6c\x65\x63\x74\x2d\x6d\x69\x64\x00\x17\x0e\x61\x73\x2d\x73\x65\x6c\x65\x63\x74\x2d\x6c\x61\x73\x74\x00\x18\x0d\x61\x73\x2d\x6c\x6f\x6f\x70\x2d\x66\x69\x72\x73\x74\x00\x19\x0b\x61\x73\x2d\x6c\x6f\x6f\x70\x2d\x6d\x69\x64\x00\x1a\x0c\x61\x73\x2d\x6c\x6f\x6f\x70\x2d\x6c\x61\x73\x74\x00\x1b\x0f\x61\x73\x2d\x69\x66\x2d\x63\x6f\x6e\x64\x69\x74\x69\x6f\x6e\x00\x1c\x0a\x61\x73\x2d\x69\x66\x2d\x74\x68\x65\x6e\x00\x1d\x0a\x61\x73\x2d\x69\x66\x2d\x65\x6c\x73\x65\x00\x1e\x0e\x61\x73\x2d\x62\x72\x5f\x69\x66\x2d\x66\x69\x72\x73\x74\x00\x1f\x0d\x61\x73\x2d\x62\x72\x5f\x69\x66\x2d\x6c\x61\x73\x74\x00\x20\x11\x61\x73\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x66\x69\x72\x73\x74\x00\x21\x10\x61\x73\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6c\x61\x73\x74\x00\x22\x16\x61\x73\x2d\x63\x61\x6c\x6c\x5f\x69\x6e\x64\x69\x72\x65\x63\x74\x2d\x66\x69\x72\x73\x74\x00\x24\x14\x61\x73\x2d\x63\x61\x6c\x6c\x5f\x69\x6e\x64\x69\x72\x65\x63\x74\x2d\x6d\x69\x64\x00\x25\x15\x61\x73\x2d\x63\x61\x6c\x6c\x5f\x69\x6e\x64\x69\x72\x65\x63\x74\x2d\x6c\x61\x73\x74\x00\x26\x0e\x61\x73\x2d\x73\x74\x6f\x72\x65\x2d\x66\x69\x72\x73\x74\x00\x27\x0d\x61\x73\x2d\x73\x74\x6f\x72\x65\x2d\x6c\x61\x73\x74\x00\x28\x0f\x61\x73\x2d\x6c\x6f\x61\x64\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x29\x14\x61\x73\x2d\x6d\x65\x6d\x6f\x72\x79\x2e\x67\x72\x6f\x77\x2d\x76\x61\x6c\x75\x65\x00\x2a\x0d\x61\x73\x2d\x63\x61\x6c\x6c\x2d\x76\x61\x6c\x75\x65\x00\x2c\x0f\x61\x73\x2d\x72\x65\x74\x75\x72\x6e\x2d\x76\x61\x6c\x75\x65\x00\x2d\x0f\x61\x73\x2d\x64\x72\x6f\x70\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x2e\x0b\x61\x73\x2d\x62\x72\x2d\x76\x61\x6c\x75\x65\x00\x2f\x12\x61\x73\x2d\x6c\x6f\x63\x61\x6c\x2e\x73\x65\x74\x2d\x76\x61\x6c\x75\x65\x00\x30\x12\x61\x73\x2d\x6c\x6f\x63\x61\x6c\x2e\x74\x65\x65\x2d\x76\x61\x6c\x75\x65\x00\x31\x13\x61\x73\x2d\x67\x6c\x6f\x62\x61\x6c\x2e\x73\x65\x74\x2d\x76\x61\x6c\x75\x65\x00\x32\x10\x61\x73\x2d\x75\x6e\x61\x72\x79\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x33\x11\x61\x73\x2d\x62\x69\x6e\x61\x72\x79\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x34\x12\x61\x73\x2d\x63\x6f\x6d\x70\x61\x72\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x35\x09\x89\x80\x80\x80\x00\x01\x04\x41\x00\x0b\x01\xd2\x23\x0b\x0a\x9c\x85\x80\x80\x00\x36\x84\x80\x80\x80\x00\x00\x23\x02\x0b\x84\x80\x80\x80\x00\x00\x23\x05\x0b\x84\x80\x80\x80\x00\x00\x23\x10\x0b\x84\x80\x80\x80\x00\x00\x23\x11\x0b\x84\x80\x80\x80\x00\x00\x23\x06\x0b\x84\x80\x80\x80\x00\x00\x23\x09\x0b\x84\x80\x80\x80\x00\x00\x23\x0a\x0b\x84\x80\x80\x80\x00\x00\x23\x0b\x0b\x84\x80\x80\x80\x00\x00\x23\x0c\x0b\x84\x80\x80\x80\x00\x00\x23\x0d\x0b\x84\x80\x80\x80\x00\x00\x23\x0e\x0b\x84\x80\x80\x80\x00\x00\x23\x0f\x0b\x86\x80\x80\x80\x00\x00\x20\x00\x24\x06\x0b\x86\x80\x80\x80\x00\x00\x20\x00\x24\x09\x0b\x86\x80\x80\x80\x00\x00\x20\x00\x24\x11\x0b\x84\x80\x80\x80\x00\x00\x23\x03\x0b\x84\x80\x80\x80\x00\x00\x23\x04\x0b\x84\x80\x80\x80\x00\x00\x23\x07\x0b\x84\x80\x80\x80\x00\x00\x23\x08\x0b\x86\x80\x80\x80\x00\x00\x20\x00\x24\x07\x0b\x86\x80\x80\x80\x00\x00\x20\x00\x24\x08\x0b\x82\x80\x80\x80\x00\x00\x0b\x89\x80\x80\x80\x00\x00\x23\x06\x41\x02\x41\x03\x1b\x0b\x89\x80\x80\x80\x00\x00\x41\x02\x23\x06\x41\x03\x1b\x0b\x89\x80\x80\x80\x00\x00\x41\x02\x41\x03\x23\x06\x1b\x0b\x8b\x80\x80\x80\x00\x00\x03\x7f\x23\x06\x10\x15\x10\x15\x0b\x0b\x8b\x80\x80\x80\x00\x00\x03\x7f\x10\x15\x23\x06\x10\x15\x0b\x0b\x8b\x80\x80\x80\x00\x00\x03\x7f\x10\x15\x10\x15\x23\x06\x0b\x0b\x90\x80\x80\x80\x00\x00\x23\x06\x04\x7f\x10\x15\x41\x02\x05\x10\x15\x41\x03\x0b\x0b\x8c\x80\x80\x80\x00\x00\x41\x01\x04\x7f\x23\x06\x05\x41\x02\x0b\x0b\x8c\x80\x80\x80\x00\x00\x41\x00\x04\x7f\x41\x02\x05\x23\x06\x0b\x0b\x8e\x80\x80\x80\x00\x00\x02\x7f\x23\x06\x41\x02\x0d\x00\x41\x03\x0f\x0b\x0b\x8e\x80\x80\x80\x00\x00\x02\x7f\x41\x02\x23\x06\x0d\x00\x41\x03\x0f\x0b\x0b\x8d\x80\x80\x80\x00\x00\x02\x7f\x23\x06\x41\x02\x0e\x01\x00\x00\x0b\x0b\x8d\x80\x80\x80\x00\x00\x02\x7f\x41\x02\x23\x06\x0e\x01\x00\x00\x0b\x0b\x84\x80\x80\x80\x00\x00\x20\x00\x0b\x8e\x80\x80\x80\x00\x00\x02\x7f\x23\x06\x41\x02\x41\x00\x11\x00\x00\x0b\x0b\x8e\x80\x80\x80\x00\x00\x02\x7f\x41\x02\x23\x06\x41\x00\x11\x00\x00\x0b\x0b\x8e\x80\x80\x80\x00\x00\x02\x7f\x41\x02\x41\x00\x23\x06\x11\x00\x00\x0b\x0b\x89\x80\x80\x80\x00\x00\x23\x06\x41\x01\x36\x02\x00\x0b\x89\x80\x80\x80\x00\x00\x41\x00\x23\x06\x36\x02\x00\x0b\x87\x80\x80\x80\x00\x00\x23\x06\x28\x02\x00\x0b\x86\x80\x80\x80\x00\x00\x23\x06\x40\x00\x0b\x84\x80\x80\x80\x00\x00\x20\x00\x0b\x86\x80\x80\x80\x00\x00\x23\x06\x10\x2b\x0b\x85\x80\x80\x80\x00\x00\x23\x06\x0f\x0b\x85\x80\x80\x80\x00\x00\x23\x06\x1a\x0b\x89\x80\x80\x80\x00\x00\x02\x7f\x23\x06\x0c\x00\x0b\x0b\x88\x80\x80\x80\x00\x00\x23\x06\x21\x00\x20\x00\x0b\x86\x80\x80\x80\x00\x00\x23\x06\x22\x00\x0b\x88\x80\x80\x80\x00\x00\x23\x06\x24\x06\x23\x06\x0b\x85\x80\x80\x80\x00\x00\x23\x06\x45\x0b\x87\x80\x80\x80\x00\x00\x23\x06\x23\x06\x6c\x0b\x87\x80\x80\x80\x00\x00\x23\x00\x41\x01\x4b\x0b", "global.wast:3");

// global.wast:3
let $1 = instance($$1);

// global.wast:204
assert_return(() => call($1, "get-a", []), "global.wast:204", -2);

// global.wast:205
assert_return(() => call($1, "get-b", []), "global.wast:205", -5n);

// global.wast:206
assert_return(() => call($1, "get-r", []), "global.wast:206", null);

// global.wast:207
assert_return(() => call($1, "get-mr", []), "global.wast:207", null);

// global.wast:208
assert_return(() => call($1, "get-x", []), "global.wast:208", -12);

// global.wast:209
assert_return(() => call($1, "get-y", []), "global.wast:209", -15n);

// global.wast:210
assert_return(() => call($1, "get-z1", []), "global.wast:210", 666);

// global.wast:211
assert_return(() => call($1, "get-z2", []), "global.wast:211", 666n);

// global.wast:212
assert_return(() => call($1, "get-z3", []), "global.wast:212", 42);

// global.wast:213
assert_return(() => call($1, "get-z4", []), "global.wast:213", 43n);

// global.wast:214
assert_return(() => call($1, "get-z5", []), "global.wast:214", 708);

// global.wast:215
assert_return(() => call($1, "get-z6", []), "global.wast:215", 708n);

// global.wast:217
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7d\x02\xb5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x05\x67\x65\x74\x2d\x33\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\x40\xc0\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "global.wast:217");  // assert_return(() => call($1, "get-3", []), "global.wast:217", -3.)

// global.wast:218
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7c\x02\xb5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x05\x67\x65\x74\x2d\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x10\xc0\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "global.wast:218");  // assert_return(() => call($1, "get-4", []), "global.wast:218", -4.)

// global.wast:219
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7d\x02\xb5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x05\x67\x65\x74\x2d\x37\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\x50\xc1\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "global.wast:219");  // assert_return(() => call($1, "get-7", []), "global.wast:219", -13.)

// global.wast:220
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7c\x02\xb5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x05\x67\x65\x74\x2d\x38\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x2c\xc0\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "global.wast:220");  // assert_return(() => call($1, "get-8", []), "global.wast:220", -14.)

// global.wast:222
assert_return(() => call($1, "set-x", [6]), "global.wast:222");

// global.wast:223
assert_return(() => call($1, "set-y", [7n]), "global.wast:223");

// global.wast:225
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7d\x00\x02\xb5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x05\x73\x65\x74\x2d\x37\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x94\x80\x80\x80\x00\x01\x8e\x80\x80\x80\x00\x00\x02\x40\x43\x00\x00\x00\x41\x10\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "global.wast:225");  // assert_return(() => call($1, "set-7", [8.]), "global.wast:225")

// global.wast:226
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7c\x00\x02\xb5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x05\x73\x65\x74\x2d\x38\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x22\x40\x10\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "global.wast:226");  // assert_return(() => call($1, "set-8", [9.]), "global.wast:226")

// global.wast:228
assert_return(() => call($1, "get-x", []), "global.wast:228", 6);

// global.wast:229
assert_return(() => call($1, "get-y", []), "global.wast:229", 7n);

// global.wast:230
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7d\x02\xb5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x05\x67\x65\x74\x2d\x37\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\x00\x41\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "global.wast:230");  // assert_return(() => call($1, "get-7", []), "global.wast:230", 8.)

// global.wast:231
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7c\x02\xb5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x05\x67\x65\x74\x2d\x38\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x22\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "global.wast:231");  // assert_return(() => call($1, "get-8", []), "global.wast:231", 9.)

// global.wast:233
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7d\x00\x02\xb5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x05\x73\x65\x74\x2d\x37\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x94\x80\x80\x80\x00\x01\x8e\x80\x80\x80\x00\x00\x02\x40\x43\x00\x00\x00\x41\x10\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "global.wast:233");  // assert_return(() => call($1, "set-7", [8.]), "global.wast:233")

// global.wast:234
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7c\x00\x02\xb5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x05\x73\x65\x74\x2d\x38\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x98\x80\x80\x80\x00\x01\x92\x80\x80\x80\x00\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x22\x40\x10\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "global.wast:234");  // assert_return(() => call($1, "set-8", [9.]), "global.wast:234")

// global.wast:235
assert_return(() => call($1, "set-mr", [hostref(10)]), "global.wast:235");

// global.wast:237
assert_return(() => call($1, "get-x", []), "global.wast:237", 6);

// global.wast:238
assert_return(() => call($1, "get-y", []), "global.wast:238", 7n);

// global.wast:239
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7d\x02\xb5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x05\x67\x65\x74\x2d\x37\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\x00\x41\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "global.wast:239");  // assert_return(() => call($1, "get-7", []), "global.wast:239", 8.)

// global.wast:240
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7c\x02\xb5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x05\x67\x65\x74\x2d\x38\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x22\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "global.wast:240");  // assert_return(() => call($1, "get-8", []), "global.wast:240", 9.)

// global.wast:241
assert_return(() => call($1, "get-mr", []), "global.wast:241", hostref(10));

// global.wast:243
assert_return(() => call($1, "as-select-first", []), "global.wast:243", 6);

// global.wast:244
assert_return(() => call($1, "as-select-mid", []), "global.wast:244", 2);

// global.wast:245
assert_return(() => call($1, "as-select-last", []), "global.wast:245", 2);

// global.wast:247
assert_return(() => call($1, "as-loop-first", []), "global.wast:247", 6);

// global.wast:248
assert_return(() => call($1, "as-loop-mid", []), "global.wast:248", 6);

// global.wast:249
assert_return(() => call($1, "as-loop-last", []), "global.wast:249", 6);

// global.wast:251
assert_return(() => call($1, "as-if-condition", []), "global.wast:251", 2);

// global.wast:252
assert_return(() => call($1, "as-if-then", []), "global.wast:252", 6);

// global.wast:253
assert_return(() => call($1, "as-if-else", []), "global.wast:253", 6);

// global.wast:255
assert_return(() => call($1, "as-br_if-first", []), "global.wast:255", 6);

// global.wast:256
assert_return(() => call($1, "as-br_if-last", []), "global.wast:256", 2);

// global.wast:258
assert_return(() => call($1, "as-br_table-first", []), "global.wast:258", 6);

// global.wast:259
assert_return(() => call($1, "as-br_table-last", []), "global.wast:259", 2);

// global.wast:261
assert_return(() => call($1, "as-call_indirect-first", []), "global.wast:261", 6);

// global.wast:262
assert_return(() => call($1, "as-call_indirect-mid", []), "global.wast:262", 2);

// global.wast:263
assert_trap(() => call($1, "as-call_indirect-last", []), "global.wast:263");

// global.wast:265
assert_return(() => call($1, "as-store-first", []), "global.wast:265");

// global.wast:266
assert_return(() => call($1, "as-store-last", []), "global.wast:266");

// global.wast:267
assert_return(() => call($1, "as-load-operand", []), "global.wast:267", 1);

// global.wast:268
assert_return(() => call($1, "as-memory.grow-value", []), "global.wast:268", 1);

// global.wast:270
assert_return(() => call($1, "as-call-value", []), "global.wast:270", 6);

// global.wast:272
assert_return(() => call($1, "as-return-value", []), "global.wast:272", 6);

// global.wast:273
assert_return(() => call($1, "as-drop-operand", []), "global.wast:273");

// global.wast:274
assert_return(() => call($1, "as-br-value", []), "global.wast:274", 6);

// global.wast:276
assert_return(() => call($1, "as-local.set-value", [1]), "global.wast:276", 6);

// global.wast:277
assert_return(() => call($1, "as-local.tee-value", [1]), "global.wast:277", 6);

// global.wast:278
assert_return(() => call($1, "as-global.set-value", []), "global.wast:278", 6);

// global.wast:280
assert_return(() => call($1, "as-unary-operand", []), "global.wast:280", 0);

// global.wast:281
assert_return(() => call($1, "as-binary-operand", []), "global.wast:281", 36);

// global.wast:282
assert_return(() => call($1, "as-compare-operand", []), "global.wast:282", 1);

// global.wast:284
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x06\x89\x80\x80\x80\x00\x01\x7d\x00\x43\x00\x00\x00\x00\x0b\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x24\x00\x0b", "global.wast:284");

// global.wast:289
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x02\x98\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x69\x33\x32\x03\x7f\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x41\x01\x24\x00\x0b", "global.wast:289");

// global.wast:295
let $$2 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x89\x80\x80\x80\x00\x01\x7d\x01\x43\x00\x00\x00\x00\x0b\x07\x85\x80\x80\x80\x00\x01\x01\x61\x03\x00", "global.wast:295");

// global.wast:295
let $2 = instance($$2);

// global.wast:296
let $$3 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x89\x80\x80\x80\x00\x01\x7d\x01\x43\x00\x00\x00\x00\x0b\x07\x85\x80\x80\x80\x00\x01\x01\x61\x03\x00", "global.wast:296");

// global.wast:296
let $3 = instance($$3);

// global.wast:298
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x8a\x80\x80\x80\x00\x01\x7d\x00\x43\x00\x00\x00\x00\x8c\x0b", "global.wast:298");

// global.wast:303
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x86\x80\x80\x80\x00\x01\x7d\x00\x20\x00\x0b", "global.wast:303");

// global.wast:308
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x8a\x80\x80\x80\x00\x01\x7d\x00\x43\x00\x00\x80\x3f\x8c\x0b", "global.wast:308");

// global.wast:313
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x87\x80\x80\x80\x00\x01\x7f\x00\x41\x00\x01\x0b", "global.wast:313");

// global.wast:318
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x87\x80\x80\x80\x00\x01\x7f\x00\x41\x00\x68\x0b", "global.wast:318");

// global.wast:323
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x85\x80\x80\x80\x00\x01\x7f\x00\x01\x0b", "global.wast:323");

// global.wast:328
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x89\x80\x80\x80\x00\x01\x7f\x00\x43\x00\x00\x00\x00\x0b", "global.wast:328");

// global.wast:333
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x88\x80\x80\x80\x00\x01\x7f\x00\x41\x00\x41\x00\x0b", "global.wast:333");

// global.wast:338
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x84\x80\x80\x80\x00\x01\x7f\x00\x0b", "global.wast:338");

// global.wast:343
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x86\x80\x80\x80\x00\x01\x00\x00\x03\x6f\x00\x06\x86\x80\x80\x80\x00\x01\x70\x00\x23\x00\x0b", "global.wast:343");

// global.wast:348
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x69\x33\x32\x03\x7f\x00\x06\x88\x80\x80\x80\x00\x01\x7f\x00\x23\x00\x23\x00\x0b", "global.wast:348");

// global.wast:353
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x69\x33\x32\x03\x7f\x00\x06\x88\x80\x80\x80\x00\x01\x7f\x00\x41\x00\x23\x00\x0b", "global.wast:353");

// global.wast:358
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x00\x23\x00\x0b", "global.wast:358");

// global.wast:363
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x8b\x80\x80\x80\x00\x02\x7f\x00\x23\x01\x0b\x7f\x00\x41\x00\x0b", "global.wast:363");

// global.wast:368
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x94\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x2d\x69\x33\x32\x03\x7f\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x00\x23\x02\x0b", "global.wast:368");

// global.wast:373
let $$4 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x8b\x80\x80\x80\x00\x02\x7f\x00\x41\x00\x0b\x7f\x00\x23\x00\x0b", "global.wast:373");

// global.wast:373
let $4 = instance($$4);

// global.wast:374
let $$5 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x8b\x80\x80\x80\x00\x02\x7f\x00\x41\x00\x0b\x7f\x00\x23\x00\x0b", "global.wast:374");

// global.wast:374
let $5 = instance($$5);

// global.wast:376
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x0e\x67\x6c\x6f\x62\x61\x6c\x2d\x6d\x75\x74\x2d\x69\x33\x32\x03\x7f\x01\x06\x86\x80\x80\x80\x00\x01\x7f\x00\x23\x00\x0b", "global.wast:376");

// global.wast:381
let $$6 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x69\x33\x32\x03\x7f\x00", "global.wast:381");

// global.wast:381
let $6 = instance($$6);

// global.wast:384
assert_malformed("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x69\x33\x32\x03\x7f\x04", "global.wast:384");

// global.wast:397
assert_malformed("\x00\x61\x73\x6d\x01\x00\x00\x00\x02\x98\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x69\x33\x32\x03\x7f\xff", "global.wast:397");

// global.wast:411
let $$7 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x00\x41\x00\x0b", "global.wast:411");

// global.wast:411
let $7 = instance($$7);

// global.wast:414
assert_malformed("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x04\x41\x00\x0b", "global.wast:414");

// global.wast:426
assert_malformed("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x86\x80\x80\x80\x00\x01\x7f\xff\x41\x00\x0b", "global.wast:426");

// global.wast:440
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x23\x00\x0b", "global.wast:440");

// global.wast:445
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x00\x41\x00\x0b\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x23\x01\x0b", "global.wast:445");

// global.wast:453
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x02\x98\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x69\x33\x32\x03\x7f\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x23\x01\x0b", "global.wast:453");

// global.wast:461
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x02\x98\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x69\x33\x32\x03\x7f\x00\x03\x82\x80\x80\x80\x00\x01\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x00\x41\x00\x0b\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x23\x02\x0b", "global.wast:461");

// global.wast:471
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x41\x00\x24\x00\x0b", "global.wast:471");

// global.wast:476
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x00\x41\x00\x0b\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x41\x00\x24\x01\x0b", "global.wast:476");

// global.wast:484
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x02\x98\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x69\x33\x32\x03\x7f\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x41\x00\x24\x01\x0b", "global.wast:484");

// global.wast:492
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x02\x98\x80\x80\x80\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x0a\x67\x6c\x6f\x62\x61\x6c\x5f\x69\x33\x32\x03\x7f\x00\x03\x82\x80\x80\x80\x00\x01\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x00\x41\x00\x0b\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x41\x00\x24\x02\x0b", "global.wast:492");

// global.wast:502
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x01\x41\x00\x0b\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x24\x00\x0b", "global.wast:502");

// global.wast:511
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x01\x41\x00\x0b\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x41\x00\x02\x40\x24\x00\x0b\x0b", "global.wast:511");

// global.wast:521
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x01\x41\x00\x0b\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x41\x00\x03\x40\x24\x00\x0b\x0b", "global.wast:521");

// global.wast:531
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x01\x41\x00\x0b\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\x04\x40\x24\x00\x0b\x0b", "global.wast:531");

// global.wast:541
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x01\x41\x00\x0b\x0a\x94\x80\x80\x80\x00\x01\x8e\x80\x80\x80\x00\x00\x41\x00\x41\x00\x04\x7f\x41\x00\x05\x24\x00\x0b\x0b", "global.wast:541");

// global.wast:551
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x01\x41\x00\x0b\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x02\x40\x24\x00\x0c\x00\x0b\x0b", "global.wast:551");

// global.wast:561
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x01\x41\x00\x0b\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x02\x40\x24\x00\x0d\x00\x0b\x0b", "global.wast:561");

// global.wast:571
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x01\x41\x00\x0b\x0a\x92\x80\x80\x80\x00\x01\x8c\x80\x80\x80\x00\x00\x41\x00\x02\x40\x24\x00\x0e\x00\x00\x0b\x0b", "global.wast:571");

// global.wast:581
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x01\x41\x00\x0b\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\x24\x00\x0f\x0b", "global.wast:581");

// global.wast:590
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x01\x41\x00\x0b\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x24\x00\x41\x01\x41\x02\x1b\x0b", "global.wast:590");

// global.wast:599
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7f\x03\x83\x80\x80\x80\x00\x02\x00\x01\x06\x86\x80\x80\x80\x00\x01\x7f\x01\x41\x00\x0b\x0a\x95\x80\x80\x80\x00\x02\x86\x80\x80\x80\x00\x00\x24\x00\x10\x01\x0b\x84\x80\x80\x80\x00\x00\x20\x00\x0b", "global.wast:599");

// global.wast:609
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x01\x7f\x01\x7f\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x01\x01\x06\x86\x80\x80\x80\x00\x01\x7f\x01\x41\x00\x0b\x09\x89\x80\x80\x80\x00\x01\x04\x41\x00\x0b\x01\xd2\x00\x0b\x0a\x9b\x80\x80\x80\x00\x02\x84\x80\x80\x80\x00\x00\x20\x00\x0b\x8c\x80\x80\x80\x00\x00\x02\x7f\x24\x00\x41\x00\x11\x00\x00\x0b\x0b", "global.wast:609");

// global.wast:629
let $$8 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x86\x80\x80\x80\x00\x01\x7f\x00\x41\x04\x0b\x07\x85\x80\x80\x80\x00\x01\x01\x67\x03\x00", "global.wast:629");

// global.wast:629
let $8 = instance($$8);

// global.wast:632
register("G", $8)

// global.wast:634
let $$9 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8e\x80\x80\x80\x00\x03\x60\x00\x00\x60\x01\x7f\x01\x70\x60\x01\x7f\x01\x7f\x02\x88\x80\x80\x80\x00\x01\x01\x47\x01\x67\x03\x7f\x00\x03\x84\x80\x80\x80\x00\x03\x00\x01\x02\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x05\x83\x80\x80\x80\x00\x01\x00\x01\x06\x95\x80\x80\x80\x00\x04\x7f\x00\x41\x08\x0b\x7f\x00\x23\x00\x0b\x7f\x00\x23\x01\x0b\x70\x00\xd2\x00\x0b\x07\x97\x80\x80\x80\x00\x02\x08\x67\x65\x74\x2d\x65\x6c\x65\x6d\x00\x01\x08\x67\x65\x74\x2d\x64\x61\x74\x61\x00\x02\x09\x91\x80\x80\x80\x00\x02\x04\x23\x02\x0b\x01\xd2\x00\x0b\x04\x23\x03\x0b\x01\x23\x04\x0b\x0a\x9f\x80\x80\x80\x00\x03\x82\x80\x80\x80\x00\x00\x0b\x86\x80\x80\x80\x00\x00\x20\x00\x25\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x28\x02\x00\x0b\x0b\x93\x80\x80\x80\x00\x02\x00\x23\x02\x0b\x04\x44\x44\x44\x44\x00\x23\x03\x0b\x04\x88\x88\x88\x88", "global.wast:634");

// global.wast:634
let $9 = instance($$9);

// global.wast:659
assert_return(() => call($9, "get-elem", [0]), "global.wast:659", "ref.null");

// global.wast:660
assert_return(() => call($9, "get-elem", [4]), "global.wast:660", "ref.func");

// global.wast:661
assert_return(() => call($9, "get-elem", [8]), "global.wast:661", "ref.func");

// global.wast:663
assert_return(() => call($9, "get-data", [4]), "global.wast:663", 1_145_324_612);

// global.wast:664
assert_return(() => call($9, "get-data", [8]), "global.wast:664", -2_004_318_072);

// global.wast:666
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x06\x8b\x80\x80\x80\x00\x02\x7f\x00\x23\x01\x0b\x7f\x00\x41\x00\x0b", "global.wast:666");

// global.wast:674
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x04\x89\x80\x80\x80\x00\x01\x40\x00\x70\x00\x0a\x23\x00\x0b\x06\x86\x80\x80\x80\x00\x01\x70\x00\xd0\x70\x0b", "global.wast:674");

// global.wast:685
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "global.wast:685");

// global.wast:692
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "global.wast:692");

// global.wast:699
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "global.wast:699");
reinitializeRegistry();
})();
