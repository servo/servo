(function relaxed_min_max_wast_js() {

// relaxed_min_max.wast:3
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x87\x80\x80\x80\x00\x01\x60\x02\x7b\x7b\x01\x7b\x03\x89\x80\x80\x80\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x07\xb1\x81\x80\x80\x00\x08\x11\x66\x33\x32\x78\x34\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x69\x6e\x00\x00\x11\x66\x33\x32\x78\x34\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x61\x78\x00\x01\x11\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x69\x6e\x00\x02\x11\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x61\x78\x00\x03\x15\x66\x33\x32\x78\x34\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x69\x6e\x5f\x63\x6d\x70\x00\x04\x15\x66\x33\x32\x78\x34\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x61\x78\x5f\x63\x6d\x70\x00\x05\x15\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x69\x6e\x5f\x63\x6d\x70\x00\x06\x15\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x61\x78\x5f\x63\x6d\x70\x00\x07\x0a\x97\x81\x80\x80\x00\x08\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x8d\x02\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x8e\x02\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x8f\x02\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x90\x02\x0b\x92\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x8d\x02\x20\x00\x20\x01\xfd\x8d\x02\xfd\x37\x0b\x92\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x8e\x02\x20\x00\x20\x01\xfd\x8e\x02\xfd\x37\x0b\x93\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x8f\x02\x20\x00\x20\x01\xfd\x8f\x02\xfd\xd6\x01\x0b\x93\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x90\x02\x20\x00\x20\x01\xfd\x90\x02\xfd\xd6\x01\x0b", "relaxed_min_max.wast:3");

// relaxed_min_max.wast:3
let $1 = instance($$1);

// relaxed_min_max.wast:27
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x11\x66\x33\x32\x78\x34\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x69\x6e\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x8c\x82\x80\x80\x00\x01\x86\x82\x80\x80\x00\x01\x01\x7b\x02\x40\xfd\x0c\x00\x00\xc0\xff\x00\x00\xc0\x7f\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\xff\x00\x00\xc0\x7f\x10\x00\x21\x00\x02\x40\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\x7f\xfd\x4e\xfd\x0c\x00\x00\xc0\x7f\x00\x00\xc0\x7f\x00\x00\xc0\x7f\x00\x00\xc0\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\xc0\x7f\x00\x00\xc0\x7f\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x7f\xff\xff\xff\x7f\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x7f\x00\x00\xc0\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x0c\x01\x0b\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:27");  // assert_return(() => call($1, "f32x4.relaxed_min", [v128("-4_194_304 2_143_289_344 0 0"), v128("0 0 -4_194_304 2_143_289_344")]), "relaxed_min_max.wast:27", [v128(""nan:canonical" "nan:canonical" "nan:canonical" "nan:canonical""), v128(""nan:canonical" "nan:canonical" 0. 0."), v128("0. 0. "nan:canonical" "nan:canonical""), v128("0. 0. 0. 0.")])

// relaxed_min_max.wast:35
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x11\x66\x33\x32\x78\x34\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x69\x6e\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x8c\x82\x80\x80\x00\x01\x86\x82\x80\x80\x00\x01\x01\x7b\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x21\x00\x02\x40\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x0c\x01\x0b\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:35");  // assert_return(() => call($1, "f32x4.relaxed_min", [v128("0 -2_147_483_648 0 -2_147_483_648"), v128("-2_147_483_648 0 0 -2_147_483_648")]), "relaxed_min_max.wast:35", [v128("-0. -0. 0. -0."), v128("0. -0. 0. -0."), v128("-0. 0. 0. -0."), v128("-0. -0. 0. -0.")])

// relaxed_min_max.wast:43
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x11\x66\x33\x32\x78\x34\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x61\x78\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x8c\x82\x80\x80\x00\x01\x86\x82\x80\x80\x00\x01\x01\x7b\x02\x40\xfd\x0c\x00\x00\xc0\xff\x00\x00\xc0\x7f\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\xff\x00\x00\xc0\x7f\x10\x00\x21\x00\x02\x40\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\x7f\xfd\x4e\xfd\x0c\x00\x00\xc0\x7f\x00\x00\xc0\x7f\x00\x00\xc0\x7f\x00\x00\xc0\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\xc0\x7f\x00\x00\xc0\x7f\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x7f\xff\xff\xff\x7f\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x7f\x00\x00\xc0\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x0c\x01\x0b\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:43");  // assert_return(() => call($1, "f32x4.relaxed_max", [v128("-4_194_304 2_143_289_344 0 0"), v128("0 0 -4_194_304 2_143_289_344")]), "relaxed_min_max.wast:43", [v128(""nan:canonical" "nan:canonical" "nan:canonical" "nan:canonical""), v128(""nan:canonical" "nan:canonical" 0. 0."), v128("0. 0. "nan:canonical" "nan:canonical""), v128("0. 0. 0. 0.")])

// relaxed_min_max.wast:51
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x11\x66\x33\x32\x78\x34\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x61\x78\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x8c\x82\x80\x80\x00\x01\x86\x82\x80\x80\x00\x01\x01\x7b\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x21\x00\x02\x40\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x0c\x01\x0b\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:51");  // assert_return(() => call($1, "f32x4.relaxed_max", [v128("0 -2_147_483_648 0 -2_147_483_648"), v128("-2_147_483_648 0 0 -2_147_483_648")]), "relaxed_min_max.wast:51", [v128("0. 0. 0. -0."), v128("0. -0. 0. -0."), v128("-0. 0. 0. -0."), v128("-0. -0. 0. -0.")])

// relaxed_min_max.wast:59
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x11\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x69\x6e\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x8c\x82\x80\x80\x00\x01\x86\x82\x80\x80\x00\x01\x01\x7b\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf8\x7f\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x21\x00\x02\x40\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\x7f\xff\xff\xff\xff\xff\xff\xff\x7f\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\x7f\x00\x00\x00\x00\x00\x00\xf8\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\x7f\xff\xff\xff\xff\xff\xff\xff\x7f\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\x7f\x00\x00\x00\x00\x00\x00\xf8\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x0c\x01\x0b\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:59");  // assert_return(() => call($1, "f64x2.relaxed_min", [v128("0 -524_288 0 2_146_959_360"), v128("0 0 0 0")]), "relaxed_min_max.wast:59", [v128(""nan:canonical" "nan:canonical""), v128(""nan:canonical" "nan:canonical""), v128("0. 0."), v128("0. 0.")])

// relaxed_min_max.wast:67
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x11\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x69\x6e\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x8c\x82\x80\x80\x00\x01\x86\x82\x80\x80\x00\x01\x01\x7b\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x00\x21\x00\x02\x40\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\x7f\xff\xff\xff\xff\xff\xff\xff\x7f\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\x7f\x00\x00\x00\x00\x00\x00\xf8\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\x7f\xff\xff\xff\xff\xff\xff\xff\x7f\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\x7f\x00\x00\x00\x00\x00\x00\xf8\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x0c\x01\x0b\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:67");  // assert_return(() => call($1, "f64x2.relaxed_min", [v128("0 0 0 0"), v128("0 -524_288 0 2_146_959_360")]), "relaxed_min_max.wast:67", [v128(""nan:canonical" "nan:canonical""), v128("0. 0."), v128(""nan:canonical" "nan:canonical""), v128("0. 0.")])

// relaxed_min_max.wast:75
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x11\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x69\x6e\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x8c\x82\x80\x80\x00\x01\x86\x82\x80\x80\x00\x01\x01\x7b\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x21\x00\x02\x40\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x0c\x01\x0b\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:75");  // assert_return(() => call($1, "f64x2.relaxed_min", [v128("0 0 0 -2_147_483_648"), v128("0 -2_147_483_648 0 0")]), "relaxed_min_max.wast:75", [v128("-0. -0."), v128("0. -0."), v128("-0. 0."), v128("-0. -0.")])

// relaxed_min_max.wast:83
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x11\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x69\x6e\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x8c\x82\x80\x80\x00\x01\x86\x82\x80\x80\x00\x01\x01\x7b\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x21\x00\x02\x40\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x0c\x01\x0b\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:83");  // assert_return(() => call($1, "f64x2.relaxed_min", [v128("0 0 0 -2_147_483_648"), v128("0 0 0 -2_147_483_648")]), "relaxed_min_max.wast:83", [v128("0. -0."), v128("0. -0."), v128("0. -0."), v128("0. -0.")])

// relaxed_min_max.wast:91
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x11\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x61\x78\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x8c\x82\x80\x80\x00\x01\x86\x82\x80\x80\x00\x01\x01\x7b\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf8\x7f\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x21\x00\x02\x40\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\x7f\xff\xff\xff\xff\xff\xff\xff\x7f\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\x7f\x00\x00\x00\x00\x00\x00\xf8\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\x7f\xff\xff\xff\xff\xff\xff\xff\x7f\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\x7f\x00\x00\x00\x00\x00\x00\xf8\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x0c\x01\x0b\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:91");  // assert_return(() => call($1, "f64x2.relaxed_max", [v128("0 -524_288 0 2_146_959_360"), v128("0 0 0 0")]), "relaxed_min_max.wast:91", [v128(""nan:canonical" "nan:canonical""), v128(""nan:canonical" "nan:canonical""), v128("0. 0."), v128("0. 0.")])

// relaxed_min_max.wast:99
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x11\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x61\x78\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x8c\x82\x80\x80\x00\x01\x86\x82\x80\x80\x00\x01\x01\x7b\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x00\x21\x00\x02\x40\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\x7f\xff\xff\xff\xff\xff\xff\xff\x7f\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\x7f\x00\x00\x00\x00\x00\x00\xf8\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\x7f\xff\xff\xff\xff\xff\xff\xff\x7f\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\x7f\x00\x00\x00\x00\x00\x00\xf8\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x0c\x01\x0b\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:99");  // assert_return(() => call($1, "f64x2.relaxed_max", [v128("0 0 0 0"), v128("0 -524_288 0 2_146_959_360")]), "relaxed_min_max.wast:99", [v128(""nan:canonical" "nan:canonical""), v128("0. 0."), v128(""nan:canonical" "nan:canonical""), v128("0. 0.")])

// relaxed_min_max.wast:107
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x11\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x61\x78\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x8c\x82\x80\x80\x00\x01\x86\x82\x80\x80\x00\x01\x01\x7b\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x21\x00\x02\x40\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x0c\x01\x0b\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:107");  // assert_return(() => call($1, "f64x2.relaxed_max", [v128("0 0 0 -2_147_483_648"), v128("0 -2_147_483_648 0 0")]), "relaxed_min_max.wast:107", [v128("0. 0."), v128("0. -0."), v128("-0. 0."), v128("-0. -0.")])

// relaxed_min_max.wast:115
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x11\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x61\x78\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x8c\x82\x80\x80\x00\x01\x86\x82\x80\x80\x00\x01\x01\x7b\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x21\x00\x02\x40\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x02\x40\x20\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0c\x01\x0b\x0c\x01\x0b\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:115");  // assert_return(() => call($1, "f64x2.relaxed_max", [v128("0 0 0 -2_147_483_648"), v128("0 0 0 -2_147_483_648")]), "relaxed_min_max.wast:115", [v128("0. -0."), v128("0. -0."), v128("0. -0."), v128("0. -0.")])

// relaxed_min_max.wast:125
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x66\x33\x32\x78\x34\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x69\x6e\x5f\x63\x6d\x70\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\xc0\xff\x00\x00\xc0\x7f\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\xff\x00\x00\xc0\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:125");  // assert_return(() => call($1, "f32x4.relaxed_min_cmp", [v128("-4_194_304 2_143_289_344 0 0"), v128("0 0 -4_194_304 2_143_289_344")]), "relaxed_min_max.wast:125", v128("-1 -1 -1 -1"))

// relaxed_min_max.wast:130
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x66\x33\x32\x78\x34\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x69\x6e\x5f\x63\x6d\x70\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:130");  // assert_return(() => call($1, "f32x4.relaxed_min_cmp", [v128("0 -2_147_483_648 0 -2_147_483_648"), v128("-2_147_483_648 0 0 -2_147_483_648")]), "relaxed_min_max.wast:130", v128("-1 -1 -1 -1"))

// relaxed_min_max.wast:135
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x66\x33\x32\x78\x34\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x61\x78\x5f\x63\x6d\x70\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\xc0\xff\x00\x00\xc0\x7f\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\xff\x00\x00\xc0\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:135");  // assert_return(() => call($1, "f32x4.relaxed_max_cmp", [v128("-4_194_304 2_143_289_344 0 0"), v128("0 0 -4_194_304 2_143_289_344")]), "relaxed_min_max.wast:135", v128("-1 -1 -1 -1"))

// relaxed_min_max.wast:140
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x66\x33\x32\x78\x34\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x61\x78\x5f\x63\x6d\x70\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:140");  // assert_return(() => call($1, "f32x4.relaxed_max_cmp", [v128("0 -2_147_483_648 0 -2_147_483_648"), v128("-2_147_483_648 0 0 -2_147_483_648")]), "relaxed_min_max.wast:140", v128("-1 -1 -1 -1"))

// relaxed_min_max.wast:145
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x69\x6e\x5f\x63\x6d\x70\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf8\x7f\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:145");  // assert_return(() => call($1, "f64x2.relaxed_min_cmp", [v128("0 -524_288 0 2_146_959_360"), v128("0 0 0 0")]), "relaxed_min_max.wast:145", v128("-1n -1n"))

// relaxed_min_max.wast:150
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x69\x6e\x5f\x63\x6d\x70\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:150");  // assert_return(() => call($1, "f64x2.relaxed_min_cmp", [v128("0 0 0 0"), v128("0 -524_288 0 2_146_959_360")]), "relaxed_min_max.wast:150", v128("-1n -1n"))

// relaxed_min_max.wast:155
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x69\x6e\x5f\x63\x6d\x70\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:155");  // assert_return(() => call($1, "f64x2.relaxed_min_cmp", [v128("0 0 0 -2_147_483_648"), v128("0 -2_147_483_648 0 0")]), "relaxed_min_max.wast:155", v128("-1n -1n"))

// relaxed_min_max.wast:160
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x69\x6e\x5f\x63\x6d\x70\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:160");  // assert_return(() => call($1, "f64x2.relaxed_min_cmp", [v128("0 0 0 -2_147_483_648"), v128("0 0 0 -2_147_483_648")]), "relaxed_min_max.wast:160", v128("-1n -1n"))

// relaxed_min_max.wast:165
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x61\x78\x5f\x63\x6d\x70\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf8\x7f\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:165");  // assert_return(() => call($1, "f64x2.relaxed_max_cmp", [v128("0 -524_288 0 2_146_959_360"), v128("0 0 0 0")]), "relaxed_min_max.wast:165", v128("-1n -1n"))

// relaxed_min_max.wast:170
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x61\x78\x5f\x63\x6d\x70\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:170");  // assert_return(() => call($1, "f64x2.relaxed_max_cmp", [v128("0 0 0 0"), v128("0 -524_288 0 2_146_959_360")]), "relaxed_min_max.wast:170", v128("-1n -1n"))

// relaxed_min_max.wast:175
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x61\x78\x5f\x63\x6d\x70\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:175");  // assert_return(() => call($1, "f64x2.relaxed_max_cmp", [v128("0 0 0 -2_147_483_648"), v128("0 -2_147_483_648 0 0")]), "relaxed_min_max.wast:175", v128("-1n -1n"))

// relaxed_min_max.wast:180
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x66\x36\x34\x78\x32\x2e\x72\x65\x6c\x61\x78\x65\x64\x5f\x6d\x61\x78\x5f\x63\x6d\x70\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "relaxed_min_max.wast:180");  // assert_return(() => call($1, "f64x2.relaxed_max_cmp", [v128("0 0 0 -2_147_483_648"), v128("0 0 0 -2_147_483_648")]), "relaxed_min_max.wast:180", v128("-1n -1n"))
reinitializeRegistry();
})();
