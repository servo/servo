(function type_subtyping_wast_js() {

// type-subtyping.wast:3
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa8\x80\x80\x80\x00\x07\x50\x00\x5e\x7f\x00\x50\x01\x00\x5e\x7f\x00\x50\x00\x5e\x6e\x00\x50\x00\x5e\x63\x00\x00\x50\x00\x5e\x64\x01\x00\x50\x00\x5e\x7f\x01\x50\x01\x05\x5e\x7f\x01", "type-subtyping.wast:3");

// type-subtyping.wast:3
let $1 = instance($$1);

// type-subtyping.wast:15
let $$2 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xb3\x80\x80\x80\x00\x06\x50\x00\x5f\x00\x50\x01\x00\x5f\x00\x50\x01\x01\x5f\x01\x7f\x00\x50\x01\x02\x5f\x02\x7f\x00\x63\x00\x00\x50\x01\x03\x5f\x03\x7f\x00\x64\x00\x00\x7e\x01\x50\x01\x04\x5f\x03\x7f\x00\x64\x01\x00\x7e\x01", "type-subtyping.wast:15");

// type-subtyping.wast:15
let $2 = instance($$2);

// type-subtyping.wast:24
let $$3 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xaf\x80\x80\x80\x00\x06\x50\x00\x5f\x00\x50\x01\x00\x5f\x00\x50\x00\x60\x01\x64\x01\x01\x6e\x50\x01\x02\x60\x01\x64\x00\x01\x64\x6e\x50\x01\x03\x60\x01\x63\x00\x01\x64\x00\x50\x01\x04\x60\x01\x6b\x01\x64\x01", "type-subtyping.wast:24");

// type-subtyping.wast:24
let $3 = instance($$3);

// type-subtyping.wast:37
let $$4 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x99\x80\x80\x80\x00\x03\x50\x00\x5f\x01\x6e\x00\x50\x01\x00\x5f\x01\x64\x01\x00\x50\x01\x01\x5f\x02\x64\x01\x00\x7f\x00", "type-subtyping.wast:37");

// type-subtyping.wast:37
let $4 = instance($$4);

// type-subtyping.wast:43
let $$5 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa0\x80\x80\x80\x00\x02\x50\x00\x5f\x02\x7f\x00\x64\x00\x00\x4e\x02\x50\x01\x00\x5f\x02\x7f\x00\x64\x02\x00\x50\x01\x00\x5f\x02\x7f\x00\x64\x01\x00", "type-subtyping.wast:43");

// type-subtyping.wast:43
let $5 = instance($$5);

// type-subtyping.wast:53
let $$6 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xbb\x80\x80\x80\x00\x02\x4e\x02\x50\x00\x5f\x02\x7f\x00\x64\x01\x00\x50\x00\x5f\x02\x7e\x00\x64\x00\x00\x4e\x03\x50\x01\x01\x5f\x03\x7e\x00\x64\x00\x00\x7f\x00\x50\x01\x00\x5f\x03\x7f\x00\x64\x01\x00\x7f\x00\x50\x01\x01\x5f\x03\x7e\x00\x64\x03\x00\x7f\x00", "type-subtyping.wast:53");

// type-subtyping.wast:53
let $6 = instance($$6);

// type-subtyping.wast:68
let $$7 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xac\x80\x80\x80\x00\x04\x4e\x03\x50\x00\x60\x02\x7f\x64\x02\x00\x50\x01\x00\x60\x02\x7f\x64\x01\x00\x50\x01\x01\x60\x02\x7f\x64\x00\x00\x60\x01\x64\x00\x00\x60\x01\x64\x01\x00\x60\x01\x64\x02\x00\x03\x84\x80\x80\x80\x00\x03\x03\x04\x05\x0a\xae\x80\x80\x80\x00\x03\x86\x80\x80\x80\x00\x00\x20\x00\x10\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x10\x00\x20\x00\x10\x01\x0b\x8e\x80\x80\x80\x00\x00\x20\x00\x10\x00\x20\x00\x10\x01\x20\x00\x10\x02\x0b", "type-subtyping.wast:68");

// type-subtyping.wast:68
let $7 = instance($$7);

// type-subtyping.wast:89
let $$8 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xc8\x80\x80\x80\x00\x05\x4e\x02\x50\x00\x60\x00\x02\x7f\x64\x01\x50\x00\x60\x00\x02\x7d\x64\x00\x4e\x04\x50\x01\x00\x60\x00\x02\x7f\x64\x05\x50\x01\x01\x60\x00\x02\x7d\x64\x04\x50\x01\x00\x60\x00\x02\x7f\x64\x03\x50\x01\x01\x60\x00\x02\x7d\x64\x02\x60\x01\x64\x00\x00\x60\x01\x64\x02\x00\x60\x01\x64\x04\x00\x03\x84\x80\x80\x80\x00\x03\x06\x07\x08\x0a\xaa\x80\x80\x80\x00\x03\x86\x80\x80\x80\x00\x00\x20\x00\x10\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x10\x00\x20\x00\x10\x01\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x10\x00\x20\x00\x10\x02\x0b", "type-subtyping.wast:89");

// type-subtyping.wast:89
let $8 = instance($$8);

// type-subtyping.wast:115
let $$9 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xad\x80\x80\x80\x00\x04\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x02\x00\x4e\x02\x50\x01\x00\x60\x00\x00\x5f\x00\x4e\x02\x50\x01\x02\x60\x00\x00\x5f\x00\x03\x82\x80\x80\x80\x00\x01\x06\x06\x87\x80\x80\x80\x00\x01\x64\x04\x00\xd2\x00\x0b\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "type-subtyping.wast:115");

// type-subtyping.wast:115
let $9 = instance($$9);

// type-subtyping.wast:124
let $$10 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xd5\x80\x80\x80\x00\x04\x4e\x02\x50\x00\x60\x00\x00\x50\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x00\x5f\x01\x64\x02\x00\x4e\x02\x50\x01\x00\x60\x00\x00\x50\x01\x01\x5f\x05\x64\x00\x00\x64\x00\x00\x64\x02\x00\x64\x02\x00\x64\x04\x00\x4e\x02\x50\x01\x02\x60\x00\x00\x50\x01\x03\x5f\x05\x64\x00\x00\x64\x02\x00\x64\x00\x00\x64\x02\x00\x64\x06\x00\x03\x82\x80\x80\x80\x00\x01\x06\x06\x87\x80\x80\x80\x00\x01\x64\x04\x00\xd2\x00\x0b\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "type-subtyping.wast:124");

// type-subtyping.wast:124
let $10 = instance($$10);

// type-subtyping.wast:139
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xad\x80\x80\x80\x00\x04\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x01\x00\x60\x00\x00\x5f\x00\x4e\x02\x50\x01\x02\x60\x00\x00\x5f\x00\x03\x82\x80\x80\x80\x00\x01\x06\x06\x87\x80\x80\x80\x00\x01\x64\x04\x00\xd2\x00\x0b\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "type-subtyping.wast:139");

// type-subtyping.wast:151
let $$11 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa3\x80\x80\x80\x00\x03\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x02\x00\x4e\x02\x50\x01\x00\x60\x00\x00\x5f\x00\x03\x82\x80\x80\x80\x00\x01\x04\x06\x87\x80\x80\x80\x00\x01\x64\x00\x00\xd2\x00\x0b\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "type-subtyping.wast:151");

// type-subtyping.wast:151
let $11 = instance($$11);

// type-subtyping.wast:159
let $$12 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xdf\x80\x80\x80\x00\x05\x4e\x02\x50\x00\x60\x00\x00\x50\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x00\x5f\x01\x64\x02\x00\x4e\x02\x50\x01\x00\x60\x00\x00\x50\x01\x01\x5f\x05\x64\x00\x00\x64\x00\x00\x64\x02\x00\x64\x02\x00\x64\x04\x00\x4e\x02\x50\x01\x02\x60\x00\x00\x50\x01\x03\x5f\x05\x64\x00\x00\x64\x02\x00\x64\x00\x00\x64\x02\x00\x64\x06\x00\x4e\x02\x50\x01\x06\x60\x00\x00\x5f\x00\x03\x82\x80\x80\x80\x00\x01\x08\x06\x8d\x80\x80\x80\x00\x02\x64\x00\x00\xd2\x00\x0b\x64\x04\x00\xd2\x00\x0b\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "type-subtyping.wast:159");

// type-subtyping.wast:159
let $12 = instance($$12);

// type-subtyping.wast:177
let $$13 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa3\x80\x80\x80\x00\x02\x4e\x02\x50\x00\x60\x00\x01\x64\x70\x50\x01\x00\x60\x00\x01\x64\x00\x4e\x02\x50\x00\x60\x00\x01\x64\x70\x50\x01\x02\x60\x00\x01\x64\x02\x03\x83\x80\x80\x80\x00\x02\x00\x01\x06\x99\x80\x80\x80\x00\x04\x64\x00\x00\xd2\x00\x0b\x64\x02\x00\xd2\x00\x0b\x64\x01\x00\xd2\x01\x0b\x64\x03\x00\xd2\x01\x0b\x0a\x91\x80\x80\x80\x00\x02\x83\x80\x80\x80\x00\x00\x00\x0b\x83\x80\x80\x80\x00\x00\x00\x0b", "type-subtyping.wast:177");

// type-subtyping.wast:177
let $13 = instance($$13);

// type-subtyping.wast:188
let $$14 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xc7\x80\x80\x80\x00\x04\x4e\x02\x50\x00\x60\x00\x01\x64\x70\x50\x01\x00\x60\x00\x01\x64\x00\x4e\x02\x50\x00\x60\x00\x01\x64\x70\x50\x01\x02\x60\x00\x01\x64\x02\x4e\x02\x50\x01\x00\x60\x00\x01\x64\x70\x50\x01\x04\x60\x00\x01\x64\x04\x4e\x02\x50\x01\x02\x60\x00\x01\x64\x70\x50\x01\x06\x60\x00\x01\x64\x06\x03\x83\x80\x80\x80\x00\x02\x04\x05\x06\xb1\x80\x80\x80\x00\x08\x64\x00\x00\xd2\x00\x0b\x64\x02\x00\xd2\x00\x0b\x64\x00\x00\xd2\x01\x0b\x64\x02\x00\xd2\x01\x0b\x64\x04\x00\xd2\x00\x0b\x64\x06\x00\xd2\x00\x0b\x64\x05\x00\xd2\x01\x0b\x64\x07\x00\xd2\x01\x0b\x0a\x91\x80\x80\x80\x00\x02\x83\x80\x80\x80\x00\x00\x00\x0b\x83\x80\x80\x80\x00\x00\x00\x0b", "type-subtyping.wast:188");

// type-subtyping.wast:188
let $14 = instance($$14);

// type-subtyping.wast:205
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x9b\x80\x80\x80\x00\x02\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x00\x60\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x00\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x02\x06\x87\x80\x80\x80\x00\x01\x64\x00\x00\xd2\x00\x0b\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "type-subtyping.wast:205");

// type-subtyping.wast:215
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa8\x80\x80\x80\x00\x03\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x00\x60\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x00\x60\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x02\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x04\x06\x87\x80\x80\x80\x00\x01\x64\x02\x00\xd2\x00\x0b\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "type-subtyping.wast:215");

// type-subtyping.wast:229
let $$15 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x9a\x80\x80\x80\x00\x04\x50\x00\x60\x00\x01\x70\x50\x01\x00\x60\x00\x01\x63\x01\x50\x01\x01\x60\x00\x01\x63\x02\x60\x00\x00\x03\x8b\x80\x80\x80\x00\x0a\x00\x01\x02\x03\x03\x03\x03\x03\x03\x03\x04\x85\x80\x80\x80\x00\x01\x70\x01\x03\x03\x07\xb7\x80\x80\x80\x00\x07\x03\x72\x75\x6e\x00\x03\x05\x66\x61\x69\x6c\x31\x00\x04\x05\x66\x61\x69\x6c\x32\x00\x05\x05\x66\x61\x69\x6c\x33\x00\x06\x05\x66\x61\x69\x6c\x34\x00\x07\x05\x66\x61\x69\x6c\x35\x00\x08\x05\x66\x61\x69\x6c\x36\x00\x09\x09\x8f\x80\x80\x80\x00\x01\x04\x41\x00\x0b\x03\xd2\x00\x0b\xd2\x01\x0b\xd2\x02\x0b\x0a\x80\x82\x80\x80\x00\x0a\x84\x80\x80\x80\x00\x00\xd0\x70\x0b\x84\x80\x80\x80\x00\x00\xd0\x01\x0b\x84\x80\x80\x80\x00\x00\xd0\x02\x0b\xf9\x80\x80\x80\x00\x00\x02\x70\x41\x00\x11\x00\x00\x0b\x02\x70\x41\x01\x11\x00\x00\x0b\x02\x70\x41\x02\x11\x00\x00\x0b\x02\x63\x01\x41\x01\x11\x01\x00\x0b\x02\x63\x01\x41\x02\x11\x01\x00\x0b\x02\x63\x02\x41\x02\x11\x02\x00\x0b\x02\x63\x00\x41\x00\x25\x00\xfb\x16\x00\x0b\x02\x63\x00\x41\x01\x25\x00\xfb\x16\x00\x0b\x02\x63\x00\x41\x02\x25\x00\xfb\x16\x00\x0b\x02\x63\x01\x41\x01\x25\x00\xfb\x16\x01\x0b\x02\x63\x01\x41\x02\x25\x00\xfb\x16\x01\x0b\x02\x63\x02\x41\x02\x25\x00\xfb\x16\x02\x0b\x0c\x00\x0b\x8d\x80\x80\x80\x00\x00\x02\x63\x01\x41\x00\x11\x01\x00\x0b\x0c\x00\x0b\x8d\x80\x80\x80\x00\x00\x02\x63\x01\x41\x00\x11\x02\x00\x0b\x0c\x00\x0b\x8d\x80\x80\x80\x00\x00\x02\x63\x01\x41\x01\x11\x02\x00\x0b\x0c\x00\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x25\x00\xfb\x16\x01\x0c\x00\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x25\x00\xfb\x16\x02\x0c\x00\x0b\x8b\x80\x80\x80\x00\x00\x41\x01\x25\x00\xfb\x16\x02\x0c\x00\x0b", "type-subtyping.wast:229");

// type-subtyping.wast:229
let $15 = instance($$15);

// type-subtyping.wast:282
assert_return(() => call($15, "run", []), "type-subtyping.wast:282");

// type-subtyping.wast:283
assert_trap(() => call($15, "fail1", []), "type-subtyping.wast:283");

// type-subtyping.wast:284
assert_trap(() => call($15, "fail2", []), "type-subtyping.wast:284");

// type-subtyping.wast:285
assert_trap(() => call($15, "fail3", []), "type-subtyping.wast:285");

// type-subtyping.wast:286
assert_trap(() => call($15, "fail4", []), "type-subtyping.wast:286");

// type-subtyping.wast:287
assert_trap(() => call($15, "fail5", []), "type-subtyping.wast:287");

// type-subtyping.wast:288
assert_trap(() => call($15, "fail6", []), "type-subtyping.wast:288");

// type-subtyping.wast:290
let $$16 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x50\x00\x60\x00\x00\x60\x00\x00\x03\x87\x80\x80\x80\x00\x06\x00\x01\x01\x01\x01\x01\x04\x85\x80\x80\x80\x00\x01\x70\x01\x02\x02\x07\xa1\x80\x80\x80\x00\x04\x05\x66\x61\x69\x6c\x31\x00\x02\x05\x66\x61\x69\x6c\x32\x00\x03\x05\x66\x61\x69\x6c\x33\x00\x04\x05\x66\x61\x69\x6c\x34\x00\x05\x09\x8c\x80\x80\x80\x00\x01\x04\x41\x00\x0b\x02\xd2\x00\x0b\xd2\x01\x0b\x0a\xcb\x80\x80\x80\x00\x06\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x8a\x80\x80\x80\x00\x00\x02\x40\x41\x01\x11\x00\x00\x0b\x0b\x8a\x80\x80\x80\x00\x00\x02\x40\x41\x00\x11\x01\x00\x0b\x0b\x8a\x80\x80\x80\x00\x00\x41\x01\x25\x00\xfb\x16\x00\x1a\x0b\x8a\x80\x80\x80\x00\x00\x41\x00\x25\x00\xfb\x16\x01\x1a\x0b", "type-subtyping.wast:290");

// type-subtyping.wast:290
let $16 = instance($$16);

// type-subtyping.wast:314
assert_trap(() => call($16, "fail1", []), "type-subtyping.wast:314");

// type-subtyping.wast:315
assert_trap(() => call($16, "fail2", []), "type-subtyping.wast:315");

// type-subtyping.wast:316
assert_trap(() => call($16, "fail3", []), "type-subtyping.wast:316");

// type-subtyping.wast:317
assert_trap(() => call($16, "fail4", []), "type-subtyping.wast:317");

// type-subtyping.wast:319
let $$17 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x50\x00\x60\x00\x00\x50\x01\x00\x60\x00\x00\x50\x01\x01\x60\x00\x00\x60\x00\x00\x03\x86\x80\x80\x80\x00\x05\x01\x02\x03\x03\x03\x04\x86\x80\x80\x80\x00\x01\x63\x01\x01\x02\x02\x07\x97\x80\x80\x80\x00\x03\x03\x72\x75\x6e\x00\x02\x05\x66\x61\x69\x6c\x31\x00\x03\x05\x66\x61\x69\x6c\x32\x00\x04\x09\x8f\x80\x80\x80\x00\x01\x06\x00\x41\x00\x0b\x63\x01\x02\xd2\x00\x0b\xd2\x01\x0b\x0a\xc7\x80\x80\x80\x00\x05\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x9b\x80\x80\x80\x00\x00\x41\x00\x11\x00\x00\x41\x01\x11\x00\x00\x41\x00\x11\x01\x00\x41\x01\x11\x01\x00\x41\x01\x11\x02\x00\x0b\x87\x80\x80\x80\x00\x00\x41\x00\x11\x02\x00\x0b\x87\x80\x80\x80\x00\x00\x41\x00\x11\x03\x00\x0b", "type-subtyping.wast:319");

// type-subtyping.wast:319
let $17 = instance($$17);

// type-subtyping.wast:344
assert_return(() => call($17, "run", []), "type-subtyping.wast:344");

// type-subtyping.wast:345
assert_trap(() => call($17, "fail1", []), "type-subtyping.wast:345");

// type-subtyping.wast:346
assert_trap(() => call($17, "fail2", []), "type-subtyping.wast:346");

// type-subtyping.wast:348
let $$18 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xb1\x80\x80\x80\x00\x05\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x02\x00\x4e\x02\x50\x01\x00\x60\x00\x00\x5f\x00\x4e\x02\x50\x01\x02\x60\x00\x00\x5f\x00\x60\x00\x01\x7f\x03\x83\x80\x80\x80\x00\x02\x06\x08\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x09\x85\x80\x80\x80\x00\x01\x03\x00\x01\x00\x0a\x94\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x87\x80\x80\x80\x00\x00\xd2\x00\xfb\x14\x04\x0b", "type-subtyping.wast:348");

// type-subtyping.wast:348
let $18 = instance($$18);

// type-subtyping.wast:358
assert_return(() => call($18, "run", []), "type-subtyping.wast:358", 1);

// type-subtyping.wast:360
let $$19 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xd9\x80\x80\x80\x00\x05\x4e\x02\x50\x00\x60\x00\x00\x50\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x00\x5f\x01\x64\x02\x00\x4e\x02\x50\x01\x00\x60\x00\x00\x50\x01\x01\x5f\x05\x64\x00\x00\x64\x00\x00\x64\x02\x00\x64\x02\x00\x64\x04\x00\x4e\x02\x50\x01\x02\x60\x00\x00\x50\x01\x03\x5f\x05\x64\x00\x00\x64\x02\x00\x64\x00\x00\x64\x02\x00\x64\x06\x00\x60\x00\x01\x7f\x03\x83\x80\x80\x80\x00\x02\x06\x08\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x09\x85\x80\x80\x80\x00\x01\x03\x00\x01\x00\x0a\x94\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x87\x80\x80\x80\x00\x00\xd2\x00\xfb\x14\x04\x0b", "type-subtyping.wast:360");

// type-subtyping.wast:360
let $19 = instance($$19);

// type-subtyping.wast:376
assert_return(() => call($19, "run", []), "type-subtyping.wast:376", 1);

// type-subtyping.wast:378
let $$20 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xb1\x80\x80\x80\x00\x05\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x01\x00\x60\x00\x00\x5f\x00\x4e\x02\x50\x01\x02\x60\x00\x00\x5f\x00\x60\x00\x01\x7f\x03\x83\x80\x80\x80\x00\x02\x06\x08\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x09\x85\x80\x80\x80\x00\x01\x03\x00\x01\x00\x0a\x94\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x87\x80\x80\x80\x00\x00\xd2\x00\xfb\x14\x04\x0b", "type-subtyping.wast:378");

// type-subtyping.wast:378
let $20 = instance($$20);

// type-subtyping.wast:388
assert_return(() => call($20, "run", []), "type-subtyping.wast:388", 0);

// type-subtyping.wast:390
let $$21 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa7\x80\x80\x80\x00\x04\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x02\x00\x4e\x02\x50\x01\x00\x60\x00\x00\x5f\x00\x60\x00\x01\x7f\x03\x83\x80\x80\x80\x00\x02\x04\x06\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x09\x85\x80\x80\x80\x00\x01\x03\x00\x01\x00\x0a\x94\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x87\x80\x80\x80\x00\x00\xd2\x00\xfb\x14\x00\x0b", "type-subtyping.wast:390");

// type-subtyping.wast:390
let $21 = instance($$21);

// type-subtyping.wast:399
assert_return(() => call($21, "run", []), "type-subtyping.wast:399", 1);

// type-subtyping.wast:401
let $$22 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xe4\x80\x80\x80\x00\x06\x4e\x02\x50\x00\x60\x00\x00\x50\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x00\x5f\x01\x64\x02\x00\x4e\x02\x50\x01\x00\x60\x00\x00\x50\x01\x01\x5f\x05\x64\x00\x00\x64\x00\x00\x64\x02\x00\x64\x02\x00\x64\x04\x00\x4e\x02\x50\x01\x02\x60\x00\x00\x50\x01\x03\x5f\x05\x64\x00\x00\x64\x02\x00\x64\x00\x00\x64\x02\x00\x64\x06\x00\x4e\x02\x50\x01\x06\x60\x00\x00\x5f\x00\x60\x00\x02\x7f\x7f\x03\x83\x80\x80\x80\x00\x02\x08\x0a\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x09\x85\x80\x80\x80\x00\x01\x03\x00\x01\x00\x0a\x99\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\xd2\x00\xfb\x14\x00\xd2\x00\xfb\x14\x04\x0b", "type-subtyping.wast:401");

// type-subtyping.wast:401
let $22 = instance($$22);

// type-subtyping.wast:419
assert_return(() => call($22, "run", []), "type-subtyping.wast:419", 1, 1);

// type-subtyping.wast:422
let $$23 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xaa\x80\x80\x80\x00\x03\x4e\x02\x50\x00\x60\x00\x01\x64\x70\x50\x01\x00\x60\x00\x01\x64\x00\x4e\x02\x50\x00\x60\x00\x01\x64\x70\x50\x01\x02\x60\x00\x01\x64\x02\x60\x00\x04\x7f\x7f\x7f\x7f\x03\x84\x80\x80\x80\x00\x03\x00\x01\x04\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x02\x09\x89\x80\x80\x80\x00\x02\x03\x00\x01\x00\x03\x00\x01\x01\x0a\xac\x80\x80\x80\x00\x03\x83\x80\x80\x80\x00\x00\x00\x0b\x83\x80\x80\x80\x00\x00\x00\x0b\x96\x80\x80\x80\x00\x00\xd2\x00\xfb\x14\x00\xd2\x00\xfb\x14\x02\xd2\x01\xfb\x14\x01\xd2\x01\xfb\x14\x03\x0b", "type-subtyping.wast:422");

// type-subtyping.wast:422
let $23 = instance($$23);

// type-subtyping.wast:434
assert_return(() => call($23, "run", []), "type-subtyping.wast:434", 1, 1, 1, 1);

// type-subtyping.wast:438
let $$24 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xd2\x80\x80\x80\x00\x05\x4e\x02\x50\x00\x60\x00\x01\x64\x70\x50\x01\x00\x60\x00\x01\x64\x00\x4e\x02\x50\x00\x60\x00\x01\x64\x70\x50\x01\x02\x60\x00\x01\x64\x02\x4e\x02\x50\x01\x00\x60\x00\x01\x64\x70\x50\x01\x04\x60\x00\x01\x64\x04\x4e\x02\x50\x01\x02\x60\x00\x01\x64\x70\x50\x01\x06\x60\x00\x01\x64\x06\x60\x00\x08\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x03\x84\x80\x80\x80\x00\x03\x04\x05\x08\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x02\x09\x89\x80\x80\x80\x00\x02\x03\x00\x01\x00\x03\x00\x01\x01\x0a\xc0\x80\x80\x80\x00\x03\x83\x80\x80\x80\x00\x00\x00\x0b\x83\x80\x80\x80\x00\x00\x00\x0b\xaa\x80\x80\x80\x00\x00\xd2\x00\xfb\x14\x00\xd2\x00\xfb\x14\x02\xd2\x01\xfb\x14\x00\xd2\x01\xfb\x14\x02\xd2\x00\xfb\x14\x04\xd2\x00\xfb\x14\x06\xd2\x01\xfb\x14\x05\xd2\x01\xfb\x14\x07\x0b", "type-subtyping.wast:438");

// type-subtyping.wast:438
let $24 = instance($$24);

// type-subtyping.wast:456
assert_return(() => call($24, "run", []), "type-subtyping.wast:456", 1, 1, 1, 1, 1, 1, 1, 1);

// type-subtyping.wast:461
let $$25 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x9f\x80\x80\x80\x00\x03\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x00\x60\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x00\x60\x00\x00\x60\x00\x01\x7f\x03\x83\x80\x80\x80\x00\x02\x02\x04\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x09\x85\x80\x80\x80\x00\x01\x03\x00\x01\x00\x0a\x94\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x87\x80\x80\x80\x00\x00\xd2\x00\xfb\x14\x00\x0b", "type-subtyping.wast:461");

// type-subtyping.wast:461
let $25 = instance($$25);

// type-subtyping.wast:469
assert_return(() => call($25, "run", []), "type-subtyping.wast:469", 0);

// type-subtyping.wast:471
let $$26 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xac\x80\x80\x80\x00\x04\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x00\x60\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x00\x60\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x02\x60\x00\x00\x60\x00\x01\x7f\x03\x83\x80\x80\x80\x00\x02\x04\x06\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x09\x85\x80\x80\x80\x00\x01\x03\x00\x01\x00\x0a\x94\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x87\x80\x80\x80\x00\x00\xd2\x00\xfb\x14\x02\x0b", "type-subtyping.wast:471");

// type-subtyping.wast:471
let $26 = instance($$26);

// type-subtyping.wast:480
assert_return(() => call($26, "run", []), "type-subtyping.wast:480", 0);

// type-subtyping.wast:486
let $$27 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x97\x80\x80\x80\x00\x03\x50\x00\x60\x00\x01\x70\x50\x01\x00\x60\x00\x01\x63\x01\x50\x01\x01\x60\x00\x01\x63\x02\x03\x84\x80\x80\x80\x00\x03\x00\x01\x02\x07\x90\x80\x80\x80\x00\x03\x02\x66\x30\x00\x00\x02\x66\x31\x00\x01\x02\x66\x32\x00\x02\x0a\x9c\x80\x80\x80\x00\x03\x84\x80\x80\x80\x00\x00\xd0\x70\x0b\x84\x80\x80\x80\x00\x00\xd0\x01\x0b\x84\x80\x80\x80\x00\x00\xd0\x02\x0b", "type-subtyping.wast:486");

// type-subtyping.wast:486
let $27 = instance($$27);

// type-subtyping.wast:495
register("M", $27)

// type-subtyping.wast:497
let $$28 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x97\x80\x80\x80\x00\x03\x50\x00\x60\x00\x01\x70\x50\x01\x00\x60\x00\x01\x63\x01\x50\x01\x01\x60\x00\x01\x63\x02\x02\xab\x80\x80\x80\x00\x06\x01\x4d\x02\x66\x30\x00\x00\x01\x4d\x02\x66\x31\x00\x00\x01\x4d\x02\x66\x31\x00\x01\x01\x4d\x02\x66\x32\x00\x00\x01\x4d\x02\x66\x32\x00\x01\x01\x4d\x02\x66\x32\x00\x02", "type-subtyping.wast:497");

// type-subtyping.wast:497
let $28 = instance($$28);

// type-subtyping.wast:511
let $$29 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x97\x80\x80\x80\x00\x03\x50\x00\x60\x00\x01\x70\x50\x01\x00\x60\x00\x01\x63\x01\x50\x01\x01\x60\x00\x01\x63\x02\x02\x88\x80\x80\x80\x00\x01\x01\x4d\x02\x66\x30\x00\x01", "type-subtyping.wast:511");

// type-subtyping.wast:510
assert_unlinkable($$29);

// type-subtyping.wast:521
let $$30 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x97\x80\x80\x80\x00\x03\x50\x00\x60\x00\x01\x70\x50\x01\x00\x60\x00\x01\x63\x01\x50\x01\x01\x60\x00\x01\x63\x02\x02\x88\x80\x80\x80\x00\x01\x01\x4d\x02\x66\x30\x00\x02", "type-subtyping.wast:521");

// type-subtyping.wast:520
assert_unlinkable($$30);

// type-subtyping.wast:531
let $$31 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x97\x80\x80\x80\x00\x03\x50\x00\x60\x00\x01\x70\x50\x01\x00\x60\x00\x01\x63\x01\x50\x01\x01\x60\x00\x01\x63\x02\x02\x88\x80\x80\x80\x00\x01\x01\x4d\x02\x66\x31\x00\x02", "type-subtyping.wast:531");

// type-subtyping.wast:530
assert_unlinkable($$31);

// type-subtyping.wast:540
let $$32 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x50\x00\x60\x00\x00\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x01\x07\x8b\x80\x80\x80\x00\x02\x02\x66\x31\x00\x00\x02\x66\x32\x00\x01\x0a\x8f\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b", "type-subtyping.wast:540");

// type-subtyping.wast:540
let $29 = instance($$32);

// type-subtyping.wast:546
register("M2", $29)

// type-subtyping.wast:549
let $$33 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x50\x00\x60\x00\x00\x60\x00\x00\x02\x89\x80\x80\x80\x00\x01\x02\x4d\x32\x02\x66\x31\x00\x01", "type-subtyping.wast:549");

// type-subtyping.wast:548
assert_unlinkable($$33);

// type-subtyping.wast:557
let $$34 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x50\x00\x60\x00\x00\x60\x00\x00\x02\x89\x80\x80\x80\x00\x01\x02\x4d\x32\x02\x66\x32\x00\x00", "type-subtyping.wast:557");

// type-subtyping.wast:556
assert_unlinkable($$34);

// type-subtyping.wast:566
let $$35 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x97\x80\x80\x80\x00\x02\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x01\x00\x60\x00\x00\x5f\x00\x03\x82\x80\x80\x80\x00\x01\x02\x07\x85\x80\x80\x80\x00\x01\x01\x67\x00\x00\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "type-subtyping.wast:566");

// type-subtyping.wast:566
let $30 = instance($$35);

// type-subtyping.wast:571
register("M3", $30)

// type-subtyping.wast:572
let $$36 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x97\x80\x80\x80\x00\x02\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x01\x00\x60\x00\x00\x5f\x00\x02\x88\x80\x80\x80\x00\x01\x02\x4d\x33\x01\x67\x00\x02", "type-subtyping.wast:572");

// type-subtyping.wast:572
let $31 = instance($$36);

// type-subtyping.wast:578
let $$37 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xb9\x80\x80\x80\x00\x03\x4e\x02\x50\x00\x60\x00\x00\x50\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x00\x5f\x01\x64\x02\x00\x4e\x02\x50\x01\x02\x60\x00\x00\x50\x01\x03\x5f\x05\x64\x00\x00\x64\x02\x00\x64\x00\x00\x64\x02\x00\x64\x04\x00\x03\x82\x80\x80\x80\x00\x01\x04\x07\x85\x80\x80\x80\x00\x01\x01\x67\x00\x00\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "type-subtyping.wast:578");

// type-subtyping.wast:578
let $32 = instance($$37);

// type-subtyping.wast:587
register("M4", $32)

// type-subtyping.wast:588
let $$38 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xb9\x80\x80\x80\x00\x03\x4e\x02\x50\x00\x60\x00\x00\x50\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x00\x5f\x01\x64\x02\x00\x4e\x02\x50\x01\x00\x60\x00\x00\x50\x01\x01\x5f\x05\x64\x00\x00\x64\x00\x00\x64\x02\x00\x64\x02\x00\x64\x04\x00\x02\x88\x80\x80\x80\x00\x01\x02\x4d\x34\x01\x67\x00\x04", "type-subtyping.wast:588");

// type-subtyping.wast:588
let $33 = instance($$38);

// type-subtyping.wast:598
let $$39 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa3\x80\x80\x80\x00\x03\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x01\x02\x60\x00\x00\x5f\x00\x03\x82\x80\x80\x80\x00\x01\x04\x07\x85\x80\x80\x80\x00\x01\x01\x67\x00\x00\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "type-subtyping.wast:598");

// type-subtyping.wast:598
let $34 = instance($$39);

// type-subtyping.wast:604
register("M5", $34)

// type-subtyping.wast:606
let $$40 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x97\x80\x80\x80\x00\x02\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x01\x00\x60\x00\x00\x5f\x00\x02\x88\x80\x80\x80\x00\x01\x02\x4d\x35\x01\x67\x00\x02", "type-subtyping.wast:606");

// type-subtyping.wast:605
assert_unlinkable($$40);

// type-subtyping.wast:614
let $$41 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa3\x80\x80\x80\x00\x03\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x02\x00\x4e\x02\x50\x01\x00\x60\x00\x00\x5f\x00\x03\x82\x80\x80\x80\x00\x01\x04\x07\x85\x80\x80\x80\x00\x01\x01\x67\x00\x00\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "type-subtyping.wast:614");

// type-subtyping.wast:614
let $35 = instance($$41);

// type-subtyping.wast:620
register("M6", $35)

// type-subtyping.wast:621
let $$42 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa3\x80\x80\x80\x00\x03\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x5f\x01\x64\x02\x00\x4e\x02\x50\x01\x00\x60\x00\x00\x5f\x00\x02\x88\x80\x80\x80\x00\x01\x02\x4d\x36\x01\x67\x00\x00", "type-subtyping.wast:621");

// type-subtyping.wast:621
let $36 = instance($$42);

// type-subtyping.wast:628
let $$43 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xc3\x80\x80\x80\x00\x04\x4e\x02\x50\x00\x60\x00\x00\x50\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x00\x5f\x01\x64\x02\x00\x4e\x02\x50\x01\x02\x60\x00\x00\x50\x01\x03\x5f\x05\x64\x00\x00\x64\x02\x00\x64\x00\x00\x64\x02\x00\x64\x04\x00\x4e\x02\x50\x01\x04\x60\x00\x00\x5f\x00\x03\x82\x80\x80\x80\x00\x01\x06\x07\x85\x80\x80\x80\x00\x01\x01\x68\x00\x00\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "type-subtyping.wast:628");

// type-subtyping.wast:628
let $37 = instance($$43);

// type-subtyping.wast:638
register("M7", $37)

// type-subtyping.wast:639
let $$44 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xc3\x80\x80\x80\x00\x04\x4e\x02\x50\x00\x60\x00\x00\x50\x00\x5f\x01\x64\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x00\x5f\x01\x64\x02\x00\x4e\x02\x50\x01\x00\x60\x00\x00\x50\x01\x01\x5f\x05\x64\x00\x00\x64\x00\x00\x64\x02\x00\x64\x02\x00\x64\x04\x00\x4e\x02\x50\x01\x04\x60\x00\x00\x5f\x00\x02\x8f\x80\x80\x80\x00\x02\x02\x4d\x37\x01\x68\x00\x00\x02\x4d\x37\x01\x68\x00\x04", "type-subtyping.wast:639");

// type-subtyping.wast:639
let $38 = instance($$44);

// type-subtyping.wast:652
let $$45 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa3\x80\x80\x80\x00\x02\x4e\x02\x50\x00\x60\x00\x01\x64\x70\x50\x01\x00\x60\x00\x01\x64\x00\x4e\x02\x50\x00\x60\x00\x01\x64\x70\x50\x01\x02\x60\x00\x01\x64\x02\x03\x83\x80\x80\x80\x00\x02\x00\x01\x07\x8d\x80\x80\x80\x00\x02\x03\x66\x31\x31\x00\x00\x03\x66\x31\x32\x00\x01\x0a\x91\x80\x80\x80\x00\x02\x83\x80\x80\x80\x00\x00\x00\x0b\x83\x80\x80\x80\x00\x00\x00\x0b", "type-subtyping.wast:652");

// type-subtyping.wast:652
let $39 = instance($$45);

// type-subtyping.wast:658
register("M8", $39)

// type-subtyping.wast:659
let $$46 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa3\x80\x80\x80\x00\x02\x4e\x02\x50\x00\x60\x00\x01\x64\x70\x50\x01\x00\x60\x00\x01\x64\x00\x4e\x02\x50\x00\x60\x00\x01\x64\x70\x50\x01\x02\x60\x00\x01\x64\x02\x02\xa5\x80\x80\x80\x00\x04\x02\x4d\x38\x03\x66\x31\x31\x00\x00\x02\x4d\x38\x03\x66\x31\x31\x00\x02\x02\x4d\x38\x03\x66\x31\x32\x00\x01\x02\x4d\x38\x03\x66\x31\x32\x00\x03", "type-subtyping.wast:659");

// type-subtyping.wast:659
let $40 = instance($$46);

// type-subtyping.wast:668
let $$47 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xc7\x80\x80\x80\x00\x04\x4e\x02\x50\x00\x60\x00\x01\x64\x70\x50\x01\x00\x60\x00\x01\x64\x00\x4e\x02\x50\x00\x60\x00\x01\x64\x70\x50\x01\x02\x60\x00\x01\x64\x02\x4e\x02\x50\x01\x00\x60\x00\x01\x64\x70\x50\x01\x04\x60\x00\x01\x64\x04\x4e\x02\x50\x01\x02\x60\x00\x01\x64\x70\x50\x01\x06\x60\x00\x01\x64\x06\x03\x83\x80\x80\x80\x00\x02\x04\x05\x07\x8d\x80\x80\x80\x00\x02\x03\x67\x31\x31\x00\x00\x03\x67\x31\x32\x00\x01\x0a\x91\x80\x80\x80\x00\x02\x83\x80\x80\x80\x00\x00\x00\x0b\x83\x80\x80\x80\x00\x00\x00\x0b", "type-subtyping.wast:668");

// type-subtyping.wast:668
let $41 = instance($$47);

// type-subtyping.wast:676
register("M9", $41)

// type-subtyping.wast:677
let $$48 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xc7\x80\x80\x80\x00\x04\x4e\x02\x50\x00\x60\x00\x01\x64\x70\x50\x01\x00\x60\x00\x01\x64\x00\x4e\x02\x50\x00\x60\x00\x01\x64\x70\x50\x01\x02\x60\x00\x01\x64\x02\x4e\x02\x50\x01\x00\x60\x00\x01\x64\x70\x50\x01\x04\x60\x00\x01\x64\x04\x4e\x02\x50\x01\x02\x60\x00\x01\x64\x70\x50\x01\x06\x60\x00\x01\x64\x06\x02\xc9\x80\x80\x80\x00\x08\x02\x4d\x39\x03\x67\x31\x31\x00\x00\x02\x4d\x39\x03\x67\x31\x31\x00\x02\x02\x4d\x39\x03\x67\x31\x32\x00\x00\x02\x4d\x39\x03\x67\x31\x32\x00\x02\x02\x4d\x39\x03\x67\x31\x31\x00\x04\x02\x4d\x39\x03\x67\x31\x31\x00\x06\x02\x4d\x39\x03\x67\x31\x32\x00\x05\x02\x4d\x39\x03\x67\x31\x32\x00\x07", "type-subtyping.wast:677");

// type-subtyping.wast:677
let $42 = instance($$48);

// type-subtyping.wast:692
let $$49 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x9b\x80\x80\x80\x00\x02\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x00\x60\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x00\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x02\x07\x85\x80\x80\x80\x00\x01\x01\x66\x00\x00\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "type-subtyping.wast:692");

// type-subtyping.wast:692
let $43 = instance($$49);

// type-subtyping.wast:697
register("M10", $43)

// type-subtyping.wast:699
let $$50 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8e\x80\x80\x80\x00\x01\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x00\x60\x00\x00\x02\x89\x80\x80\x80\x00\x01\x03\x4d\x31\x30\x01\x66\x00\x00", "type-subtyping.wast:699");

// type-subtyping.wast:698
assert_unlinkable($$50);

// type-subtyping.wast:706
let $$51 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa8\x80\x80\x80\x00\x03\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x00\x60\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x00\x60\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x02\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x04\x07\x85\x80\x80\x80\x00\x01\x01\x66\x00\x00\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "type-subtyping.wast:706");

// type-subtyping.wast:706
let $44 = instance($$51);

// type-subtyping.wast:712
register("M11", $44)

// type-subtyping.wast:714
let $$52 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x9b\x80\x80\x80\x00\x02\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x00\x60\x00\x00\x4e\x02\x50\x00\x60\x00\x00\x50\x01\x00\x60\x00\x00\x02\x89\x80\x80\x80\x00\x01\x03\x4d\x31\x31\x01\x66\x00\x02", "type-subtyping.wast:714");

// type-subtyping.wast:713
assert_unlinkable($$52);

// type-subtyping.wast:726
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x50\x01\x00\x60\x00\x00", "type-subtyping.wast:726");

// type-subtyping.wast:734
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x5f\x00\x50\x01\x00\x5f\x00", "type-subtyping.wast:734");

// type-subtyping.wast:742
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x50\x01\x00\x60\x00\x00", "type-subtyping.wast:742");

// type-subtyping.wast:750
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x92\x80\x80\x80\x00\x03\x50\x00\x60\x00\x00\x4f\x01\x00\x60\x00\x00\x50\x01\x01\x60\x00\x00", "type-subtyping.wast:750");

// type-subtyping.wast:763
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8b\x80\x80\x80\x00\x02\x50\x00\x5e\x7f\x00\x50\x01\x00\x5f\x00", "type-subtyping.wast:763");

// type-subtyping.wast:771
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8d\x80\x80\x80\x00\x02\x50\x00\x60\x01\x7f\x01\x7f\x50\x01\x00\x5f\x00", "type-subtyping.wast:771");

// type-subtyping.wast:779
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8b\x80\x80\x80\x00\x02\x50\x00\x5f\x00\x50\x01\x00\x5e\x7f\x00", "type-subtyping.wast:779");

// type-subtyping.wast:787
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8e\x80\x80\x80\x00\x02\x50\x00\x60\x01\x7f\x01\x7f\x50\x01\x00\x5e\x7f\x00", "type-subtyping.wast:787");

// type-subtyping.wast:795
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8d\x80\x80\x80\x00\x02\x50\x00\x5f\x00\x50\x01\x00\x60\x01\x7f\x01\x7f", "type-subtyping.wast:795");

// type-subtyping.wast:803
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8e\x80\x80\x80\x00\x02\x50\x00\x5e\x7f\x00\x50\x01\x00\x60\x01\x7f\x01\x7f", "type-subtyping.wast:803");

// type-subtyping.wast:811
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8c\x80\x80\x80\x00\x02\x50\x00\x5e\x7f\x00\x50\x01\x00\x5e\x7e\x00", "type-subtyping.wast:811");

// type-subtyping.wast:819
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8e\x80\x80\x80\x00\x02\x50\x00\x5f\x01\x7f\x00\x50\x01\x00\x5f\x01\x7e\x00", "type-subtyping.wast:819");

// type-subtyping.wast:827
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8e\x80\x80\x80\x00\x02\x50\x00\x5e\x64\x71\x00\x50\x01\x00\x5e\x64\x6e\x00", "type-subtyping.wast:827");

// type-subtyping.wast:835
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8e\x80\x80\x80\x00\x02\x50\x00\x5e\x64\x6e\x01\x50\x01\x00\x5e\x64\x71\x01", "type-subtyping.wast:835");

// type-subtyping.wast:843
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8e\x80\x80\x80\x00\x02\x50\x00\x5e\x64\x6e\x01\x50\x01\x00\x5e\x64\x6e\x00", "type-subtyping.wast:843");

// type-subtyping.wast:851
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8e\x80\x80\x80\x00\x02\x50\x00\x5e\x64\x6e\x00\x50\x01\x00\x5e\x64\x6e\x01", "type-subtyping.wast:851");

// type-subtyping.wast:859
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x90\x80\x80\x80\x00\x02\x50\x00\x5f\x01\x64\x71\x00\x50\x01\x00\x5f\x01\x64\x6e\x00", "type-subtyping.wast:859");

// type-subtyping.wast:867
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x90\x80\x80\x80\x00\x02\x50\x00\x5f\x01\x64\x6e\x01\x50\x01\x00\x5f\x01\x64\x71\x01", "type-subtyping.wast:867");

// type-subtyping.wast:875
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x90\x80\x80\x80\x00\x02\x50\x00\x5f\x01\x64\x6e\x01\x50\x01\x00\x5f\x01\x64\x6e\x00", "type-subtyping.wast:875");

// type-subtyping.wast:883
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x90\x80\x80\x80\x00\x02\x50\x00\x5f\x01\x64\x6e\x00\x50\x01\x00\x5f\x01\x64\x6e\x01", "type-subtyping.wast:883");

// type-subtyping.wast:891
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8d\x80\x80\x80\x00\x02\x50\x00\x60\x00\x00\x50\x01\x00\x60\x01\x7f\x00", "type-subtyping.wast:891");

// type-subtyping.wast:901
let $$53 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa8\x80\x80\x80\x00\x04\x50\x00\x60\x00\x01\x7d\x50\x01\x00\x60\x00\x01\x7d\x4f\x01\x01\x60\x00\x01\x7d\x4e\x03\x60\x00\x01\x7d\x50\x00\x60\x00\x01\x7d\x50\x01\x04\x60\x00\x01\x7d\x03\x87\x80\x80\x80\x00\x06\x00\x01\x02\x03\x04\x05\x07\x9f\x80\x80\x80\x00\x06\x02\x66\x31\x00\x00\x02\x66\x32\x00\x01\x02\x66\x33\x00\x02\x02\x66\x34\x00\x03\x02\x66\x35\x00\x04\x02\x66\x36\x00\x05\x0a\xc9\x80\x80\x80\x00\x06\x87\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\x0b\x87\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\x0b\x87\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\x0b\x87\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\x0b\x87\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\x0b\x87\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\x0b", "type-subtyping.wast:901");

// type-subtyping.wast:901
let $45 = instance($$53);

// type-subtyping.wast:918
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x50\x00\x60\x00\x01\x7d\x02\xb2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x02\x66\x31\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($45)),  "run", []), "type-subtyping.wast:918");  // assert_return(() => call($45, "f1", []), "type-subtyping.wast:918", 0.)

// type-subtyping.wast:919
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x9c\x80\x80\x80\x00\x05\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x50\x00\x60\x00\x01\x7d\x50\x01\x03\x60\x00\x01\x7d\x02\xb2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x02\x66\x32\x00\x04\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($45)),  "run", []), "type-subtyping.wast:919");  // assert_return(() => call($45, "f2", []), "type-subtyping.wast:919", 0.)

// type-subtyping.wast:920
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa3\x80\x80\x80\x00\x06\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x50\x00\x60\x00\x01\x7d\x50\x01\x03\x60\x00\x01\x7d\x4f\x01\x04\x60\x00\x01\x7d\x02\xb2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x02\x66\x33\x00\x05\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($45)),  "run", []), "type-subtyping.wast:920");  // assert_return(() => call($45, "f3", []), "type-subtyping.wast:920", 0.)

// type-subtyping.wast:921
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa2\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x4e\x03\x60\x00\x01\x7d\x50\x00\x60\x00\x01\x7d\x50\x01\x04\x60\x00\x01\x7d\x02\xb2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x02\x66\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($45)),  "run", []), "type-subtyping.wast:921");  // assert_return(() => call($45, "f4", []), "type-subtyping.wast:921", 0.)

// type-subtyping.wast:922
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa2\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x4e\x03\x60\x00\x01\x7d\x50\x00\x60\x00\x01\x7d\x50\x01\x04\x60\x00\x01\x7d\x02\xb2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x02\x66\x35\x00\x04\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($45)),  "run", []), "type-subtyping.wast:922");  // assert_return(() => call($45, "f5", []), "type-subtyping.wast:922", 0.)

// type-subtyping.wast:923
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa2\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x4e\x03\x60\x00\x01\x7d\x50\x00\x60\x00\x01\x7d\x50\x01\x04\x60\x00\x01\x7d\x02\xb2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x02\x66\x36\x00\x05\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($45)),  "run", []), "type-subtyping.wast:923");  // assert_return(() => call($45, "f6", []), "type-subtyping.wast:923", 0.)
reinitializeRegistry();
})();
