(function array_init_data_wast_js() {

// array_init_data.wast:5
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x5e\x78\x00\x60\x01\x64\x00\x00\x03\x82\x80\x80\x80\x00\x01\x01\x07\x9d\x80\x80\x80\x00\x01\x19\x61\x72\x72\x61\x79\x2e\x69\x6e\x69\x74\x5f\x64\x61\x74\x61\x2d\x69\x6d\x6d\x75\x74\x61\x62\x6c\x65\x00\x00\x0c\x81\x80\x80\x80\x00\x01\x0a\x94\x80\x80\x80\x00\x01\x8e\x80\x80\x80\x00\x00\x20\x00\x41\x00\x41\x00\x41\x00\xfb\x12\x00\x00\x0b\x0b\x84\x80\x80\x80\x00\x01\x01\x01\x61", "array_init_data.wast:5");

// array_init_data.wast:18
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x5e\x70\x01\x60\x01\x64\x00\x00\x03\x82\x80\x80\x80\x00\x01\x01\x07\x9d\x80\x80\x80\x00\x01\x19\x61\x72\x72\x61\x79\x2e\x69\x6e\x69\x74\x5f\x64\x61\x74\x61\x2d\x69\x6e\x76\x61\x6c\x69\x64\x2d\x31\x00\x00\x0c\x81\x80\x80\x80\x00\x01\x0a\x94\x80\x80\x80\x00\x01\x8e\x80\x80\x80\x00\x00\x20\x00\x41\x00\x41\x00\x41\x00\xfb\x12\x00\x00\x0b\x0b\x84\x80\x80\x80\x00\x01\x01\x01\x61", "array_init_data.wast:18");

// array_init_data.wast:31
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x98\x80\x80\x80\x00\x06\x5e\x78\x00\x5e\x78\x01\x5e\x77\x01\x60\x01\x7f\x01\x7f\x60\x00\x00\x60\x03\x7f\x7f\x7f\x00\x03\x87\x80\x80\x80\x00\x06\x03\x03\x04\x05\x05\x04\x06\x9e\x80\x80\x80\x00\x03\x64\x00\x00\x41\x0a\x41\x0c\xfb\x06\x00\x0b\x64\x01\x01\x41\x0c\xfb\x07\x01\x0b\x64\x02\x00\x41\x06\xfb\x07\x02\x0b\x07\xf0\x80\x80\x80\x00\x06\x0d\x61\x72\x72\x61\x79\x5f\x67\x65\x74\x5f\x6e\x74\x68\x00\x00\x11\x61\x72\x72\x61\x79\x5f\x67\x65\x74\x5f\x6e\x74\x68\x5f\x69\x31\x36\x00\x01\x14\x61\x72\x72\x61\x79\x5f\x69\x6e\x69\x74\x5f\x64\x61\x74\x61\x2d\x6e\x75\x6c\x6c\x00\x02\x0f\x61\x72\x72\x61\x79\x5f\x69\x6e\x69\x74\x5f\x64\x61\x74\x61\x00\x03\x13\x61\x72\x72\x61\x79\x5f\x69\x6e\x69\x74\x5f\x64\x61\x74\x61\x5f\x69\x31\x36\x00\x04\x09\x64\x72\x6f\x70\x5f\x73\x65\x67\x73\x00\x05\x0c\x81\x80\x80\x80\x00\x01\x0a\xe0\x80\x80\x80\x00\x06\x89\x80\x80\x80\x00\x00\x23\x01\x20\x00\xfb\x0d\x01\x0b\x89\x80\x80\x80\x00\x00\x23\x02\x20\x00\xfb\x0d\x02\x0b\x8e\x80\x80\x80\x00\x00\xd0\x01\x41\x00\x41\x00\x41\x00\xfb\x12\x01\x00\x0b\x8e\x80\x80\x80\x00\x00\x23\x01\x20\x00\x20\x01\x20\x02\xfb\x12\x01\x00\x0b\x8e\x80\x80\x80\x00\x00\x23\x02\x20\x00\x20\x01\x20\x02\xfb\x12\x02\x00\x0b\x85\x80\x80\x80\x00\x00\xfc\x09\x00\x0b\x0b\x8f\x80\x80\x80\x00\x01\x01\x0c\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c", "array_init_data.wast:31");

// array_init_data.wast:31
let $1 = instance($$1);

// array_init_data.wast:68
assert_trap(() => call($1, "array_init_data-null", []), "array_init_data.wast:68");

// array_init_data.wast:71
assert_trap(() => call($1, "array_init_data", [13, 0, 0]), "array_init_data.wast:71");

// array_init_data.wast:72
assert_trap(() => call($1, "array_init_data", [0, 13, 0]), "array_init_data.wast:72");

// array_init_data.wast:75
assert_trap(() => call($1, "array_init_data", [0, 0, 13]), "array_init_data.wast:75");

// array_init_data.wast:76
assert_trap(() => call($1, "array_init_data", [0, 0, 13]), "array_init_data.wast:76");

// array_init_data.wast:77
assert_trap(() => call($1, "array_init_data_i16", [0, 0, 7]), "array_init_data.wast:77");

// array_init_data.wast:80
assert_return(() => call($1, "array_init_data", [12, 0, 0]), "array_init_data.wast:80");

// array_init_data.wast:81
assert_return(() => call($1, "array_init_data", [0, 12, 0]), "array_init_data.wast:81");

// array_init_data.wast:82
assert_return(() => call($1, "array_init_data_i16", [0, 6, 0]), "array_init_data.wast:82");

// array_init_data.wast:85
assert_return(() => call($1, "array_get_nth", [0]), "array_init_data.wast:85", 0);

// array_init_data.wast:86
assert_return(() => call($1, "array_get_nth", [5]), "array_init_data.wast:86", 0);

// array_init_data.wast:87
assert_return(() => call($1, "array_get_nth", [11]), "array_init_data.wast:87", 0);

// array_init_data.wast:88
assert_trap(() => call($1, "array_get_nth", [12]), "array_init_data.wast:88");

// array_init_data.wast:89
assert_return(() => call($1, "array_get_nth_i16", [0]), "array_init_data.wast:89", 0);

// array_init_data.wast:90
assert_return(() => call($1, "array_get_nth_i16", [2]), "array_init_data.wast:90", 0);

// array_init_data.wast:91
assert_return(() => call($1, "array_get_nth_i16", [5]), "array_init_data.wast:91", 0);

// array_init_data.wast:92
assert_trap(() => call($1, "array_get_nth_i16", [6]), "array_init_data.wast:92");

// array_init_data.wast:95
assert_return(() => call($1, "array_init_data", [4, 2, 2]), "array_init_data.wast:95");

// array_init_data.wast:96
assert_return(() => call($1, "array_get_nth", [3]), "array_init_data.wast:96", 0);

// array_init_data.wast:97
assert_return(() => call($1, "array_get_nth", [4]), "array_init_data.wast:97", 99);

// array_init_data.wast:98
assert_return(() => call($1, "array_get_nth", [5]), "array_init_data.wast:98", 100);

// array_init_data.wast:99
assert_return(() => call($1, "array_get_nth", [6]), "array_init_data.wast:99", 0);

// array_init_data.wast:101
assert_return(() => call($1, "array_init_data_i16", [2, 5, 2]), "array_init_data.wast:101");

// array_init_data.wast:102
assert_return(() => call($1, "array_get_nth_i16", [1]), "array_init_data.wast:102", 0);

// array_init_data.wast:103
assert_return(() => call($1, "array_get_nth_i16", [2]), "array_init_data.wast:103", 26_470);

// array_init_data.wast:104
assert_return(() => call($1, "array_get_nth_i16", [3]), "array_init_data.wast:104", 26_984);

// array_init_data.wast:105
assert_return(() => call($1, "array_get_nth_i16", [4]), "array_init_data.wast:105", 0);

// array_init_data.wast:108
assert_return(() => call($1, "drop_segs", []), "array_init_data.wast:108");

// array_init_data.wast:109
assert_return(() => call($1, "array_init_data", [0, 0, 0]), "array_init_data.wast:109");

// array_init_data.wast:110
assert_trap(() => call($1, "array_init_data", [0, 0, 1]), "array_init_data.wast:110");

// array_init_data.wast:113
let $$2 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x03\x5e\x7f\x01\x5e\x7e\x01\x60\x00\x00\x03\x8d\x80\x80\x80\x00\x0c\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x07\xbd\x80\x80\x80\x00\x0c\x02\x66\x30\x00\x00\x02\x66\x31\x00\x01\x02\x66\x32\x00\x02\x02\x66\x33\x00\x03\x02\x66\x34\x00\x04\x02\x66\x39\x00\x05\x02\x67\x30\x00\x06\x02\x67\x31\x00\x07\x02\x67\x34\x00\x08\x02\x67\x37\x00\x09\x02\x67\x38\x00\x0a\x02\x67\x39\x00\x0b\x0c\x81\x80\x80\x80\x00\x07\x0a\x89\x82\x80\x80\x00\x0c\x91\x80\x80\x80\x00\x00\x41\x01\xfb\x07\x00\x41\x00\x41\x00\x41\x01\xfb\x12\x00\x00\x0b\x91\x80\x80\x80\x00\x00\x41\x01\xfb\x07\x00\x41\x00\x41\x00\x41\x01\xfb\x12\x00\x01\x0b\x91\x80\x80\x80\x00\x00\x41\x01\xfb\x07\x00\x41\x00\x41\x00\x41\x01\xfb\x12\x00\x02\x0b\x91\x80\x80\x80\x00\x00\x41\x01\xfb\x07\x00\x41\x00\x41\x00\x41\x01\xfb\x12\x00\x03\x0b\x91\x80\x80\x80\x00\x00\x41\x01\xfb\x07\x00\x41\x00\x41\x00\x41\x01\xfb\x12\x00\x04\x0b\x91\x80\x80\x80\x00\x00\x41\x01\xfb\x07\x00\x41\x00\x41\x06\x41\x01\xfb\x12\x00\x06\x0b\x91\x80\x80\x80\x00\x00\x41\x01\xfb\x07\x01\x41\x00\x41\x00\x41\x01\xfb\x12\x01\x00\x0b\x91\x80\x80\x80\x00\x00\x41\x01\xfb\x07\x01\x41\x00\x41\x00\x41\x01\xfb\x12\x01\x01\x0b\x91\x80\x80\x80\x00\x00\x41\x01\xfb\x07\x01\x41\x00\x41\x00\x41\x01\xfb\x12\x01\x04\x0b\x91\x80\x80\x80\x00\x00\x41\x01\xfb\x07\x01\x41\x00\x41\x00\x41\x01\xfb\x12\x01\x05\x0b\x91\x80\x80\x80\x00\x00\x41\x01\xfb\x07\x01\x41\x00\x41\x00\x41\x01\xfb\x12\x01\x06\x0b\x91\x80\x80\x80\x00\x00\x41\x01\xfb\x07\x01\x41\x00\x41\x02\x41\x01\xfb\x12\x01\x06\x0b\x0b\xa9\x80\x80\x80\x00\x07\x01\x00\x01\x01\x31\x01\x02\x31\x32\x01\x03\x31\x32\x33\x01\x04\x31\x32\x33\x34\x01\x07\x31\x32\x33\x34\x35\x36\x37\x01\x09\x31\x32\x33\x34\x35\x36\x37\x38\x39", "array_init_data.wast:113");

// array_init_data.wast:113
let $2 = instance($$2);

// array_init_data.wast:200
assert_trap(() => call($2, "f0", []), "array_init_data.wast:200");

// array_init_data.wast:201
assert_trap(() => call($2, "f1", []), "array_init_data.wast:201");

// array_init_data.wast:202
assert_trap(() => call($2, "f2", []), "array_init_data.wast:202");

// array_init_data.wast:203
assert_trap(() => call($2, "f3", []), "array_init_data.wast:203");

// array_init_data.wast:204
assert_return(() => call($2, "f4", []), "array_init_data.wast:204");

// array_init_data.wast:205
assert_trap(() => call($2, "f9", []), "array_init_data.wast:205");

// array_init_data.wast:207
assert_trap(() => call($2, "g0", []), "array_init_data.wast:207");

// array_init_data.wast:208
assert_trap(() => call($2, "g1", []), "array_init_data.wast:208");

// array_init_data.wast:209
assert_trap(() => call($2, "g4", []), "array_init_data.wast:209");

// array_init_data.wast:210
assert_trap(() => call($2, "g7", []), "array_init_data.wast:210");

// array_init_data.wast:211
assert_return(() => call($2, "g8", []), "array_init_data.wast:211");

// array_init_data.wast:212
assert_trap(() => call($2, "g9", []), "array_init_data.wast:212");
reinitializeRegistry();
})();
