(function ref_test_wast_js() {

// ref_test.wast:3
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x92\x80\x80\x80\x00\x05\x60\x00\x00\x5f\x00\x5e\x78\x00\x60\x01\x6f\x00\x60\x01\x7f\x01\x7f\x03\x8d\x80\x80\x80\x00\x0c\x00\x03\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x8a\x80\x80\x80\x00\x03\x6e\x00\x0a\x70\x00\x0a\x6f\x00\x0a\x07\xba\x81\x80\x80\x00\x0b\x04\x69\x6e\x69\x74\x00\x01\x12\x72\x65\x66\x5f\x74\x65\x73\x74\x5f\x6e\x75\x6c\x6c\x5f\x64\x61\x74\x61\x00\x02\x0c\x72\x65\x66\x5f\x74\x65\x73\x74\x5f\x61\x6e\x79\x00\x03\x0b\x72\x65\x66\x5f\x74\x65\x73\x74\x5f\x65\x71\x00\x04\x0c\x72\x65\x66\x5f\x74\x65\x73\x74\x5f\x69\x33\x31\x00\x05\x0f\x72\x65\x66\x5f\x74\x65\x73\x74\x5f\x73\x74\x72\x75\x63\x74\x00\x06\x0e\x72\x65\x66\x5f\x74\x65\x73\x74\x5f\x61\x72\x72\x61\x79\x00\x07\x12\x72\x65\x66\x5f\x74\x65\x73\x74\x5f\x6e\x75\x6c\x6c\x5f\x66\x75\x6e\x63\x00\x08\x0d\x72\x65\x66\x5f\x74\x65\x73\x74\x5f\x66\x75\x6e\x63\x00\x09\x14\x72\x65\x66\x5f\x74\x65\x73\x74\x5f\x6e\x75\x6c\x6c\x5f\x65\x78\x74\x65\x72\x6e\x00\x0a\x0f\x72\x65\x66\x5f\x74\x65\x73\x74\x5f\x65\x78\x74\x65\x72\x6e\x00\x0b\x09\x85\x80\x80\x80\x00\x01\x03\x00\x01\x00\x0a\xde\x82\x80\x80\x00\x0c\x82\x80\x80\x80\x00\x00\x0b\xfb\x80\x80\x80\x00\x00\x41\x00\xd0\x6e\x26\x00\x41\x01\xd0\x6b\x26\x00\x41\x02\xd0\x71\x26\x00\x41\x03\x41\x07\xfb\x1c\x26\x00\x41\x04\xfb\x01\x01\x26\x00\x41\x05\x41\x00\xfb\x07\x02\x26\x00\x41\x06\x20\x00\xfb\x1a\x26\x00\x41\x07\xd0\x6f\xfb\x1a\x26\x00\x41\x00\xd0\x73\x26\x01\x41\x01\xd0\x70\x26\x01\x41\x02\xd2\x00\x26\x01\x41\x00\xd0\x72\x26\x02\x41\x01\xd0\x6f\x26\x02\x41\x02\x20\x00\x26\x02\x41\x03\x41\x08\xfb\x1c\xfb\x1b\x26\x02\x41\x04\xfb\x01\x01\xfb\x1b\x26\x02\x41\x05\xd0\x6e\xfb\x1b\x26\x02\x0b\x8f\x80\x80\x80\x00\x00\x20\x00\x25\x00\xd1\x20\x00\x25\x00\xfb\x15\x71\x6a\x0b\x91\x80\x80\x80\x00\x00\x20\x00\x25\x00\xfb\x14\x6e\x20\x00\x25\x00\xfb\x15\x6e\x6a\x0b\x91\x80\x80\x80\x00\x00\x20\x00\x25\x00\xfb\x14\x6d\x20\x00\x25\x00\xfb\x15\x6d\x6a\x0b\x91\x80\x80\x80\x00\x00\x20\x00\x25\x00\xfb\x14\x6c\x20\x00\x25\x00\xfb\x15\x6c\x6a\x0b\x91\x80\x80\x80\x00\x00\x20\x00\x25\x00\xfb\x14\x6b\x20\x00\x25\x00\xfb\x15\x6b\x6a\x0b\x91\x80\x80\x80\x00\x00\x20\x00\x25\x00\xfb\x14\x6a\x20\x00\x25\x00\xfb\x15\x6a\x6a\x0b\x8f\x80\x80\x80\x00\x00\x20\x00\x25\x01\xd1\x20\x00\x25\x01\xfb\x15\x73\x6a\x0b\x91\x80\x80\x80\x00\x00\x20\x00\x25\x01\xfb\x14\x70\x20\x00\x25\x01\xfb\x15\x70\x6a\x0b\x8f\x80\x80\x80\x00\x00\x20\x00\x25\x02\xd1\x20\x00\x25\x02\xfb\x15\x72\x6a\x0b\x91\x80\x80\x80\x00\x00\x20\x00\x25\x02\xfb\x14\x6f\x20\x00\x25\x02\xfb\x15\x6f\x6a\x0b", "ref_test.wast:3");

// ref_test.wast:3
let $1 = instance($$1);

// ref_test.wast:101
run(() => call($1, "init", [hostref(0)]), "ref_test.wast:101");

// ref_test.wast:103
assert_return(() => call($1, "ref_test_null_data", [0]), "ref_test.wast:103", 2);

// ref_test.wast:104
assert_return(() => call($1, "ref_test_null_data", [1]), "ref_test.wast:104", 2);

// ref_test.wast:105
assert_return(() => call($1, "ref_test_null_data", [2]), "ref_test.wast:105", 2);

// ref_test.wast:106
assert_return(() => call($1, "ref_test_null_data", [3]), "ref_test.wast:106", 0);

// ref_test.wast:107
assert_return(() => call($1, "ref_test_null_data", [4]), "ref_test.wast:107", 0);

// ref_test.wast:108
assert_return(() => call($1, "ref_test_null_data", [5]), "ref_test.wast:108", 0);

// ref_test.wast:109
assert_return(() => call($1, "ref_test_null_data", [6]), "ref_test.wast:109", 0);

// ref_test.wast:110
assert_return(() => call($1, "ref_test_null_data", [7]), "ref_test.wast:110", 2);

// ref_test.wast:112
assert_return(() => call($1, "ref_test_any", [0]), "ref_test.wast:112", 1);

// ref_test.wast:113
assert_return(() => call($1, "ref_test_any", [1]), "ref_test.wast:113", 1);

// ref_test.wast:114
assert_return(() => call($1, "ref_test_any", [2]), "ref_test.wast:114", 1);

// ref_test.wast:115
assert_return(() => call($1, "ref_test_any", [3]), "ref_test.wast:115", 2);

// ref_test.wast:116
assert_return(() => call($1, "ref_test_any", [4]), "ref_test.wast:116", 2);

// ref_test.wast:117
assert_return(() => call($1, "ref_test_any", [5]), "ref_test.wast:117", 2);

// ref_test.wast:118
assert_return(() => call($1, "ref_test_any", [6]), "ref_test.wast:118", 2);

// ref_test.wast:119
assert_return(() => call($1, "ref_test_any", [7]), "ref_test.wast:119", 1);

// ref_test.wast:121
assert_return(() => call($1, "ref_test_eq", [0]), "ref_test.wast:121", 1);

// ref_test.wast:122
assert_return(() => call($1, "ref_test_eq", [1]), "ref_test.wast:122", 1);

// ref_test.wast:123
assert_return(() => call($1, "ref_test_eq", [2]), "ref_test.wast:123", 1);

// ref_test.wast:124
assert_return(() => call($1, "ref_test_eq", [3]), "ref_test.wast:124", 2);

// ref_test.wast:125
assert_return(() => call($1, "ref_test_eq", [4]), "ref_test.wast:125", 2);

// ref_test.wast:126
assert_return(() => call($1, "ref_test_eq", [5]), "ref_test.wast:126", 2);

// ref_test.wast:127
assert_return(() => call($1, "ref_test_eq", [6]), "ref_test.wast:127", 0);

// ref_test.wast:128
assert_return(() => call($1, "ref_test_eq", [7]), "ref_test.wast:128", 1);

// ref_test.wast:130
assert_return(() => call($1, "ref_test_i31", [0]), "ref_test.wast:130", 1);

// ref_test.wast:131
assert_return(() => call($1, "ref_test_i31", [1]), "ref_test.wast:131", 1);

// ref_test.wast:132
assert_return(() => call($1, "ref_test_i31", [2]), "ref_test.wast:132", 1);

// ref_test.wast:133
assert_return(() => call($1, "ref_test_i31", [3]), "ref_test.wast:133", 2);

// ref_test.wast:134
assert_return(() => call($1, "ref_test_i31", [4]), "ref_test.wast:134", 0);

// ref_test.wast:135
assert_return(() => call($1, "ref_test_i31", [5]), "ref_test.wast:135", 0);

// ref_test.wast:136
assert_return(() => call($1, "ref_test_i31", [6]), "ref_test.wast:136", 0);

// ref_test.wast:137
assert_return(() => call($1, "ref_test_i31", [7]), "ref_test.wast:137", 1);

// ref_test.wast:139
assert_return(() => call($1, "ref_test_struct", [0]), "ref_test.wast:139", 1);

// ref_test.wast:140
assert_return(() => call($1, "ref_test_struct", [1]), "ref_test.wast:140", 1);

// ref_test.wast:141
assert_return(() => call($1, "ref_test_struct", [2]), "ref_test.wast:141", 1);

// ref_test.wast:142
assert_return(() => call($1, "ref_test_struct", [3]), "ref_test.wast:142", 0);

// ref_test.wast:143
assert_return(() => call($1, "ref_test_struct", [4]), "ref_test.wast:143", 2);

// ref_test.wast:144
assert_return(() => call($1, "ref_test_struct", [5]), "ref_test.wast:144", 0);

// ref_test.wast:145
assert_return(() => call($1, "ref_test_struct", [6]), "ref_test.wast:145", 0);

// ref_test.wast:146
assert_return(() => call($1, "ref_test_struct", [7]), "ref_test.wast:146", 1);

// ref_test.wast:148
assert_return(() => call($1, "ref_test_array", [0]), "ref_test.wast:148", 1);

// ref_test.wast:149
assert_return(() => call($1, "ref_test_array", [1]), "ref_test.wast:149", 1);

// ref_test.wast:150
assert_return(() => call($1, "ref_test_array", [2]), "ref_test.wast:150", 1);

// ref_test.wast:151
assert_return(() => call($1, "ref_test_array", [3]), "ref_test.wast:151", 0);

// ref_test.wast:152
assert_return(() => call($1, "ref_test_array", [4]), "ref_test.wast:152", 0);

// ref_test.wast:153
assert_return(() => call($1, "ref_test_array", [5]), "ref_test.wast:153", 2);

// ref_test.wast:154
assert_return(() => call($1, "ref_test_array", [6]), "ref_test.wast:154", 0);

// ref_test.wast:155
assert_return(() => call($1, "ref_test_array", [7]), "ref_test.wast:155", 1);

// ref_test.wast:157
assert_return(() => call($1, "ref_test_null_func", [0]), "ref_test.wast:157", 2);

// ref_test.wast:158
assert_return(() => call($1, "ref_test_null_func", [1]), "ref_test.wast:158", 2);

// ref_test.wast:159
assert_return(() => call($1, "ref_test_null_func", [2]), "ref_test.wast:159", 0);

// ref_test.wast:161
assert_return(() => call($1, "ref_test_func", [0]), "ref_test.wast:161", 1);

// ref_test.wast:162
assert_return(() => call($1, "ref_test_func", [1]), "ref_test.wast:162", 1);

// ref_test.wast:163
assert_return(() => call($1, "ref_test_func", [2]), "ref_test.wast:163", 2);

// ref_test.wast:165
assert_return(() => call($1, "ref_test_null_extern", [0]), "ref_test.wast:165", 2);

// ref_test.wast:166
assert_return(() => call($1, "ref_test_null_extern", [1]), "ref_test.wast:166", 2);

// ref_test.wast:167
assert_return(() => call($1, "ref_test_null_extern", [2]), "ref_test.wast:167", 0);

// ref_test.wast:168
assert_return(() => call($1, "ref_test_null_extern", [3]), "ref_test.wast:168", 0);

// ref_test.wast:169
assert_return(() => call($1, "ref_test_null_extern", [4]), "ref_test.wast:169", 0);

// ref_test.wast:170
assert_return(() => call($1, "ref_test_null_extern", [5]), "ref_test.wast:170", 2);

// ref_test.wast:172
assert_return(() => call($1, "ref_test_extern", [0]), "ref_test.wast:172", 1);

// ref_test.wast:173
assert_return(() => call($1, "ref_test_extern", [1]), "ref_test.wast:173", 1);

// ref_test.wast:174
assert_return(() => call($1, "ref_test_extern", [2]), "ref_test.wast:174", 2);

// ref_test.wast:175
assert_return(() => call($1, "ref_test_extern", [3]), "ref_test.wast:175", 2);

// ref_test.wast:176
assert_return(() => call($1, "ref_test_extern", [4]), "ref_test.wast:176", 2);

// ref_test.wast:177
assert_return(() => call($1, "ref_test_extern", [5]), "ref_test.wast:177", 1);

// ref_test.wast:182
let $$2 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xbf\x80\x80\x80\x00\x09\x50\x00\x5f\x00\x50\x01\x00\x5f\x01\x7f\x00\x50\x01\x00\x5f\x01\x7f\x00\x50\x01\x01\x5f\x02\x7f\x00\x7f\x00\x50\x01\x02\x5f\x02\x7f\x00\x7f\x00\x50\x01\x00\x5f\x02\x7f\x00\x7f\x00\x50\x01\x00\x5f\x00\x50\x01\x06\x5f\x02\x7f\x00\x7f\x00\x60\x00\x00\x03\x84\x80\x80\x80\x00\x03\x08\x08\x08\x04\x84\x80\x80\x80\x00\x01\x6b\x00\x14\x07\x99\x80\x80\x80\x00\x02\x08\x74\x65\x73\x74\x2d\x73\x75\x62\x00\x01\x0a\x74\x65\x73\x74\x2d\x63\x61\x6e\x6f\x6e\x00\x02\x0a\xca\x86\x80\x80\x00\x03\xba\x80\x80\x80\x00\x00\x41\x00\xfb\x01\x00\x26\x00\x41\x0a\xfb\x01\x00\x26\x00\x41\x01\xfb\x01\x01\x26\x00\x41\x0b\xfb\x01\x02\x26\x00\x41\x02\xfb\x01\x03\x26\x00\x41\x0c\xfb\x01\x04\x26\x00\x41\x03\xfb\x01\x05\x26\x00\x41\x04\xfb\x01\x07\x26\x00\x0b\xeb\x84\x80\x80\x00\x00\x10\x00\x02\x40\xd0\x6b\xfb\x15\x00\x45\x0d\x00\xd0\x00\xfb\x15\x00\x45\x0d\x00\xd0\x01\xfb\x15\x00\x45\x0d\x00\xd0\x03\xfb\x15\x00\x45\x0d\x00\xd0\x05\xfb\x15\x00\x45\x0d\x00\xd0\x07\xfb\x15\x00\x45\x0d\x00\x41\x00\x25\x00\xfb\x15\x00\x45\x0d\x00\x41\x01\x25\x00\xfb\x15\x00\x45\x0d\x00\x41\x02\x25\x00\xfb\x15\x00\x45\x0d\x00\x41\x03\x25\x00\xfb\x15\x00\x45\x0d\x00\x41\x04\x25\x00\xfb\x15\x00\x45\x0d\x00\xd0\x6b\xfb\x15\x01\x45\x0d\x00\xd0\x00\xfb\x15\x01\x45\x0d\x00\xd0\x01\xfb\x15\x01\x45\x0d\x00\xd0\x03\xfb\x15\x01\x45\x0d\x00\xd0\x05\xfb\x15\x01\x45\x0d\x00\xd0\x07\xfb\x15\x01\x45\x0d\x00\x41\x01\x25\x00\xfb\x15\x01\x45\x0d\x00\x41\x02\x25\x00\xfb\x15\x01\x45\x0d\x00\xd0\x6b\xfb\x15\x03\x45\x0d\x00\xd0\x00\xfb\x15\x03\x45\x0d\x00\xd0\x01\xfb\x15\x03\x45\x0d\x00\xd0\x03\xfb\x15\x03\x45\x0d\x00\xd0\x05\xfb\x15\x03\x45\x0d\x00\xd0\x07\xfb\x15\x03\x45\x0d\x00\x41\x02\x25\x00\xfb\x15\x03\x45\x0d\x00\xd0\x6b\xfb\x15\x05\x45\x0d\x00\xd0\x00\xfb\x15\x05\x45\x0d\x00\xd0\x01\xfb\x15\x05\x45\x0d\x00\xd0\x03\xfb\x15\x05\x45\x0d\x00\xd0\x05\xfb\x15\x05\x45\x0d\x00\xd0\x07\xfb\x15\x05\x45\x0d\x00\x41\x03\x25\x00\xfb\x15\x05\x45\x0d\x00\xd0\x6b\xfb\x15\x07\x45\x0d\x00\xd0\x00\xfb\x15\x07\x45\x0d\x00\xd0\x01\xfb\x15\x07\x45\x0d\x00\xd0\x03\xfb\x15\x07\x45\x0d\x00\xd0\x05\xfb\x15\x07\x45\x0d\x00\xd0\x07\xfb\x15\x07\x45\x0d\x00\x41\x04\x25\x00\xfb\x15\x07\x45\x0d\x00\x41\x00\x25\x00\xfb\x14\x00\x45\x0d\x00\x41\x01\x25\x00\xfb\x14\x00\x45\x0d\x00\x41\x02\x25\x00\xfb\x14\x00\x45\x0d\x00\x41\x03\x25\x00\xfb\x14\x00\x45\x0d\x00\x41\x04\x25\x00\xfb\x14\x00\x45\x0d\x00\x41\x01\x25\x00\xfb\x14\x01\x45\x0d\x00\x41\x02\x25\x00\xfb\x14\x01\x45\x0d\x00\x41\x02\x25\x00\xfb\x14\x03\x45\x0d\x00\x41\x03\x25\x00\xfb\x14\x05\x45\x0d\x00\x41\x04\x25\x00\xfb\x14\x07\x45\x0d\x00\xd0\x6b\xfb\x14\x00\x0d\x00\xd0\x6b\xfb\x14\x01\x0d\x00\xd0\x6b\xfb\x14\x03\x0d\x00\xd0\x6b\xfb\x14\x05\x0d\x00\xd0\x6b\xfb\x14\x07\x0d\x00\x41\x00\x25\x00\xfb\x14\x01\x0d\x00\x41\x03\x25\x00\xfb\x14\x01\x0d\x00\x41\x04\x25\x00\xfb\x14\x01\x0d\x00\x41\x00\x25\x00\xfb\x14\x03\x0d\x00\x41\x01\x25\x00\xfb\x14\x03\x0d\x00\x41\x03\x25\x00\xfb\x14\x03\x0d\x00\x41\x04\x25\x00\xfb\x14\x03\x0d\x00\x41\x00\x25\x00\xfb\x14\x05\x0d\x00\x41\x01\x25\x00\xfb\x14\x05\x0d\x00\x41\x02\x25\x00\xfb\x14\x05\x0d\x00\x41\x04\x25\x00\xfb\x14\x05\x0d\x00\x41\x00\x25\x00\xfb\x14\x07\x0d\x00\x41\x01\x25\x00\xfb\x14\x07\x0d\x00\x41\x02\x25\x00\xfb\x14\x07\x0d\x00\x41\x03\x25\x00\xfb\x14\x07\x0d\x00\x0f\x0b\x00\x0b\x95\x81\x80\x80\x00\x00\x10\x00\x02\x40\x41\x00\x25\x00\xfb\x14\x00\x45\x0d\x00\x41\x01\x25\x00\xfb\x14\x00\x45\x0d\x00\x41\x02\x25\x00\xfb\x14\x00\x45\x0d\x00\x41\x03\x25\x00\xfb\x14\x00\x45\x0d\x00\x41\x04\x25\x00\xfb\x14\x00\x45\x0d\x00\x41\x0a\x25\x00\xfb\x14\x00\x45\x0d\x00\x41\x0b\x25\x00\xfb\x14\x00\x45\x0d\x00\x41\x0c\x25\x00\xfb\x14\x00\x45\x0d\x00\x41\x01\x25\x00\xfb\x14\x02\x45\x0d\x00\x41\x02\x25\x00\xfb\x14\x02\x45\x0d\x00\x41\x0b\x25\x00\xfb\x14\x01\x45\x0d\x00\x41\x0c\x25\x00\xfb\x14\x01\x45\x0d\x00\x41\x02\x25\x00\xfb\x14\x04\x45\x0d\x00\x41\x0c\x25\x00\xfb\x14\x03\x45\x0d\x00\x0f\x0b\x00\x0b", "ref_test.wast:182");

// ref_test.wast:182
let $2 = instance($$2);

// ref_test.wast:329
assert_return(() => call($2, "test-sub", []), "ref_test.wast:329");

// ref_test.wast:330
assert_return(() => call($2, "test-canon", []), "ref_test.wast:330");
reinitializeRegistry();
})();
