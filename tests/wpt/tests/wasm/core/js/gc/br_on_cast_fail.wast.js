(function br_on_cast_fail_wast_js() {

// br_on_cast_fail.wast:3
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa1\x80\x80\x80\x00\x07\x60\x00\x01\x7f\x5f\x01\x77\x00\x5e\x78\x00\x60\x01\x6f\x00\x60\x01\x7f\x01\x7f\x60\x01\x6b\x01\x64\x02\x60\x01\x6b\x01\x64\x01\x03\x88\x80\x80\x80\x00\x07\x00\x03\x04\x04\x04\x04\x04\x04\x84\x80\x80\x80\x00\x01\x6e\x00\x0a\x07\xda\x80\x80\x80\x00\x06\x04\x69\x6e\x69\x74\x00\x01\x0e\x62\x72\x5f\x6f\x6e\x5f\x6e\x6f\x6e\x5f\x6e\x75\x6c\x6c\x00\x02\x0d\x62\x72\x5f\x6f\x6e\x5f\x6e\x6f\x6e\x5f\x69\x33\x31\x00\x03\x10\x62\x72\x5f\x6f\x6e\x5f\x6e\x6f\x6e\x5f\x73\x74\x72\x75\x63\x74\x00\x04\x0f\x62\x72\x5f\x6f\x6e\x5f\x6e\x6f\x6e\x5f\x61\x72\x72\x61\x79\x00\x05\x09\x6e\x75\x6c\x6c\x2d\x64\x69\x66\x66\x00\x06\x09\x85\x80\x80\x80\x00\x01\x03\x00\x01\x00\x0a\xdb\x81\x80\x80\x00\x07\x84\x80\x80\x80\x00\x00\x41\x09\x0b\xac\x80\x80\x80\x00\x00\x41\x00\xd0\x6e\x26\x00\x41\x01\x41\x07\xfb\x1c\x26\x00\x41\x02\x41\x06\xfb\x00\x01\x26\x00\x41\x03\x41\x05\x41\x03\xfb\x06\x02\x26\x00\x41\x04\x20\x00\xfb\x1a\x26\x00\x0b\x92\x80\x80\x80\x00\x00\x02\x64\x6e\x20\x00\x25\x00\xd6\x00\x41\x00\x0f\x0b\x41\x7f\x0f\x0b\x95\x80\x80\x80\x00\x00\x02\x6e\x20\x00\x25\x00\xfb\x19\x01\x00\x6e\x6c\xfb\x1e\x0f\x0b\x41\x7f\x0f\x0b\xb2\x80\x80\x80\x00\x00\x02\x6e\x20\x00\x25\x00\xfb\x19\x01\x00\x6e\x6b\x02\x06\x02\x05\xfb\x18\x01\x01\x6b\x01\xfb\x18\x01\x00\x6e\x02\x41\x7e\x0f\x0b\x41\x00\xfb\x0d\x02\x0f\x0b\xfb\x03\x01\x00\x0f\x0b\x41\x7f\x0f\x0b\x95\x80\x80\x80\x00\x00\x02\x6e\x20\x00\x25\x00\xfb\x19\x01\x00\x6e\x6a\xfb\x0f\x0f\x0b\x41\x7f\x0f\x0b\x99\x80\x80\x80\x00\x00\x02\x64\x6e\x02\x6b\x20\x00\x25\x00\xfb\x19\x03\x01\x6e\x6b\x0b\x41\x01\x0f\x0b\x41\x00\x0f\x0b", "br_on_cast_fail.wast:3");

// br_on_cast_fail.wast:3
let $1 = instance($$1);

// br_on_cast_fail.wast:69
run(() => call($1, "init", [hostref(0)]), "br_on_cast_fail.wast:69");

// br_on_cast_fail.wast:71
assert_return(() => call($1, "br_on_non_null", [0]), "br_on_cast_fail.wast:71", 0);

// br_on_cast_fail.wast:72
assert_return(() => call($1, "br_on_non_null", [1]), "br_on_cast_fail.wast:72", -1);

// br_on_cast_fail.wast:73
assert_return(() => call($1, "br_on_non_null", [2]), "br_on_cast_fail.wast:73", -1);

// br_on_cast_fail.wast:74
assert_return(() => call($1, "br_on_non_null", [3]), "br_on_cast_fail.wast:74", -1);

// br_on_cast_fail.wast:75
assert_return(() => call($1, "br_on_non_null", [4]), "br_on_cast_fail.wast:75", -1);

// br_on_cast_fail.wast:77
assert_return(() => call($1, "br_on_non_i31", [0]), "br_on_cast_fail.wast:77", -1);

// br_on_cast_fail.wast:78
assert_return(() => call($1, "br_on_non_i31", [1]), "br_on_cast_fail.wast:78", 7);

// br_on_cast_fail.wast:79
assert_return(() => call($1, "br_on_non_i31", [2]), "br_on_cast_fail.wast:79", -1);

// br_on_cast_fail.wast:80
assert_return(() => call($1, "br_on_non_i31", [3]), "br_on_cast_fail.wast:80", -1);

// br_on_cast_fail.wast:81
assert_return(() => call($1, "br_on_non_i31", [4]), "br_on_cast_fail.wast:81", -1);

// br_on_cast_fail.wast:83
assert_return(() => call($1, "br_on_non_struct", [0]), "br_on_cast_fail.wast:83", -1);

// br_on_cast_fail.wast:84
assert_return(() => call($1, "br_on_non_struct", [1]), "br_on_cast_fail.wast:84", -1);

// br_on_cast_fail.wast:85
assert_return(() => call($1, "br_on_non_struct", [2]), "br_on_cast_fail.wast:85", 6);

// br_on_cast_fail.wast:86
assert_return(() => call($1, "br_on_non_struct", [3]), "br_on_cast_fail.wast:86", -1);

// br_on_cast_fail.wast:87
assert_return(() => call($1, "br_on_non_struct", [4]), "br_on_cast_fail.wast:87", -1);

// br_on_cast_fail.wast:89
assert_return(() => call($1, "br_on_non_array", [0]), "br_on_cast_fail.wast:89", -1);

// br_on_cast_fail.wast:90
assert_return(() => call($1, "br_on_non_array", [1]), "br_on_cast_fail.wast:90", -1);

// br_on_cast_fail.wast:91
assert_return(() => call($1, "br_on_non_array", [2]), "br_on_cast_fail.wast:91", -1);

// br_on_cast_fail.wast:92
assert_return(() => call($1, "br_on_non_array", [3]), "br_on_cast_fail.wast:92", 3);

// br_on_cast_fail.wast:93
assert_return(() => call($1, "br_on_non_array", [4]), "br_on_cast_fail.wast:93", -1);

// br_on_cast_fail.wast:95
assert_return(() => call($1, "null-diff", [0]), "br_on_cast_fail.wast:95", 1);

// br_on_cast_fail.wast:96
assert_return(() => call($1, "null-diff", [1]), "br_on_cast_fail.wast:96", 0);

// br_on_cast_fail.wast:97
assert_return(() => call($1, "null-diff", [2]), "br_on_cast_fail.wast:97", 1);

// br_on_cast_fail.wast:98
assert_return(() => call($1, "null-diff", [3]), "br_on_cast_fail.wast:98", 0);

// br_on_cast_fail.wast:99
assert_return(() => call($1, "null-diff", [4]), "br_on_cast_fail.wast:99", 0);

// br_on_cast_fail.wast:104
let $$2 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xbf\x80\x80\x80\x00\x09\x50\x00\x5f\x00\x50\x01\x00\x5f\x01\x7f\x00\x50\x01\x00\x5f\x01\x7f\x00\x50\x01\x01\x5f\x02\x7f\x00\x7f\x00\x50\x01\x02\x5f\x02\x7f\x00\x7f\x00\x50\x01\x00\x5f\x02\x7f\x00\x7f\x00\x50\x01\x00\x5f\x00\x50\x01\x06\x5f\x02\x7f\x00\x7f\x00\x60\x00\x00\x03\x84\x80\x80\x80\x00\x03\x08\x08\x08\x04\x84\x80\x80\x80\x00\x01\x6b\x00\x14\x07\x99\x80\x80\x80\x00\x02\x08\x74\x65\x73\x74\x2d\x73\x75\x62\x00\x01\x0a\x74\x65\x73\x74\x2d\x63\x61\x6e\x6f\x6e\x00\x02\x0a\xe6\x85\x80\x80\x00\x03\xba\x80\x80\x80\x00\x00\x41\x00\xfb\x01\x00\x26\x00\x41\x0a\xfb\x01\x00\x26\x00\x41\x01\xfb\x01\x01\x26\x00\x41\x0b\xfb\x01\x02\x26\x00\x41\x02\xfb\x01\x03\x26\x00\x41\x0c\xfb\x01\x04\x26\x00\x41\x03\xfb\x01\x05\x26\x00\x41\x04\xfb\x01\x07\x26\x00\x0b\x87\x84\x80\x80\x00\x00\x10\x00\x02\x6b\xd0\x6b\xfb\x19\x03\x00\x6b\x00\x41\x00\x25\x00\xfb\x19\x03\x00\x6b\x00\x41\x01\x25\x00\xfb\x19\x03\x00\x6b\x00\x41\x02\x25\x00\xfb\x19\x03\x00\x6b\x00\x41\x03\x25\x00\xfb\x19\x03\x00\x6b\x00\x41\x04\x25\x00\xfb\x19\x03\x00\x6b\x00\x41\x00\x25\x00\xfb\x19\x01\x00\x6b\x00\x41\x01\x25\x00\xfb\x19\x01\x00\x6b\x00\x41\x02\x25\x00\xfb\x19\x01\x00\x6b\x00\x41\x03\x25\x00\xfb\x19\x01\x00\x6b\x00\x41\x04\x25\x00\xfb\x19\x01\x00\x6b\x00\xd0\x6b\xfb\x19\x03\x00\x6b\x01\x41\x01\x25\x00\xfb\x19\x03\x00\x6b\x01\x41\x02\x25\x00\xfb\x19\x03\x00\x6b\x01\x41\x01\x25\x00\xfb\x19\x01\x00\x6b\x01\x41\x02\x25\x00\xfb\x19\x01\x00\x6b\x01\xd0\x6b\xfb\x19\x03\x00\x6b\x03\x41\x02\x25\x00\xfb\x19\x03\x00\x6b\x03\x41\x02\x25\x00\xfb\x19\x01\x00\x6b\x03\xd0\x6b\xfb\x19\x03\x00\x6b\x05\x41\x03\x25\x00\xfb\x19\x03\x00\x6b\x05\x41\x03\x25\x00\xfb\x19\x01\x00\x6b\x05\xd0\x6b\xfb\x19\x03\x00\x6b\x07\x41\x04\x25\x00\xfb\x19\x03\x00\x6b\x07\x41\x04\x25\x00\xfb\x19\x01\x00\x6b\x07\x02\x6b\xd0\x6b\xfb\x19\x01\x00\x6b\x00\x0b\x1a\x02\x6b\xd0\x6b\xfb\x19\x01\x00\x6b\x01\x0b\x1a\x02\x6b\x41\x00\x25\x00\xfb\x19\x01\x00\x6b\x01\x0b\x1a\x02\x6b\x41\x03\x25\x00\xfb\x19\x01\x00\x6b\x01\x0b\x1a\x02\x6b\x41\x04\x25\x00\xfb\x19\x01\x00\x6b\x01\x0b\x1a\x02\x6b\xd0\x6b\xfb\x19\x01\x00\x6b\x03\x0b\x1a\x02\x6b\x41\x00\x25\x00\xfb\x19\x01\x00\x6b\x03\x0b\x1a\x02\x6b\x41\x01\x25\x00\xfb\x19\x01\x00\x6b\x03\x0b\x1a\x02\x6b\x41\x03\x25\x00\xfb\x19\x01\x00\x6b\x03\x0b\x1a\x02\x6b\x41\x04\x25\x00\xfb\x19\x01\x00\x6b\x03\x0b\x1a\x02\x6b\xd0\x6b\xfb\x19\x01\x00\x6b\x05\x0b\x1a\x02\x6b\x41\x00\x25\x00\xfb\x19\x01\x00\x6b\x05\x0b\x1a\x02\x6b\x41\x01\x25\x00\xfb\x19\x01\x00\x6b\x05\x0b\x1a\x02\x6b\x41\x02\x25\x00\xfb\x19\x01\x00\x6b\x05\x0b\x1a\x02\x6b\x41\x04\x25\x00\xfb\x19\x01\x00\x6b\x05\x0b\x1a\x02\x6b\xd0\x6b\xfb\x19\x01\x00\x6b\x07\x0b\x1a\x02\x6b\x41\x00\x25\x00\xfb\x19\x01\x00\x6b\x07\x0b\x1a\x02\x6b\x41\x01\x25\x00\xfb\x19\x01\x00\x6b\x07\x0b\x1a\x02\x6b\x41\x02\x25\x00\xfb\x19\x01\x00\x6b\x07\x0b\x1a\x02\x6b\x41\x03\x25\x00\xfb\x19\x01\x00\x6b\x07\x0b\x1a\x0f\x0b\x00\x0b\x95\x81\x80\x80\x00\x00\x10\x00\x02\x6b\x41\x00\x25\x00\xfb\x19\x01\x00\x6b\x00\x41\x01\x25\x00\xfb\x19\x01\x00\x6b\x00\x41\x02\x25\x00\xfb\x19\x01\x00\x6b\x00\x41\x03\x25\x00\xfb\x19\x01\x00\x6b\x00\x41\x04\x25\x00\xfb\x19\x01\x00\x6b\x00\x41\x0a\x25\x00\xfb\x19\x01\x00\x6b\x00\x41\x0b\x25\x00\xfb\x19\x01\x00\x6b\x00\x41\x0c\x25\x00\xfb\x19\x01\x00\x6b\x00\x41\x01\x25\x00\xfb\x19\x01\x00\x6b\x02\x41\x02\x25\x00\xfb\x19\x01\x00\x6b\x02\x41\x0b\x25\x00\xfb\x19\x01\x00\x6b\x01\x41\x0c\x25\x00\xfb\x19\x01\x00\x6b\x01\x41\x02\x25\x00\xfb\x19\x01\x00\x6b\x04\x41\x0c\x25\x00\xfb\x19\x01\x00\x6b\x03\x0f\x0b\x00\x0b", "br_on_cast_fail.wast:104");

// br_on_cast_fail.wast:104
let $2 = instance($$2);

// br_on_cast_fail.wast:220
run(() => call($2, "test-sub", []), "br_on_cast_fail.wast:220");

// br_on_cast_fail.wast:221
run(() => call($2, "test-canon", []), "br_on_cast_fail.wast:221");

// br_on_cast_fail.wast:226
let $$3 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8f\x80\x80\x80\x00\x03\x5f\x00\x60\x01\x64\x6e\x01\x64\x6e\x60\x01\x6e\x01\x6e\x03\x84\x80\x80\x80\x00\x03\x01\x02\x02\x0a\xba\x80\x80\x80\x00\x03\x8e\x80\x80\x80\x00\x00\x02\x64\x00\x20\x00\xfb\x19\x00\x01\x6e\x00\x0b\x0b\x8e\x80\x80\x80\x00\x00\x02\x64\x00\x20\x00\xfb\x19\x01\x01\x6e\x00\x0b\x0b\x8e\x80\x80\x80\x00\x00\x02\x63\x00\x20\x00\xfb\x19\x03\x01\x6e\x00\x0b\x0b", "br_on_cast_fail.wast:226");

// br_on_cast_fail.wast:226
let $3 = instance($$3);

// br_on_cast_fail.wast:240
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x5f\x00\x60\x01\x64\x6e\x01\x64\x6e\x03\x82\x80\x80\x80\x00\x01\x01\x0a\x94\x80\x80\x80\x00\x01\x8e\x80\x80\x80\x00\x00\x02\x64\x00\x20\x00\xfb\x19\x03\x01\x6e\x00\x0b\x0b", "br_on_cast_fail.wast:240");

// br_on_cast_fail.wast:249
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x5f\x00\x60\x01\x64\x6e\x01\x64\x6e\x03\x82\x80\x80\x80\x00\x01\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x63\x00\x20\x00\xfb\x19\x02\x01\x6e\x00\x0b\xd4\x0b", "br_on_cast_fail.wast:249");

// br_on_cast_fail.wast:258
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x5f\x00\x60\x01\x6e\x01\x64\x6e\x03\x82\x80\x80\x80\x00\x01\x01\x0a\x94\x80\x80\x80\x00\x01\x8e\x80\x80\x80\x00\x00\x02\x64\x00\x20\x00\xfb\x19\x01\x01\x6e\x00\x0b\x0b", "br_on_cast_fail.wast:258");

// br_on_cast_fail.wast:267
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x6e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x00\xfb\x19\x03\x00\x6d\x6e\x0b", "br_on_cast_fail.wast:267");

// br_on_cast_fail.wast:275
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x6e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x00\xfb\x19\x03\x00\x6b\x6a\x0b", "br_on_cast_fail.wast:275");

// br_on_cast_fail.wast:286
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x90\x80\x80\x80\x00\x03\x60\x00\x00\x60\x01\x63\x00\x01\x70\x60\x01\x70\x02\x70\x70\x03\x83\x80\x80\x80\x00\x02\x01\x02\x0a\xa0\x80\x80\x80\x00\x02\x84\x80\x80\x80\x00\x00\x20\x00\x0b\x91\x80\x80\x80\x00\x00\xd0\x00\x20\x00\xfb\x19\x01\x00\x70\x00\x1a\x10\x00\x20\x00\x0b", "br_on_cast_fail.wast:286");
reinitializeRegistry();
})();
