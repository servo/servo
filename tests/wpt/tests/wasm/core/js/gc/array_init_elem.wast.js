(function array_init_elem_wast_js() {

// array_init_elem.wast:5
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x5e\x70\x00\x60\x01\x64\x00\x00\x03\x82\x80\x80\x80\x00\x01\x01\x07\x9d\x80\x80\x80\x00\x01\x19\x61\x72\x72\x61\x79\x2e\x69\x6e\x69\x74\x5f\x65\x6c\x65\x6d\x2d\x69\x6d\x6d\x75\x74\x61\x62\x6c\x65\x00\x00\x09\x84\x80\x80\x80\x00\x01\x05\x70\x00\x0a\x94\x80\x80\x80\x00\x01\x8e\x80\x80\x80\x00\x00\x20\x00\x41\x00\x41\x00\x41\x00\xfb\x13\x00\x00\x0b", "array_init_elem.wast:5");

// array_init_elem.wast:18
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x5e\x78\x01\x60\x01\x64\x00\x00\x03\x82\x80\x80\x80\x00\x01\x01\x07\x9d\x80\x80\x80\x00\x01\x19\x61\x72\x72\x61\x79\x2e\x69\x6e\x69\x74\x5f\x65\x6c\x65\x6d\x2d\x69\x6e\x76\x61\x6c\x69\x64\x2d\x31\x00\x00\x09\x84\x80\x80\x80\x00\x01\x05\x70\x00\x0a\x94\x80\x80\x80\x00\x01\x8e\x80\x80\x80\x00\x00\x20\x00\x41\x00\x41\x00\x41\x00\xfb\x13\x00\x00\x0b", "array_init_elem.wast:18");

// array_init_elem.wast:31
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x5e\x70\x01\x60\x01\x64\x00\x00\x03\x82\x80\x80\x80\x00\x01\x01\x07\x9d\x80\x80\x80\x00\x01\x19\x61\x72\x72\x61\x79\x2e\x69\x6e\x69\x74\x5f\x65\x6c\x65\x6d\x2d\x69\x6e\x76\x61\x6c\x69\x64\x2d\x32\x00\x00\x09\x84\x80\x80\x80\x00\x01\x05\x6f\x00\x0a\x94\x80\x80\x80\x00\x01\x8e\x80\x80\x80\x00\x00\x20\x00\x41\x00\x41\x00\x41\x00\xfb\x13\x00\x00\x0b", "array_init_elem.wast:31");

// array_init_elem.wast:44
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x05\x60\x00\x00\x5e\x64\x00\x00\x5e\x70\x01\x60\x01\x7f\x00\x60\x03\x7f\x7f\x7f\x00\x03\x86\x80\x80\x80\x00\x05\x00\x03\x00\x04\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x01\x06\x95\x80\x80\x80\x00\x02\x64\x01\x00\xd2\x00\x41\x0c\xfb\x06\x01\x0b\x64\x02\x00\x41\x0c\xfb\x07\x02\x0b\x07\xc7\x80\x80\x80\x00\x04\x0e\x61\x72\x72\x61\x79\x5f\x63\x61\x6c\x6c\x5f\x6e\x74\x68\x00\x01\x14\x61\x72\x72\x61\x79\x5f\x69\x6e\x69\x74\x5f\x65\x6c\x65\x6d\x2d\x6e\x75\x6c\x6c\x00\x02\x0f\x61\x72\x72\x61\x79\x5f\x69\x6e\x69\x74\x5f\x65\x6c\x65\x6d\x00\x03\x09\x64\x72\x6f\x70\x5f\x73\x65\x67\x73\x00\x04\x09\x90\x80\x80\x80\x00\x01\x01\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0a\xcf\x80\x80\x80\x00\x05\x82\x80\x80\x80\x00\x00\x0b\x92\x80\x80\x80\x00\x00\x41\x00\x23\x01\x20\x00\xfb\x0b\x02\x26\x00\x41\x00\x11\x00\x00\x0b\x8e\x80\x80\x80\x00\x00\xd0\x02\x41\x00\x41\x00\x41\x00\xfb\x13\x02\x00\x0b\x8e\x80\x80\x80\x00\x00\x23\x01\x20\x00\x20\x01\x20\x02\xfb\x13\x02\x00\x0b\x85\x80\x80\x80\x00\x00\xfc\x0d\x00\x0b", "array_init_elem.wast:44");

// array_init_elem.wast:44
let $1 = instance($$1);

// array_init_elem.wast:78
assert_trap(() => call($1, "array_init_elem-null", []), "array_init_elem.wast:78");

// array_init_elem.wast:81
assert_trap(() => call($1, "array_init_elem", [13, 0, 0]), "array_init_elem.wast:81");

// array_init_elem.wast:82
assert_trap(() => call($1, "array_init_elem", [0, 13, 0]), "array_init_elem.wast:82");

// array_init_elem.wast:85
assert_trap(() => call($1, "array_init_elem", [0, 0, 13]), "array_init_elem.wast:85");

// array_init_elem.wast:86
assert_trap(() => call($1, "array_init_elem", [0, 0, 13]), "array_init_elem.wast:86");

// array_init_elem.wast:89
assert_return(() => call($1, "array_init_elem", [12, 0, 0]), "array_init_elem.wast:89");

// array_init_elem.wast:90
assert_return(() => call($1, "array_init_elem", [0, 12, 0]), "array_init_elem.wast:90");

// array_init_elem.wast:93
assert_trap(() => call($1, "array_call_nth", [0]), "array_init_elem.wast:93");

// array_init_elem.wast:94
assert_trap(() => call($1, "array_call_nth", [5]), "array_init_elem.wast:94");

// array_init_elem.wast:95
assert_trap(() => call($1, "array_call_nth", [11]), "array_init_elem.wast:95");

// array_init_elem.wast:96
assert_trap(() => call($1, "array_call_nth", [12]), "array_init_elem.wast:96");

// array_init_elem.wast:99
assert_return(() => call($1, "array_init_elem", [2, 3, 2]), "array_init_elem.wast:99");

// array_init_elem.wast:100
assert_trap(() => call($1, "array_call_nth", [1]), "array_init_elem.wast:100");

// array_init_elem.wast:101
assert_return(() => call($1, "array_call_nth", [2]), "array_init_elem.wast:101");

// array_init_elem.wast:102
assert_return(() => call($1, "array_call_nth", [3]), "array_init_elem.wast:102");

// array_init_elem.wast:103
assert_trap(() => call($1, "array_call_nth", [4]), "array_init_elem.wast:103");

// array_init_elem.wast:106
assert_return(() => call($1, "drop_segs", []), "array_init_elem.wast:106");

// array_init_elem.wast:107
assert_return(() => call($1, "array_init_elem", [0, 0, 0]), "array_init_elem.wast:107");

// array_init_elem.wast:108
assert_trap(() => call($1, "array_init_elem", [0, 0, 1]), "array_init_elem.wast:108");
reinitializeRegistry();
})();
