(function func_wast_js() {

// func.wast:3
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xc2\x81\x80\x80\x00\x1d\x60\x00\x00\x60\x00\x00\x60\x00\x01\x7f\x60\x01\x7f\x00\x60\x03\x7f\x7c\x7f\x01\x7f\x60\x00\x00\x60\x03\x7f\x7c\x7e\x00\x60\x02\x7f\x7c\x00\x60\x05\x7f\x7d\x7e\x7f\x7c\x00\x60\x00\x03\x7f\x7c\x7d\x60\x00\x02\x7f\x7c\x60\x00\x05\x7f\x7d\x7e\x7f\x7c\x60\x04\x7f\x7d\x7e\x7f\x03\x7f\x7e\x7f\x60\x00\x01\x7e\x60\x00\x01\x7d\x60\x00\x01\x7c\x60\x02\x7f\x7f\x01\x7f\x60\x02\x7e\x7e\x01\x7e\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x60\x06\x7d\x7f\x7e\x7f\x7c\x7f\x01\x7c\x60\x00\x03\x7f\x7f\x7f\x60\x00\x02\x7f\x7e\x60\x01\x7f\x01\x7f\x60\x01\x7f\x02\x7f\x7e\x60\x01\x7f\x02\x7d\x7e\x60\x01\x7f\x02\x7f\x7f\x60\x00\x02\x7f\x7f\x60\x11\x7f\x7e\x7d\x7d\x7f\x7c\x7d\x7f\x7f\x7f\x7d\x7c\x7c\x7c\x7f\x7f\x7d\x10\x7c\x7d\x7f\x7f\x7f\x7e\x7d\x7f\x7f\x7d\x7c\x7c\x7f\x7d\x7f\x7c\x03\xe2\x80\x80\x80\x00\x61\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x03\x06\x07\x08\x00\x00\x02\x09\x0a\x0b\x01\x02\x03\x04\x02\x03\x04\x00\x05\x0c\x00\x02\x0d\x0e\x0f\x02\x0d\x0e\x0f\x0f\x10\x11\x12\x13\x10\x11\x12\x13\x14\x00\x00\x02\x0d\x0e\x0f\x0a\x15\x00\x02\x16\x00\x02\x0d\x0e\x0f\x0a\x15\x02\x16\x00\x02\x0d\x0e\x0f\x0a\x15\x02\x16\x03\x17\x18\x03\x17\x19\x03\x17\x1a\x1c\x02\x0d\x0e\x0f\x07\x94\x89\x80\x80\x00\x46\x01\x66\x00\x02\x01\x67\x00\x04\x0a\x74\x79\x70\x65\x2d\x75\x73\x65\x2d\x31\x00\x19\x0a\x74\x79\x70\x65\x2d\x75\x73\x65\x2d\x32\x00\x1a\x0a\x74\x79\x70\x65\x2d\x75\x73\x65\x2d\x33\x00\x1b\x0a\x74\x79\x70\x65\x2d\x75\x73\x65\x2d\x34\x00\x1c\x0a\x74\x79\x70\x65\x2d\x75\x73\x65\x2d\x35\x00\x1d\x0a\x74\x79\x70\x65\x2d\x75\x73\x65\x2d\x36\x00\x1e\x0a\x74\x79\x70\x65\x2d\x75\x73\x65\x2d\x37\x00\x1f\x0f\x6c\x6f\x63\x61\x6c\x2d\x66\x69\x72\x73\x74\x2d\x69\x33\x32\x00\x24\x0f\x6c\x6f\x63\x61\x6c\x2d\x66\x69\x72\x73\x74\x2d\x69\x36\x34\x00\x25\x0f\x6c\x6f\x63\x61\x6c\x2d\x66\x69\x72\x73\x74\x2d\x66\x33\x32\x00\x26\x0f\x6c\x6f\x63\x61\x6c\x2d\x66\x69\x72\x73\x74\x2d\x66\x36\x34\x00\x27\x10\x6c\x6f\x63\x61\x6c\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x69\x33\x32\x00\x28\x10\x6c\x6f\x63\x61\x6c\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x69\x36\x34\x00\x29\x10\x6c\x6f\x63\x61\x6c\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x66\x33\x32\x00\x2a\x10\x6c\x6f\x63\x61\x6c\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x66\x36\x34\x00\x2b\x0b\x6c\x6f\x63\x61\x6c\x2d\x6d\x69\x78\x65\x64\x00\x2c\x0f\x70\x61\x72\x61\x6d\x2d\x66\x69\x72\x73\x74\x2d\x69\x33\x32\x00\x2d\x0f\x70\x61\x72\x61\x6d\x2d\x66\x69\x72\x73\x74\x2d\x69\x36\x34\x00\x2e\x0f\x70\x61\x72\x61\x6d\x2d\x66\x69\x72\x73\x74\x2d\x66\x33\x32\x00\x2f\x0f\x70\x61\x72\x61\x6d\x2d\x66\x69\x72\x73\x74\x2d\x66\x36\x34\x00\x30\x10\x70\x61\x72\x61\x6d\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x69\x33\x32\x00\x31\x10\x70\x61\x72\x61\x6d\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x69\x36\x34\x00\x32\x10\x70\x61\x72\x61\x6d\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x66\x33\x32\x00\x33\x10\x70\x61\x72\x61\x6d\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x66\x36\x34\x00\x34\x0b\x70\x61\x72\x61\x6d\x2d\x6d\x69\x78\x65\x64\x00\x35\x05\x65\x6d\x70\x74\x79\x00\x36\x0a\x76\x61\x6c\x75\x65\x2d\x76\x6f\x69\x64\x00\x37\x09\x76\x61\x6c\x75\x65\x2d\x69\x33\x32\x00\x38\x09\x76\x61\x6c\x75\x65\x2d\x69\x36\x34\x00\x39\x09\x76\x61\x6c\x75\x65\x2d\x66\x33\x32\x00\x3a\x09\x76\x61\x6c\x75\x65\x2d\x66\x36\x34\x00\x3b\x0d\x76\x61\x6c\x75\x65\x2d\x69\x33\x32\x2d\x66\x36\x34\x00\x3c\x11\x76\x61\x6c\x75\x65\x2d\x69\x33\x32\x2d\x69\x33\x32\x2d\x69\x33\x32\x00\x3d\x10\x76\x61\x6c\x75\x65\x2d\x62\x6c\x6f\x63\x6b\x2d\x76\x6f\x69\x64\x00\x3e\x0f\x76\x61\x6c\x75\x65\x2d\x62\x6c\x6f\x63\x6b\x2d\x69\x33\x32\x00\x3f\x13\x76\x61\x6c\x75\x65\x2d\x62\x6c\x6f\x63\x6b\x2d\x69\x33\x32\x2d\x69\x36\x34\x00\x40\x0c\x72\x65\x74\x75\x72\x6e\x2d\x65\x6d\x70\x74\x79\x00\x41\x0a\x72\x65\x74\x75\x72\x6e\x2d\x69\x33\x32\x00\x42\x0a\x72\x65\x74\x75\x72\x6e\x2d\x69\x36\x34\x00\x43\x0a\x72\x65\x74\x75\x72\x6e\x2d\x66\x33\x32\x00\x44\x0a\x72\x65\x74\x75\x72\x6e\x2d\x66\x36\x34\x00\x45\x0e\x72\x65\x74\x75\x72\x6e\x2d\x69\x33\x32\x2d\x66\x36\x34\x00\x46\x12\x72\x65\x74\x75\x72\x6e\x2d\x69\x33\x32\x2d\x69\x33\x32\x2d\x69\x33\x32\x00\x47\x10\x72\x65\x74\x75\x72\x6e\x2d\x62\x6c\x6f\x63\x6b\x2d\x69\x33\x32\x00\x48\x14\x72\x65\x74\x75\x72\x6e\x2d\x62\x6c\x6f\x63\x6b\x2d\x69\x33\x32\x2d\x69\x36\x34\x00\x49\x0b\x62\x72\x65\x61\x6b\x2d\x65\x6d\x70\x74\x79\x00\x4a\x09\x62\x72\x65\x61\x6b\x2d\x69\x33\x32\x00\x4b\x09\x62\x72\x65\x61\x6b\x2d\x69\x36\x34\x00\x4c\x09\x62\x72\x65\x61\x6b\x2d\x66\x33\x32\x00\x4d\x09\x62\x72\x65\x61\x6b\x2d\x66\x36\x34\x00\x4e\x0d\x62\x72\x65\x61\x6b\x2d\x69\x33\x32\x2d\x66\x36\x34\x00\x4f\x11\x62\x72\x65\x61\x6b\x2d\x69\x33\x32\x2d\x69\x33\x32\x2d\x69\x33\x32\x00\x50\x0f\x62\x72\x65\x61\x6b\x2d\x62\x6c\x6f\x63\x6b\x2d\x69\x33\x32\x00\x51\x13\x62\x72\x65\x61\x6b\x2d\x62\x6c\x6f\x63\x6b\x2d\x69\x33\x32\x2d\x69\x36\x34\x00\x52\x11\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x69\x66\x2d\x65\x6d\x70\x74\x79\x00\x53\x0f\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x69\x66\x2d\x6e\x75\x6d\x00\x54\x13\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x69\x66\x2d\x6e\x75\x6d\x2d\x6e\x75\x6d\x00\x55\x14\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x65\x6d\x70\x74\x79\x00\x56\x12\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6e\x75\x6d\x00\x57\x16\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6e\x75\x6d\x2d\x6e\x75\x6d\x00\x58\x1b\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6e\x65\x73\x74\x65\x64\x2d\x65\x6d\x70\x74\x79\x00\x59\x19\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6e\x65\x73\x74\x65\x64\x2d\x6e\x75\x6d\x00\x5a\x1d\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6e\x65\x73\x74\x65\x64\x2d\x6e\x75\x6d\x2d\x6e\x75\x6d\x00\x5b\x09\x6c\x61\x72\x67\x65\x2d\x73\x69\x67\x00\x5c\x0e\x69\x6e\x69\x74\x2d\x6c\x6f\x63\x61\x6c\x2d\x69\x33\x32\x00\x5d\x0e\x69\x6e\x69\x74\x2d\x6c\x6f\x63\x61\x6c\x2d\x69\x36\x34\x00\x5e\x0e\x69\x6e\x69\x74\x2d\x6c\x6f\x63\x61\x6c\x2d\x66\x33\x32\x00\x5f\x0e\x69\x6e\x69\x74\x2d\x6c\x6f\x63\x61\x6c\x2d\x66\x36\x34\x00\x60\x0a\xc1\x89\x80\x80\x00\x61\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x84\x80\x80\x80\x00\x01\x01\x7f\x0b\x84\x80\x80\x80\x00\x01\x01\x7f\x0b\x88\x80\x80\x80\x00\x03\x01\x7f\x01\x7c\x01\x7e\x0b\x86\x80\x80\x80\x00\x02\x01\x7f\x01\x7c\x0b\x8c\x80\x80\x80\x00\x05\x01\x7f\x01\x7d\x01\x7e\x01\x7f\x01\x7c\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x83\x80\x80\x80\x00\x00\x00\x0b\x83\x80\x80\x80\x00\x00\x00\x0b\x83\x80\x80\x80\x00\x00\x00\x0b\x83\x80\x80\x80\x00\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x90\x80\x80\x80\x00\x06\x01\x7d\x01\x7f\x01\x7e\x01\x7f\x01\x7c\x01\x7f\x00\x00\x0b\x90\x80\x80\x80\x00\x06\x01\x7d\x01\x7f\x01\x7e\x01\x7f\x01\x7c\x01\x7f\x00\x00\x0b\x86\x80\x80\x80\x00\x01\x02\x7f\x20\x00\x0b\x86\x80\x80\x80\x00\x01\x02\x7e\x20\x00\x0b\x86\x80\x80\x80\x00\x01\x02\x7d\x20\x00\x0b\x86\x80\x80\x80\x00\x01\x02\x7c\x20\x00\x0b\x86\x80\x80\x80\x00\x01\x02\x7f\x20\x01\x0b\x86\x80\x80\x80\x00\x01\x02\x7e\x20\x01\x0b\x86\x80\x80\x80\x00\x01\x02\x7d\x20\x01\x0b\x86\x80\x80\x80\x00\x01\x02\x7c\x20\x01\x0b\xa8\x80\x80\x80\x00\x06\x01\x7d\x01\x7f\x01\x7e\x01\x7f\x01\x7c\x01\x7f\x20\x00\x8c\x1a\x20\x01\x45\x1a\x20\x02\x50\x1a\x20\x03\x45\x1a\x20\x04\x9a\x1a\x20\x05\x45\x1a\x20\x04\x0b\x84\x80\x80\x80\x00\x00\x20\x00\x0b\x84\x80\x80\x80\x00\x00\x20\x00\x0b\x84\x80\x80\x80\x00\x00\x20\x00\x0b\x84\x80\x80\x80\x00\x00\x20\x00\x0b\x84\x80\x80\x80\x00\x00\x20\x01\x0b\x84\x80\x80\x80\x00\x00\x20\x01\x0b\x84\x80\x80\x80\x00\x00\x20\x01\x0b\x84\x80\x80\x80\x00\x00\x20\x01\x0b\x9c\x80\x80\x80\x00\x00\x20\x00\x8c\x1a\x20\x01\x45\x1a\x20\x02\x50\x1a\x20\x03\x45\x1a\x20\x04\x9a\x1a\x20\x05\x45\x1a\x20\x04\x0b\x82\x80\x80\x80\x00\x00\x0b\x84\x80\x80\x80\x00\x00\x10\x00\x0b\x85\x80\x80\x80\x00\x00\x41\xcd\x00\x0b\x85\x80\x80\x80\x00\x00\x42\xe1\x3c\x0b\x87\x80\x80\x80\x00\x00\x43\x66\x66\x9b\x42\x0b\x8b\x80\x80\x80\x00\x00\x44\xe1\x7a\x14\xae\x47\x71\x53\x40\x0b\x8e\x80\x80\x80\x00\x00\x41\xcd\x00\x44\x00\x00\x00\x00\x00\x00\x1c\x40\x0b\x88\x80\x80\x80\x00\x00\x41\x01\x41\x02\x41\x03\x0b\x89\x80\x80\x80\x00\x00\x02\x40\x10\x00\x10\x00\x0b\x0b\x8a\x80\x80\x80\x00\x00\x02\x7f\x10\x00\x41\xcd\x00\x0b\x0b\x8b\x80\x80\x80\x00\x00\x02\x16\x10\x00\x41\x01\x42\x02\x0b\x0b\x83\x80\x80\x80\x00\x00\x0f\x0b\x86\x80\x80\x80\x00\x00\x41\xce\x00\x0f\x0b\x86\x80\x80\x80\x00\x00\x42\xc6\x3d\x0f\x0b\x88\x80\x80\x80\x00\x00\x43\x66\x66\x9d\x42\x0f\x0b\x8c\x80\x80\x80\x00\x00\x44\x52\xb8\x1e\x85\xeb\xb1\x53\x40\x0f\x0b\x8f\x80\x80\x80\x00\x00\x41\xce\x00\x44\x52\xb8\x1e\x85\xeb\xb1\x53\x40\x0f\x0b\x89\x80\x80\x80\x00\x00\x41\x01\x41\x02\x41\x03\x0f\x0b\x8b\x80\x80\x80\x00\x00\x02\x7f\x10\x00\x41\xcd\x00\x0b\x0f\x0b\x8c\x80\x80\x80\x00\x00\x02\x16\x10\x00\x41\x01\x42\x02\x0b\x0f\x0b\x84\x80\x80\x80\x00\x00\x0c\x00\x0b\x87\x80\x80\x80\x00\x00\x41\xcf\x00\x0c\x00\x0b\x87\x80\x80\x80\x00\x00\x42\xab\x3e\x0c\x00\x0b\x89\x80\x80\x80\x00\x00\x43\xcd\xcc\x9f\x42\x0c\x00\x0b\x8d\x80\x80\x80\x00\x00\x44\xc3\xf5\x28\x5c\x8f\xf2\x53\x40\x0c\x00\x0b\x90\x80\x80\x80\x00\x00\x41\xcf\x00\x44\xc3\xf5\x28\x5c\x8f\xf2\x53\x40\x0c\x00\x0b\x8a\x80\x80\x80\x00\x00\x41\x01\x41\x02\x41\x03\x0c\x00\x0b\x8c\x80\x80\x80\x00\x00\x02\x7f\x10\x00\x41\xcd\x00\x0b\x0c\x00\x0b\x8d\x80\x80\x80\x00\x00\x02\x16\x10\x00\x41\x01\x42\x02\x0b\x0c\x00\x0b\x86\x80\x80\x80\x00\x00\x20\x00\x0d\x00\x0b\x8b\x80\x80\x80\x00\x00\x41\x32\x20\x00\x0d\x00\x1a\x41\x33\x0b\x90\x80\x80\x80\x00\x00\x41\x32\x42\x33\x20\x00\x0d\x00\x1a\x1a\x41\x33\x42\x34\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x0e\x02\x00\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x41\x32\x20\x00\x0e\x01\x00\x00\x41\x33\x0b\x96\x80\x80\x80\x00\x00\x43\x00\x00\x48\x42\x42\x33\x20\x00\x0e\x01\x00\x00\x43\x00\x00\x4c\x42\x42\x34\x0b\x8c\x80\x80\x80\x00\x00\x02\x40\x20\x00\x0e\x02\x00\x01\x00\x0b\x0b\x93\x80\x80\x80\x00\x00\x02\x7f\x41\x32\x20\x00\x0e\x02\x00\x01\x00\x41\x33\x0b\x41\x02\x6a\x0b\x97\x80\x80\x80\x00\x00\x02\x1b\x41\x32\x41\x33\x20\x00\x0e\x02\x00\x01\x00\x41\x33\x41\x7d\x0b\x6a\x41\x34\x0b\xa2\x80\x80\x80\x00\x00\x20\x05\x20\x02\x20\x00\x20\x08\x20\x07\x20\x01\x20\x03\x20\x09\x20\x04\x20\x06\x20\x0d\x20\x0b\x20\x0f\x20\x10\x20\x0e\x20\x0c\x0b\x86\x80\x80\x80\x00\x01\x01\x7f\x20\x00\x0b\x86\x80\x80\x80\x00\x01\x01\x7e\x20\x00\x0b\x86\x80\x80\x80\x00\x01\x01\x7d\x20\x00\x0b\x86\x80\x80\x80\x00\x01\x01\x7c\x20\x00\x0b", "func.wast:3");

// func.wast:3
let $1 = instance($$1);

// func.wast:241
assert_return(() => call($1, "type-use-1", []), "func.wast:241");

// func.wast:242
assert_return(() => call($1, "type-use-2", []), "func.wast:242", 0);

// func.wast:243
assert_return(() => call($1, "type-use-3", [1]), "func.wast:243");

// func.wast:244
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x96\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x03\x7f\x7c\x7f\x01\x7f\x02\xba\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0a\x74\x79\x70\x65\x2d\x75\x73\x65\x2d\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa4\x80\x80\x80\x00\x01\x9e\x80\x80\x80\x00\x00\x02\x40\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:244");  // assert_return(() => call($1, "type-use-4", [1, 1., 1]), "func.wast:244", 0)

// func.wast:248
assert_return(() => call($1, "type-use-5", []), "func.wast:248", 0);

// func.wast:249
assert_return(() => call($1, "type-use-6", [1]), "func.wast:249");

// func.wast:250
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x96\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x03\x7f\x7c\x7f\x01\x7f\x02\xba\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0a\x74\x79\x70\x65\x2d\x75\x73\x65\x2d\x37\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa4\x80\x80\x80\x00\x01\x9e\x80\x80\x80\x00\x00\x02\x40\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:250");  // assert_return(() => call($1, "type-use-7", [1, 1., 1]), "func.wast:250", 0)

// func.wast:255
assert_return(() => call($1, "local-first-i32", []), "func.wast:255", 0);

// func.wast:256
assert_return(() => call($1, "local-first-i64", []), "func.wast:256", 0n);

// func.wast:257
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7d\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x6c\x6f\x63\x61\x6c\x2d\x66\x69\x72\x73\x74\x2d\x66\x33\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:257");  // assert_return(() => call($1, "local-first-f32", []), "func.wast:257", 0.)

// func.wast:258
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7c\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x6c\x6f\x63\x61\x6c\x2d\x66\x69\x72\x73\x74\x2d\x66\x36\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:258");  // assert_return(() => call($1, "local-first-f64", []), "func.wast:258", 0.)

// func.wast:259
assert_return(() => call($1, "local-second-i32", []), "func.wast:259", 0);

// func.wast:260
assert_return(() => call($1, "local-second-i64", []), "func.wast:260", 0n);

// func.wast:261
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7d\x02\xc0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x10\x6c\x6f\x63\x61\x6c\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x66\x33\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:261");  // assert_return(() => call($1, "local-second-f32", []), "func.wast:261", 0.)

// func.wast:262
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7c\x02\xc0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x10\x6c\x6f\x63\x61\x6c\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x66\x36\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:262");  // assert_return(() => call($1, "local-second-f64", []), "func.wast:262", 0.)

// func.wast:263
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7c\x02\xbb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0b\x6c\x6f\x63\x61\x6c\x2d\x6d\x69\x78\x65\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:263");  // assert_return(() => call($1, "local-mixed", []), "func.wast:263", 0.)

// func.wast:265
assert_return(() => call($1, "param-first-i32", [2, 3]), "func.wast:265", 2);

// func.wast:268
assert_return(() => call($1, "param-first-i64", [2n, 3n]), "func.wast:268", 2n);

// func.wast:271
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7d\x7d\x01\x7d\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x70\x61\x72\x61\x6d\x2d\x66\x69\x72\x73\x74\x2d\x66\x33\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa4\x80\x80\x80\x00\x01\x9e\x80\x80\x80\x00\x00\x02\x40\x43\x00\x00\x00\x40\x43\x00\x00\x40\x40\x10\x00\xbc\x43\x00\x00\x00\x40\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:271");  // assert_return(() => call($1, "param-first-f32", [2., 3.]), "func.wast:271", 2.)

// func.wast:274
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7c\x7c\x01\x7c\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x70\x61\x72\x61\x6d\x2d\x66\x69\x72\x73\x74\x2d\x66\x36\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x40\x44\x00\x00\x00\x00\x00\x00\x08\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:274");  // assert_return(() => call($1, "param-first-f64", [2., 3.]), "func.wast:274", 2.)

// func.wast:277
assert_return(() => call($1, "param-second-i32", [2, 3]), "func.wast:277", 3);

// func.wast:280
assert_return(() => call($1, "param-second-i64", [2n, 3n]), "func.wast:280", 3n);

// func.wast:283
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7d\x7d\x01\x7d\x02\xc0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x10\x70\x61\x72\x61\x6d\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x66\x33\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa4\x80\x80\x80\x00\x01\x9e\x80\x80\x80\x00\x00\x02\x40\x43\x00\x00\x00\x40\x43\x00\x00\x40\x40\x10\x00\xbc\x43\x00\x00\x40\x40\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:283");  // assert_return(() => call($1, "param-second-f32", [2., 3.]), "func.wast:283", 3.)

// func.wast:286
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7c\x7c\x01\x7c\x02\xc0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x10\x70\x61\x72\x61\x6d\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x66\x36\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x40\x44\x00\x00\x00\x00\x00\x00\x08\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x08\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:286");  // assert_return(() => call($1, "param-second-f64", [2., 3.]), "func.wast:286", 3.)

// func.wast:290
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x99\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x06\x7d\x7f\x7e\x7f\x7c\x7f\x01\x7c\x02\xbb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0b\x70\x61\x72\x61\x6d\x2d\x6d\x69\x78\x65\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb4\x80\x80\x80\x00\x01\xae\x80\x80\x80\x00\x00\x02\x40\x43\x00\x00\x80\x3f\x41\x02\x42\x03\x41\x04\x44\x00\x00\x00\x00\x00\x00\x16\x40\x41\x06\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x16\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:290");  // assert_return(() => call($1, "param-mixed", [1., 2, 3n, 4, 5.5, 6]), "func.wast:290", 5.5)

// func.wast:298
assert_return(() => call($1, "empty", []), "func.wast:298");

// func.wast:299
assert_return(() => call($1, "value-void", []), "func.wast:299");

// func.wast:300
assert_return(() => call($1, "value-i32", []), "func.wast:300", 77);

// func.wast:301
assert_return(() => call($1, "value-i64", []), "func.wast:301", 7_777n);

// func.wast:302
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7d\x02\xb9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x09\x76\x61\x6c\x75\x65\x2d\x66\x33\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x66\x66\x9b\x42\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:302");  // assert_return(() => call($1, "value-f32", []), "func.wast:302", 77.6999969482)

// func.wast:303
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7c\x02\xb9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x09\x76\x61\x6c\x75\x65\x2d\x66\x36\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\xe1\x7a\x14\xae\x47\x71\x53\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:303");  // assert_return(() => call($1, "value-f64", []), "func.wast:303", 77.77)

// func.wast:304
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x02\x7f\x7c\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x76\x61\x6c\x75\x65\x2d\x69\x33\x32\x2d\x66\x36\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa7\x80\x80\x80\x00\x01\xa1\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x1c\x40\xbd\x51\x45\x0d\x00\x01\x41\xcd\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:304");  // assert_return(() => call($1, "value-i32-f64", []), "func.wast:304", 77, 7.)

// func.wast:305
assert_return(() => call($1, "value-i32-i32-i32", []), "func.wast:305", 1, 2, 3);

// func.wast:308
assert_return(() => call($1, "value-block-void", []), "func.wast:308");

// func.wast:309
assert_return(() => call($1, "value-block-i32", []), "func.wast:309", 77);

// func.wast:310
assert_return(() => call($1, "value-block-i32-i64", []), "func.wast:310", 1, 2n);

// func.wast:312
assert_return(() => call($1, "return-empty", []), "func.wast:312");

// func.wast:313
assert_return(() => call($1, "return-i32", []), "func.wast:313", 78);

// func.wast:314
assert_return(() => call($1, "return-i64", []), "func.wast:314", 7_878n);

// func.wast:315
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7d\x02\xba\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0a\x72\x65\x74\x75\x72\x6e\x2d\x66\x33\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x66\x66\x9d\x42\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:315");  // assert_return(() => call($1, "return-f32", []), "func.wast:315", 78.6999969482)

// func.wast:316
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7c\x02\xba\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0a\x72\x65\x74\x75\x72\x6e\x2d\x66\x36\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\x52\xb8\x1e\x85\xeb\xb1\x53\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:316");  // assert_return(() => call($1, "return-f64", []), "func.wast:316", 78.78)

// func.wast:317
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x02\x7f\x7c\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x72\x65\x74\x75\x72\x6e\x2d\x69\x33\x32\x2d\x66\x36\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa7\x80\x80\x80\x00\x01\xa1\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\x52\xb8\x1e\x85\xeb\xb1\x53\x40\xbd\x51\x45\x0d\x00\x01\x41\xce\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:317");  // assert_return(() => call($1, "return-i32-f64", []), "func.wast:317", 78, 78.78)

// func.wast:318
assert_return(() => call($1, "return-i32-i32-i32", []), "func.wast:318", 1, 2, 3);

// func.wast:321
assert_return(() => call($1, "return-block-i32", []), "func.wast:321", 77);

// func.wast:322
assert_return(() => call($1, "return-block-i32-i64", []), "func.wast:322", 1, 2n);

// func.wast:324
assert_return(() => call($1, "break-empty", []), "func.wast:324");

// func.wast:325
assert_return(() => call($1, "break-i32", []), "func.wast:325", 79);

// func.wast:326
assert_return(() => call($1, "break-i64", []), "func.wast:326", 7_979n);

// func.wast:327
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7d\x02\xb9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x09\x62\x72\x65\x61\x6b\x2d\x66\x33\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\xcd\xcc\x9f\x42\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:327");  // assert_return(() => call($1, "break-f32", []), "func.wast:327", 79.9000015259)

// func.wast:328
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7c\x02\xb9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x09\x62\x72\x65\x61\x6b\x2d\x66\x36\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\xc3\xf5\x28\x5c\x8f\xf2\x53\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:328");  // assert_return(() => call($1, "break-f64", []), "func.wast:328", 79.79)

// func.wast:329
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x02\x7f\x7c\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x62\x72\x65\x61\x6b\x2d\x69\x33\x32\x2d\x66\x36\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa7\x80\x80\x80\x00\x01\xa1\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\xc3\xf5\x28\x5c\x8f\xf2\x53\x40\xbd\x51\x45\x0d\x00\x01\x41\xcf\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:329");  // assert_return(() => call($1, "break-i32-f64", []), "func.wast:329", 79, 79.79)

// func.wast:330
assert_return(() => call($1, "break-i32-i32-i32", []), "func.wast:330", 1, 2, 3);

// func.wast:333
assert_return(() => call($1, "break-block-i32", []), "func.wast:333", 77);

// func.wast:334
assert_return(() => call($1, "break-block-i32-i64", []), "func.wast:334", 1, 2n);

// func.wast:336
assert_return(() => call($1, "break-br_if-empty", [0]), "func.wast:336");

// func.wast:337
assert_return(() => call($1, "break-br_if-empty", [2]), "func.wast:337");

// func.wast:338
assert_return(() => call($1, "break-br_if-num", [0]), "func.wast:338", 51);

// func.wast:339
assert_return(() => call($1, "break-br_if-num", [1]), "func.wast:339", 50);

// func.wast:340
assert_return(() => call($1, "break-br_if-num-num", [0]), "func.wast:340", 51, 52n);

// func.wast:343
assert_return(() => call($1, "break-br_if-num-num", [1]), "func.wast:343", 50, 51n);

// func.wast:347
assert_return(() => call($1, "break-br_table-empty", [0]), "func.wast:347");

// func.wast:348
assert_return(() => call($1, "break-br_table-empty", [1]), "func.wast:348");

// func.wast:349
assert_return(() => call($1, "break-br_table-empty", [5]), "func.wast:349");

// func.wast:350
assert_return(() => call($1, "break-br_table-empty", [-1]), "func.wast:350");

// func.wast:351
assert_return(() => call($1, "break-br_table-num", [0]), "func.wast:351", 50);

// func.wast:352
assert_return(() => call($1, "break-br_table-num", [1]), "func.wast:352", 50);

// func.wast:353
assert_return(() => call($1, "break-br_table-num", [10]), "func.wast:353", 50);

// func.wast:354
assert_return(() => call($1, "break-br_table-num", [-100]), "func.wast:354", 50);

// func.wast:355
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7f\x02\x7d\x7e\x02\xc6\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x16\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6e\x75\x6d\x2d\x6e\x75\x6d\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa4\x80\x80\x80\x00\x01\x9e\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x33\x01\x51\x45\x0d\x00\xbc\x43\x00\x00\x48\x42\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:355");  // assert_return(() => call($1, "break-br_table-num-num", [0]), "func.wast:355", 50., 51n)

// func.wast:358
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7f\x02\x7d\x7e\x02\xc6\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x16\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6e\x75\x6d\x2d\x6e\x75\x6d\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa4\x80\x80\x80\x00\x01\x9e\x80\x80\x80\x00\x00\x02\x40\x41\x01\x10\x00\x01\x42\x33\x01\x51\x45\x0d\x00\xbc\x43\x00\x00\x48\x42\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:358");  // assert_return(() => call($1, "break-br_table-num-num", [1]), "func.wast:358", 50., 51n)

// func.wast:361
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7f\x02\x7d\x7e\x02\xc6\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x16\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6e\x75\x6d\x2d\x6e\x75\x6d\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa4\x80\x80\x80\x00\x01\x9e\x80\x80\x80\x00\x00\x02\x40\x41\x0a\x10\x00\x01\x42\x33\x01\x51\x45\x0d\x00\xbc\x43\x00\x00\x48\x42\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:361");  // assert_return(() => call($1, "break-br_table-num-num", [10]), "func.wast:361", 50., 51n)

// func.wast:364
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7f\x02\x7d\x7e\x02\xc6\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x16\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6e\x75\x6d\x2d\x6e\x75\x6d\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa5\x80\x80\x80\x00\x01\x9f\x80\x80\x80\x00\x00\x02\x40\x41\x9c\x7f\x10\x00\x01\x42\x33\x01\x51\x45\x0d\x00\xbc\x43\x00\x00\x48\x42\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:364");  // assert_return(() => call($1, "break-br_table-num-num", [-100]), "func.wast:364", 50., 51n)

// func.wast:367
assert_return(() => call($1, "break-br_table-nested-empty", [0]), "func.wast:367");

// func.wast:368
assert_return(() => call($1, "break-br_table-nested-empty", [1]), "func.wast:368");

// func.wast:369
assert_return(() => call($1, "break-br_table-nested-empty", [3]), "func.wast:369");

// func.wast:370
assert_return(() => call($1, "break-br_table-nested-empty", [-2]), "func.wast:370");

// func.wast:371
assert_return(() => call($1, "break-br_table-nested-num", [0]), "func.wast:371", 52);

// func.wast:374
assert_return(() => call($1, "break-br_table-nested-num", [1]), "func.wast:374", 50);

// func.wast:377
assert_return(() => call($1, "break-br_table-nested-num", [2]), "func.wast:377", 52);

// func.wast:380
assert_return(() => call($1, "break-br_table-nested-num", [-3]), "func.wast:380", 52);

// func.wast:383
assert_return(() => call($1, "break-br_table-nested-num-num", [0]), "func.wast:383", 101, 52);

// func.wast:387
assert_return(() => call($1, "break-br_table-nested-num-num", [1]), "func.wast:387", 50, 51);

// func.wast:391
assert_return(() => call($1, "break-br_table-nested-num-num", [2]), "func.wast:391", 101, 52);

// func.wast:395
assert_return(() => call($1, "break-br_table-nested-num-num", [-3]), "func.wast:395", 101, 52);

// func.wast:400
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xb3\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x11\x7f\x7e\x7d\x7d\x7f\x7c\x7d\x7f\x7f\x7f\x7d\x7c\x7c\x7c\x7f\x7f\x7d\x10\x7c\x7d\x7f\x7f\x7f\x7e\x7d\x7f\x7f\x7d\x7c\x7c\x7f\x7d\x7f\x7c\x02\xb9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x09\x6c\x61\x72\x67\x65\x2d\x73\x69\x67\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x84\x82\x80\x80\x00\x01\xfe\x81\x80\x80\x00\x00\x02\x40\x41\x00\x42\x01\x43\x00\x00\x00\x40\x43\x00\x00\x40\x40\x41\x04\x44\x00\x00\x00\x00\x00\x00\x14\x40\x43\x00\x00\xc0\x40\x41\x07\x41\x08\x41\x09\x43\x00\x00\x20\x41\x44\x00\x00\x00\x00\x00\x00\x26\x40\x44\x00\x00\x00\x00\x00\x00\x28\x40\x44\x00\x00\x00\x00\x00\x00\x2a\x40\x41\x0e\x41\x0f\x43\x00\x00\x80\x41\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x28\x40\xbd\x51\x45\x0d\x00\x01\x41\x0e\x01\x46\x45\x0d\x00\xbc\x43\x00\x00\x80\x41\xbc\x46\x45\x0d\x00\x01\x41\x0f\x01\x46\x45\x0d\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x26\x40\xbd\x51\x45\x0d\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x2a\x40\xbd\x51\x45\x0d\x00\xbc\x43\x00\x00\xc0\x40\xbc\x46\x45\x0d\x00\x01\x41\x04\x01\x46\x45\x0d\x00\x01\x41\x09\x01\x46\x45\x0d\x00\xbc\x43\x00\x00\x40\x40\xbc\x46\x45\x0d\x00\x01\x42\x01\x01\x51\x45\x0d\x00\x01\x41\x07\x01\x46\x45\x0d\x00\x01\x41\x08\x01\x46\x45\x0d\x00\x01\x41\x00\x01\x46\x45\x0d\x00\xbc\x43\x00\x00\x00\x40\xbc\x46\x45\x0d\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x14\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:400");  // assert_return(() => call($1, "large-sig", [0, 1n, 2., 3., 4, 5., 6., 7, 8, 9, 10., 11., 12., 13., 14, 15, 16.]), "func.wast:400", 5., 2., 0, 8, 7, 1n, 3., 9, 4, 6., 13., 11., 15, 16., 14, 12.)

// func.wast:414
assert_return(() => call($1, "init-local-i32", []), "func.wast:414", 0);

// func.wast:415
assert_return(() => call($1, "init-local-i64", []), "func.wast:415", 0n);

// func.wast:416
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7d\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x6e\x69\x74\x2d\x6c\x6f\x63\x61\x6c\x2d\x66\x33\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:416");  // assert_return(() => call($1, "init-local-f32", []), "func.wast:416", 0.)

// func.wast:417
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x00\x01\x7c\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x6e\x69\x74\x2d\x6c\x6f\x63\x61\x6c\x2d\x66\x36\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x02\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "func.wast:417");  // assert_return(() => call($1, "init-local-f64", []), "func.wast:417", 0.)

// func.wast:422
let $$2 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8c\x80\x80\x80\x00\x03\x60\x01\x7f\x00\x60\x00\x01\x7c\x60\x00\x00\x03\x86\x80\x80\x80\x00\x05\x01\x00\x00\x01\x02\x0a\xbd\x80\x80\x80\x00\x05\x8b\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x8b\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x89\x80\x80\x80\x00\x00\x41\x00\x10\x02\x10\x03\x1a\x0b", "func.wast:422");

// func.wast:422
let $2 = instance($$2);

// func.wast:435
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x01\x7f\x00\x60\x00\x01\x7c\x03\x85\x80\x80\x80\x00\x04\x01\x00\x01\x02\x0a\xaf\x80\x80\x80\x00\x04\x8b\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x8b\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x0b\x82\x80\x80\x80\x00\x00\x0b", "func.wast:435");

// func.wast:447
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:447");

// func.wast:459
let $$3 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x01\x7f\x01\x7f\x03\x85\x80\x80\x80\x00\x04\x01\x01\x01\x00\x07\x8d\x80\x80\x80\x00\x03\x01\x66\x00\x00\x01\x67\x00\x02\x01\x70\x00\x03\x0a\xb1\x80\x80\x80\x00\x04\x86\x80\x80\x80\x00\x01\x01\x7f\x20\x01\x0b\x86\x80\x80\x80\x00\x01\x01\x7f\x20\x01\x0b\x86\x80\x80\x80\x00\x00\x20\x00\x10\x01\x0b\x8a\x80\x80\x80\x00\x01\x01\x7f\x41\x2a\x21\x00\x20\x00\x0b", "func.wast:459");

// func.wast:459
let $3 = instance($$3);

// func.wast:483
assert_return(() => call($3, "f", [42]), "func.wast:483", 0);

// func.wast:484
assert_return(() => call($3, "g", [42]), "func.wast:484", 0);

// func.wast:485
assert_return(() => call($3, "p", []), "func.wast:485", 42);

// func.wast:488
let $$4 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x9d\x80\x80\x80\x00\x04\x60\x00\x00\x60\x00\x00\x60\x08\x7e\x7e\x7c\x7e\x7c\x7e\x7d\x7f\x00\x60\x08\x7c\x7e\x7c\x7e\x7c\x7e\x7d\x7f\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x03\x00\x03\x03\x02\x02\x00\x00\x00\x00\x04\x85\x80\x80\x80\x00\x01\x70\x01\x07\x07\x07\xf7\x80\x80\x80\x00\x04\x19\x73\x69\x67\x6e\x61\x74\x75\x72\x65\x2d\x65\x78\x70\x6c\x69\x63\x69\x74\x2d\x72\x65\x75\x73\x65\x64\x00\x07\x19\x73\x69\x67\x6e\x61\x74\x75\x72\x65\x2d\x69\x6d\x70\x6c\x69\x63\x69\x74\x2d\x72\x65\x75\x73\x65\x64\x00\x08\x1c\x73\x69\x67\x6e\x61\x74\x75\x72\x65\x2d\x65\x78\x70\x6c\x69\x63\x69\x74\x2d\x64\x75\x70\x6c\x69\x63\x61\x74\x65\x00\x09\x1c\x73\x69\x67\x6e\x61\x74\x75\x72\x65\x2d\x69\x6d\x70\x6c\x69\x63\x69\x74\x2d\x64\x75\x70\x6c\x69\x63\x61\x74\x65\x00\x0a\x09\x9b\x80\x80\x80\x00\x01\x04\x41\x00\x0b\x07\xd2\x04\x0b\xd2\x02\x0b\xd2\x01\x0b\xd2\x04\x0b\xd2\x00\x0b\xd2\x05\x0b\xd2\x06\x0b\x0a\xb0\x82\x80\x80\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x41\x01\x11\x00\x00\x41\x04\x11\x00\x00\x0b\x89\x81\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x43\x00\x00\x00\x00\x41\x00\x41\x00\x11\x03\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x43\x00\x00\x00\x00\x41\x00\x41\x02\x11\x03\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x43\x00\x00\x00\x00\x41\x00\x41\x03\x11\x03\x00\x0b\x87\x80\x80\x80\x00\x00\x41\x01\x11\x01\x00\x0b\xce\x80\x80\x80\x00\x00\x42\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x43\x00\x00\x00\x00\x41\x00\x41\x05\x11\x02\x00\x42\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x43\x00\x00\x00\x00\x41\x00\x41\x06\x11\x02\x00\x0b", "func.wast:488");

// func.wast:488
let $4 = instance($$4);

// func.wast:551
assert_return(() => call($4, "signature-explicit-reused", []), "func.wast:551");

// func.wast:552
assert_return(() => call($4, "signature-implicit-reused", []), "func.wast:552");

// func.wast:553
assert_return(() => call($4, "signature-explicit-duplicate", []), "func.wast:553");

// func.wast:554
assert_return(() => call($4, "signature-implicit-duplicate", []), "func.wast:554");

// func.wast:559
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:559");

// func.wast:566
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:566");

// func.wast:573
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:573");

// func.wast:580
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:580");

// func.wast:587
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:587");

// func.wast:594
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:594");

// func.wast:601
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:601");

// func.wast:608
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:608");

// func.wast:615
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:615");

// func.wast:622
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:622");

// func.wast:630
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x03\x82\x80\x80\x80\x00\x01\x04\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "func.wast:630");

// func.wast:634
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x04\x09\x85\x80\x80\x80\x00\x01\x03\x00\x01\x01\x0a\x92\x80\x80\x80\x00\x02\x85\x80\x80\x80\x00\x00\xd2\x01\x1a\x0b\x82\x80\x80\x80\x00\x00\x0b", "func.wast:634");

// func.wast:646
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x01\x01\x7f\x20\x00\x0b", "func.wast:646");

// func.wast:650
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x01\x01\x7d\x20\x00\x45\x0b", "func.wast:650");

// func.wast:654
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x02\x01\x7c\x01\x7e\x20\x01\x9a\x0b", "func.wast:654");

// func.wast:659
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x01\x01\x64\x00\x20\x00\x1a\x0b", "func.wast:659");

// func.wast:670
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x7f\x01\x7e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x20\x00\x0b", "func.wast:670");

// func.wast:674
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x01\x7d\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\x20\x00\x45\x0b", "func.wast:674");

// func.wast:678
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x02\x7c\x7e\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\x20\x01\x9a\x0b", "func.wast:678");

// func.wast:686
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "func.wast:686");

// func.wast:690
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "func.wast:690");

// func.wast:694
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7d\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "func.wast:694");

// func.wast:698
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7c\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "func.wast:698");

// func.wast:702
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7c\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b", "func.wast:702");

// func.wast:707
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x89\x80\x80\x80\x00\x01\x83\x80\x80\x80\x00\x00\x01\x0b", "func.wast:707");

// func.wast:713
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x89\x80\x80\x80\x00\x01\x83\x80\x80\x80\x00\x00\x01\x0b", "func.wast:713");

// func.wast:719
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x41\x00\x0b", "func.wast:719");

// func.wast:725
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x41\x00\x42\x00\x0b", "func.wast:725");

// func.wast:731
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\x0b", "func.wast:731");

// func.wast:737
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7d\x7d\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\x0b", "func.wast:737");

// func.wast:743
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7d\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x92\x80\x80\x80\x00\x01\x8c\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\x43\x00\x00\x00\x00\x0b", "func.wast:743");

// func.wast:750
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x89\x80\x80\x80\x00\x01\x83\x80\x80\x80\x00\x00\x0f\x0b", "func.wast:750");

// func.wast:756
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x89\x80\x80\x80\x00\x01\x83\x80\x80\x80\x00\x00\x0f\x0b", "func.wast:756");

// func.wast:762
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x01\x0f\x0b", "func.wast:762");

// func.wast:768
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x01\x0f\x0b", "func.wast:768");

// func.wast:774
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\x42\x00\x0f\x0b", "func.wast:774");

// func.wast:780
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7e\x7e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\x42\x00\x0f\x0b", "func.wast:780");

// func.wast:787
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\x0f\x41\x01\x0b", "func.wast:787");

// func.wast:793
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x0f\x41\x01\x41\x02\x0b", "func.wast:793");

// func.wast:799
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x01\x0f\x41\x02\x0b", "func.wast:799");

// func.wast:805
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x01\x0f\x41\x01\x0b", "func.wast:805");

// func.wast:811
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x01\x0f\x41\x01\x0b", "func.wast:811");

// func.wast:817
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x42\x01\x0f\x41\x01\x0b", "func.wast:817");

// func.wast:823
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x42\x01\x0f\x41\x01\x41\x02\x0b", "func.wast:823");

// func.wast:829
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x01\x0f\x41\x01\x0f\x0b", "func.wast:829");

// func.wast:835
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x90\x80\x80\x80\x00\x01\x8a\x80\x80\x80\x00\x00\x41\x01\x0f\x41\x01\x41\x02\x0f\x0b", "func.wast:835");

// func.wast:842
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x0c\x00\x0b", "func.wast:842");

// func.wast:848
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x0c\x00\x0b", "func.wast:848");

// func.wast:854
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\x0c\x00\x0b", "func.wast:854");

// func.wast:860
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x41\x00\x0c\x00\x0b", "func.wast:860");

// func.wast:866
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x0c\x00\x41\x01\x0b", "func.wast:866");

// func.wast:872
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x0c\x00\x41\x01\x41\x02\x0b", "func.wast:872");

// func.wast:878
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x01\x0c\x00\x41\x01\x0b", "func.wast:878");

// func.wast:884
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x90\x80\x80\x80\x00\x01\x8a\x80\x80\x80\x00\x00\x41\x01\x0c\x00\x41\x01\x41\x02\x0b", "func.wast:884");

// func.wast:890
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x90\x80\x80\x80\x00\x01\x8a\x80\x80\x80\x00\x00\x42\x01\x0c\x00\x41\x01\x0c\x00\x0b", "func.wast:890");

// func.wast:897
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x0c\x01\x0b\x41\x01\x0c\x00\x0b", "func.wast:897");

// func.wast:903
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x0c\x01\x0b\x41\x01\x41\x02\x0c\x00\x0b", "func.wast:903");

// func.wast:909
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x92\x80\x80\x80\x00\x01\x8c\x80\x80\x80\x00\x00\x02\x40\x01\x0c\x01\x0b\x41\x01\x0c\x00\x0b", "func.wast:909");

// func.wast:915
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x94\x80\x80\x80\x00\x01\x8e\x80\x80\x80\x00\x00\x02\x40\x01\x0c\x01\x0b\x41\x01\x41\x02\x0c\x00\x0b", "func.wast:915");

// func.wast:921
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x01\x0c\x01\x0b\x41\x01\x0c\x00\x0b", "func.wast:921");

// func.wast:927
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x7f\x41\x01\x0c\x01\x0b\x41\x01\x41\x02\x0c\x00\x0b", "func.wast:927");

// func.wast:937
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:937");

// func.wast:941
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:941");

// func.wast:945
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:945");

// func.wast:949
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:949");

// func.wast:953
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:953");

// func.wast:957
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:957");

// func.wast:964
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:964");

// func.wast:968
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:968");

// func.wast:972
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:972");

// func.wast:977
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:977");

// func.wast:981
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:981");

// func.wast:985
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "func.wast:985");
reinitializeRegistry();
})();
