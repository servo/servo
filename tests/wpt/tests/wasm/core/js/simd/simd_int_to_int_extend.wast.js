(function simd_int_to_int_extend_wast_js() {

// simd_int_to_int_extend.wast:3
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x7b\x01\x7b\x03\x8d\x80\x80\x80\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xcb\x82\x80\x80\x00\x0c\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x00\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x01\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x02\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x04\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x05\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x06\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x07\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x08\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x09\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x0a\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x0b\x0a\x91\x81\x80\x80\x00\x0c\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x88\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x8a\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x87\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x89\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\xa8\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\xaa\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\xa7\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\xa9\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\xc8\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\xca\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\xc7\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\xc9\x01\x0b", "simd_int_to_int_extend.wast:3");

// simd_int_to_int_extend.wast:3
let $1 = instance($$1);

// simd_int_to_int_extend.wast:18
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:18");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("0 0 0 0")]), "simd_int_to_int_extend.wast:18", v128("0 0 0 0 0 0 0 0"))

// simd_int_to_int_extend.wast:20
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:20");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("0 0 16_843_009 16_843_009")]), "simd_int_to_int_extend.wast:20", v128("1 1 1 1 1 1 1 1"))

// simd_int_to_int_extend.wast:22
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:22");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("0 0 -1 -1")]), "simd_int_to_int_extend.wast:22", v128("-1 -1 -1 -1 -1 -1 -1 -1"))

// simd_int_to_int_extend.wast:24
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:24");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("16_843_009 16_843_009 0 0")]), "simd_int_to_int_extend.wast:24", v128("0 0 0 0 0 0 0 0"))

// simd_int_to_int_extend.wast:26
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:26");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("-1 -1 0 0")]), "simd_int_to_int_extend.wast:26", v128("0 0 0 0 0 0 0 0"))

// simd_int_to_int_extend.wast:28
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:28");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("16_843_009 16_843_009 -1 -1")]), "simd_int_to_int_extend.wast:28", v128("-1 -1 -1 -1 -1 -1 -1 -1"))

// simd_int_to_int_extend.wast:30
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x01\x01\x01\x01\x01\x01\x01\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:30");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("-1 -1 16_843_009 16_843_009")]), "simd_int_to_int_extend.wast:30", v128("1 1 1 1 1 1 1 1"))

// simd_int_to_int_extend.wast:32
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7e\x7e\x7e\x7e\x7e\x7e\x7e\x7e\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:32");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("2_122_219_134 2_122_219_134 2_139_062_143 2_139_062_143")]), "simd_int_to_int_extend.wast:32", v128("127 127 127 127 127 127 127 127"))

// simd_int_to_int_extend.wast:34
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7e\x7e\x7e\x7e\x7e\x7e\x7e\x7e\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7e\x00\x7e\x00\x7e\x00\x7e\x00\x7e\x00\x7e\x00\x7e\x00\x7e\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:34");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("2_139_062_143 2_139_062_143 2_122_219_134 2_122_219_134")]), "simd_int_to_int_extend.wast:34", v128("126 126 126 126 126 126 126 126"))

// simd_int_to_int_extend.wast:36
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:36");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("2_139_062_143 2_139_062_143 2_139_062_143 2_139_062_143")]), "simd_int_to_int_extend.wast:36", v128("127 127 127 127 127 127 127 127"))

// simd_int_to_int_extend.wast:38
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:38");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("-2_139_062_144 -2_139_062_144 -2_139_062_144 -2_139_062_144")]), "simd_int_to_int_extend.wast:38", v128("-128 -128 -128 -128 -128 -128 -128 -128"))

// simd_int_to_int_extend.wast:40
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x80\x80\x80\x80\x80\x80\x80\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:40");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("2_139_062_143 2_139_062_143 -2_139_062_144 -2_139_062_144")]), "simd_int_to_int_extend.wast:40", v128("-128 -128 -128 -128 -128 -128 -128 -128"))

// simd_int_to_int_extend.wast:42
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x80\x80\x80\x80\x80\x80\x80\x80\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:42");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("-2_139_062_144 -2_139_062_144 2_139_062_143 2_139_062_143")]), "simd_int_to_int_extend.wast:42", v128("127 127 127 127 127 127 127 127"))

// simd_int_to_int_extend.wast:44
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:44");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("2_139_062_143 2_139_062_143 -1 -1")]), "simd_int_to_int_extend.wast:44", v128("-1 -1 -1 -1 -1 -1 -1 -1"))

// simd_int_to_int_extend.wast:46
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:46");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("-1 -1 2_139_062_143 2_139_062_143")]), "simd_int_to_int_extend.wast:46", v128("127 127 127 127 127 127 127 127"))

// simd_int_to_int_extend.wast:48
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x81\x81\x81\x81\x81\x81\x81\x81\x80\x80\x80\x80\x80\x80\x80\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:48");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("-2_122_219_135 -2_122_219_135 -2_139_062_144 -2_139_062_144")]), "simd_int_to_int_extend.wast:48", v128("-128 -128 -128 -128 -128 -128 -128 -128"))

// simd_int_to_int_extend.wast:50
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x80\x80\x80\x80\x80\x80\x80\x80\x81\x81\x81\x81\x81\x81\x81\x81\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x81\xff\x81\xff\x81\xff\x81\xff\x81\xff\x81\xff\x81\xff\x81\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:50");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("-2_139_062_144 -2_139_062_144 -2_122_219_135 -2_122_219_135")]), "simd_int_to_int_extend.wast:50", v128("-127 -127 -127 -127 -127 -127 -127 -127"))

// simd_int_to_int_extend.wast:52
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x80\x80\x80\x80\x80\x80\x80\x80\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:52");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("-2_139_062_144 -2_139_062_144 -1 -1")]), "simd_int_to_int_extend.wast:52", v128("-1 -1 -1 -1 -1 -1 -1 -1"))

// simd_int_to_int_extend.wast:54
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x80\x80\x80\x80\x80\x80\x80\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:54");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_s", [v128("-1 -1 -2_139_062_144 -2_139_062_144")]), "simd_int_to_int_extend.wast:54", v128("-128 -128 -128 -128 -128 -128 -128 -128"))

// simd_int_to_int_extend.wast:57
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:57");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("0 0 0 0")]), "simd_int_to_int_extend.wast:57", v128("0 0 0 0 0 0 0 0"))

// simd_int_to_int_extend.wast:59
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:59");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("0 0 16_843_009 16_843_009")]), "simd_int_to_int_extend.wast:59", v128("1 1 1 1 1 1 1 1"))

// simd_int_to_int_extend.wast:61
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:61");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("0 0 -1 -1")]), "simd_int_to_int_extend.wast:61", v128("255 255 255 255 255 255 255 255"))

// simd_int_to_int_extend.wast:63
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:63");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("16_843_009 16_843_009 0 0")]), "simd_int_to_int_extend.wast:63", v128("0 0 0 0 0 0 0 0"))

// simd_int_to_int_extend.wast:65
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:65");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("-1 -1 0 0")]), "simd_int_to_int_extend.wast:65", v128("0 0 0 0 0 0 0 0"))

// simd_int_to_int_extend.wast:67
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:67");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("16_843_009 16_843_009 -1 -1")]), "simd_int_to_int_extend.wast:67", v128("255 255 255 255 255 255 255 255"))

// simd_int_to_int_extend.wast:69
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x01\x01\x01\x01\x01\x01\x01\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:69");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("-1 -1 16_843_009 16_843_009")]), "simd_int_to_int_extend.wast:69", v128("1 1 1 1 1 1 1 1"))

// simd_int_to_int_extend.wast:71
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7e\x7e\x7e\x7e\x7e\x7e\x7e\x7e\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:71");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("2_122_219_134 2_122_219_134 2_139_062_143 2_139_062_143")]), "simd_int_to_int_extend.wast:71", v128("127 127 127 127 127 127 127 127"))

// simd_int_to_int_extend.wast:73
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7e\x7e\x7e\x7e\x7e\x7e\x7e\x7e\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7e\x00\x7e\x00\x7e\x00\x7e\x00\x7e\x00\x7e\x00\x7e\x00\x7e\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:73");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("2_139_062_143 2_139_062_143 2_122_219_134 2_122_219_134")]), "simd_int_to_int_extend.wast:73", v128("126 126 126 126 126 126 126 126"))

// simd_int_to_int_extend.wast:75
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:75");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("2_139_062_143 2_139_062_143 2_139_062_143 2_139_062_143")]), "simd_int_to_int_extend.wast:75", v128("127 127 127 127 127 127 127 127"))

// simd_int_to_int_extend.wast:77
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:77");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("-2_139_062_144 -2_139_062_144 -2_139_062_144 -2_139_062_144")]), "simd_int_to_int_extend.wast:77", v128("128 128 128 128 128 128 128 128"))

// simd_int_to_int_extend.wast:79
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x80\x80\x80\x80\x80\x80\x80\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:79");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("2_139_062_143 2_139_062_143 -2_139_062_144 -2_139_062_144")]), "simd_int_to_int_extend.wast:79", v128("128 128 128 128 128 128 128 128"))

// simd_int_to_int_extend.wast:81
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x80\x80\x80\x80\x80\x80\x80\x80\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:81");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("-2_139_062_144 -2_139_062_144 2_139_062_143 2_139_062_143")]), "simd_int_to_int_extend.wast:81", v128("127 127 127 127 127 127 127 127"))

// simd_int_to_int_extend.wast:83
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:83");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("2_139_062_143 2_139_062_143 -1 -1")]), "simd_int_to_int_extend.wast:83", v128("255 255 255 255 255 255 255 255"))

// simd_int_to_int_extend.wast:85
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:85");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("-1 -1 2_139_062_143 2_139_062_143")]), "simd_int_to_int_extend.wast:85", v128("127 127 127 127 127 127 127 127"))

// simd_int_to_int_extend.wast:87
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x81\x81\x81\x81\x81\x81\x81\x81\x80\x80\x80\x80\x80\x80\x80\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:87");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("-2_122_219_135 -2_122_219_135 -2_139_062_144 -2_139_062_144")]), "simd_int_to_int_extend.wast:87", v128("128 128 128 128 128 128 128 128"))

// simd_int_to_int_extend.wast:89
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x80\x80\x80\x80\x80\x80\x80\x80\x81\x81\x81\x81\x81\x81\x81\x81\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x81\x00\x81\x00\x81\x00\x81\x00\x81\x00\x81\x00\x81\x00\x81\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:89");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("-2_139_062_144 -2_139_062_144 -2_122_219_135 -2_122_219_135")]), "simd_int_to_int_extend.wast:89", v128("129 129 129 129 129 129 129 129"))

// simd_int_to_int_extend.wast:91
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x80\x80\x80\x80\x80\x80\x80\x80\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:91");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("-2_139_062_144 -2_139_062_144 -1 -1")]), "simd_int_to_int_extend.wast:91", v128("255 255 255 255 255 255 255 255"))

// simd_int_to_int_extend.wast:93
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x80\x80\x80\x80\x80\x80\x80\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:93");  // assert_return(() => call($1, "i16x8.extend_high_i8x16_u", [v128("-1 -1 -2_139_062_144 -2_139_062_144")]), "simd_int_to_int_extend.wast:93", v128("128 128 128 128 128 128 128 128"))

// simd_int_to_int_extend.wast:96
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:96");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("0 0 0 0")]), "simd_int_to_int_extend.wast:96", v128("0 0 0 0 0 0 0 0"))

// simd_int_to_int_extend.wast:98
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:98");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("0 0 16_843_009 16_843_009")]), "simd_int_to_int_extend.wast:98", v128("0 0 0 0 0 0 0 0"))

// simd_int_to_int_extend.wast:100
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:100");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("0 0 -1 -1")]), "simd_int_to_int_extend.wast:100", v128("0 0 0 0 0 0 0 0"))

// simd_int_to_int_extend.wast:102
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:102");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("16_843_009 16_843_009 0 0")]), "simd_int_to_int_extend.wast:102", v128("1 1 1 1 1 1 1 1"))

// simd_int_to_int_extend.wast:104
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:104");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("-1 -1 0 0")]), "simd_int_to_int_extend.wast:104", v128("-1 -1 -1 -1 -1 -1 -1 -1"))

// simd_int_to_int_extend.wast:106
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:106");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("16_843_009 16_843_009 -1 -1")]), "simd_int_to_int_extend.wast:106", v128("1 1 1 1 1 1 1 1"))

// simd_int_to_int_extend.wast:108
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x01\x01\x01\x01\x01\x01\x01\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:108");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("-1 -1 16_843_009 16_843_009")]), "simd_int_to_int_extend.wast:108", v128("-1 -1 -1 -1 -1 -1 -1 -1"))

// simd_int_to_int_extend.wast:110
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7e\x7e\x7e\x7e\x7e\x7e\x7e\x7e\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7e\x00\x7e\x00\x7e\x00\x7e\x00\x7e\x00\x7e\x00\x7e\x00\x7e\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:110");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("2_122_219_134 2_122_219_134 2_139_062_143 2_139_062_143")]), "simd_int_to_int_extend.wast:110", v128("126 126 126 126 126 126 126 126"))

// simd_int_to_int_extend.wast:112
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7e\x7e\x7e\x7e\x7e\x7e\x7e\x7e\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:112");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("2_139_062_143 2_139_062_143 2_122_219_134 2_122_219_134")]), "simd_int_to_int_extend.wast:112", v128("127 127 127 127 127 127 127 127"))

// simd_int_to_int_extend.wast:114
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:114");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("2_139_062_143 2_139_062_143 2_139_062_143 2_139_062_143")]), "simd_int_to_int_extend.wast:114", v128("127 127 127 127 127 127 127 127"))

// simd_int_to_int_extend.wast:116
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:116");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("-2_139_062_144 -2_139_062_144 -2_139_062_144 -2_139_062_144")]), "simd_int_to_int_extend.wast:116", v128("-128 -128 -128 -128 -128 -128 -128 -128"))

// simd_int_to_int_extend.wast:118
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x80\x80\x80\x80\x80\x80\x80\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:118");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("2_139_062_143 2_139_062_143 -2_139_062_144 -2_139_062_144")]), "simd_int_to_int_extend.wast:118", v128("127 127 127 127 127 127 127 127"))

// simd_int_to_int_extend.wast:120
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x80\x80\x80\x80\x80\x80\x80\x80\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:120");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("-2_139_062_144 -2_139_062_144 2_139_062_143 2_139_062_143")]), "simd_int_to_int_extend.wast:120", v128("-128 -128 -128 -128 -128 -128 -128 -128"))

// simd_int_to_int_extend.wast:122
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:122");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("2_139_062_143 2_139_062_143 -1 -1")]), "simd_int_to_int_extend.wast:122", v128("127 127 127 127 127 127 127 127"))

// simd_int_to_int_extend.wast:124
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:124");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("-1 -1 2_139_062_143 2_139_062_143")]), "simd_int_to_int_extend.wast:124", v128("-1 -1 -1 -1 -1 -1 -1 -1"))

// simd_int_to_int_extend.wast:126
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x81\x81\x81\x81\x81\x81\x81\x81\x80\x80\x80\x80\x80\x80\x80\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x81\xff\x81\xff\x81\xff\x81\xff\x81\xff\x81\xff\x81\xff\x81\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:126");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("-2_122_219_135 -2_122_219_135 -2_139_062_144 -2_139_062_144")]), "simd_int_to_int_extend.wast:126", v128("-127 -127 -127 -127 -127 -127 -127 -127"))

// simd_int_to_int_extend.wast:128
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x80\x80\x80\x80\x80\x80\x80\x80\x81\x81\x81\x81\x81\x81\x81\x81\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:128");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("-2_139_062_144 -2_139_062_144 -2_122_219_135 -2_122_219_135")]), "simd_int_to_int_extend.wast:128", v128("-128 -128 -128 -128 -128 -128 -128 -128"))

// simd_int_to_int_extend.wast:130
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x80\x80\x80\x80\x80\x80\x80\x80\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\x80\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:130");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("-2_139_062_144 -2_139_062_144 -1 -1")]), "simd_int_to_int_extend.wast:130", v128("-128 -128 -128 -128 -128 -128 -128 -128"))

// simd_int_to_int_extend.wast:132
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x80\x80\x80\x80\x80\x80\x80\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:132");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_s", [v128("-1 -1 -2_139_062_144 -2_139_062_144")]), "simd_int_to_int_extend.wast:132", v128("-1 -1 -1 -1 -1 -1 -1 -1"))

// simd_int_to_int_extend.wast:135
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:135");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("0 0 0 0")]), "simd_int_to_int_extend.wast:135", v128("0 0 0 0 0 0 0 0"))

// simd_int_to_int_extend.wast:137
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:137");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("0 0 16_843_009 16_843_009")]), "simd_int_to_int_extend.wast:137", v128("0 0 0 0 0 0 0 0"))

// simd_int_to_int_extend.wast:139
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:139");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("0 0 -1 -1")]), "simd_int_to_int_extend.wast:139", v128("0 0 0 0 0 0 0 0"))

// simd_int_to_int_extend.wast:141
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:141");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("16_843_009 16_843_009 0 0")]), "simd_int_to_int_extend.wast:141", v128("1 1 1 1 1 1 1 1"))

// simd_int_to_int_extend.wast:143
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:143");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("-1 -1 0 0")]), "simd_int_to_int_extend.wast:143", v128("255 255 255 255 255 255 255 255"))

// simd_int_to_int_extend.wast:145
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:145");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("16_843_009 16_843_009 -1 -1")]), "simd_int_to_int_extend.wast:145", v128("1 1 1 1 1 1 1 1"))

// simd_int_to_int_extend.wast:147
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x01\x01\x01\x01\x01\x01\x01\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:147");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("-1 -1 16_843_009 16_843_009")]), "simd_int_to_int_extend.wast:147", v128("255 255 255 255 255 255 255 255"))

// simd_int_to_int_extend.wast:149
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7e\x7e\x7e\x7e\x7e\x7e\x7e\x7e\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7e\x00\x7e\x00\x7e\x00\x7e\x00\x7e\x00\x7e\x00\x7e\x00\x7e\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:149");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("2_122_219_134 2_122_219_134 2_139_062_143 2_139_062_143")]), "simd_int_to_int_extend.wast:149", v128("126 126 126 126 126 126 126 126"))

// simd_int_to_int_extend.wast:151
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7e\x7e\x7e\x7e\x7e\x7e\x7e\x7e\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:151");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("2_139_062_143 2_139_062_143 2_122_219_134 2_122_219_134")]), "simd_int_to_int_extend.wast:151", v128("127 127 127 127 127 127 127 127"))

// simd_int_to_int_extend.wast:153
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:153");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("2_139_062_143 2_139_062_143 2_139_062_143 2_139_062_143")]), "simd_int_to_int_extend.wast:153", v128("127 127 127 127 127 127 127 127"))

// simd_int_to_int_extend.wast:155
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:155");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("-2_139_062_144 -2_139_062_144 -2_139_062_144 -2_139_062_144")]), "simd_int_to_int_extend.wast:155", v128("128 128 128 128 128 128 128 128"))

// simd_int_to_int_extend.wast:157
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x80\x80\x80\x80\x80\x80\x80\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:157");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("2_139_062_143 2_139_062_143 -2_139_062_144 -2_139_062_144")]), "simd_int_to_int_extend.wast:157", v128("127 127 127 127 127 127 127 127"))

// simd_int_to_int_extend.wast:159
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x80\x80\x80\x80\x80\x80\x80\x80\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:159");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("-2_139_062_144 -2_139_062_144 2_139_062_143 2_139_062_143")]), "simd_int_to_int_extend.wast:159", v128("128 128 128 128 128 128 128 128"))

// simd_int_to_int_extend.wast:161
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\x7f\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:161");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("2_139_062_143 2_139_062_143 -1 -1")]), "simd_int_to_int_extend.wast:161", v128("127 127 127 127 127 127 127 127"))

// simd_int_to_int_extend.wast:163
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:163");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("-1 -1 2_139_062_143 2_139_062_143")]), "simd_int_to_int_extend.wast:163", v128("255 255 255 255 255 255 255 255"))

// simd_int_to_int_extend.wast:165
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x81\x81\x81\x81\x81\x81\x81\x81\x80\x80\x80\x80\x80\x80\x80\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x81\x00\x81\x00\x81\x00\x81\x00\x81\x00\x81\x00\x81\x00\x81\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:165");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("-2_122_219_135 -2_122_219_135 -2_139_062_144 -2_139_062_144")]), "simd_int_to_int_extend.wast:165", v128("129 129 129 129 129 129 129 129"))

// simd_int_to_int_extend.wast:167
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x80\x80\x80\x80\x80\x80\x80\x80\x81\x81\x81\x81\x81\x81\x81\x81\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:167");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("-2_139_062_144 -2_139_062_144 -2_122_219_135 -2_122_219_135")]), "simd_int_to_int_extend.wast:167", v128("128 128 128 128 128 128 128 128"))

// simd_int_to_int_extend.wast:169
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x80\x80\x80\x80\x80\x80\x80\x80\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:169");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("-2_139_062_144 -2_139_062_144 -1 -1")]), "simd_int_to_int_extend.wast:169", v128("128 128 128 128 128 128 128 128"))

// simd_int_to_int_extend.wast:171
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x38\x78\x31\x36\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x80\x80\x80\x80\x80\x80\x80\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:171");  // assert_return(() => call($1, "i16x8.extend_low_i8x16_u", [v128("-1 -1 -2_139_062_144 -2_139_062_144")]), "simd_int_to_int_extend.wast:171", v128("255 255 255 255 255 255 255 255"))

// simd_int_to_int_extend.wast:174
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:174");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("0 0 0 0")]), "simd_int_to_int_extend.wast:174", v128("0 0 0 0"))

// simd_int_to_int_extend.wast:176
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x01\x00\x01\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:176");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("0 0 65_537 65_537")]), "simd_int_to_int_extend.wast:176", v128("1 1 1 1"))

// simd_int_to_int_extend.wast:178
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:178");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("0 0 -1 -1")]), "simd_int_to_int_extend.wast:178", v128("-1 -1 -1 -1"))

// simd_int_to_int_extend.wast:180
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:180");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("65_537 65_537 0 0")]), "simd_int_to_int_extend.wast:180", v128("0 0 0 0"))

// simd_int_to_int_extend.wast:182
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:182");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("-1 -1 0 0")]), "simd_int_to_int_extend.wast:182", v128("0 0 0 0"))

// simd_int_to_int_extend.wast:184
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:184");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("65_537 65_537 -1 -1")]), "simd_int_to_int_extend.wast:184", v128("-1 -1 -1 -1"))

// simd_int_to_int_extend.wast:186
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x01\x00\x01\x00\x01\x00\x01\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:186");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("-1 -1 65_537 65_537")]), "simd_int_to_int_extend.wast:186", v128("1 1 1 1"))

// simd_int_to_int_extend.wast:188
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xfe\x7f\xfe\x7f\xfe\x7f\xfe\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:188");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("2_147_385_342 2_147_385_342 2_147_450_879 2_147_450_879")]), "simd_int_to_int_extend.wast:188", v128("32_767 32_767 32_767 32_767"))

// simd_int_to_int_extend.wast:190
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xfe\x7f\xfe\x7f\xfe\x7f\xfe\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xfe\x7f\x00\x00\xfe\x7f\x00\x00\xfe\x7f\x00\x00\xfe\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:190");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("2_147_450_879 2_147_450_879 2_147_385_342 2_147_385_342")]), "simd_int_to_int_extend.wast:190", v128("32_766 32_766 32_766 32_766"))

// simd_int_to_int_extend.wast:192
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:192");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("2_147_450_879 2_147_450_879 2_147_450_879 2_147_450_879")]), "simd_int_to_int_extend.wast:192", v128("32_767 32_767 32_767 32_767"))

// simd_int_to_int_extend.wast:194
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x80\xff\xff\x00\x80\xff\xff\x00\x80\xff\xff\x00\x80\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:194");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("-2_147_450_880 -2_147_450_880 -2_147_450_880 -2_147_450_880")]), "simd_int_to_int_extend.wast:194", v128("-32_768 -32_768 -32_768 -32_768"))

// simd_int_to_int_extend.wast:196
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x00\x80\x00\x80\x00\x80\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x80\xff\xff\x00\x80\xff\xff\x00\x80\xff\xff\x00\x80\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:196");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("2_147_450_879 2_147_450_879 -2_147_450_880 -2_147_450_880")]), "simd_int_to_int_extend.wast:196", v128("-32_768 -32_768 -32_768 -32_768"))

// simd_int_to_int_extend.wast:198
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x80\x00\x80\x00\x80\x00\x80\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:198");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("-2_147_450_880 -2_147_450_880 2_147_450_879 2_147_450_879")]), "simd_int_to_int_extend.wast:198", v128("32_767 32_767 32_767 32_767"))

// simd_int_to_int_extend.wast:200
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:200");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("2_147_450_879 2_147_450_879 -1 -1")]), "simd_int_to_int_extend.wast:200", v128("-1 -1 -1 -1"))

// simd_int_to_int_extend.wast:202
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:202");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("-1 -1 2_147_450_879 2_147_450_879")]), "simd_int_to_int_extend.wast:202", v128("32_767 32_767 32_767 32_767"))

// simd_int_to_int_extend.wast:204
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x80\x01\x80\x01\x80\x01\x80\x00\x80\x00\x80\x00\x80\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x80\xff\xff\x00\x80\xff\xff\x00\x80\xff\xff\x00\x80\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:204");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("-2_147_385_343 -2_147_385_343 -2_147_450_880 -2_147_450_880")]), "simd_int_to_int_extend.wast:204", v128("-32_768 -32_768 -32_768 -32_768"))

// simd_int_to_int_extend.wast:206
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x80\x00\x80\x00\x80\x00\x80\x01\x80\x01\x80\x01\x80\x01\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x80\xff\xff\x01\x80\xff\xff\x01\x80\xff\xff\x01\x80\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:206");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("-2_147_450_880 -2_147_450_880 -2_147_385_343 -2_147_385_343")]), "simd_int_to_int_extend.wast:206", v128("-32_767 -32_767 -32_767 -32_767"))

// simd_int_to_int_extend.wast:208
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x80\x00\x80\x00\x80\x00\x80\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:208");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("-2_147_450_880 -2_147_450_880 -1 -1")]), "simd_int_to_int_extend.wast:208", v128("-1 -1 -1 -1"))

// simd_int_to_int_extend.wast:210
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x80\x00\x80\x00\x80\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x80\xff\xff\x00\x80\xff\xff\x00\x80\xff\xff\x00\x80\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:210");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_s", [v128("-1 -1 -2_147_450_880 -2_147_450_880")]), "simd_int_to_int_extend.wast:210", v128("-32_768 -32_768 -32_768 -32_768"))

// simd_int_to_int_extend.wast:213
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:213");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("0 0 0 0")]), "simd_int_to_int_extend.wast:213", v128("0 0 0 0"))

// simd_int_to_int_extend.wast:215
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x01\x00\x01\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:215");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("0 0 65_537 65_537")]), "simd_int_to_int_extend.wast:215", v128("1 1 1 1"))

// simd_int_to_int_extend.wast:217
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:217");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("0 0 -1 -1")]), "simd_int_to_int_extend.wast:217", v128("65_535 65_535 65_535 65_535"))

// simd_int_to_int_extend.wast:219
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:219");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("65_537 65_537 0 0")]), "simd_int_to_int_extend.wast:219", v128("0 0 0 0"))

// simd_int_to_int_extend.wast:221
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:221");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("-1 -1 0 0")]), "simd_int_to_int_extend.wast:221", v128("0 0 0 0"))

// simd_int_to_int_extend.wast:223
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:223");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("65_537 65_537 -1 -1")]), "simd_int_to_int_extend.wast:223", v128("65_535 65_535 65_535 65_535"))

// simd_int_to_int_extend.wast:225
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x01\x00\x01\x00\x01\x00\x01\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:225");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("-1 -1 65_537 65_537")]), "simd_int_to_int_extend.wast:225", v128("1 1 1 1"))

// simd_int_to_int_extend.wast:227
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xfe\x7f\xfe\x7f\xfe\x7f\xfe\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:227");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("2_147_385_342 2_147_385_342 2_147_450_879 2_147_450_879")]), "simd_int_to_int_extend.wast:227", v128("32_767 32_767 32_767 32_767"))

// simd_int_to_int_extend.wast:229
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xfe\x7f\xfe\x7f\xfe\x7f\xfe\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xfe\x7f\x00\x00\xfe\x7f\x00\x00\xfe\x7f\x00\x00\xfe\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:229");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("2_147_450_879 2_147_450_879 2_147_385_342 2_147_385_342")]), "simd_int_to_int_extend.wast:229", v128("32_766 32_766 32_766 32_766"))

// simd_int_to_int_extend.wast:231
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:231");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("2_147_450_879 2_147_450_879 2_147_450_879 2_147_450_879")]), "simd_int_to_int_extend.wast:231", v128("32_767 32_767 32_767 32_767"))

// simd_int_to_int_extend.wast:233
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:233");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("-2_147_450_880 -2_147_450_880 -2_147_450_880 -2_147_450_880")]), "simd_int_to_int_extend.wast:233", v128("32_768 32_768 32_768 32_768"))

// simd_int_to_int_extend.wast:235
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x00\x80\x00\x80\x00\x80\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:235");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("2_147_450_879 2_147_450_879 -2_147_450_880 -2_147_450_880")]), "simd_int_to_int_extend.wast:235", v128("32_768 32_768 32_768 32_768"))

// simd_int_to_int_extend.wast:237
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x80\x00\x80\x00\x80\x00\x80\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:237");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("-2_147_450_880 -2_147_450_880 2_147_450_879 2_147_450_879")]), "simd_int_to_int_extend.wast:237", v128("32_767 32_767 32_767 32_767"))

// simd_int_to_int_extend.wast:239
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:239");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("2_147_450_879 2_147_450_879 -1 -1")]), "simd_int_to_int_extend.wast:239", v128("65_535 65_535 65_535 65_535"))

// simd_int_to_int_extend.wast:241
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:241");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("-1 -1 2_147_450_879 2_147_450_879")]), "simd_int_to_int_extend.wast:241", v128("32_767 32_767 32_767 32_767"))

// simd_int_to_int_extend.wast:243
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x80\x01\x80\x01\x80\x01\x80\x00\x80\x00\x80\x00\x80\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:243");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("-2_147_385_343 -2_147_385_343 -2_147_450_880 -2_147_450_880")]), "simd_int_to_int_extend.wast:243", v128("32_768 32_768 32_768 32_768"))

// simd_int_to_int_extend.wast:245
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x80\x00\x80\x00\x80\x00\x80\x01\x80\x01\x80\x01\x80\x01\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x80\x00\x00\x01\x80\x00\x00\x01\x80\x00\x00\x01\x80\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:245");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("-2_147_450_880 -2_147_450_880 -2_147_385_343 -2_147_385_343")]), "simd_int_to_int_extend.wast:245", v128("32_769 32_769 32_769 32_769"))

// simd_int_to_int_extend.wast:247
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x80\x00\x80\x00\x80\x00\x80\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:247");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("-2_147_450_880 -2_147_450_880 -1 -1")]), "simd_int_to_int_extend.wast:247", v128("65_535 65_535 65_535 65_535"))

// simd_int_to_int_extend.wast:249
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x80\x00\x80\x00\x80\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:249");  // assert_return(() => call($1, "i32x4.extend_high_i16x8_u", [v128("-1 -1 -2_147_450_880 -2_147_450_880")]), "simd_int_to_int_extend.wast:249", v128("32_768 32_768 32_768 32_768"))

// simd_int_to_int_extend.wast:252
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:252");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("0 0 0 0")]), "simd_int_to_int_extend.wast:252", v128("0 0 0 0"))

// simd_int_to_int_extend.wast:254
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x01\x00\x01\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:254");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("0 0 65_537 65_537")]), "simd_int_to_int_extend.wast:254", v128("0 0 0 0"))

// simd_int_to_int_extend.wast:256
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:256");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("0 0 -1 -1")]), "simd_int_to_int_extend.wast:256", v128("0 0 0 0"))

// simd_int_to_int_extend.wast:258
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:258");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("65_537 65_537 0 0")]), "simd_int_to_int_extend.wast:258", v128("1 1 1 1"))

// simd_int_to_int_extend.wast:260
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:260");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("-1 -1 0 0")]), "simd_int_to_int_extend.wast:260", v128("-1 -1 -1 -1"))

// simd_int_to_int_extend.wast:262
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:262");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("65_537 65_537 -1 -1")]), "simd_int_to_int_extend.wast:262", v128("1 1 1 1"))

// simd_int_to_int_extend.wast:264
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x01\x00\x01\x00\x01\x00\x01\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:264");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("-1 -1 65_537 65_537")]), "simd_int_to_int_extend.wast:264", v128("-1 -1 -1 -1"))

// simd_int_to_int_extend.wast:266
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xfe\x7f\xfe\x7f\xfe\x7f\xfe\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xfe\x7f\x00\x00\xfe\x7f\x00\x00\xfe\x7f\x00\x00\xfe\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:266");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("2_147_385_342 2_147_385_342 2_147_450_879 2_147_450_879")]), "simd_int_to_int_extend.wast:266", v128("32_766 32_766 32_766 32_766"))

// simd_int_to_int_extend.wast:268
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xfe\x7f\xfe\x7f\xfe\x7f\xfe\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:268");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("2_147_450_879 2_147_450_879 2_147_385_342 2_147_385_342")]), "simd_int_to_int_extend.wast:268", v128("32_767 32_767 32_767 32_767"))

// simd_int_to_int_extend.wast:270
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:270");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("2_147_450_879 2_147_450_879 2_147_450_879 2_147_450_879")]), "simd_int_to_int_extend.wast:270", v128("32_767 32_767 32_767 32_767"))

// simd_int_to_int_extend.wast:272
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x80\xff\xff\x00\x80\xff\xff\x00\x80\xff\xff\x00\x80\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:272");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("-2_147_450_880 -2_147_450_880 -2_147_450_880 -2_147_450_880")]), "simd_int_to_int_extend.wast:272", v128("-32_768 -32_768 -32_768 -32_768"))

// simd_int_to_int_extend.wast:274
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x00\x80\x00\x80\x00\x80\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:274");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("2_147_450_879 2_147_450_879 -2_147_450_880 -2_147_450_880")]), "simd_int_to_int_extend.wast:274", v128("32_767 32_767 32_767 32_767"))

// simd_int_to_int_extend.wast:276
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x80\x00\x80\x00\x80\x00\x80\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x80\xff\xff\x00\x80\xff\xff\x00\x80\xff\xff\x00\x80\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:276");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("-2_147_450_880 -2_147_450_880 2_147_450_879 2_147_450_879")]), "simd_int_to_int_extend.wast:276", v128("-32_768 -32_768 -32_768 -32_768"))

// simd_int_to_int_extend.wast:278
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:278");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("2_147_450_879 2_147_450_879 -1 -1")]), "simd_int_to_int_extend.wast:278", v128("32_767 32_767 32_767 32_767"))

// simd_int_to_int_extend.wast:280
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:280");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("-1 -1 2_147_450_879 2_147_450_879")]), "simd_int_to_int_extend.wast:280", v128("-1 -1 -1 -1"))

// simd_int_to_int_extend.wast:282
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x80\x01\x80\x01\x80\x01\x80\x00\x80\x00\x80\x00\x80\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x80\xff\xff\x01\x80\xff\xff\x01\x80\xff\xff\x01\x80\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:282");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("-2_147_385_343 -2_147_385_343 -2_147_450_880 -2_147_450_880")]), "simd_int_to_int_extend.wast:282", v128("-32_767 -32_767 -32_767 -32_767"))

// simd_int_to_int_extend.wast:284
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x80\x00\x80\x00\x80\x00\x80\x01\x80\x01\x80\x01\x80\x01\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x80\xff\xff\x00\x80\xff\xff\x00\x80\xff\xff\x00\x80\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:284");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("-2_147_450_880 -2_147_450_880 -2_147_385_343 -2_147_385_343")]), "simd_int_to_int_extend.wast:284", v128("-32_768 -32_768 -32_768 -32_768"))

// simd_int_to_int_extend.wast:286
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x80\x00\x80\x00\x80\x00\x80\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x80\xff\xff\x00\x80\xff\xff\x00\x80\xff\xff\x00\x80\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:286");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("-2_147_450_880 -2_147_450_880 -1 -1")]), "simd_int_to_int_extend.wast:286", v128("-32_768 -32_768 -32_768 -32_768"))

// simd_int_to_int_extend.wast:288
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x80\x00\x80\x00\x80\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:288");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_s", [v128("-1 -1 -2_147_450_880 -2_147_450_880")]), "simd_int_to_int_extend.wast:288", v128("-1 -1 -1 -1"))

// simd_int_to_int_extend.wast:291
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:291");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("0 0 0 0")]), "simd_int_to_int_extend.wast:291", v128("0 0 0 0"))

// simd_int_to_int_extend.wast:293
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x01\x00\x01\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:293");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("0 0 65_537 65_537")]), "simd_int_to_int_extend.wast:293", v128("0 0 0 0"))

// simd_int_to_int_extend.wast:295
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:295");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("0 0 -1 -1")]), "simd_int_to_int_extend.wast:295", v128("0 0 0 0"))

// simd_int_to_int_extend.wast:297
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:297");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("65_537 65_537 0 0")]), "simd_int_to_int_extend.wast:297", v128("1 1 1 1"))

// simd_int_to_int_extend.wast:299
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:299");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("-1 -1 0 0")]), "simd_int_to_int_extend.wast:299", v128("65_535 65_535 65_535 65_535"))

// simd_int_to_int_extend.wast:301
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:301");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("65_537 65_537 -1 -1")]), "simd_int_to_int_extend.wast:301", v128("1 1 1 1"))

// simd_int_to_int_extend.wast:303
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x01\x00\x01\x00\x01\x00\x01\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:303");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("-1 -1 65_537 65_537")]), "simd_int_to_int_extend.wast:303", v128("65_535 65_535 65_535 65_535"))

// simd_int_to_int_extend.wast:305
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xfe\x7f\xfe\x7f\xfe\x7f\xfe\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xfe\x7f\x00\x00\xfe\x7f\x00\x00\xfe\x7f\x00\x00\xfe\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:305");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("2_147_385_342 2_147_385_342 2_147_450_879 2_147_450_879")]), "simd_int_to_int_extend.wast:305", v128("32_766 32_766 32_766 32_766"))

// simd_int_to_int_extend.wast:307
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xfe\x7f\xfe\x7f\xfe\x7f\xfe\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:307");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("2_147_450_879 2_147_450_879 2_147_385_342 2_147_385_342")]), "simd_int_to_int_extend.wast:307", v128("32_767 32_767 32_767 32_767"))

// simd_int_to_int_extend.wast:309
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:309");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("2_147_450_879 2_147_450_879 2_147_450_879 2_147_450_879")]), "simd_int_to_int_extend.wast:309", v128("32_767 32_767 32_767 32_767"))

// simd_int_to_int_extend.wast:311
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:311");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("-2_147_450_880 -2_147_450_880 -2_147_450_880 -2_147_450_880")]), "simd_int_to_int_extend.wast:311", v128("32_768 32_768 32_768 32_768"))

// simd_int_to_int_extend.wast:313
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x00\x80\x00\x80\x00\x80\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:313");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("2_147_450_879 2_147_450_879 -2_147_450_880 -2_147_450_880")]), "simd_int_to_int_extend.wast:313", v128("32_767 32_767 32_767 32_767"))

// simd_int_to_int_extend.wast:315
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x80\x00\x80\x00\x80\x00\x80\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:315");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("-2_147_450_880 -2_147_450_880 2_147_450_879 2_147_450_879")]), "simd_int_to_int_extend.wast:315", v128("32_768 32_768 32_768 32_768"))

// simd_int_to_int_extend.wast:317
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xff\x7f\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:317");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("2_147_450_879 2_147_450_879 -1 -1")]), "simd_int_to_int_extend.wast:317", v128("32_767 32_767 32_767 32_767"))

// simd_int_to_int_extend.wast:319
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\x7f\xff\x7f\xff\x7f\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:319");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("-1 -1 2_147_450_879 2_147_450_879")]), "simd_int_to_int_extend.wast:319", v128("65_535 65_535 65_535 65_535"))

// simd_int_to_int_extend.wast:321
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x80\x01\x80\x01\x80\x01\x80\x00\x80\x00\x80\x00\x80\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x80\x00\x00\x01\x80\x00\x00\x01\x80\x00\x00\x01\x80\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:321");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("-2_147_385_343 -2_147_385_343 -2_147_450_880 -2_147_450_880")]), "simd_int_to_int_extend.wast:321", v128("32_769 32_769 32_769 32_769"))

// simd_int_to_int_extend.wast:323
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x80\x00\x80\x00\x80\x00\x80\x01\x80\x01\x80\x01\x80\x01\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:323");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("-2_147_450_880 -2_147_450_880 -2_147_385_343 -2_147_385_343")]), "simd_int_to_int_extend.wast:323", v128("32_768 32_768 32_768 32_768"))

// simd_int_to_int_extend.wast:325
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x80\x00\x80\x00\x80\x00\x80\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:325");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("-2_147_450_880 -2_147_450_880 -1 -1")]), "simd_int_to_int_extend.wast:325", v128("32_768 32_768 32_768 32_768"))

// simd_int_to_int_extend.wast:327
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x31\x36\x78\x38\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x80\x00\x80\x00\x80\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:327");  // assert_return(() => call($1, "i32x4.extend_low_i16x8_u", [v128("-1 -1 -2_147_450_880 -2_147_450_880")]), "simd_int_to_int_extend.wast:327", v128("65_535 65_535 65_535 65_535"))

// simd_int_to_int_extend.wast:330
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:330");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("0 0 0 0")]), "simd_int_to_int_extend.wast:330", v128("0n 0n"))

// simd_int_to_int_extend.wast:332
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:332");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("0 0 1 1")]), "simd_int_to_int_extend.wast:332", v128("1n 1n"))

// simd_int_to_int_extend.wast:334
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:334");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("0 0 -1 -1")]), "simd_int_to_int_extend.wast:334", v128("-1n -1n"))

// simd_int_to_int_extend.wast:336
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:336");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("1 1 0 0")]), "simd_int_to_int_extend.wast:336", v128("0n 0n"))

// simd_int_to_int_extend.wast:338
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:338");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("-1 -1 0 0")]), "simd_int_to_int_extend.wast:338", v128("0n 0n"))

// simd_int_to_int_extend.wast:340
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:340");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("1 1 -1 -1")]), "simd_int_to_int_extend.wast:340", v128("-1n -1n"))

// simd_int_to_int_extend.wast:342
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x01\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:342");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("-1 -1 1 1")]), "simd_int_to_int_extend.wast:342", v128("1n 1n"))

// simd_int_to_int_extend.wast:344
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xfe\xff\xff\x7f\xfe\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\xff\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:344");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("2_147_483_646 2_147_483_646 2_147_483_647 2_147_483_647")]), "simd_int_to_int_extend.wast:344", v128("2_147_483_647n 2_147_483_647n"))

// simd_int_to_int_extend.wast:346
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\xfe\xff\xff\x7f\xfe\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xfe\xff\xff\x7f\x00\x00\x00\x00\xfe\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:346");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("2_147_483_647 2_147_483_647 2_147_483_646 2_147_483_646")]), "simd_int_to_int_extend.wast:346", v128("2_147_483_646n 2_147_483_646n"))

// simd_int_to_int_extend.wast:348
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\xff\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:348");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("2_147_483_647 2_147_483_647 2_147_483_647 2_147_483_647")]), "simd_int_to_int_extend.wast:348", v128("2_147_483_647n 2_147_483_647n"))

// simd_int_to_int_extend.wast:350
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\xff\xff\xff\xff\x00\x00\x00\x80\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:350");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("-2_147_483_648 -2_147_483_648 -2_147_483_648 -2_147_483_648")]), "simd_int_to_int_extend.wast:350", v128("-2_147_483_648n -2_147_483_648n"))

// simd_int_to_int_extend.wast:352
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\x00\x00\x00\x80\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\xff\xff\xff\xff\x00\x00\x00\x80\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:352");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("2_147_483_647 2_147_483_647 -2_147_483_648 -2_147_483_648")]), "simd_int_to_int_extend.wast:352", v128("-2_147_483_648n -2_147_483_648n"))

// simd_int_to_int_extend.wast:354
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\xff\xff\xff\x7f\xff\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\xff\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:354");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("-2_147_483_648 -2_147_483_648 2_147_483_647 2_147_483_647")]), "simd_int_to_int_extend.wast:354", v128("2_147_483_647n 2_147_483_647n"))

// simd_int_to_int_extend.wast:356
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:356");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("2_147_483_647 2_147_483_647 -1 -1")]), "simd_int_to_int_extend.wast:356", v128("-1n -1n"))

// simd_int_to_int_extend.wast:358
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x7f\xff\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\xff\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:358");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("-1 -1 2_147_483_647 2_147_483_647")]), "simd_int_to_int_extend.wast:358", v128("2_147_483_647n 2_147_483_647n"))

// simd_int_to_int_extend.wast:360
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x80\x01\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\xff\xff\xff\xff\x00\x00\x00\x80\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:360");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("-2_147_483_647 -2_147_483_647 -2_147_483_648 -2_147_483_648")]), "simd_int_to_int_extend.wast:360", v128("-2_147_483_648n -2_147_483_648n"))

// simd_int_to_int_extend.wast:362
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\x01\x00\x00\x80\x01\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x80\xff\xff\xff\xff\x01\x00\x00\x80\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:362");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("-2_147_483_648 -2_147_483_648 -2_147_483_647 -2_147_483_647")]), "simd_int_to_int_extend.wast:362", v128("-2_147_483_647n -2_147_483_647n"))

// simd_int_to_int_extend.wast:364
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:364");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("-2_147_483_648 -2_147_483_648 -1 -1")]), "simd_int_to_int_extend.wast:364", v128("-1n -1n"))

// simd_int_to_int_extend.wast:366
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x80\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\xff\xff\xff\xff\x00\x00\x00\x80\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:366");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_s", [v128("-1 -1 -2_147_483_648 -2_147_483_648")]), "simd_int_to_int_extend.wast:366", v128("-2_147_483_648n -2_147_483_648n"))

// simd_int_to_int_extend.wast:369
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:369");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("0 0 0 0")]), "simd_int_to_int_extend.wast:369", v128("0n 0n"))

// simd_int_to_int_extend.wast:371
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:371");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("0 0 1 1")]), "simd_int_to_int_extend.wast:371", v128("1n 1n"))

// simd_int_to_int_extend.wast:373
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:373");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("0 0 -1 -1")]), "simd_int_to_int_extend.wast:373", v128("4_294_967_295n 4_294_967_295n"))

// simd_int_to_int_extend.wast:375
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:375");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("1 1 0 0")]), "simd_int_to_int_extend.wast:375", v128("0n 0n"))

// simd_int_to_int_extend.wast:377
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:377");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("-1 -1 0 0")]), "simd_int_to_int_extend.wast:377", v128("0n 0n"))

// simd_int_to_int_extend.wast:379
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:379");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("1 1 -1 -1")]), "simd_int_to_int_extend.wast:379", v128("4_294_967_295n 4_294_967_295n"))

// simd_int_to_int_extend.wast:381
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x01\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:381");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("-1 -1 1 1")]), "simd_int_to_int_extend.wast:381", v128("1n 1n"))

// simd_int_to_int_extend.wast:383
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xfe\xff\xff\x7f\xfe\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\xff\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:383");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("2_147_483_646 2_147_483_646 2_147_483_647 2_147_483_647")]), "simd_int_to_int_extend.wast:383", v128("2_147_483_647n 2_147_483_647n"))

// simd_int_to_int_extend.wast:385
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\xfe\xff\xff\x7f\xfe\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xfe\xff\xff\x7f\x00\x00\x00\x00\xfe\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:385");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("2_147_483_647 2_147_483_647 2_147_483_646 2_147_483_646")]), "simd_int_to_int_extend.wast:385", v128("2_147_483_646n 2_147_483_646n"))

// simd_int_to_int_extend.wast:387
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\xff\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:387");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("2_147_483_647 2_147_483_647 2_147_483_647 2_147_483_647")]), "simd_int_to_int_extend.wast:387", v128("2_147_483_647n 2_147_483_647n"))

// simd_int_to_int_extend.wast:389
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:389");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("-2_147_483_648 -2_147_483_648 -2_147_483_648 -2_147_483_648")]), "simd_int_to_int_extend.wast:389", v128("2_147_483_648n 2_147_483_648n"))

// simd_int_to_int_extend.wast:391
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\x00\x00\x00\x80\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:391");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("2_147_483_647 2_147_483_647 -2_147_483_648 -2_147_483_648")]), "simd_int_to_int_extend.wast:391", v128("2_147_483_648n 2_147_483_648n"))

// simd_int_to_int_extend.wast:393
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\xff\xff\xff\x7f\xff\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\xff\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:393");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("-2_147_483_648 -2_147_483_648 2_147_483_647 2_147_483_647")]), "simd_int_to_int_extend.wast:393", v128("2_147_483_647n 2_147_483_647n"))

// simd_int_to_int_extend.wast:395
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:395");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("2_147_483_647 2_147_483_647 -1 -1")]), "simd_int_to_int_extend.wast:395", v128("4_294_967_295n 4_294_967_295n"))

// simd_int_to_int_extend.wast:397
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x7f\xff\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\xff\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:397");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("-1 -1 2_147_483_647 2_147_483_647")]), "simd_int_to_int_extend.wast:397", v128("2_147_483_647n 2_147_483_647n"))

// simd_int_to_int_extend.wast:399
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x80\x01\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:399");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("-2_147_483_647 -2_147_483_647 -2_147_483_648 -2_147_483_648")]), "simd_int_to_int_extend.wast:399", v128("2_147_483_648n 2_147_483_648n"))

// simd_int_to_int_extend.wast:401
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\x01\x00\x00\x80\x01\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x80\x00\x00\x00\x00\x01\x00\x00\x80\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:401");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("-2_147_483_648 -2_147_483_648 -2_147_483_647 -2_147_483_647")]), "simd_int_to_int_extend.wast:401", v128("2_147_483_649n 2_147_483_649n"))

// simd_int_to_int_extend.wast:403
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:403");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("-2_147_483_648 -2_147_483_648 -1 -1")]), "simd_int_to_int_extend.wast:403", v128("4_294_967_295n 4_294_967_295n"))

// simd_int_to_int_extend.wast:405
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x68\x69\x67\x68\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x80\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:405");  // assert_return(() => call($1, "i64x2.extend_high_i32x4_u", [v128("-1 -1 -2_147_483_648 -2_147_483_648")]), "simd_int_to_int_extend.wast:405", v128("2_147_483_648n 2_147_483_648n"))

// simd_int_to_int_extend.wast:408
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:408");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("0 0 0 0")]), "simd_int_to_int_extend.wast:408", v128("0n 0n"))

// simd_int_to_int_extend.wast:410
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:410");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("0 0 1 1")]), "simd_int_to_int_extend.wast:410", v128("0n 0n"))

// simd_int_to_int_extend.wast:412
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:412");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("0 0 -1 -1")]), "simd_int_to_int_extend.wast:412", v128("0n 0n"))

// simd_int_to_int_extend.wast:414
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:414");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("1 1 0 0")]), "simd_int_to_int_extend.wast:414", v128("1n 1n"))

// simd_int_to_int_extend.wast:416
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:416");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("-1 -1 0 0")]), "simd_int_to_int_extend.wast:416", v128("-1n -1n"))

// simd_int_to_int_extend.wast:418
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:418");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("1 1 -1 -1")]), "simd_int_to_int_extend.wast:418", v128("1n 1n"))

// simd_int_to_int_extend.wast:420
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x01\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:420");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("-1 -1 1 1")]), "simd_int_to_int_extend.wast:420", v128("-1n -1n"))

// simd_int_to_int_extend.wast:422
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xfe\xff\xff\x7f\xfe\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xfe\xff\xff\x7f\x00\x00\x00\x00\xfe\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:422");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("2_147_483_646 2_147_483_646 2_147_483_647 2_147_483_647")]), "simd_int_to_int_extend.wast:422", v128("2_147_483_646n 2_147_483_646n"))

// simd_int_to_int_extend.wast:424
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\xfe\xff\xff\x7f\xfe\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\xff\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:424");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("2_147_483_647 2_147_483_647 2_147_483_646 2_147_483_646")]), "simd_int_to_int_extend.wast:424", v128("2_147_483_647n 2_147_483_647n"))

// simd_int_to_int_extend.wast:426
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\xff\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:426");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("2_147_483_647 2_147_483_647 2_147_483_647 2_147_483_647")]), "simd_int_to_int_extend.wast:426", v128("2_147_483_647n 2_147_483_647n"))

// simd_int_to_int_extend.wast:428
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\xff\xff\xff\xff\x00\x00\x00\x80\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:428");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("-2_147_483_648 -2_147_483_648 -2_147_483_648 -2_147_483_648")]), "simd_int_to_int_extend.wast:428", v128("-2_147_483_648n -2_147_483_648n"))

// simd_int_to_int_extend.wast:430
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\x00\x00\x00\x80\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\xff\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:430");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("2_147_483_647 2_147_483_647 -2_147_483_648 -2_147_483_648")]), "simd_int_to_int_extend.wast:430", v128("2_147_483_647n 2_147_483_647n"))

// simd_int_to_int_extend.wast:432
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\xff\xff\xff\x7f\xff\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\xff\xff\xff\xff\x00\x00\x00\x80\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:432");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("-2_147_483_648 -2_147_483_648 2_147_483_647 2_147_483_647")]), "simd_int_to_int_extend.wast:432", v128("-2_147_483_648n -2_147_483_648n"))

// simd_int_to_int_extend.wast:434
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\xff\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:434");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("2_147_483_647 2_147_483_647 -1 -1")]), "simd_int_to_int_extend.wast:434", v128("2_147_483_647n 2_147_483_647n"))

// simd_int_to_int_extend.wast:436
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x7f\xff\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:436");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("-1 -1 2_147_483_647 2_147_483_647")]), "simd_int_to_int_extend.wast:436", v128("-1n -1n"))

// simd_int_to_int_extend.wast:438
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x80\x01\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x80\xff\xff\xff\xff\x01\x00\x00\x80\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:438");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("-2_147_483_647 -2_147_483_647 -2_147_483_648 -2_147_483_648")]), "simd_int_to_int_extend.wast:438", v128("-2_147_483_647n -2_147_483_647n"))

// simd_int_to_int_extend.wast:440
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\x01\x00\x00\x80\x01\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\xff\xff\xff\xff\x00\x00\x00\x80\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:440");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("-2_147_483_648 -2_147_483_648 -2_147_483_647 -2_147_483_647")]), "simd_int_to_int_extend.wast:440", v128("-2_147_483_648n -2_147_483_648n"))

// simd_int_to_int_extend.wast:442
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\xff\xff\xff\xff\x00\x00\x00\x80\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:442");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("-2_147_483_648 -2_147_483_648 -1 -1")]), "simd_int_to_int_extend.wast:442", v128("-2_147_483_648n -2_147_483_648n"))

// simd_int_to_int_extend.wast:444
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x80\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:444");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_s", [v128("-1 -1 -2_147_483_648 -2_147_483_648")]), "simd_int_to_int_extend.wast:444", v128("-1n -1n"))

// simd_int_to_int_extend.wast:447
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:447");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("0 0 0 0")]), "simd_int_to_int_extend.wast:447", v128("0n 0n"))

// simd_int_to_int_extend.wast:449
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:449");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("0 0 1 1")]), "simd_int_to_int_extend.wast:449", v128("0n 0n"))

// simd_int_to_int_extend.wast:451
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:451");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("0 0 -1 -1")]), "simd_int_to_int_extend.wast:451", v128("0n 0n"))

// simd_int_to_int_extend.wast:453
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:453");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("1 1 0 0")]), "simd_int_to_int_extend.wast:453", v128("1n 1n"))

// simd_int_to_int_extend.wast:455
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:455");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("-1 -1 0 0")]), "simd_int_to_int_extend.wast:455", v128("4_294_967_295n 4_294_967_295n"))

// simd_int_to_int_extend.wast:457
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:457");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("1 1 -1 -1")]), "simd_int_to_int_extend.wast:457", v128("1n 1n"))

// simd_int_to_int_extend.wast:459
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x01\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:459");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("-1 -1 1 1")]), "simd_int_to_int_extend.wast:459", v128("4_294_967_295n 4_294_967_295n"))

// simd_int_to_int_extend.wast:461
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xfe\xff\xff\x7f\xfe\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xfe\xff\xff\x7f\x00\x00\x00\x00\xfe\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:461");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("2_147_483_646 2_147_483_646 2_147_483_647 2_147_483_647")]), "simd_int_to_int_extend.wast:461", v128("2_147_483_646n 2_147_483_646n"))

// simd_int_to_int_extend.wast:463
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\xfe\xff\xff\x7f\xfe\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\xff\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:463");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("2_147_483_647 2_147_483_647 2_147_483_646 2_147_483_646")]), "simd_int_to_int_extend.wast:463", v128("2_147_483_647n 2_147_483_647n"))

// simd_int_to_int_extend.wast:465
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\xff\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:465");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("2_147_483_647 2_147_483_647 2_147_483_647 2_147_483_647")]), "simd_int_to_int_extend.wast:465", v128("2_147_483_647n 2_147_483_647n"))

// simd_int_to_int_extend.wast:467
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:467");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("-2_147_483_648 -2_147_483_648 -2_147_483_648 -2_147_483_648")]), "simd_int_to_int_extend.wast:467", v128("2_147_483_648n 2_147_483_648n"))

// simd_int_to_int_extend.wast:469
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\x00\x00\x00\x80\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\xff\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:469");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("2_147_483_647 2_147_483_647 -2_147_483_648 -2_147_483_648")]), "simd_int_to_int_extend.wast:469", v128("2_147_483_647n 2_147_483_647n"))

// simd_int_to_int_extend.wast:471
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\xff\xff\xff\x7f\xff\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:471");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("-2_147_483_648 -2_147_483_648 2_147_483_647 2_147_483_647")]), "simd_int_to_int_extend.wast:471", v128("2_147_483_648n 2_147_483_648n"))

// simd_int_to_int_extend.wast:473
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\xff\xff\xff\x7f\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\xff\xff\xff\x7f\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:473");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("2_147_483_647 2_147_483_647 -1 -1")]), "simd_int_to_int_extend.wast:473", v128("2_147_483_647n 2_147_483_647n"))

// simd_int_to_int_extend.wast:475
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x7f\xff\xff\xff\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:475");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("-1 -1 2_147_483_647 2_147_483_647")]), "simd_int_to_int_extend.wast:475", v128("4_294_967_295n 4_294_967_295n"))

// simd_int_to_int_extend.wast:477
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x80\x01\x00\x00\x80\x00\x00\x00\x80\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x80\x00\x00\x00\x00\x01\x00\x00\x80\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:477");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("-2_147_483_647 -2_147_483_647 -2_147_483_648 -2_147_483_648")]), "simd_int_to_int_extend.wast:477", v128("2_147_483_649n 2_147_483_649n"))

// simd_int_to_int_extend.wast:479
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\x01\x00\x00\x80\x01\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:479");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("-2_147_483_648 -2_147_483_648 -2_147_483_647 -2_147_483_647")]), "simd_int_to_int_extend.wast:479", v128("2_147_483_648n 2_147_483_648n"))

// simd_int_to_int_extend.wast:481
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x80\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:481");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("-2_147_483_648 -2_147_483_648 -1 -1")]), "simd_int_to_int_extend.wast:481", v128("2_147_483_648n 2_147_483_648n"))

// simd_int_to_int_extend.wast:483
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x2e\x65\x78\x74\x65\x6e\x64\x5f\x6c\x6f\x77\x5f\x69\x33\x32\x78\x34\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x80\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_int_to_int_extend.wast:483");  // assert_return(() => call($1, "i64x2.extend_low_i32x4_u", [v128("-1 -1 -2_147_483_648 -2_147_483_648")]), "simd_int_to_int_extend.wast:483", v128("4_294_967_295n 4_294_967_295n"))

// simd_int_to_int_extend.wast:488
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x00\xfd\x88\x01\x0b", "simd_int_to_int_extend.wast:488");

// simd_int_to_int_extend.wast:489
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x00\xfd\x8a\x01\x0b", "simd_int_to_int_extend.wast:489");

// simd_int_to_int_extend.wast:490
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x00\xfd\x87\x01\x0b", "simd_int_to_int_extend.wast:490");

// simd_int_to_int_extend.wast:491
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x00\xfd\x89\x01\x0b", "simd_int_to_int_extend.wast:491");

// simd_int_to_int_extend.wast:492
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x00\xfd\xa8\x01\x0b", "simd_int_to_int_extend.wast:492");

// simd_int_to_int_extend.wast:493
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x00\xfd\xaa\x01\x0b", "simd_int_to_int_extend.wast:493");

// simd_int_to_int_extend.wast:494
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x00\xfd\xa7\x01\x0b", "simd_int_to_int_extend.wast:494");

// simd_int_to_int_extend.wast:495
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x00\xfd\xa9\x01\x0b", "simd_int_to_int_extend.wast:495");

// simd_int_to_int_extend.wast:496
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x00\xfd\xc8\x01\x0b", "simd_int_to_int_extend.wast:496");

// simd_int_to_int_extend.wast:497
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x00\xfd\xca\x01\x0b", "simd_int_to_int_extend.wast:497");

// simd_int_to_int_extend.wast:498
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x00\xfd\xc7\x01\x0b", "simd_int_to_int_extend.wast:498");

// simd_int_to_int_extend.wast:499
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x00\xfd\xc9\x01\x0b", "simd_int_to_int_extend.wast:499");

// simd_int_to_int_extend.wast:503
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\x88\x01\x0b", "simd_int_to_int_extend.wast:503");

// simd_int_to_int_extend.wast:511
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\x8a\x01\x0b", "simd_int_to_int_extend.wast:511");

// simd_int_to_int_extend.wast:519
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\x87\x01\x0b", "simd_int_to_int_extend.wast:519");

// simd_int_to_int_extend.wast:527
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\x89\x01\x0b", "simd_int_to_int_extend.wast:527");

// simd_int_to_int_extend.wast:535
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\xa8\x01\x0b", "simd_int_to_int_extend.wast:535");

// simd_int_to_int_extend.wast:543
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\xaa\x01\x0b", "simd_int_to_int_extend.wast:543");

// simd_int_to_int_extend.wast:551
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\xa7\x01\x0b", "simd_int_to_int_extend.wast:551");

// simd_int_to_int_extend.wast:559
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\xa9\x01\x0b", "simd_int_to_int_extend.wast:559");

// simd_int_to_int_extend.wast:567
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\xc8\x01\x0b", "simd_int_to_int_extend.wast:567");

// simd_int_to_int_extend.wast:575
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\xca\x01\x0b", "simd_int_to_int_extend.wast:575");

// simd_int_to_int_extend.wast:583
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\xc7\x01\x0b", "simd_int_to_int_extend.wast:583");

// simd_int_to_int_extend.wast:591
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\xc9\x01\x0b", "simd_int_to_int_extend.wast:591");
reinitializeRegistry();
})();
