(function simd_lane_wast_js() {

// simd_lane.wast:4
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xb3\x80\x80\x80\x00\x09\x60\x01\x7b\x01\x7f\x60\x01\x7b\x01\x7d\x60\x02\x7b\x7f\x01\x7b\x60\x02\x7b\x7d\x01\x7b\x60\x01\x7b\x01\x7e\x60\x01\x7b\x01\x7c\x60\x02\x7b\x7e\x01\x7b\x60\x02\x7b\x7c\x01\x7b\x60\x02\x7b\x7b\x01\x7b\x03\xa5\x80\x80\x80\x00\x24\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x02\x02\x02\x02\x02\x02\x03\x03\x04\x04\x05\x05\x06\x06\x07\x07\x08\x08\x08\x08\x08\x08\x08\x08\x07\x85\x87\x80\x80\x00\x24\x1a\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x66\x69\x72\x73\x74\x00\x00\x19\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x6c\x61\x73\x74\x00\x01\x1a\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x66\x69\x72\x73\x74\x00\x02\x19\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x6c\x61\x73\x74\x00\x03\x1a\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x66\x69\x72\x73\x74\x00\x04\x19\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x6c\x61\x73\x74\x00\x05\x1a\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x66\x69\x72\x73\x74\x00\x06\x19\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x6c\x61\x73\x74\x00\x07\x18\x69\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x08\x17\x69\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x09\x18\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x0a\x17\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x0b\x18\x69\x38\x78\x31\x36\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x0c\x17\x69\x38\x78\x31\x36\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x0d\x18\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x0e\x17\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x0f\x18\x69\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x10\x17\x69\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x11\x18\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x12\x17\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x13\x18\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x14\x17\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x15\x18\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x16\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x17\x18\x69\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x18\x17\x69\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x19\x18\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x1a\x17\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x1b\x0d\x76\x38\x78\x31\x36\x5f\x73\x77\x69\x7a\x7a\x6c\x65\x00\x1c\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x31\x00\x1d\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x32\x00\x1e\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x33\x00\x1f\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x34\x00\x20\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x35\x00\x21\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x36\x00\x22\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x37\x00\x23\x0a\xc1\x84\x80\x80\x00\x24\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x15\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x15\x0f\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x16\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x16\x0f\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x18\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x18\x07\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x19\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x19\x07\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x1b\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x1b\x03\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x1f\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x1f\x03\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x17\x00\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x17\x0f\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1a\x00\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1a\x07\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1c\x00\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1c\x03\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x20\x00\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x20\x03\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x1d\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x1d\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x21\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x21\x01\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1e\x00\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1e\x01\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x22\x00\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x22\x01\x0b\x88\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x0e\x0b\x98\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x0d\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x0b\x98\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x0d\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x0b\x98\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x0d\x1f\x1e\x1d\x1c\x1b\x1a\x19\x18\x17\x16\x15\x14\x13\x12\x11\x10\x0b\x98\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x0d\x0f\x0e\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\x04\x03\x02\x01\x00\x0b\x98\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x0d\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x98\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x0d\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x0b\x98\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x0d\x00\x00\x00\x00\x00\x00\x00\x00\x10\x10\x10\x10\x10\x10\x10\x10\x0b", "simd_lane.wast:4");

// simd_lane.wast:4
let $1 = instance($$1);

// simd_lane.wast:81
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xaa\x80\x80\x80\x00\x01\xa4\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\xff\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:81");  // assert_return(() => call($1, "i8x16_extract_lane_s-first", [v128("127 0 0 0")]), "simd_lane.wast:81", 127)

// simd_lane.wast:82
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xaa\x80\x80\x80\x00\x01\xa4\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\xff\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:82");  // assert_return(() => call($1, "i8x16_extract_lane_s-first", [v128("127 0 0 0")]), "simd_lane.wast:82", 127)

// simd_lane.wast:83
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x7f\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:83");  // assert_return(() => call($1, "i8x16_extract_lane_s-first", [v128("255 0 0 0")]), "simd_lane.wast:83", -1)

// simd_lane.wast:84
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x7f\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:84");  // assert_return(() => call($1, "i8x16_extract_lane_s-first", [v128("255 0 0 0")]), "simd_lane.wast:84", -1)

// simd_lane.wast:85
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xaa\x80\x80\x80\x00\x01\xa4\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\xff\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:85");  // assert_return(() => call($1, "i8x16_extract_lane_u-first", [v128("255 0 0 0")]), "simd_lane.wast:85", 255)

// simd_lane.wast:86
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xaa\x80\x80\x80\x00\x01\xa4\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\xff\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:86");  // assert_return(() => call($1, "i8x16_extract_lane_u-first", [v128("255 0 0 0")]), "simd_lane.wast:86", 255)

// simd_lane.wast:87
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xaa\x80\x80\x80\x00\x01\xa4\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x01\x41\x80\x7f\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:87");  // assert_return(() => call($1, "i8x16_extract_lane_s-last", [v128("0 0 0 -2_147_483_648")]), "simd_lane.wast:87", -128)

// simd_lane.wast:88
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xaa\x80\x80\x80\x00\x01\xa4\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x01\x41\x80\x7f\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:88");  // assert_return(() => call($1, "i8x16_extract_lane_s-last", [v128("0 0 0 -2_147_483_648")]), "simd_lane.wast:88", -128)

// simd_lane.wast:89
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xaa\x80\x80\x80\x00\x01\xa4\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x10\x00\x01\x41\xff\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:89");  // assert_return(() => call($1, "i8x16_extract_lane_u-last", [v128("0 0 0 -16_777_216")]), "simd_lane.wast:89", 255)

// simd_lane.wast:90
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xaa\x80\x80\x80\x00\x01\xa4\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x10\x00\x01\x41\xff\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:90");  // assert_return(() => call($1, "i8x16_extract_lane_u-last", [v128("0 0 0 -16_777_216")]), "simd_lane.wast:90", 255)

// simd_lane.wast:91
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xaa\x80\x80\x80\x00\x01\xa4\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x01\x41\x80\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:91");  // assert_return(() => call($1, "i8x16_extract_lane_u-last", [v128("0 0 0 -2_147_483_648")]), "simd_lane.wast:91", 128)

// simd_lane.wast:92
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xaa\x80\x80\x80\x00\x01\xa4\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x01\x41\x80\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:92");  // assert_return(() => call($1, "i8x16_extract_lane_u-last", [v128("0 0 0 -2_147_483_648")]), "simd_lane.wast:92", 128)

// simd_lane.wast:94
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\xff\xff\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:94");  // assert_return(() => call($1, "i16x8_extract_lane_s-first", [v128("32_767 0 0 0")]), "simd_lane.wast:94", 32_767)

// simd_lane.wast:95
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\xff\xff\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:95");  // assert_return(() => call($1, "i16x8_extract_lane_s-first", [v128("32_767 0 0 0")]), "simd_lane.wast:95", 32_767)

// simd_lane.wast:96
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x7f\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:96");  // assert_return(() => call($1, "i16x8_extract_lane_s-first", [v128("65_535 0 0 0")]), "simd_lane.wast:96", -1)

// simd_lane.wast:97
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x7f\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:97");  // assert_return(() => call($1, "i16x8_extract_lane_s-first", [v128("65_535 0 0 0")]), "simd_lane.wast:97", -1)

// simd_lane.wast:98
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x39\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\xb9\xe0\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:98");  // assert_return(() => call($1, "i16x8_extract_lane_s-first", [v128("12_345 0 0 0")]), "simd_lane.wast:98", 12_345)

// simd_lane.wast:99
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xaa\x80\x80\x80\x00\x01\xa4\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xcc\xed\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\xcc\x5b\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:99");  // assert_return(() => call($1, "i16x8_extract_lane_s-first", [v128("60_876 0 0 0")]), "simd_lane.wast:99", -4_660)

// simd_lane.wast:100
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\xff\xff\x03\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:100");  // assert_return(() => call($1, "i16x8_extract_lane_u-first", [v128("65_535 0 0 0")]), "simd_lane.wast:100", 65_535)

// simd_lane.wast:101
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\xff\xff\x03\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:101");  // assert_return(() => call($1, "i16x8_extract_lane_u-first", [v128("65_535 0 0 0")]), "simd_lane.wast:101", 65_535)

// simd_lane.wast:102
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x39\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\xb9\xe0\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:102");  // assert_return(() => call($1, "i16x8_extract_lane_u-first", [v128("12_345 0 0 0")]), "simd_lane.wast:102", 12_345)

// simd_lane.wast:103
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xcc\xed\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\xcc\xdb\x03\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:103");  // assert_return(() => call($1, "i16x8_extract_lane_u-first", [v128("60_876 0 0 0")]), "simd_lane.wast:103", 60_876)

// simd_lane.wast:104
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x01\x41\x80\x80\x7e\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:104");  // assert_return(() => call($1, "i16x8_extract_lane_s-last", [v128("0 0 0 -2_147_483_648")]), "simd_lane.wast:104", -32_768)

// simd_lane.wast:105
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x01\x41\x80\x80\x7e\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:105");  // assert_return(() => call($1, "i16x8_extract_lane_s-last", [v128("0 0 0 -2_147_483_648")]), "simd_lane.wast:105", -32_768)

// simd_lane.wast:106
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xaa\x80\x80\x80\x00\x01\xa4\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x85\x1a\x10\x00\x01\x41\x85\x35\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:106");  // assert_return(() => call($1, "i16x8_extract_lane_s-last", [v128("0 0 0 444_923_904")]), "simd_lane.wast:106", 6_789)

// simd_lane.wast:107
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x77\x98\x10\x00\x01\x41\xf7\xb0\x7e\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:107");  // assert_return(() => call($1, "i16x8_extract_lane_s-last", [v128("0 0 0 -1_737_031_680")]), "simd_lane.wast:107", -26_505)

// simd_lane.wast:108
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x10\x00\x01\x41\xff\xff\x03\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:108");  // assert_return(() => call($1, "i16x8_extract_lane_u-last", [v128("0 0 0 -65_536")]), "simd_lane.wast:108", 65_535)

// simd_lane.wast:109
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x10\x00\x01\x41\xff\xff\x03\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:109");  // assert_return(() => call($1, "i16x8_extract_lane_u-last", [v128("0 0 0 -65_536")]), "simd_lane.wast:109", 65_535)

// simd_lane.wast:110
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x01\x41\x80\x80\x02\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:110");  // assert_return(() => call($1, "i16x8_extract_lane_u-last", [v128("0 0 0 -2_147_483_648")]), "simd_lane.wast:110", 32_768)

// simd_lane.wast:111
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x01\x41\x80\x80\x02\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:111");  // assert_return(() => call($1, "i16x8_extract_lane_u-last", [v128("0 0 0 -2_147_483_648")]), "simd_lane.wast:111", 32_768)

// simd_lane.wast:112
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xaa\x80\x80\x80\x00\x01\xa4\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x85\x1a\x10\x00\x01\x41\x85\x35\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:112");  // assert_return(() => call($1, "i16x8_extract_lane_u-last", [v128("0 0 0 444_923_904")]), "simd_lane.wast:112", 6_789)

// simd_lane.wast:113
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x77\x98\x10\x00\x01\x41\xf7\xb0\x02\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:113");  // assert_return(() => call($1, "i16x8_extract_lane_u-last", [v128("0 0 0 -1_737_031_680")]), "simd_lane.wast:113", 39_031)

// simd_lane.wast:115
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xad\x80\x80\x80\x00\x01\xa7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\xff\xff\xff\xff\x07\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:115");  // assert_return(() => call($1, "i32x4_extract_lane-first", [v128("2_147_483_647 0 0 0")]), "simd_lane.wast:115", 2_147_483_647)

// simd_lane.wast:116
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xad\x80\x80\x80\x00\x01\xa7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\xff\xff\xff\xff\x07\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:116");  // assert_return(() => call($1, "i32x4_extract_lane-first", [v128("2_147_483_647 0 0 0")]), "simd_lane.wast:116", 2_147_483_647)

// simd_lane.wast:117
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x7f\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:117");  // assert_return(() => call($1, "i32x4_extract_lane-first", [v128("-1 0 0 0")]), "simd_lane.wast:117", -1)

// simd_lane.wast:118
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x7f\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:118");  // assert_return(() => call($1, "i32x4_extract_lane-first", [v128("-1 0 0 0")]), "simd_lane.wast:118", -1)

// simd_lane.wast:119
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xad\x80\x80\x80\x00\x01\xa7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xd2\x02\x96\x49\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\xd2\x85\xd8\xcc\x04\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:119");  // assert_return(() => call($1, "i32x4_extract_lane-first", [v128("1_234_567_890 0 0 0")]), "simd_lane.wast:119", 1_234_567_890)

// simd_lane.wast:120
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xad\x80\x80\x80\x00\x01\xa7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x88\xa9\xcb\xed\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x88\xd3\xae\xee\x7e\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:120");  // assert_return(() => call($1, "i32x4_extract_lane-first", [v128("-305_419_896 0 0 0")]), "simd_lane.wast:120", -305_419_896)

// simd_lane.wast:121
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xad\x80\x80\x80\x00\x01\xa7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x01\x41\x80\x80\x80\x80\x78\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:121");  // assert_return(() => call($1, "i32x4_extract_lane-last", [v128("0 0 0 -2_147_483_648")]), "simd_lane.wast:121", -2_147_483_648)

// simd_lane.wast:122
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xad\x80\x80\x80\x00\x01\xa7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x01\x41\x80\x80\x80\x80\x78\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:122");  // assert_return(() => call($1, "i32x4_extract_lane-last", [v128("0 0 0 -2_147_483_648")]), "simd_lane.wast:122", -2_147_483_648)

// simd_lane.wast:123
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x10\x00\x01\x41\x7f\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:123");  // assert_return(() => call($1, "i32x4_extract_lane-last", [v128("0 0 0 -1")]), "simd_lane.wast:123", -1)

// simd_lane.wast:124
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x10\x00\x01\x41\x7f\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:124");  // assert_return(() => call($1, "i32x4_extract_lane-last", [v128("0 0 0 -1")]), "simd_lane.wast:124", -1)

// simd_lane.wast:125
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xad\x80\x80\x80\x00\x01\xa7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb1\x68\xde\x3a\x10\x00\x01\x41\xb1\xd1\xf9\xd6\x03\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:125");  // assert_return(() => call($1, "i32x4_extract_lane-last", [v128("0 0 0 987_654_321")]), "simd_lane.wast:125", 987_654_321)

// simd_lane.wast:126
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xad\x80\x80\x80\x00\x01\xa7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x88\xa9\xcb\xed\x10\x00\x01\x41\x88\xd3\xae\xee\x7e\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:126");  // assert_return(() => call($1, "i32x4_extract_lane-last", [v128("0 0 0 -305_419_896")]), "simd_lane.wast:126", -305_419_896)

// simd_lane.wast:128
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7e\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb2\x80\x80\x80\x00\x01\xac\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x42\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:128");  // assert_return(() => call($1, "i64x2_extract_lane-first", [v128("-1 2_147_483_647 0 0")]), "simd_lane.wast:128", 9_223_372_036_854_775_807n)

// simd_lane.wast:129
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7e\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb2\x80\x80\x80\x00\x01\xac\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xfe\xff\xff\xff\xff\xff\xff\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x42\xfe\xff\xff\xff\xff\xff\xff\xff\xff\x00\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:129");  // assert_return(() => call($1, "i64x2_extract_lane-first", [v128("-2 2_147_483_647 0 0")]), "simd_lane.wast:129", 9_223_372_036_854_775_806n)

// simd_lane.wast:130
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7e\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x42\x7f\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:130");  // assert_return(() => call($1, "i64x2_extract_lane-first", [v128("-1 -1 0 0")]), "simd_lane.wast:130", -1n)

// simd_lane.wast:131
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7e\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x42\x7f\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:131");  // assert_return(() => call($1, "i64x2_extract_lane-first", [v128("-1 -1 0 0")]), "simd_lane.wast:131", -1n)

// simd_lane.wast:132
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7e\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb1\x80\x80\x80\x00\x01\xab\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x15\x81\xe9\x7d\xf4\x10\x22\x11\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x42\x95\x82\xa6\xef\xc7\x9e\x84\x91\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:132");  // assert_return(() => call($1, "i64x2_extract_lane-first", [v128("2_112_454_933 287_445_236 0 0")]), "simd_lane.wast:132", 1_234_567_890_123_456_789n)

// simd_lane.wast:133
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7e\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb1\x80\x80\x80\x00\x01\xab\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xef\xcd\xab\x90\x78\x56\x34\x12\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x42\xef\x9b\xaf\x85\x89\xcf\x95\x9a\x12\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:133");  // assert_return(() => call($1, "i64x2_extract_lane-first", [v128("-1_867_788_817 305_419_896 0 0")]), "simd_lane.wast:133", 1_311_768_467_294_899_695n)

// simd_lane.wast:134
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7e\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb2\x80\x80\x80\x00\x01\xac\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x01\x42\x80\x80\x80\x80\x80\x80\x80\x80\x80\x7f\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:134");  // assert_return(() => call($1, "i64x2_extract_lane-last", [v128("0 0 0 -2_147_483_648")]), "simd_lane.wast:134", -9_223_372_036_854_775_808n)

// simd_lane.wast:135
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7e\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb2\x80\x80\x80\x00\x01\xac\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x01\x42\x80\x80\x80\x80\x80\x80\x80\x80\x80\x7f\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:135");  // assert_return(() => call($1, "i64x2_extract_lane-last", [v128("0 0 0 -2_147_483_648")]), "simd_lane.wast:135", -9_223_372_036_854_775_808n)

// simd_lane.wast:136
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7e\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb2\x80\x80\x80\x00\x01\xac\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x01\x42\x80\x80\x80\x80\x80\x80\x80\x80\x80\x7f\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:136");  // assert_return(() => call($1, "i64x2_extract_lane-last", [v128("0 0 0 -2_147_483_648")]), "simd_lane.wast:136", -9_223_372_036_854_775_808n)

// simd_lane.wast:137
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7e\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb2\x80\x80\x80\x00\x01\xac\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\x7f\x10\x00\x01\x42\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:137");  // assert_return(() => call($1, "i64x2_extract_lane-last", [v128("0 0 -1 2_147_483_647")]), "simd_lane.wast:137", 9_223_372_036_854_775_807n)

// simd_lane.wast:138
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7e\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb2\x80\x80\x80\x00\x01\xac\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\x01\x42\x80\x80\x80\x80\x80\x80\x80\x80\x80\x7f\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:138");  // assert_return(() => call($1, "i64x2_extract_lane-last", [v128("0 0 0 -2_147_483_648")]), "simd_lane.wast:138", -9_223_372_036_854_775_808n)

// simd_lane.wast:139
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7e\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb2\x80\x80\x80\x00\x01\xac\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\x7f\x10\x00\x01\x42\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:139");  // assert_return(() => call($1, "i64x2_extract_lane-last", [v128("0 0 -1 2_147_483_647")]), "simd_lane.wast:139", 9_223_372_036_854_775_807n)

// simd_lane.wast:140
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7e\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb2\x80\x80\x80\x00\x01\xac\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf0\xff\x00\x00\x00\x00\x00\x00\xf0\x7f\x10\x00\x01\x42\x80\x80\x80\x80\x80\x80\x80\xf8\xff\x00\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:140");  // assert_return(() => call($1, "i64x2_extract_lane-last", [v128("0 -1_048_576 0 2_146_435_072")]), "simd_lane.wast:140", 9_218_868_437_227_405_312n)

// simd_lane.wast:141
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7e\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb1\x80\x80\x80\x00\x01\xab\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x15\x81\xe9\x7d\xf4\x10\x22\x11\x10\x00\x01\x42\x95\x82\xa6\xef\xc7\x9e\x84\x91\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:141");  // assert_return(() => call($1, "i64x2_extract_lane-last", [v128("0 0 2_112_454_933 287_445_236")]), "simd_lane.wast:141", 1_234_567_890_123_456_789n)

// simd_lane.wast:142
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7e\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb1\x80\x80\x80\x00\x01\xab\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xef\xcd\xab\x90\x78\x56\x34\x12\x10\x00\x01\x42\xef\x9b\xaf\x85\x89\xcf\x95\x9a\x12\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:142");  // assert_return(() => call($1, "i64x2_extract_lane-last", [v128("0 0 -1_867_788_817 305_419_896")]), "simd_lane.wast:142", 1_311_768_467_294_899_695n)

// simd_lane.wast:144
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7d\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xac\x80\x80\x80\x00\x01\xa6\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\xa0\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbc\x43\x00\x00\xa0\xc0\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:144");  // assert_return(() => call($1, "f32x4_extract_lane-first", [v128("-1_063_256_064 0 0 0")]), "simd_lane.wast:144", -5.)

// simd_lane.wast:145
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7d\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xac\x80\x80\x80\x00\x01\xa6\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x99\x76\x96\x7e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbc\x43\x99\x76\x96\x7e\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:145");  // assert_return(() => call($1, "f32x4_extract_lane-first", [v128("2_123_789_977 0 0 0")]), "simd_lane.wast:145", 9.99999968029e+37)

// simd_lane.wast:146
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7d\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xac\x80\x80\x80\x00\x01\xa6\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\x7f\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbc\x43\xff\xff\x7f\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:146");  // assert_return(() => call($1, "f32x4_extract_lane-first", [v128("2_139_095_039 0 0 0")]), "simd_lane.wast:146", 3.40282346639e+38)

// simd_lane.wast:147
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7d\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xac\x80\x80\x80\x00\x01\xa6\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbc\x43\x00\x00\x00\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:147");  // assert_return(() => call($1, "f32x4_extract_lane-first", [v128("2_130_706_432 0 0 0")]), "simd_lane.wast:147", 1.7014118346e+38)

// simd_lane.wast:148
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7d\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xac\x80\x80\x80\x00\x01\xa6\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x80\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbc\x43\x00\x00\x80\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:148");  // assert_return(() => call($1, "f32x4_extract_lane-first", [v128("2_139_095_040 0 0 0")]), "simd_lane.wast:148", Infinity)

// simd_lane.wast:149
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7d\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xac\x80\x80\x80\x00\x01\xa6\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\xc0\x7f\x00\x00\x80\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:149");  // assert_return(() => call($1, "f32x4_extract_lane-first", [v128("2_143_289_344 2_139_095_040 0 0")]), "simd_lane.wast:149", NaN)

// simd_lane.wast:150
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7d\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xac\x80\x80\x80\x00\x01\xa6\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x7b\x4d\x7f\x6c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbc\x43\x7b\x4d\x7f\x6c\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:150");  // assert_return(() => call($1, "f32x4_extract_lane-first", [v128("1_820_282_235 0 0 0")]), "simd_lane.wast:150", 1.23456790068e+27)

// simd_lane.wast:151
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7d\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xac\x80\x80\x80\x00\x01\xa6\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xb4\xa2\x11\x52\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbc\x43\xb4\xa2\x11\x52\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:151");  // assert_return(() => call($1, "f32x4_extract_lane-first", [v128("1_376_887_476 0 0 0")]), "simd_lane.wast:151", 156374990848.)

// simd_lane.wast:152
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7d\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xac\x80\x80\x80\x00\x01\xa6\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x99\x76\x96\xfe\x10\x00\xbc\x43\x99\x76\x96\xfe\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:152");  // assert_return(() => call($1, "f32x4_extract_lane-last", [v128("0 0 0 -23_693_671")]), "simd_lane.wast:152", -9.99999968029e+37)

// simd_lane.wast:153
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7d\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xac\x80\x80\x80\x00\x01\xa6\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x7f\xff\x10\x00\xbc\x43\xff\xff\x7f\xff\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:153");  // assert_return(() => call($1, "f32x4_extract_lane-last", [v128("0 0 0 -8_388_609")]), "simd_lane.wast:153", -3.40282346639e+38)

// simd_lane.wast:154
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7d\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xac\x80\x80\x80\x00\x01\xa6\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x10\x00\xbc\x43\x00\x00\x00\xff\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:154");  // assert_return(() => call($1, "f32x4_extract_lane-last", [v128("0 0 0 -16_777_216")]), "simd_lane.wast:154", -1.7014118346e+38)

// simd_lane.wast:155
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7d\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xac\x80\x80\x80\x00\x01\xa6\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xff\x10\x00\xbc\x43\x00\x00\x80\xff\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:155");  // assert_return(() => call($1, "f32x4_extract_lane-last", [v128("0 0 0 -8_388_608")]), "simd_lane.wast:155", -Infinity)

// simd_lane.wast:156
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7d\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xac\x80\x80\x80\x00\x01\xa6\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xff\x00\x00\xc0\x7f\x10\x00\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:156");  // assert_return(() => call($1, "f32x4_extract_lane-last", [v128("0 0 -8_388_608 2_143_289_344")]), "simd_lane.wast:156", NaN)

// simd_lane.wast:157
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7d\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xac\x80\x80\x80\x00\x01\xa6\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa3\x79\xeb\x4c\x10\x00\xbc\x43\xa3\x79\xeb\x4c\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:157");  // assert_return(() => call($1, "f32x4_extract_lane-last", [v128("0 0 0 1_290_500_515")]), "simd_lane.wast:157", 123456792.)

// simd_lane.wast:158
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7d\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xac\x80\x80\x80\x00\x01\xa6\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb4\xa2\x91\x5b\x10\x00\xbc\x43\xb4\xa2\x91\x5b\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:158");  // assert_return(() => call($1, "f32x4_extract_lane-last", [v128("0 0 0 1_536_271_028")]), "simd_lane.wast:158", 8.19855312017e+16)

// simd_lane.wast:160
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\xbf\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\xbf\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:160");  // assert_return(() => call($1, "f64x2_extract_lane-first", [v128("0 -1_074_266_112 0 0")]), "simd_lane.wast:160", -1.5)

// simd_lane.wast:161
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x3f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:161");  // assert_return(() => call($1, "f64x2_extract_lane-first", [v128("0 1_073_217_536 0 0")]), "simd_lane.wast:161", 1.5)

// simd_lane.wast:162
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x9d\x5d\x88\xec\x42\xed\x0c\x80\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbd\x44\x9d\x5d\x88\xec\x42\xed\x0c\x80\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:162");  // assert_return(() => call($1, "f64x2_extract_lane-first", [v128("-326_607_459 -2_146_636_478 0 0")]), "simd_lane.wast:162", -1.79769313486e-308)

// simd_lane.wast:163
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x9d\x5d\x88\xec\x42\xed\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbd\x44\x9d\x5d\x88\xec\x42\xed\x0c\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:163");  // assert_return(() => call($1, "f64x2_extract_lane-first", [v128("-326_607_459 847_170 0 0")]), "simd_lane.wast:163", 1.79769313486e-308)

// simd_lane.wast:164
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x10\x80\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x10\x80\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:164");  // assert_return(() => call($1, "f64x2_extract_lane-first", [v128("0 -2_146_435_072 0 0")]), "simd_lane.wast:164", -2.22507385851e-308)

// simd_lane.wast:165
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x10\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:165");  // assert_return(() => call($1, "f64x2_extract_lane-first", [v128("0 1_048_576 0 0")]), "simd_lane.wast:165", 2.22507385851e-308)

// simd_lane.wast:166
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf0\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\xf0\xff\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:166");  // assert_return(() => call($1, "f64x2_extract_lane-first", [v128("0 -1_048_576 0 0")]), "simd_lane.wast:166", -Infinity)

// simd_lane.wast:167
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf0\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\xf0\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:167");  // assert_return(() => call($1, "f64x2_extract_lane-first", [v128("0 2_146_435_072 0 0")]), "simd_lane.wast:167", Infinity)

// simd_lane.wast:168
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\xff\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:168");  // assert_return(() => call($1, "f64x2_extract_lane-first", [v128("0 -524_288 0 -2_147_483_648")]), "simd_lane.wast:168", -NaN)

// simd_lane.wast:169
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:169");  // assert_return(() => call($1, "f64x2_extract_lane-first", [v128("0 2_146_959_360 0 0")]), "simd_lane.wast:169", NaN)

// simd_lane.wast:170
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xd5\xcb\x6b\x5b\xaf\xe9\x8f\x45\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbd\x44\xd5\xcb\x6b\x5b\xaf\xe9\x8f\x45\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:170");  // assert_return(() => call($1, "f64x2_extract_lane-first", [v128("1_533_791_189 1_167_059_375 0 0")]), "simd_lane.wast:170", 1.23456789012e+27)

// simd_lane.wast:171
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xdf\xbc\x9a\x78\x56\x34\xc2\x43\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbd\x44\xdf\xbc\x9a\x78\x56\x34\xc2\x43\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:171");  // assert_return(() => call($1, "f64x2_extract_lane-first", [v128("2_023_406_815 1_136_800_854 0 0")]), "simd_lane.wast:171", 2.62353693493e+18)

// simd_lane.wast:172
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x02\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:172");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 0 1_073_872_896")]), "simd_lane.wast:172", 2.25)

// simd_lane.wast:173
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\xc0\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x02\xc0\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:173");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 0 -1_073_610_752")]), "simd_lane.wast:173", -2.25)

// simd_lane.wast:174
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xef\xff\x10\x00\xbd\x44\xff\xff\xff\xff\xff\xff\xef\xff\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:174");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 -1 -1_048_577")]), "simd_lane.wast:174", -1.79769313486e+308)

// simd_lane.wast:175
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xef\x7f\x10\x00\xbd\x44\xff\xff\xff\xff\xff\xff\xef\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:175");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 -1 2_146_435_071")]), "simd_lane.wast:175", 1.79769313486e+308)

// simd_lane.wast:176
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xef\xff\x10\x00\xbd\x44\xff\xff\xff\xff\xff\xff\xef\xff\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:176");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 -1 -1_048_577")]), "simd_lane.wast:176", -1.79769313486e+308)

// simd_lane.wast:177
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xef\x7f\x10\x00\xbd\x44\xff\xff\xff\xff\xff\xff\xef\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:177");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 -1 2_146_435_071")]), "simd_lane.wast:177", 1.79769313486e+308)

// simd_lane.wast:178
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\xf0\xff\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\xf0\xff\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:178");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 -2_147_483_648 0 -1_048_576")]), "simd_lane.wast:178", -Infinity)

// simd_lane.wast:179
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0\x7f\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\xf0\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:179");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 0 2_146_435_072")]), "simd_lane.wast:179", Infinity)

// simd_lane.wast:180
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\xf8\xff\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\xff\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:180");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 -2_147_483_648 0 -524_288")]), "simd_lane.wast:180", -NaN)

// simd_lane.wast:181
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:181");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 0 2_146_959_360")]), "simd_lane.wast:181", NaN)

// simd_lane.wast:182
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x54\x34\x6f\x9d\x41\x10\x00\xbd\x44\x00\x00\x00\x54\x34\x6f\x9d\x41\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:182");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 1_409_286_144 1_100_836_660")]), "simd_lane.wast:182", 123456789.)

// simd_lane.wast:183
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xdf\xbc\x9a\x78\x56\x34\xf2\x44\x10\x00\xbd\x44\xdf\xbc\x9a\x78\x56\x34\xf2\x44\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:183");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 2_023_406_815 1_156_723_798")]), "simd_lane.wast:183", 1.37548893254e+24)

// simd_lane.wast:185
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:185");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 0 0")]), "simd_lane.wast:185", 0.)

// simd_lane.wast:186
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x80\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:186");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 0 -2_147_483_648")]), "simd_lane.wast:186", -0.)

// simd_lane.wast:187
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:187");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 0 1_073_741_824")]), "simd_lane.wast:187", 2.)

// simd_lane.wast:188
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x00\xc0\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:188");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 0 -1_073_741_824")]), "simd_lane.wast:188", -2.)

// simd_lane.wast:189
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xef\x7f\x10\x00\xbd\x44\xff\xff\xff\xff\xff\xff\xef\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:189");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 -1 2_146_435_071")]), "simd_lane.wast:189", 1.79769313486e+308)

// simd_lane.wast:190
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x10\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:190");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 0 1_048_576")]), "simd_lane.wast:190", 2.22507385851e-308)

// simd_lane.wast:191
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\x0f\x00\x10\x00\xbd\x44\xff\xff\xff\xff\xff\xff\x0f\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:191");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 -1 1_048_575")]), "simd_lane.wast:191", 2.22507385851e-308)

// simd_lane.wast:192
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7c\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb0\x80\x80\x80\x00\x01\xaa\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\xbd\x44\x01\x00\x00\x00\x00\x00\x00\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:192");  // assert_return(() => call($1, "f64x2_extract_lane-last", [v128("0 0 1 0")]), "simd_lane.wast:192", 4.94065645841e-324)

// simd_lane.wast:194
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x38\x78\x31\x36\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd1\x80\x80\x80\x00\x01\xcb\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xff\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:194");  // assert_return(() => call($1, "i8x16_replace_lane-first", [v128("0 0 0 0"), 127]), "simd_lane.wast:194", v128("127 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"))

// simd_lane.wast:195
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x38\x78\x31\x36\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd1\x80\x80\x80\x00\x01\xcb\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x80\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:195");  // assert_return(() => call($1, "i8x16_replace_lane-first", [v128("0 0 0 0"), 128]), "simd_lane.wast:195", v128("-128 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"))

// simd_lane.wast:196
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x38\x78\x31\x36\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd1\x80\x80\x80\x00\x01\xcb\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xff\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:196");  // assert_return(() => call($1, "i8x16_replace_lane-first", [v128("0 0 0 0"), 255]), "simd_lane.wast:196", v128("-1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"))

// simd_lane.wast:197
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x38\x78\x31\x36\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd1\x80\x80\x80\x00\x01\xcb\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x80\x02\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:197");  // assert_return(() => call($1, "i8x16_replace_lane-first", [v128("0 0 0 0"), 256]), "simd_lane.wast:197", v128("0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"))

// simd_lane.wast:198
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x38\x78\x31\x36\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd1\x80\x80\x80\x00\x01\xcb\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x80\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:198");  // assert_return(() => call($1, "i8x16_replace_lane-last", [v128("0 0 0 0"), -128]), "simd_lane.wast:198", v128("0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 -128"))

// simd_lane.wast:199
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x38\x78\x31\x36\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd1\x80\x80\x80\x00\x01\xcb\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xff\x7e\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:199");  // assert_return(() => call($1, "i8x16_replace_lane-last", [v128("0 0 0 0"), -129]), "simd_lane.wast:199", v128("0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127"))

// simd_lane.wast:200
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x38\x78\x31\x36\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd2\x80\x80\x80\x00\x01\xcc\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xff\xff\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:200");  // assert_return(() => call($1, "i8x16_replace_lane-last", [v128("0 0 0 0"), 32_767]), "simd_lane.wast:200", v128("0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 -1"))

// simd_lane.wast:201
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x38\x78\x31\x36\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd2\x80\x80\x80\x00\x01\xcc\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x80\x80\x7e\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:201");  // assert_return(() => call($1, "i8x16_replace_lane-last", [v128("0 0 0 0"), -32_768]), "simd_lane.wast:201", v128("0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"))

// simd_lane.wast:203
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd2\x80\x80\x80\x00\x01\xcc\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xff\xff\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:203");  // assert_return(() => call($1, "i16x8_replace_lane-first", [v128("0 0 0 0"), 32_767]), "simd_lane.wast:203", v128("32_767 0 0 0 0 0 0 0"))

// simd_lane.wast:204
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd2\x80\x80\x80\x00\x01\xcc\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x80\x80\x02\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:204");  // assert_return(() => call($1, "i16x8_replace_lane-first", [v128("0 0 0 0"), 32_768]), "simd_lane.wast:204", v128("-32_768 0 0 0 0 0 0 0"))

// simd_lane.wast:205
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd2\x80\x80\x80\x00\x01\xcc\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xff\xff\x03\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:205");  // assert_return(() => call($1, "i16x8_replace_lane-first", [v128("0 0 0 0"), 65_535]), "simd_lane.wast:205", v128("-1 0 0 0 0 0 0 0"))

// simd_lane.wast:206
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd2\x80\x80\x80\x00\x01\xcc\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x80\x80\x04\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:206");  // assert_return(() => call($1, "i16x8_replace_lane-first", [v128("0 0 0 0"), 65_536]), "simd_lane.wast:206", v128("0 0 0 0 0 0 0 0"))

// simd_lane.wast:207
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd2\x80\x80\x80\x00\x01\xcc\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xb9\xe0\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x39\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:207");  // assert_return(() => call($1, "i16x8_replace_lane-first", [v128("0 0 0 0"), 12_345]), "simd_lane.wast:207", v128("12_345 0 0 0 0 0 0 0"))

// simd_lane.wast:208
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd1\x80\x80\x80\x00\x01\xcb\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xcc\x5b\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xcc\xed\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:208");  // assert_return(() => call($1, "i16x8_replace_lane-first", [v128("0 0 0 0"), -4_660]), "simd_lane.wast:208", v128("-4_660 0 0 0 0 0 0 0"))

// simd_lane.wast:209
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd2\x80\x80\x80\x00\x01\xcc\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x80\x80\x7e\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:209");  // assert_return(() => call($1, "i16x8_replace_lane-last", [v128("0 0 0 0"), -32_768]), "simd_lane.wast:209", v128("0 0 0 0 0 0 0 -32_768"))

// simd_lane.wast:210
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd2\x80\x80\x80\x00\x01\xcc\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xff\xff\x7d\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:210");  // assert_return(() => call($1, "i16x8_replace_lane-last", [v128("0 0 0 0"), -32_769]), "simd_lane.wast:210", v128("0 0 0 0 0 0 0 32_767"))

// simd_lane.wast:211
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd4\x80\x80\x80\x00\x01\xce\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xff\xff\xff\xff\x07\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:211");  // assert_return(() => call($1, "i16x8_replace_lane-last", [v128("0 0 0 0"), 2_147_483_647]), "simd_lane.wast:211", v128("0 0 0 0 0 0 0 -1"))

// simd_lane.wast:212
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd4\x80\x80\x80\x00\x01\xce\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x80\x80\x80\x80\x78\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:212");  // assert_return(() => call($1, "i16x8_replace_lane-last", [v128("0 0 0 0"), -2_147_483_648]), "simd_lane.wast:212", v128("0 0 0 0 0 0 0 0"))

// simd_lane.wast:213
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd2\x80\x80\x80\x00\x01\xcc\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xb1\xa8\x03\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x31\xd4\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:213");  // assert_return(() => call($1, "i16x8_replace_lane-last", [v128("0 0 0 0"), 54_321]), "simd_lane.wast:213", v128("0 0 0 0 0 0 0 -11_215"))

// simd_lane.wast:214
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd2\x80\x80\x80\x00\x01\xcc\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xdf\xf9\x7e\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xdf\xbc\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:214");  // assert_return(() => call($1, "i16x8_replace_lane-last", [v128("0 0 0 0"), -17_185]), "simd_lane.wast:214", v128("0 0 0 0 0 0 0 -17_185"))

// simd_lane.wast:216
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd4\x80\x80\x80\x00\x01\xce\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xff\xff\xff\xff\x07\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:216");  // assert_return(() => call($1, "i32x4_replace_lane-first", [v128("0 0 0 0"), 2_147_483_647]), "simd_lane.wast:216", v128("2_147_483_647 0 0 0"))

// simd_lane.wast:217
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd0\x80\x80\x80\x00\x01\xca\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:217");  // assert_return(() => call($1, "i32x4_replace_lane-first", [v128("0 0 0 0"), -1]), "simd_lane.wast:217", v128("-1 0 0 0"))

// simd_lane.wast:218
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd4\x80\x80\x80\x00\x01\xce\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xd2\x85\xd8\xcc\x04\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xd2\x02\x96\x49\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:218");  // assert_return(() => call($1, "i32x4_replace_lane-first", [v128("0 0 0 0"), 1_234_567_890]), "simd_lane.wast:218", v128("1_234_567_890 0 0 0"))

// simd_lane.wast:219
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd4\x80\x80\x80\x00\x01\xce\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x88\xd3\xae\xee\x7e\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x88\xa9\xcb\xed\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:219");  // assert_return(() => call($1, "i32x4_replace_lane-first", [v128("0 0 0 0"), -305_419_896]), "simd_lane.wast:219", v128("-305_419_896 0 0 0"))

// simd_lane.wast:220
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd4\x80\x80\x80\x00\x01\xce\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x80\x80\x80\x80\x78\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:220");  // assert_return(() => call($1, "i32x4_replace_lane-last", [v128("0 0 0 0"), -2_147_483_648]), "simd_lane.wast:220", v128("0 0 0 -2_147_483_648"))

// simd_lane.wast:221
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd4\x80\x80\x80\x00\x01\xce\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x80\x80\x80\x80\x78\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:221");  // assert_return(() => call($1, "i32x4_replace_lane-last", [v128("0 0 0 0"), -2_147_483_648]), "simd_lane.wast:221", v128("0 0 0 -2_147_483_648"))

// simd_lane.wast:222
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd4\x80\x80\x80\x00\x01\xce\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xd2\x85\xd8\xcc\x04\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd2\x02\x96\x49\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:222");  // assert_return(() => call($1, "i32x4_replace_lane-last", [v128("0 0 0 0"), 1_234_567_890]), "simd_lane.wast:222", v128("0 0 0 1_234_567_890"))

// simd_lane.wast:223
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd4\x80\x80\x80\x00\x01\xce\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x88\xd3\xae\xee\x7e\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x88\xa9\xcb\xed\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:223");  // assert_return(() => call($1, "i32x4_replace_lane-last", [v128("0 0 0 0"), -305_419_896]), "simd_lane.wast:223", v128("0 0 0 -305_419_896"))

// simd_lane.wast:225
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x00\x00\x54\x42\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x54\x42\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:225");  // assert_return(() => call($1, "f32x4_replace_lane-first", [v128("0 0 0 0"), 53.]), "simd_lane.wast:225", v128("53. 0. 0. 0."))

// simd_lane.wast:226
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x00\x00\x54\x42\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x54\x42\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:226");  // assert_return(() => call($1, "f32x4_replace_lane-first", [v128("0 0 0 0"), 53.]), "simd_lane.wast:226", v128("53. 0. 0. 0."))

// simd_lane.wast:227
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x00\x00\xc0\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\xc0\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:227");  // assert_return(() => call($1, "f32x4_replace_lane-first", [v128("0 0 0 0"), NaN]), "simd_lane.wast:227", v128("NaN 0. 0. 0."))

// simd_lane.wast:228
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x00\x00\x80\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x80\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:228");  // assert_return(() => call($1, "f32x4_replace_lane-first", [v128("0 0 0 0"), Infinity]), "simd_lane.wast:228", v128("Infinity 0. 0. 0."))

// simd_lane.wast:229
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\xc0\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\xc3\xf5\x48\x40\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xc3\xf5\x48\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:229");  // assert_return(() => call($1, "f32x4_replace_lane-first", [v128("2_143_289_344 0 0 0"), 3.1400001049]), "simd_lane.wast:229", v128("3.1400001049 0. 0. 0."))

// simd_lane.wast:230
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x80\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x99\x76\x96\x7e\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x99\x76\x96\x7e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:230");  // assert_return(() => call($1, "f32x4_replace_lane-first", [v128("2_139_095_040 0 0 0"), 9.99999968029e+37]), "simd_lane.wast:230", v128("9.99999968029e+37 0. 0. 0."))

// simd_lane.wast:231
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x80\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\xff\xff\x7f\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\x7f\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:231");  // assert_return(() => call($1, "f32x4_replace_lane-first", [v128("2_139_095_040 0 0 0"), 3.40282346639e+38]), "simd_lane.wast:231", v128("3.40282346639e+38 0. 0. 0."))

// simd_lane.wast:232
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x80\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x00\x00\x00\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:232");  // assert_return(() => call($1, "f32x4_replace_lane-first", [v128("2_139_095_040 0 0 0"), 1.7014118346e+38]), "simd_lane.wast:232", v128("1.7014118346e+38 0. 0. 0."))

// simd_lane.wast:233
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\xa3\x79\xeb\x4c\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xa3\x79\xeb\x4c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:233");  // assert_return(() => call($1, "f32x4_replace_lane-first", [v128("0 0 0 0"), 123456792.]), "simd_lane.wast:233", v128("123456792. 0. 0. 0."))

// simd_lane.wast:234
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\xa3\x79\xeb\x4c\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xa3\x79\xeb\x4c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:234");  // assert_return(() => call($1, "f32x4_replace_lane-first", [v128("0 0 0 0"), 123456792.]), "simd_lane.wast:234", v128("123456792. 0. 0. 0."))

// simd_lane.wast:235
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\xb4\xa2\x91\x5b\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xb4\xa2\x91\x5b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:235");  // assert_return(() => call($1, "f32x4_replace_lane-first", [v128("0 0 0 0"), 8.19855312017e+16]), "simd_lane.wast:235", v128("8.19855312017e+16 0. 0. 0."))

// simd_lane.wast:236
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\xb4\xa2\x91\x5b\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xb4\xa2\x91\x5b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:236");  // assert_return(() => call($1, "f32x4_replace_lane-first", [v128("0 0 0 0"), 8.19855312017e+16]), "simd_lane.wast:236", v128("8.19855312017e+16 0. 0. 0."))

// simd_lane.wast:237
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x00\x00\x54\xc2\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x54\xc2\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:237");  // assert_return(() => call($1, "f32x4_replace_lane-last", [v128("0 0 0 0"), -53.]), "simd_lane.wast:237", v128("0. 0. 0. -53."))

// simd_lane.wast:238
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x00\x00\x54\xc2\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x54\xc2\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:238");  // assert_return(() => call($1, "f32x4_replace_lane-last", [v128("0 0 0 0"), -53.]), "simd_lane.wast:238", v128("0. 0. 0. -53."))

// simd_lane.wast:239
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x00\x00\xc0\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:239");  // assert_return(() => call($1, "f32x4_replace_lane-last", [v128("0 0 0 0"), NaN]), "simd_lane.wast:239", v128("0. 0. 0. NaN"))

// simd_lane.wast:240
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x00\x00\x80\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:240");  // assert_return(() => call($1, "f32x4_replace_lane-last", [v128("0 0 0 0"), -Infinity]), "simd_lane.wast:240", v128("0. 0. 0. -Infinity"))

// simd_lane.wast:241
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x7f\x43\xc3\xf5\x48\x40\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc3\xf5\x48\x40\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:241");  // assert_return(() => call($1, "f32x4_replace_lane-last", [v128("0 0 0 2_143_289_344"), 3.1400001049]), "simd_lane.wast:241", v128("0. 0. 0. 3.1400001049"))

// simd_lane.wast:242
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xff\x43\x99\x76\x96\xfe\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x99\x76\x96\xfe\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:242");  // assert_return(() => call($1, "f32x4_replace_lane-last", [v128("0 0 0 -8_388_608"), -9.99999968029e+37]), "simd_lane.wast:242", v128("0. 0. 0. -9.99999968029e+37"))

// simd_lane.wast:243
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xff\x43\xff\xff\x7f\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x7f\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:243");  // assert_return(() => call($1, "f32x4_replace_lane-last", [v128("0 0 0 -8_388_608"), -3.40282346639e+38]), "simd_lane.wast:243", v128("0. 0. 0. -3.40282346639e+38"))

// simd_lane.wast:244
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xff\x43\x00\x00\x00\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:244");  // assert_return(() => call($1, "f32x4_replace_lane-last", [v128("0 0 0 -8_388_608"), -1.7014118346e+38]), "simd_lane.wast:244", v128("0. 0. 0. -1.7014118346e+38"))

// simd_lane.wast:245
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x7b\x4d\x7f\x6c\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7b\x4d\x7f\x6c\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:245");  // assert_return(() => call($1, "f32x4_replace_lane-last", [v128("0 0 0 0"), 1.23456790068e+27]), "simd_lane.wast:245", v128("0. 0. 0. 1.23456790068e+27"))

// simd_lane.wast:246
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x7b\x4d\x7f\x6c\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7b\x4d\x7f\x6c\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:246");  // assert_return(() => call($1, "f32x4_replace_lane-last", [v128("0 0 0 0"), 1.23456790068e+27]), "simd_lane.wast:246", v128("0. 0. 0. 1.23456790068e+27"))

// simd_lane.wast:247
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\xb4\xa2\x11\x65\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb4\xa2\x11\x65\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:247");  // assert_return(() => call($1, "f32x4_replace_lane-last", [v128("0 0 0 0"), 4.29840301827e+22]), "simd_lane.wast:247", v128("0. 0. 0. 4.29840301827e+22"))

// simd_lane.wast:248
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\xb4\xa2\x11\x52\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb4\xa2\x11\x52\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:248");  // assert_return(() => call($1, "f32x4_replace_lane-last", [v128("0 0 0 0"), 156374990848.]), "simd_lane.wast:248", v128("0. 0. 0. 156374990848."))

// simd_lane.wast:250
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7e\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd9\x80\x80\x80\x00\x01\xd3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\x7f\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:250");  // assert_return(() => call($1, "i64x2_replace_lane-first", [v128("0 0 0 0"), 9_223_372_036_854_775_807n]), "simd_lane.wast:250", v128("9_223_372_036_854_775_807n 0n"))

// simd_lane.wast:251
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7e\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd0\x80\x80\x80\x00\x01\xca\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:251");  // assert_return(() => call($1, "i64x2_replace_lane-first", [v128("0 0 0 0"), -1n]), "simd_lane.wast:251", v128("-1n 0n"))

// simd_lane.wast:252
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7e\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd8\x80\x80\x80\x00\x01\xd2\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\x95\x82\xa6\xef\xc7\x9e\x84\x91\x11\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x15\x81\xe9\x7d\xf4\x10\x22\x11\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:252");  // assert_return(() => call($1, "i64x2_replace_lane-first", [v128("0 0 0 0"), 1_234_567_890_123_456_789n]), "simd_lane.wast:252", v128("1_234_567_890_123_456_789n 0n"))

// simd_lane.wast:253
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7e\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x69\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd8\x80\x80\x80\x00\x01\xd2\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\xef\x9b\xaf\x85\x89\xcf\x95\x9a\x12\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xef\xcd\xab\x90\x78\x56\x34\x12\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:253");  // assert_return(() => call($1, "i64x2_replace_lane-first", [v128("0 0 0 0"), 1_311_768_467_294_899_695n]), "simd_lane.wast:253", v128("1_311_768_467_294_899_695n 0n"))

// simd_lane.wast:254
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7e\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd9\x80\x80\x80\x00\x01\xd3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\x80\x80\x80\x80\x80\x80\x80\x80\x80\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:254");  // assert_return(() => call($1, "i64x2_replace_lane-last", [v128("0 0 0 0"), -9_223_372_036_854_775_808n]), "simd_lane.wast:254", v128("0n -9_223_372_036_854_775_808n"))

// simd_lane.wast:255
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7e\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd9\x80\x80\x80\x00\x01\xd3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\x80\x80\x80\x80\x80\x80\x80\x80\x80\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:255");  // assert_return(() => call($1, "i64x2_replace_lane-last", [v128("0 0 0 0"), -9_223_372_036_854_775_808n]), "simd_lane.wast:255", v128("0n -9_223_372_036_854_775_808n"))

// simd_lane.wast:256
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7e\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd8\x80\x80\x80\x00\x01\xd2\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\x95\x82\xa6\xef\xc7\x9e\x84\x91\x11\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x15\x81\xe9\x7d\xf4\x10\x22\x11\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:256");  // assert_return(() => call($1, "i64x2_replace_lane-last", [v128("0 0 0 0"), 1_234_567_890_123_456_789n]), "simd_lane.wast:256", v128("0n 1_234_567_890_123_456_789n"))

// simd_lane.wast:257
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7e\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x69\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd8\x80\x80\x80\x00\x01\xd2\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\xef\x9b\xaf\x85\x89\xcf\x95\x9a\x12\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xef\xcd\xab\x90\x78\x56\x34\x12\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:257");  // assert_return(() => call($1, "i64x2_replace_lane-last", [v128("0 0 0 0"), 1_311_768_467_294_899_695n]), "simd_lane.wast:257", v128("0n 1_311_768_467_294_899_695n"))

// simd_lane.wast:259
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf0\x3f\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0\x3f\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:259");  // assert_return(() => call($1, "f64x2_replace_lane-first", [v128("0 1_072_693_248 0 1_072_693_248"), 0.]), "simd_lane.wast:259", v128("0. 1."))

// simd_lane.wast:260
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf0\xbf\x00\x00\x00\x00\x00\x00\xf0\xbf\x44\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\xf0\xbf\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:260");  // assert_return(() => call($1, "f64x2_replace_lane-first", [v128("0 -1_074_790_400 0 -1_074_790_400"), -0.]), "simd_lane.wast:260", v128("-0. -1."))

// simd_lane.wast:261
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf4\x3f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\xf4\x3f\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:261");  // assert_return(() => call($1, "f64x2_replace_lane-first", [v128("0 0 0 0"), 1.25]), "simd_lane.wast:261", v128("1.25 0."))

// simd_lane.wast:262
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf4\xbf\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\xf4\xbf\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:262");  // assert_return(() => call($1, "f64x2_replace_lane-first", [v128("0 0 0 0"), -1.25]), "simd_lane.wast:262", v128("-1.25 0."))

// simd_lane.wast:263
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\x00\x00\x44\xff\xff\xff\xff\xff\xff\xef\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xef\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:263");  // assert_return(() => call($1, "f64x2_replace_lane-first", [v128("0 -524_288 0 0"), -1.79769313486e+308]), "simd_lane.wast:263", v128("-1.79769313486e+308 0."))

// simd_lane.wast:264
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x44\xff\xff\xff\xff\xff\xff\xef\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xef\x7f\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:264");  // assert_return(() => call($1, "f64x2_replace_lane-first", [v128("0 2_146_959_360 0 0"), 1.79769313486e+308]), "simd_lane.wast:264", v128("1.79769313486e+308 0."))

// simd_lane.wast:265
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf0\xff\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\x10\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x10\x80\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:265");  // assert_return(() => call($1, "f64x2_replace_lane-first", [v128("0 -1_048_576 0 0"), -2.22507385851e-308]), "simd_lane.wast:265", v128("-2.22507385851e-308 0."))

// simd_lane.wast:266
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf0\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\x10\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:266");  // assert_return(() => call($1, "f64x2_replace_lane-first", [v128("0 2_146_435_072 0 0"), 2.22507385851e-308]), "simd_lane.wast:266", v128("2.22507385851e-308 0."))

// simd_lane.wast:267
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf8\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:267");  // assert_return(() => call($1, "f64x2_replace_lane-first", [v128("0 0 0 0"), -NaN]), "simd_lane.wast:267", v128("-NaN 0."))

// simd_lane.wast:268
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\xf8\x7f\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:268");  // assert_return(() => call($1, "f64x2_replace_lane-first", [v128("0 0 0 0"), NaN]), "simd_lane.wast:268", v128("NaN 0."))

// simd_lane.wast:269
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\xf0\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:269");  // assert_return(() => call($1, "f64x2_replace_lane-first", [v128("0 0 0 0"), -Infinity]), "simd_lane.wast:269", v128("-Infinity 0."))

// simd_lane.wast:270
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\xf0\x7f\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:270");  // assert_return(() => call($1, "f64x2_replace_lane-first", [v128("0 0 0 0"), Infinity]), "simd_lane.wast:270", v128("Infinity 0."))

// simd_lane.wast:271
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x54\x34\x6f\x9d\x41\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x54\x34\x6f\x9d\x41\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:271");  // assert_return(() => call($1, "f64x2_replace_lane-first", [v128("0 0 0 0"), 123456789.]), "simd_lane.wast:271", v128("123456789. 0."))

// simd_lane.wast:272
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x54\x34\x6f\x9d\x41\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x54\x34\x6f\x9d\x41\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:272");  // assert_return(() => call($1, "f64x2_replace_lane-first", [v128("0 0 0 0"), 123456789.]), "simd_lane.wast:272", v128("123456789. 0."))

// simd_lane.wast:273
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\xdf\xbc\x9a\x78\x56\x34\xf2\x44\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xdf\xbc\x9a\x78\x56\x34\xf2\x44\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:273");  // assert_return(() => call($1, "f64x2_replace_lane-first", [v128("0 0 0 0"), 1.37548893254e+24]), "simd_lane.wast:273", v128("1.37548893254e+24 0."))

// simd_lane.wast:274
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x66\x69\x72\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\xdf\xbc\x9a\x78\x56\x34\xf2\x44\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xdf\xbc\x9a\x78\x56\x34\xf2\x44\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:274");  // assert_return(() => call($1, "f64x2_replace_lane-first", [v128("0 0 0 0"), 1.37548893254e+24]), "simd_lane.wast:274", v128("1.37548893254e+24 0."))

// simd_lane.wast:275
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x40\x00\x00\x00\x00\x00\x00\x00\x40\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x40\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:275");  // assert_return(() => call($1, "f64x2_replace_lane-last", [v128("0 1_073_741_824 0 1_073_741_824"), 0.]), "simd_lane.wast:275", v128("2. 0."))

// simd_lane.wast:276
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\xc0\x44\x00\x00\x00\x00\x00\x00\x00\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:276");  // assert_return(() => call($1, "f64x2_replace_lane-last", [v128("0 -1_073_741_824 0 -1_073_741_824"), -0.]), "simd_lane.wast:276", v128("-2. -0."))

// simd_lane.wast:277
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\x02\x40\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x40\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:277");  // assert_return(() => call($1, "f64x2_replace_lane-last", [v128("0 0 0 0"), 2.25]), "simd_lane.wast:277", v128("0. 2.25"))

// simd_lane.wast:278
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\x02\xc0\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\xc0\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:278");  // assert_return(() => call($1, "f64x2_replace_lane-last", [v128("0 0 0 0"), -2.25]), "simd_lane.wast:278", v128("0. -2.25"))

// simd_lane.wast:279
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf8\xff\x44\xff\xff\xff\xff\xff\xff\xef\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xef\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:279");  // assert_return(() => call($1, "f64x2_replace_lane-last", [v128("0 0 0 -524_288"), -1.79769313486e+308]), "simd_lane.wast:279", v128("0. -1.79769313486e+308"))

// simd_lane.wast:280
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf8\x7f\x44\xff\xff\xff\xff\xff\xff\xef\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xef\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:280");  // assert_return(() => call($1, "f64x2_replace_lane-last", [v128("0 0 0 2_146_959_360"), 1.79769313486e+308]), "simd_lane.wast:280", v128("0. 1.79769313486e+308"))

// simd_lane.wast:281
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0\xff\x44\x00\x00\x00\x00\x00\x00\x10\x80\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x80\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:281");  // assert_return(() => call($1, "f64x2_replace_lane-last", [v128("0 0 0 -1_048_576"), -2.22507385851e-308]), "simd_lane.wast:281", v128("0. -2.22507385851e-308"))

// simd_lane.wast:282
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0\x7f\x44\x00\x00\x00\x00\x00\x00\x10\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:282");  // assert_return(() => call($1, "f64x2_replace_lane-last", [v128("0 0 0 2_146_435_072"), 2.22507385851e-308]), "simd_lane.wast:282", v128("0. 2.22507385851e-308"))

// simd_lane.wast:283
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf8\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf8\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:283");  // assert_return(() => call($1, "f64x2_replace_lane-last", [v128("0 0 0 0"), -NaN]), "simd_lane.wast:283", v128("0. -NaN"))

// simd_lane.wast:284
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf8\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:284");  // assert_return(() => call($1, "f64x2_replace_lane-last", [v128("0 0 0 0"), NaN]), "simd_lane.wast:284", v128("0. NaN"))

// simd_lane.wast:285
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:285");  // assert_return(() => call($1, "f64x2_replace_lane-last", [v128("0 0 0 0"), -Infinity]), "simd_lane.wast:285", v128("0. -Infinity"))

// simd_lane.wast:286
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:286");  // assert_return(() => call($1, "f64x2_replace_lane-last", [v128("0 0 0 0"), Infinity]), "simd_lane.wast:286", v128("0. Infinity"))

// simd_lane.wast:287
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\xfa\x16\x5e\x5b\xaf\xe9\x8f\x45\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xfa\x16\x5e\x5b\xaf\xe9\x8f\x45\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:287");  // assert_return(() => call($1, "f64x2_replace_lane-last", [v128("0 0 0 0"), 1.23456789e+27]), "simd_lane.wast:287", v128("0. 1.23456789e+27"))

// simd_lane.wast:288
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\xfa\x16\x5e\x5b\xaf\xe9\x8f\x45\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xfa\x16\x5e\x5b\xaf\xe9\x8f\x45\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:288");  // assert_return(() => call($1, "f64x2_replace_lane-last", [v128("0 0 0 0"), 1.23456789e+27]), "simd_lane.wast:288", v128("0. 1.23456789e+27"))

// simd_lane.wast:289
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\xfa\x16\x5e\x5b\xaf\xe9\x8f\x45\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xfa\x16\x5e\x5b\xaf\xe9\x8f\x45\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:289");  // assert_return(() => call($1, "f64x2_replace_lane-last", [v128("0 0 0 0"), 1.23456789e+27]), "simd_lane.wast:289", v128("0. 1.23456789e+27"))

// simd_lane.wast:290
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x6c\x61\x73\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x11\x43\x2b\xd6\xff\x25\xab\x3d\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x11\x43\x2b\xd6\xff\x25\xab\x3d\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:290");  // assert_return(() => call($1, "f64x2_replace_lane-last", [v128("0 0 0 0"), 1.23456789e-11]), "simd_lane.wast:290", v128("0. 1.23456789e-11"))

// simd_lane.wast:292
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x76\x38\x78\x31\x36\x5f\x73\x77\x69\x7a\x7a\x6c\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:292");  // assert_return(() => call($1, "v8x16_swizzle", [v128("319_951_120 387_323_156 454_695_192 522_067_228"), v128("50_462_976 117_835_012 185_207_048 252_579_084")]), "simd_lane.wast:292", v128("16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31"))

// simd_lane.wast:296
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x76\x38\x78\x31\x36\x5f\x73\x77\x69\x7a\x7a\x6c\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\xfd\x0c\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x10\x11\x12\x13\x14\x15\x16\x17\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:296");  // assert_return(() => call($1, "v8x16_swizzle", [v128("-202_182_160 -134_810_124 -67_438_088 -66_052"), v128("-67_438_088 -66_052 319_951_120 387_323_156")]), "simd_lane.wast:296", v128("0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"))

// simd_lane.wast:300
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x76\x38\x78\x31\x36\x5f\x73\x77\x69\x7a\x7a\x6c\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\xfd\x0c\x0f\x0e\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\x04\x03\x02\x01\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x73\x72\x71\x70\x6f\x6e\x6d\x6c\x6b\x6a\x69\x68\x67\x66\x65\x64\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:300");  // assert_return(() => call($1, "v8x16_swizzle", [v128("1_734_763_876 1_802_135_912 1_869_507_948 1_936_879_984"), v128("202_182_159 134_810_123 67_438_087 66_051")]), "simd_lane.wast:300", v128("115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 100"))

// simd_lane.wast:304
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x76\x38\x78\x31\x36\x5f\x73\x77\x69\x7a\x7a\x6c\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\xfd\x0c\xff\x01\xfe\x02\xfd\x03\xfc\x04\xfb\x05\xfa\x06\xf9\x07\xf8\x08\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x65\x00\x66\x00\x67\x00\x68\x00\x69\x00\x6a\x00\x6b\x00\x6c\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:304");  // assert_return(() => call($1, "v8x16_swizzle", [v128("1_734_763_876 1_802_135_912 1_869_507_948 1_936_879_984"), v128("50_201_087 83_624_957 117_048_827 150_472_697")]), "simd_lane.wast:304", v128("0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108"))

// simd_lane.wast:308
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x76\x38\x78\x31\x36\x5f\x73\x77\x69\x7a\x7a\x6c\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\xfd\x0c\x09\x10\x0a\x11\x0b\x12\x0c\x13\x0d\x14\x0e\x15\x0f\x16\x10\x17\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x6d\x00\x6e\x00\x6f\x00\x70\x00\x71\x00\x72\x00\x73\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:308");  // assert_return(() => call($1, "v8x16_swizzle", [v128("1_734_763_876 1_802_135_912 1_869_507_948 1_936_879_984"), v128("285_872_137 319_558_155 353_244_173 386_930_191")]), "simd_lane.wast:308", v128("109 0 110 0 111 0 112 0 113 0 114 0 115 0 0 0"))

// simd_lane.wast:312
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x76\x38\x78\x31\x36\x5f\x73\x77\x69\x7a\x7a\x6c\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\xfd\x0c\x09\x10\x0a\x11\x0b\x12\x0c\x13\x0d\x14\x0e\x15\x0f\x16\x10\x17\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x6d\x00\x6e\x00\x6f\x00\x70\x00\x71\x00\x72\x00\x73\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:312");  // assert_return(() => call($1, "v8x16_swizzle", [v128("1_734_763_876 1_802_135_912 1_869_507_948 1_936_879_984"), v128("285_872_137 319_558_155 353_244_173 386_930_191")]), "simd_lane.wast:312", v128("109 0 110 0 111 0 112 0 113 0 114 0 115 0 0 0"))

// simd_lane.wast:316
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x76\x38\x78\x31\x36\x5f\x73\x77\x69\x7a\x7a\x6c\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x65\x64\x67\x66\x69\x68\x6b\x6a\x6d\x6c\x6f\x6e\x71\x70\x73\x72\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x65\x64\x67\x66\x69\x68\x6b\x6a\x6d\x6c\x6f\x6e\x71\x70\x73\x72\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:316");  // assert_return(() => call($1, "v8x16_swizzle", [v128("1_718_051_941 1_785_423_977 1_852_796_013 1_920_168_049"), v128("50_462_976 117_835_012 185_207_048 252_579_084")]), "simd_lane.wast:316", v128("25_701 26_215 26_729 27_243 27_757 28_271 28_785 29_299"))

// simd_lane.wast:320
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x76\x38\x78\x31\x36\x5f\x73\x77\x69\x7a\x7a\x6c\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x67\x66\x65\x64\x6b\x6a\x69\x68\x6f\x6e\x6d\x6c\x73\x72\x71\x70\xfd\x0c\x0f\x0e\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\x04\x03\x02\x01\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x70\x71\x72\x73\x6c\x6d\x6e\x6f\x68\x69\x6a\x6b\x64\x65\x66\x67\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:320");  // assert_return(() => call($1, "v8x16_swizzle", [v128("1_684_366_951 1_751_738_987 1_819_111_023 1_886_483_059"), v128("202_182_159 134_810_123 67_438_087 66_051")]), "simd_lane.wast:320", v128("1_936_879_984 1_869_507_948 1_802_135_912 1_734_763_876"))

// simd_lane.wast:324
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x76\x38\x78\x31\x36\x5f\x73\x77\x69\x7a\x7a\x6c\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\xc0\x7f\x00\x00\xc0\xff\x00\x00\x80\x7f\x00\x00\x80\xff\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\xc0\x7f\x00\x00\xc0\xff\x00\x00\x80\x7f\x00\x00\x80\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:324");  // assert_return(() => call($1, "v8x16_swizzle", [v128("2_143_289_344 -4_194_304 2_139_095_040 -8_388_608"), v128("50_462_976 117_835_012 185_207_048 252_579_084")]), "simd_lane.wast:324", v128("2_143_289_344 -4_194_304 2_139_095_040 -8_388_608"))

// simd_lane.wast:328
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x76\x38\x78\x31\x36\x5f\x73\x77\x69\x7a\x7a\x6c\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x64\x65\x66\x67\x68\x69\x6a\x6b\x5c\x6d\x6e\x6f\x70\x71\x72\x73\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x80\x7f\x00\x00\x80\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x64\x64\x64\x64\x64\x64\x64\x00\x64\x64\x00\x00\x64\x64\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:328");  // assert_return(() => call($1, "v8x16_swizzle", [v128("1_734_763_876 1_802_135_912 1_869_507_932 1_936_879_984"), v128("0 -2_147_483_648 2_139_095_040 -8_388_608")]), "simd_lane.wast:328", v128("1_684_300_900 6_579_300 25_700 25_700"))

// simd_lane.wast:333
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x31\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\xfd\x0c\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:333");  // assert_return(() => call($1, "v8x16_shuffle-1", [v128("50_462_976 117_835_012 185_207_048 252_579_084"), v128("319_951_120 387_323_156 454_695_192 522_067_228")]), "simd_lane.wast:333", v128("0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15"))

// simd_lane.wast:337
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:337");  // assert_return(() => call($1, "v8x16_shuffle-2", [v128("50_462_976 117_835_012 185_207_048 252_579_084"), v128("-202_182_160 -134_810_124 -67_438_088 -66_052")]), "simd_lane.wast:337", v128("-16 -15 -14 -13 -12 -11 -10 -9 -8 -7 -6 -5 -4 -3 -2 -1"))

// simd_lane.wast:341
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x33\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xfe\xfd\xfc\xfb\xfa\xf9\xf8\xf7\xf6\xf5\xf4\xf3\xf2\xf1\xf0\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:341");  // assert_return(() => call($1, "v8x16_shuffle-3", [v128("50_462_976 117_835_012 185_207_048 252_579_084"), v128("-202_182_160 -134_810_124 -67_438_088 -66_052")]), "simd_lane.wast:341", v128("-1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15 -16"))

// simd_lane.wast:345
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x0f\x0e\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\x04\x03\x02\x01\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:345");  // assert_return(() => call($1, "v8x16_shuffle-4", [v128("50_462_976 117_835_012 185_207_048 252_579_084"), v128("-202_182_160 -134_810_124 -67_438_088 -66_052")]), "simd_lane.wast:345", v128("15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0"))

// simd_lane.wast:349
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x35\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:349");  // assert_return(() => call($1, "v8x16_shuffle-5", [v128("50_462_976 117_835_012 185_207_048 252_579_084"), v128("-202_182_160 -134_810_124 -67_438_088 -66_052")]), "simd_lane.wast:349", v128("0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"))

// simd_lane.wast:353
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x36\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:353");  // assert_return(() => call($1, "v8x16_shuffle-6", [v128("50_462_976 117_835_012 185_207_048 252_579_084"), v128("-202_182_160 -134_810_124 -67_438_088 -66_052")]), "simd_lane.wast:353", v128("-16 -16 -16 -16 -16 -16 -16 -16 -16 -16 -16 -16 -16 -16 -16 -16"))

// simd_lane.wast:357
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x37\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xf0\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:357");  // assert_return(() => call($1, "v8x16_shuffle-7", [v128("50_462_976 117_835_012 185_207_048 252_579_084"), v128("-202_182_160 -134_810_124 -67_438_088 -66_052")]), "simd_lane.wast:357", v128("0 0 0 0 0 0 0 0 -16 -16 -16 -16 -16 -16 -16 -16"))

// simd_lane.wast:361
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x31\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:361");  // assert_return(() => call($1, "v8x16_shuffle-1", [v128("1_734_763_876 1_802_135_912 1_869_507_948 1_936_879_984"), v128("-202_182_160 -134_810_124 -67_438_088 -66_052")]), "simd_lane.wast:361", v128("100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115"))

// simd_lane.wast:365
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x31\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:365");  // assert_return(() => call($1, "v8x16_shuffle-1", [v128("50_462_976 117_835_012 185_207_048 252_579_084"), v128("-202_182_160 -134_810_124 -67_438_088 -66_052")]), "simd_lane.wast:365", v128("256 770 1_284 1_798 2_312 2_826 3_340 3_854"))

// simd_lane.wast:369
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:369");  // assert_return(() => call($1, "v8x16_shuffle-2", [v128("50_462_976 117_835_012 185_207_048 252_579_084"), v128("-202_182_160 -134_810_124 -67_438_088 -66_052")]), "simd_lane.wast:369", v128("-202_182_160 -134_810_124 -67_438_088 -66_052"))

// simd_lane.wast:373
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x31\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x03\x02\x01\x00\x07\x06\x05\x04\x0b\x0a\x09\x08\x0f\x0e\x0d\x0c\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x03\x02\x01\x00\x07\x06\x05\x04\x0b\x0a\x09\x08\x0f\x0e\x0d\x0c\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:373");  // assert_return(() => call($1, "v8x16_shuffle-1", [v128("66_051 67_438_087 134_810_123 202_182_159"), v128("50_462_976 117_835_012 185_207_048 252_579_084")]), "simd_lane.wast:373", v128("66_051 67_438_087 134_810_123 202_182_159"))

// simd_lane.wast:377
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x31\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x80\x3f\x00\x00\xc0\x7f\x00\x00\x80\x7f\x00\x00\x80\xff\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x80\x3f\x00\x00\xc0\x7f\x00\x00\x80\x7f\x00\x00\x80\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:377");  // assert_return(() => call($1, "v8x16_shuffle-1", [v128("1_065_353_216 2_143_289_344 2_139_095_040 -8_388_608"), v128("50_462_976 117_835_012 185_207_048 252_579_084")]), "simd_lane.wast:377", v128("1_065_353_216 2_143_289_344 2_139_095_040 -8_388_608"))

// simd_lane.wast:381
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x31\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x03\x02\x01\x00\x07\x06\x05\x04\x0b\x0a\x09\x08\x0f\x0e\x0d\x0c\xfd\x0c\x00\x00\x00\x80\x00\x00\xc0\x7f\x00\x00\x80\x7f\x00\x00\x80\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x03\x02\x01\x00\x07\x06\x05\x04\x0b\x0a\x09\x08\x0f\x0e\x0d\x0c\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:381");  // assert_return(() => call($1, "v8x16_shuffle-1", [v128("66_051 67_438_087 134_810_123 202_182_159"), v128("-2_147_483_648 2_143_289_344 2_139_095_040 -8_388_608")]), "simd_lane.wast:381", v128("66_051 67_438_087 134_810_123 202_182_159"))

// simd_lane.wast:387
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x76\x38\x78\x31\x36\x5f\x73\x77\x69\x7a\x7a\x6c\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xd2\x02\x96\x49\x78\x56\x34\x12\xd2\x02\x96\x49\x78\x56\x34\x12\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xd2\x02\x96\x49\x78\x56\x34\x12\xd2\x02\x96\x49\x78\x56\x34\x12\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:387");  // assert_return(() => call($1, "v8x16_swizzle", [v128("1_234_567_890 305_419_896 1_234_567_890 305_419_896"), v128("50_462_976 117_835_012 185_207_048 252_579_084")]), "simd_lane.wast:387", v128("1_234_567_890 305_419_896 1_234_567_890 305_419_896"))

// simd_lane.wast:391
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xbf\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0f\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x31\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xd2\x0a\x1f\xeb\x8c\xa9\x54\xab\xef\xcd\xab\x90\x78\x56\x34\x12\xfd\x0c\xd2\x0a\x1f\xeb\x8c\xa9\x54\xab\xef\xcd\xab\x90\x78\x56\x34\x12\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xd2\x0a\x1f\xeb\x8c\xa9\x54\xab\xef\xcd\xab\x90\x78\x56\x34\x12\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_lane.wast:391");  // assert_return(() => call($1, "v8x16_shuffle-1", [v128("-350_287_150 -1_420_514_932 -1_867_788_817 305_419_896"), v128("-350_287_150 -1_420_514_932 -1_867_788_817 305_419_896")]), "simd_lane.wast:391", v128("-350_287_150 -1_420_514_932 -1_867_788_817 305_419_896"))

// simd_lane.wast:398
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:398");

// simd_lane.wast:399
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:399");

// simd_lane.wast:400
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:400");

// simd_lane.wast:401
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:401");

// simd_lane.wast:402
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:402");

// simd_lane.wast:403
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:403");

// simd_lane.wast:404
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:404");

// simd_lane.wast:405
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:405");

// simd_lane.wast:406
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:406");

// simd_lane.wast:407
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:407");

// simd_lane.wast:408
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:408");

// simd_lane.wast:409
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:409");

// simd_lane.wast:410
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:410");

// simd_lane.wast:411
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:411");

// simd_lane.wast:415
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:415");

// simd_lane.wast:416
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:416");

// simd_lane.wast:417
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:417");

// simd_lane.wast:418
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:418");

// simd_lane.wast:419
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:419");

// simd_lane.wast:420
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:420");

// simd_lane.wast:421
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:421");

// simd_lane.wast:422
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:422");

// simd_lane.wast:423
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:423");

// simd_lane.wast:424
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:424");

// simd_lane.wast:425
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:425");

// simd_lane.wast:426
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:426");

// simd_lane.wast:427
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:427");

// simd_lane.wast:428
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:428");

// simd_lane.wast:432
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x15\x10\x0b", "simd_lane.wast:432");

// simd_lane.wast:433
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x15\xff\x01\x0b", "simd_lane.wast:433");

// simd_lane.wast:434
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x16\x10\x0b", "simd_lane.wast:434");

// simd_lane.wast:435
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x16\xff\x01\x0b", "simd_lane.wast:435");

// simd_lane.wast:436
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x18\x08\x0b", "simd_lane.wast:436");

// simd_lane.wast:437
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x18\xff\x01\x0b", "simd_lane.wast:437");

// simd_lane.wast:438
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x19\x08\x0b", "simd_lane.wast:438");

// simd_lane.wast:439
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x19\xff\x01\x0b", "simd_lane.wast:439");

// simd_lane.wast:440
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x1b\x04\x0b", "simd_lane.wast:440");

// simd_lane.wast:441
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x1b\xff\x01\x0b", "simd_lane.wast:441");

// simd_lane.wast:442
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7d\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x1f\x04\x0b", "simd_lane.wast:442");

// simd_lane.wast:443
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7d\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x1f\xff\x01\x0b", "simd_lane.wast:443");

// simd_lane.wast:444
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9f\x80\x80\x80\x00\x01\x99\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x01\xfd\x17\x10\x0b", "simd_lane.wast:444");

// simd_lane.wast:445
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xa0\x80\x80\x80\x00\x01\x9a\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x01\xfd\x17\xff\x01\x0b", "simd_lane.wast:445");

// simd_lane.wast:446
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9f\x80\x80\x80\x00\x01\x99\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x01\xfd\x1a\x10\x0b", "simd_lane.wast:446");

// simd_lane.wast:447
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xa0\x80\x80\x80\x00\x01\x9a\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x01\xfd\x1a\xff\x01\x0b", "simd_lane.wast:447");

// simd_lane.wast:448
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9f\x80\x80\x80\x00\x01\x99\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x01\xfd\x1c\x04\x0b", "simd_lane.wast:448");

// simd_lane.wast:449
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xa0\x80\x80\x80\x00\x01\x9a\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x01\xfd\x1c\xff\x01\x0b", "simd_lane.wast:449");

// simd_lane.wast:450
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x00\x00\x80\x3f\xfd\x20\x04\x0b", "simd_lane.wast:450");

// simd_lane.wast:451
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xa3\x80\x80\x80\x00\x01\x9d\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x00\x00\x80\x3f\xfd\x20\xff\x01\x0b", "simd_lane.wast:451");

// simd_lane.wast:452
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x1d\x02\x0b", "simd_lane.wast:452");

// simd_lane.wast:453
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x1d\xff\x01\x0b", "simd_lane.wast:453");

// simd_lane.wast:454
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7c\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x21\x02\x0b", "simd_lane.wast:454");

// simd_lane.wast:455
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7c\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x21\xff\x01\x0b", "simd_lane.wast:455");

// simd_lane.wast:456
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9f\x80\x80\x80\x00\x01\x99\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\x01\xfd\x1e\x02\x0b", "simd_lane.wast:456");

// simd_lane.wast:457
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xa0\x80\x80\x80\x00\x01\x9a\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\x01\xfd\x1e\xff\x01\x0b", "simd_lane.wast:457");

// simd_lane.wast:458
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xa6\x80\x80\x80\x00\x01\xa0\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfd\x22\x02\x0b", "simd_lane.wast:458");

// simd_lane.wast:459
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xa7\x80\x80\x80\x00\x01\xa1\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfd\x22\xff\x01\x0b", "simd_lane.wast:459");

// simd_lane.wast:463
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x18\x08\x0b", "simd_lane.wast:463");

// simd_lane.wast:464
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x19\x08\x0b", "simd_lane.wast:464");

// simd_lane.wast:465
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x1b\x04\x0b", "simd_lane.wast:465");

// simd_lane.wast:466
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x1f\x04\x0b", "simd_lane.wast:466");

// simd_lane.wast:467
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9f\x80\x80\x80\x00\x01\x99\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x01\xfd\x1a\x08\x0b", "simd_lane.wast:467");

// simd_lane.wast:468
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9f\x80\x80\x80\x00\x01\x99\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x01\xfd\x1c\x04\x0b", "simd_lane.wast:468");

// simd_lane.wast:469
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x00\x00\x80\x3f\xfd\x20\x04\x0b", "simd_lane.wast:469");

// simd_lane.wast:470
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x1d\x02\x0b", "simd_lane.wast:470");

// simd_lane.wast:471
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7c\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x21\x02\x0b", "simd_lane.wast:471");

// simd_lane.wast:472
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9f\x80\x80\x80\x00\x01\x99\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\x01\xfd\x1e\x02\x0b", "simd_lane.wast:472");

// simd_lane.wast:473
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xa6\x80\x80\x80\x00\x01\xa0\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfd\x22\x02\x0b", "simd_lane.wast:473");

// simd_lane.wast:477
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x00\xfd\x15\x00\x0b", "simd_lane.wast:477");

// simd_lane.wast:478
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x42\x00\xfd\x16\x00\x0b", "simd_lane.wast:478");

// simd_lane.wast:479
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x90\x80\x80\x80\x00\x01\x8a\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\xfd\x15\x00\x0b", "simd_lane.wast:479");

// simd_lane.wast:480
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x94\x80\x80\x80\x00\x01\x8e\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x16\x00\x0b", "simd_lane.wast:480");

// simd_lane.wast:481
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x00\xfd\x1b\x00\x0b", "simd_lane.wast:481");

// simd_lane.wast:482
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7d\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x90\x80\x80\x80\x00\x01\x8a\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\xfd\x1f\x00\x0b", "simd_lane.wast:482");

// simd_lane.wast:483
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x41\x00\x41\x01\xfd\x17\x00\x0b", "simd_lane.wast:483");

// simd_lane.wast:484
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x42\x00\x41\x01\xfd\x1a\x00\x0b", "simd_lane.wast:484");

// simd_lane.wast:485
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x41\x00\x41\x01\xfd\x1c\x00\x0b", "simd_lane.wast:485");

// simd_lane.wast:486
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x92\x80\x80\x80\x00\x01\x8c\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\x41\x01\xfd\x20\x00\x0b", "simd_lane.wast:486");

// simd_lane.wast:487
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x42\x00\xfd\x1d\x00\x0b", "simd_lane.wast:487");

// simd_lane.wast:488
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7c\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x94\x80\x80\x80\x00\x01\x8e\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x21\x00\x0b", "simd_lane.wast:488");

// simd_lane.wast:489
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x41\x00\x41\x01\xfd\x1c\x00\x0b", "simd_lane.wast:489");

// simd_lane.wast:490
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x92\x80\x80\x80\x00\x01\x8c\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\x41\x01\xfd\x20\x00\x0b", "simd_lane.wast:490");

// simd_lane.wast:494
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x00\x00\x80\x3f\xfd\x17\x00\x0b", "simd_lane.wast:494");

// simd_lane.wast:495
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xa6\x80\x80\x80\x00\x01\xa0\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfd\x1a\x00\x0b", "simd_lane.wast:495");

// simd_lane.wast:496
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x00\x00\x80\x3f\xfd\x1c\x00\x0b", "simd_lane.wast:496");

// simd_lane.wast:497
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9f\x80\x80\x80\x00\x01\x99\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x01\xfd\x20\x00\x0b", "simd_lane.wast:497");

// simd_lane.wast:499
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xa6\x80\x80\x80\x00\x01\xa0\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfd\x1e\x00\x0b", "simd_lane.wast:499");

// simd_lane.wast:500
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9f\x80\x80\x80\x00\x01\x99\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\x01\xfd\x22\x00\x0b", "simd_lane.wast:500");

// simd_lane.wast:503
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\x41\x01\xfd\x0c\x0f\x0e\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\x04\x03\x02\x01\x00\xfd\x0e\x0b", "simd_lane.wast:503");

// simd_lane.wast:505
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9e\x80\x80\x80\x00\x01\x98\x80\x80\x80\x00\x00\xfd\x0c\x0f\x0e\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\x04\x03\x02\x01\x00\x41\x02\xfd\x0e\x0b", "simd_lane.wast:505");

// simd_lane.wast:507
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xb1\x80\x80\x80\x00\x01\xab\x80\x80\x80\x00\x00\x43\x00\x00\x40\x40\xfd\x0c\x0f\x0e\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\x04\x03\x02\x01\x00\xfd\x0d\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x0b", "simd_lane.wast:507");

// simd_lane.wast:510
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xb1\x80\x80\x80\x00\x01\xab\x80\x80\x80\x00\x00\xfd\x0c\x0f\x0e\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\x04\x03\x02\x01\x00\x43\x00\x00\x80\x40\xfd\x0d\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x0b", "simd_lane.wast:510");

// simd_lane.wast:515
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:515");

// simd_lane.wast:518
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:518");

// simd_lane.wast:521
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:521");

// simd_lane.wast:525
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:525");

// simd_lane.wast:529
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xbf\x80\x80\x80\x00\x01\xb9\x80\x80\x80\x00\x00\xfd\x0c\x0f\x0e\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\x04\x03\x02\x01\x00\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\xfd\x0d\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\xff\x01\x0b", "simd_lane.wast:529");

// simd_lane.wast:536
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:536");

// simd_lane.wast:537
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:537");

// simd_lane.wast:538
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:538");

// simd_lane.wast:539
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:539");

// simd_lane.wast:540
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:540");

// simd_lane.wast:541
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:541");

// simd_lane.wast:545
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:545");

// simd_lane.wast:549
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:549");

// simd_lane.wast:555
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:555");

// simd_lane.wast:559
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:559");

// simd_lane.wast:570
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:570");

// simd_lane.wast:571
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:571");

// simd_lane.wast:572
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:572");

// simd_lane.wast:573
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:573");

// simd_lane.wast:574
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:574");

// simd_lane.wast:575
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:575");

// simd_lane.wast:576
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:576");

// simd_lane.wast:577
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:577");

// simd_lane.wast:578
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:578");

// simd_lane.wast:579
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:579");

// simd_lane.wast:581
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:581");

// simd_lane.wast:582
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:582");

// simd_lane.wast:583
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:583");

// simd_lane.wast:584
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:584");

// simd_lane.wast:588
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:588");

// simd_lane.wast:589
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:589");

// simd_lane.wast:590
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:590");

// simd_lane.wast:591
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:591");

// simd_lane.wast:592
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:592");

// simd_lane.wast:593
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:593");

// simd_lane.wast:594
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:594");

// simd_lane.wast:595
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:595");

// simd_lane.wast:596
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:596");

// simd_lane.wast:597
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:597");

// simd_lane.wast:600
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:600");

// simd_lane.wast:604
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:604");

// simd_lane.wast:608
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:608");

// simd_lane.wast:612
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:612");

// simd_lane.wast:616
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:616");

// simd_lane.wast:620
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:620");

// simd_lane.wast:628
let $$2 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xae\x80\x80\x80\x00\x07\x60\x02\x7b\x7b\x01\x7b\x60\x02\x7b\x7f\x01\x7f\x60\x02\x7b\x7d\x01\x7d\x60\x02\x7b\x7e\x01\x7e\x60\x02\x7b\x7c\x01\x7c\x60\x03\x7b\x7f\x7b\x01\x7b\x60\x04\x7b\x7f\x7b\x7f\x01\x7b\x03\x93\x80\x80\x80\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x01\x02\x03\x04\x05\x06\x07\x98\x83\x80\x80\x00\x12\x14\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x00\x00\x14\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x00\x01\x14\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x00\x02\x14\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x00\x03\x12\x69\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x00\x04\x12\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x00\x05\x12\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x00\x06\x12\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x00\x07\x14\x69\x38\x78\x31\x36\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x73\x00\x08\x14\x69\x38\x78\x31\x36\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x75\x00\x09\x14\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x73\x00\x0a\x14\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x75\x00\x0b\x12\x69\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x00\x0c\x12\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x00\x0d\x12\x69\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x00\x0e\x12\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x00\x0f\x18\x61\x73\x2d\x76\x38\x78\x31\x36\x5f\x73\x77\x69\x7a\x7a\x6c\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x10\x19\x61\x73\x2d\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x11\x0a\xca\x82\x80\x80\x00\x12\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x15\x00\xfd\x17\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x16\x00\xfd\x17\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x18\x00\xfd\x1a\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x19\x00\xfd\x1a\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1b\x00\xfd\x1c\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1b\x00\xfd\x1c\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1d\x00\xfd\x1e\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x21\x00\xfd\x22\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x17\x0f\xfd\x15\x0f\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x17\x0f\xfd\x16\x0f\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1a\x07\xfd\x18\x07\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1a\x07\xfd\x19\x07\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1c\x03\xfd\x1b\x03\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x20\x03\xfd\x1f\x03\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1e\x01\xfd\x1d\x01\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x22\x01\xfd\x21\x01\x0b\x8d\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x17\x00\x20\x02\xfd\x0e\x0b\xa2\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x17\x00\x20\x02\x20\x03\xfd\x17\x0f\xfd\x0d\x10\x01\x12\x03\x14\x05\x16\x07\x18\x09\x1a\x0b\x1c\x0d\x1e\x0f\x0b", "simd_lane.wast:628");

// simd_lane.wast:628
let $2 = instance($$2);

// simd_lane.wast:674
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc4\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x14\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:674");  // assert_return(() => call($2, "i8x16_extract_lane_s", [v128("0 0 0 0"), v128("-1 -1 -1 -1")]), "simd_lane.wast:674", v128("-1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"))

// simd_lane.wast:675
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc4\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x14\x69\x38\x78\x31\x36\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:675");  // assert_return(() => call($2, "i8x16_extract_lane_u", [v128("0 0 0 0"), v128("-1 -1 -1 -1")]), "simd_lane.wast:675", v128("-1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"))

// simd_lane.wast:676
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc4\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x14\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:676");  // assert_return(() => call($2, "i16x8_extract_lane_s", [v128("0 0 0 0"), v128("-1 -1 -1 -1")]), "simd_lane.wast:676", v128("-1 0 0 0 0 0 0 0"))

// simd_lane.wast:677
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc4\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x14\x69\x31\x36\x78\x38\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x5f\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:677");  // assert_return(() => call($2, "i16x8_extract_lane_u", [v128("0 0 0 0"), v128("-1 -1 -1 -1")]), "simd_lane.wast:677", v128("-1 0 0 0 0 0 0 0"))

// simd_lane.wast:678
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x12\x69\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x01\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:678");  // assert_return(() => call($2, "i32x4_extract_lane", [v128("0 0 0 0"), v128("65_536 -1 -1 -1")]), "simd_lane.wast:678", v128("65_536 0 0 0"))

// simd_lane.wast:679
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x12\x66\x33\x32\x78\x34\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x99\x76\x96\x7e\x00\x00\xc0\x7f\x00\x00\xc0\x7f\x00\x00\xc0\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x99\x76\x96\x7e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:679");  // assert_return(() => call($2, "f32x4_extract_lane", [v128("0 0 0 0"), v128("2_123_789_977 2_143_289_344 2_143_289_344 2_143_289_344")]), "simd_lane.wast:679", v128("9.99999968029e+37 0. 0. 0."))

// simd_lane.wast:680
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7f\x02\xc4\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x14\x69\x38\x78\x31\x36\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xac\x80\x80\x80\x00\x01\xa6\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xff\x01\x10\x00\x01\x41\x7f\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:680");  // assert_return(() => call($2, "i8x16_replace_lane-s", [v128("0 0 0 0"), 255]), "simd_lane.wast:680", -1)

// simd_lane.wast:681
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7f\x02\xc4\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x14\x69\x38\x78\x31\x36\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xad\x80\x80\x80\x00\x01\xa7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xff\x01\x10\x00\x01\x41\xff\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:681");  // assert_return(() => call($2, "i8x16_replace_lane-u", [v128("0 0 0 0"), 255]), "simd_lane.wast:681", 255)

// simd_lane.wast:682
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7f\x02\xc4\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x14\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xad\x80\x80\x80\x00\x01\xa7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xff\xff\x03\x10\x00\x01\x41\x7f\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:682");  // assert_return(() => call($2, "i16x8_replace_lane-s", [v128("0 0 0 0"), 65_535]), "simd_lane.wast:682", -1)

// simd_lane.wast:683
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7f\x02\xc4\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x14\x69\x31\x36\x78\x38\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x2d\x75\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xaf\x80\x80\x80\x00\x01\xa9\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xff\xff\x03\x10\x00\x01\x41\xff\xff\x03\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:683");  // assert_return(() => call($2, "i16x8_replace_lane-u", [v128("0 0 0 0"), 65_535]), "simd_lane.wast:683", 65_535)

// simd_lane.wast:684
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7f\x02\xc2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x12\x69\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x7f\x10\x00\x01\x41\x7f\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:684");  // assert_return(() => call($2, "i32x4_replace_lane", [v128("0 0 0 0"), -1]), "simd_lane.wast:684", -1)

// simd_lane.wast:685
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7d\x02\xc2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x12\x66\x33\x32\x78\x34\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb1\x80\x80\x80\x00\x01\xab\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x00\x00\xa0\x3f\x10\x00\xbc\x43\x00\x00\xa0\x3f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:685");  // assert_return(() => call($2, "f32x4_replace_lane", [v128("0 0 0 0"), 1.25]), "simd_lane.wast:685", 1.25)

// simd_lane.wast:687
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x12\x69\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:687");  // assert_return(() => call($2, "i64x2_extract_lane", [v128("0 0 0 0"), v128("-1 -1 -1 -1")]), "simd_lane.wast:687", v128("-1n 0n"))

// simd_lane.wast:688
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x12\x66\x36\x34\x78\x32\x5f\x65\x78\x74\x72\x61\x63\x74\x5f\x6c\x61\x6e\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\xa0\xc8\xeb\x85\xf3\xcc\xe1\x7f\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xa0\xc8\xeb\x85\xf3\xcc\xe1\x7f\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:688");  // assert_return(() => call($2, "f64x2_extract_lane", [v128("0 0 0 0"), v128("-2_048_145_248 2_145_504_499 0 2_146_959_360")]), "simd_lane.wast:688", v128("1e+308 0."))

// simd_lane.wast:689
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7e\x01\x7e\x02\xc2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x12\x69\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\x7f\x10\x00\x01\x42\x7f\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:689");  // assert_return(() => call($2, "i64x2_replace_lane", [v128("0 0 0 0"), -1n]), "simd_lane.wast:689", -1n)

// simd_lane.wast:690
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7c\x02\xc2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x12\x66\x36\x34\x78\x32\x5f\x72\x65\x70\x6c\x61\x63\x65\x5f\x6c\x61\x6e\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xb9\x80\x80\x80\x00\x01\xb3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\x04\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x04\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:690");  // assert_return(() => call($2, "f64x2_replace_lane", [v128("0 0 0 0"), 2.5]), "simd_lane.wast:690", 2.5)

// simd_lane.wast:692
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x96\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x03\x7b\x7f\x7b\x01\x7b\x02\xc8\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x18\x61\x73\x2d\x76\x38\x78\x31\x36\x5f\x73\x77\x69\x7a\x7a\x6c\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe3\x80\x80\x80\x00\x01\xdd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x41\xff\x01\xfd\x0c\xff\x0f\x0e\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\x04\x03\x02\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x0f\x0e\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\x04\x03\x02\x01\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:692");  // assert_return(() => call($2, "as-v8x16_swizzle-operand", [v128("50_462_976 117_835_012 185_207_048 252_579_084"), 255, v128("219_025_407 151_653_132 84_281_096 16_909_060")]), "simd_lane.wast:692", v128("0 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1"))

// simd_lane.wast:696
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x97\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x04\x7b\x7f\x7b\x7f\x01\x7b\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x61\x73\x2d\x76\x38\x78\x31\x36\x5f\x73\x68\x75\x66\x66\x6c\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe4\x80\x80\x80\x00\x01\xde\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\xff\x00\xff\x0f\xff\x00\xff\xff\xff\x00\xff\x7f\xff\x00\xff\x41\x01\xfd\x0c\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x01\x55\xff\x41\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x55\xff\x55\xff\x55\xff\x55\xff\x55\xff\x55\xff\x55\xff\x55\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_lane.wast:696");  // assert_return(() => call($2, "as-v8x16_shuffle-operands", [v128("-16_711_936 -16_711_921 -16_711_681 -16_711_809"), 1, v128("5_570_645 5_570_645 5_570_645 -11_206_315"), 0]), "simd_lane.wast:696", v128("85 -1 85 -1 85 -1 85 -1 85 -1 85 -1 85 -1 85 -1"))

// simd_lane.wast:703
let $$3 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xb0\x80\x80\x80\x00\x07\x60\x01\x7b\x01\x7b\x60\x04\x7b\x7f\x7b\x7f\x01\x7b\x60\x04\x7b\x7e\x7b\x7e\x01\x7b\x60\x04\x7b\x7b\x7b\x7b\x01\x7b\x60\x02\x7b\x7f\x01\x7f\x60\x02\x7b\x7e\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x03\x93\x80\x80\x80\x00\x12\x00\x00\x00\x00\x00\x00\x01\x01\x01\x02\x03\x03\x04\x04\x04\x05\x06\x06\x07\xf3\x83\x80\x80\x00\x12\x16\x61\x73\x2d\x69\x38\x78\x31\x36\x5f\x73\x70\x6c\x61\x74\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x00\x16\x61\x73\x2d\x69\x31\x36\x78\x38\x5f\x73\x70\x6c\x61\x74\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x01\x16\x61\x73\x2d\x69\x33\x32\x78\x34\x5f\x73\x70\x6c\x61\x74\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x02\x16\x61\x73\x2d\x66\x33\x32\x78\x34\x5f\x73\x70\x6c\x61\x74\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x16\x61\x73\x2d\x69\x36\x34\x78\x32\x5f\x73\x70\x6c\x61\x74\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x04\x16\x61\x73\x2d\x66\x36\x34\x78\x32\x5f\x73\x70\x6c\x61\x74\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x05\x15\x61\x73\x2d\x69\x38\x78\x31\x36\x5f\x61\x64\x64\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x06\x15\x61\x73\x2d\x69\x31\x36\x78\x38\x5f\x61\x64\x64\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x07\x15\x61\x73\x2d\x69\x33\x32\x78\x34\x5f\x61\x64\x64\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x08\x15\x61\x73\x2d\x69\x36\x34\x78\x32\x5f\x61\x64\x64\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x09\x1d\x73\x77\x69\x7a\x7a\x6c\x65\x2d\x61\x73\x2d\x69\x38\x78\x31\x36\x5f\x61\x64\x64\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x0a\x1d\x73\x68\x75\x66\x66\x6c\x65\x2d\x61\x73\x2d\x69\x38\x78\x31\x36\x5f\x73\x75\x62\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x0b\x19\x61\x73\x2d\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x0c\x19\x61\x73\x2d\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x0d\x1a\x61\x73\x2d\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x31\x00\x0e\x1a\x61\x73\x2d\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x32\x00\x0f\x22\x73\x77\x69\x7a\x7a\x6c\x65\x2d\x61\x73\x2d\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x10\x22\x73\x68\x75\x66\x66\x6c\x65\x2d\x61\x73\x2d\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x11\x0a\xec\x82\x80\x80\x00\x12\x89\x80\x80\x80\x00\x00\x20\x00\xfd\x15\x00\xfd\x0f\x0b\x89\x80\x80\x80\x00\x00\x20\x00\xfd\x19\x00\xfd\x10\x0b\x89\x80\x80\x80\x00\x00\x20\x00\xfd\x1b\x00\xfd\x11\x0b\x89\x80\x80\x80\x00\x00\x20\x00\xfd\x1f\x00\xfd\x13\x0b\x89\x80\x80\x80\x00\x00\x20\x00\xfd\x1d\x00\xfd\x12\x0b\x89\x80\x80\x80\x00\x00\x20\x00\xfd\x21\x00\xfd\x14\x0b\x92\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x17\x00\x20\x02\x20\x03\xfd\x17\x0f\xfd\x6e\x0b\x93\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1a\x00\x20\x02\x20\x03\xfd\x1a\x07\xfd\x8e\x01\x0b\x93\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1c\x00\x20\x02\x20\x03\xfd\x1c\x03\xfd\xae\x01\x0b\x93\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1e\x00\x20\x02\x20\x03\xfd\x1e\x01\xfd\xce\x01\x0b\x90\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x0e\x20\x02\x20\x03\xfd\x0e\xfd\x6e\x0b\xb0\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x0d\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x20\x02\x20\x03\xfd\x0d\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\xfd\x71\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x17\x00\xfd\x53\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1a\x00\xfd\x53\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1c\x00\xfd\x53\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1e\x00\xfd\x53\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x0e\xfd\x63\x0b\x9a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x0d\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\xfd\x53\x0b", "simd_lane.wast:703");

// simd_lane.wast:703
let $3 = instance($$3);

// simd_lane.wast:750
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc6\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x16\x61\x73\x2d\x69\x38\x78\x31\x36\x5f\x73\x70\x6c\x61\x74\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:750");  // assert_return(() => call($3, "as-i8x16_splat-operand", [v128("255 0 0 0")]), "simd_lane.wast:750", v128("-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1"))

// simd_lane.wast:751
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc6\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x16\x61\x73\x2d\x69\x31\x36\x78\x38\x5f\x73\x70\x6c\x61\x74\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:751");  // assert_return(() => call($3, "as-i16x8_splat-operand", [v128("-1 -1 0 0")]), "simd_lane.wast:751", v128("-1 -1 -1 -1 -1 -1 -1 -1"))

// simd_lane.wast:752
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc6\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x16\x61\x73\x2d\x69\x33\x32\x78\x34\x5f\x73\x70\x6c\x61\x74\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:752");  // assert_return(() => call($3, "as-i32x4_splat-operand", [v128("65_536 0 0 0")]), "simd_lane.wast:752", v128("65_536 65_536 65_536 65_536"))

// simd_lane.wast:753
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc6\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x16\x61\x73\x2d\x66\x33\x32\x78\x34\x5f\x73\x70\x6c\x61\x74\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xc3\xf5\x48\x40\x00\x00\xc0\x7f\x00\x00\xc0\x7f\x00\x00\xc0\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xc3\xf5\x48\x40\xc3\xf5\x48\x40\xc3\xf5\x48\x40\xc3\xf5\x48\x40\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:753");  // assert_return(() => call($3, "as-f32x4_splat-operand", [v128("1_078_523_331 2_143_289_344 2_143_289_344 2_143_289_344")]), "simd_lane.wast:753", v128("3.1400001049 3.1400001049 3.1400001049 3.1400001049"))

// simd_lane.wast:754
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc6\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x16\x61\x73\x2d\x69\x36\x34\x78\x32\x5f\x73\x70\x6c\x61\x74\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:754");  // assert_return(() => call($3, "as-i64x2_splat-operand", [v128("-1 -1 0 0")]), "simd_lane.wast:754", v128("-1n -1n"))

// simd_lane.wast:755
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7b\x02\xc6\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x16\x61\x73\x2d\x66\x36\x34\x78\x32\x5f\x73\x70\x6c\x61\x74\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xce\x80\x80\x80\x00\x01\xc8\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\xf0\x7f\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x00\x00\x00\x00\x00\xf0\x7f\x00\x00\x00\x00\x00\x00\xf0\x7f\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:755");  // assert_return(() => call($3, "as-f64x2_splat-operand", [v128("0 2_146_435_072 0 2_146_959_360")]), "simd_lane.wast:755", v128("Infinity Infinity"))

// simd_lane.wast:756
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x97\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x04\x7b\x7f\x7b\x7f\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x61\x73\x2d\x69\x38\x78\x31\x36\x5f\x61\x64\x64\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe4\x80\x80\x80\x00\x01\xde\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x41\x01\xfd\x0c\x10\x0f\x0e\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\x04\x03\x02\xff\x41\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:756");  // assert_return(() => call($3, "as-i8x16_add-operands", [v128("67_306_239 134_678_021 202_050_057 269_422_093"), 1, v128("219_025_168 151_653_132 84_281_096 -16_645_372"), 1]), "simd_lane.wast:756", v128("17 17 17 17 17 17 17 17 17 17 17 17 17 17 17 17"))

// simd_lane.wast:760
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x97\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x04\x7b\x7f\x7b\x7f\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x61\x73\x2d\x69\x31\x36\x78\x38\x5f\x61\x64\x64\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe4\x80\x80\x80\x00\x01\xde\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\x04\x00\x09\x00\x10\x00\x19\x00\x24\x00\x31\x00\x40\x00\x41\x01\xfd\x0c\x40\x00\x31\x00\x24\x00\x19\x00\x10\x00\x09\x00\x04\x00\xff\xff\x41\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x41\x00\x35\x00\x2d\x00\x29\x00\x29\x00\x2d\x00\x35\x00\x41\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:760");  // assert_return(() => call($3, "as-i16x8_add-operands", [v128("327_679 1_048_585 2_359_321 4_194_353"), 1, v128("3_211_328 1_638_436 589_840 -65_532"), 1]), "simd_lane.wast:760", v128("65 53 45 41 41 45 53 65"))

// simd_lane.wast:764
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x97\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x04\x7b\x7f\x7b\x7f\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x61\x73\x2d\x69\x33\x32\x78\x34\x5f\x61\x64\x64\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe4\x80\x80\x80\x00\x01\xde\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\x08\x00\x00\x00\x1b\x00\x00\x00\x40\x00\x00\x00\x41\x01\xfd\x0c\x40\x00\x00\x00\x1b\x00\x00\x00\x08\x00\x00\x00\xff\xff\xff\xff\x41\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x41\x00\x00\x00\x23\x00\x00\x00\x23\x00\x00\x00\x41\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:764");  // assert_return(() => call($3, "as-i32x4_add-operands", [v128("-1 8 27 64"), 1, v128("64 27 8 -1"), 1]), "simd_lane.wast:764", v128("65 35 35 65"))

// simd_lane.wast:766
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x97\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x04\x7b\x7e\x7b\x7e\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x61\x73\x2d\x69\x36\x34\x78\x32\x5f\x61\x64\x64\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe4\x80\x80\x80\x00\x01\xde\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x08\x00\x00\x00\x00\x00\x00\x00\x42\x01\xfd\x0c\x40\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x42\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x41\x00\x00\x00\x00\x00\x00\x00\x09\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:766");  // assert_return(() => call($3, "as-i64x2_add-operands", [v128("-1 -1 8 0"), 1n, v128("64 0 27 0"), 1n]), "simd_lane.wast:766", v128("65n 9n"))

// simd_lane.wast:769
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x97\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x04\x7b\x7b\x7b\x7b\x01\x7b\x02\xcd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1d\x73\x77\x69\x7a\x7a\x6c\x65\x2d\x61\x73\x2d\x69\x38\x78\x31\x36\x5f\x61\x64\x64\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x84\x81\x80\x80\x00\x01\xfe\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\xfd\x0c\x0f\x0e\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\x04\x03\x02\x01\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:769");  // assert_return(() => call($3, "swizzle-as-i8x16_add-operands", [v128("-202_182_160 -134_810_124 -67_438_088 -66_052"), v128("50_462_976 117_835_012 185_207_048 252_579_084"), v128("50_462_976 117_835_012 185_207_048 252_579_084"), v128("202_182_159 134_810_123 67_438_087 66_051")]), "simd_lane.wast:769", v128("-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1"))

// simd_lane.wast:775
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x97\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x04\x7b\x7b\x7b\x7b\x01\x7b\x02\xcd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1d\x73\x68\x75\x66\x66\x6c\x65\x2d\x61\x73\x2d\x69\x38\x78\x31\x36\x5f\x73\x75\x62\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x84\x81\x80\x80\x00\x01\xfe\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\xfd\x0c\x0f\x0e\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\x04\x03\x02\x01\x00\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\xfd\x0c\x0f\x0e\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\x04\x03\x02\x01\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xf1\xf3\xf5\xf7\xf9\xfb\xfd\xff\x01\x03\x05\x07\x09\x0b\x0d\x0f\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:775");  // assert_return(() => call($3, "shuffle-as-i8x16_sub-operands", [v128("50_462_976 117_835_012 185_207_048 252_579_084"), v128("202_182_159 134_810_123 67_438_087 66_051"), v128("-202_182_160 -134_810_124 -67_438_088 -66_052"), v128("202_182_159 134_810_123 67_438_087 66_051")]), "simd_lane.wast:775", v128("-15 -13 -11 -9 -7 -5 -3 -1 1 3 5 7 9 11 13 15"))

// simd_lane.wast:782
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x61\x73\x2d\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x01\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:782");  // assert_return(() => call($3, "as-i8x16_any_true-operand", [v128("0 0 0 0"), 1]), "simd_lane.wast:782", 1)

// simd_lane.wast:783
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x61\x73\x2d\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x01\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:783");  // assert_return(() => call($3, "as-i16x8_any_true-operand", [v128("0 0 0 0"), 1]), "simd_lane.wast:783", 1)

// simd_lane.wast:784
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x61\x73\x2d\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x31\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:784");  // assert_return(() => call($3, "as-i32x4_any_true-operand1", [v128("1 0 0 0"), 0]), "simd_lane.wast:784", 0)

// simd_lane.wast:785
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7e\x01\x7f\x02\xca\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1a\x61\x73\x2d\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:785");  // assert_return(() => call($3, "as-i32x4_any_true-operand2", [v128("1 0 0 0"), 0n]), "simd_lane.wast:785", 0)

// simd_lane.wast:787
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x22\x73\x77\x69\x7a\x7a\x6c\x65\x2d\x61\x73\x2d\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:787");  // assert_return(() => call($3, "swizzle-as-i8x16_all_true-operands", [v128("67_305_985 134_678_021 202_050_057 269_422_093"), v128("50_462_976 117_835_012 185_207_048 252_579_084")]), "simd_lane.wast:787", 1)

// simd_lane.wast:790
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x22\x73\x77\x69\x7a\x7a\x6c\x65\x2d\x61\x73\x2d\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x10\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:790");  // assert_return(() => call($3, "swizzle-as-i8x16_all_true-operands", [v128("-202_182_160 -134_810_124 -67_438_088 -66_052"), v128("50_462_976 117_835_012 185_207_048 269_356_300")]), "simd_lane.wast:790", 0)

// simd_lane.wast:793
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x22\x73\x68\x75\x66\x66\x6c\x65\x2d\x61\x73\x2d\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x73\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\xfd\x0c\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($3)),  "run", []), "simd_lane.wast:793");  // assert_return(() => call($3, "shuffle-as-i8x16_any_true-operands", [v128("-202_182_160 -134_810_124 -67_438_088 -66_052"), v128("50_462_976 117_835_012 185_207_048 252_579_084")]), "simd_lane.wast:793", 1)

// simd_lane.wast:799
let $$4 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x99\x80\x80\x80\x00\x04\x60\x02\x7b\x7f\x01\x7b\x60\x02\x7b\x7d\x01\x7b\x60\x02\x7b\x7e\x01\x7b\x60\x02\x7b\x7c\x01\x7b\x03\x87\x80\x80\x80\x00\x06\x00\x00\x00\x01\x02\x03\x05\x83\x80\x80\x80\x00\x01\x00\x01\x07\x9d\x81\x80\x80\x00\x06\x17\x61\x73\x2d\x76\x31\x32\x38\x5f\x73\x74\x6f\x72\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x2d\x31\x00\x00\x17\x61\x73\x2d\x76\x31\x32\x38\x5f\x73\x74\x6f\x72\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x2d\x32\x00\x01\x17\x61\x73\x2d\x76\x31\x32\x38\x5f\x73\x74\x6f\x72\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x2d\x33\x00\x02\x17\x61\x73\x2d\x76\x31\x32\x38\x5f\x73\x74\x6f\x72\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x2d\x34\x00\x03\x17\x61\x73\x2d\x76\x31\x32\x38\x5f\x73\x74\x6f\x72\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x2d\x35\x00\x04\x17\x61\x73\x2d\x76\x31\x32\x38\x5f\x73\x74\x6f\x72\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x2d\x36\x00\x05\x0a\x9d\x81\x80\x80\x00\x06\x95\x80\x80\x80\x00\x00\x41\x00\x20\x00\x20\x01\xfd\x17\x00\xfd\x0b\x04\x00\x41\x00\xfd\x00\x04\x00\x0b\x95\x80\x80\x80\x00\x00\x41\x00\x20\x00\x20\x01\xfd\x1a\x00\xfd\x0b\x04\x00\x41\x00\xfd\x00\x04\x00\x0b\x95\x80\x80\x80\x00\x00\x41\x00\x20\x00\x20\x01\xfd\x1c\x00\xfd\x0b\x04\x00\x41\x00\xfd\x00\x04\x00\x0b\x95\x80\x80\x80\x00\x00\x41\x00\x20\x00\x20\x01\xfd\x20\x00\xfd\x0b\x04\x00\x41\x00\xfd\x00\x04\x00\x0b\x95\x80\x80\x80\x00\x00\x41\x00\x20\x00\x20\x01\xfd\x1e\x00\xfd\x0b\x04\x00\x41\x00\xfd\x00\x04\x00\x0b\x95\x80\x80\x80\x00\x00\x41\x00\x20\x00\x20\x01\xfd\x22\x00\xfd\x0b\x04\x00\x41\x00\xfd\x00\x04\x00\x0b", "simd_lane.wast:799");

// simd_lane.wast:799
let $4 = instance($$4);

// simd_lane.wast:821
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x61\x73\x2d\x76\x31\x32\x38\x5f\x73\x74\x6f\x72\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x2d\x31\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd0\x80\x80\x80\x00\x01\xca\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($4)),  "run", []), "simd_lane.wast:821");  // assert_return(() => call($4, "as-v128_store-operand-1", [v128("0 0 0 0"), 1]), "simd_lane.wast:821", v128("1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"))

// simd_lane.wast:822
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x61\x73\x2d\x76\x31\x32\x38\x5f\x73\x74\x6f\x72\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x2d\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd1\x80\x80\x80\x00\x01\xcb\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x80\x02\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($4)),  "run", []), "simd_lane.wast:822");  // assert_return(() => call($4, "as-v128_store-operand-2", [v128("0 0 0 0"), 256]), "simd_lane.wast:822", v128("256 0 0 0 0 0 0 0"))

// simd_lane.wast:823
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x61\x73\x2d\x76\x31\x32\x38\x5f\x73\x74\x6f\x72\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x2d\x33\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd0\x80\x80\x80\x00\x01\xca\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($4)),  "run", []), "simd_lane.wast:823");  // assert_return(() => call($4, "as-v128_store-operand-3", [v128("0 0 0 0"), -1]), "simd_lane.wast:823", v128("-1 0 0 0"))

// simd_lane.wast:824
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x61\x73\x2d\x76\x31\x32\x38\x5f\x73\x74\x6f\x72\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x2d\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\xc3\xf5\x48\x40\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xc3\xf5\x48\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($4)),  "run", []), "simd_lane.wast:824");  // assert_return(() => call($4, "as-v128_store-operand-4", [v128("0 0 0 0"), 3.1400001049]), "simd_lane.wast:824", v128("3.1400001049 0. 0. 0."))

// simd_lane.wast:825
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7e\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x61\x73\x2d\x76\x31\x32\x38\x5f\x73\x74\x6f\x72\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x2d\x35\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd0\x80\x80\x80\x00\x01\xca\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\x7f\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($4)),  "run", []), "simd_lane.wast:825");  // assert_return(() => call($4, "as-v128_store-operand-5", [v128("0 0 0 0"), -1n]), "simd_lane.wast:825", v128("-1n 0n"))

// simd_lane.wast:826
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc7\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x17\x61\x73\x2d\x76\x31\x32\x38\x5f\x73\x74\x6f\x72\x65\x2d\x6f\x70\x65\x72\x61\x6e\x64\x2d\x36\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x1f\x85\xeb\x51\xb8\x1e\x09\x40\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x1f\x85\xeb\x51\xb8\x1e\x09\x40\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($4)),  "run", []), "simd_lane.wast:826");  // assert_return(() => call($4, "as-v128_store-operand-6", [v128("0 0 0 0"), 3.14]), "simd_lane.wast:826", v128("3.14 0."))

// simd_lane.wast:830
let $$5 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa3\x80\x80\x80\x00\x06\x60\x01\x7b\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x60\x02\x7b\x7d\x01\x7b\x60\x02\x7b\x7b\x01\x7b\x60\x01\x7b\x01\x7e\x60\x02\x7b\x7c\x01\x7b\x03\x89\x80\x80\x80\x00\x08\x00\x01\x00\x02\x03\x03\x04\x05\x06\xab\x80\x80\x80\x00\x02\x7b\x01\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x7b\x01\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x07\xb5\x81\x80\x80\x00\x08\x15\x61\x73\x2d\x69\x66\x2d\x63\x6f\x6e\x64\x69\x74\x69\x6f\x6e\x2d\x76\x61\x6c\x75\x65\x00\x00\x11\x61\x73\x2d\x72\x65\x74\x75\x72\x6e\x2d\x76\x61\x6c\x75\x65\x2d\x31\x00\x01\x12\x61\x73\x2d\x6c\x6f\x63\x61\x6c\x5f\x73\x65\x74\x2d\x76\x61\x6c\x75\x65\x00\x02\x15\x61\x73\x2d\x67\x6c\x6f\x62\x61\x6c\x5f\x73\x65\x74\x2d\x76\x61\x6c\x75\x65\x2d\x31\x00\x03\x11\x61\x73\x2d\x72\x65\x74\x75\x72\x6e\x2d\x76\x61\x6c\x75\x65\x2d\x32\x00\x04\x15\x61\x73\x2d\x67\x6c\x6f\x62\x61\x6c\x5f\x73\x65\x74\x2d\x76\x61\x6c\x75\x65\x2d\x32\x00\x05\x14\x61\x73\x2d\x6c\x6f\x63\x61\x6c\x5f\x73\x65\x74\x2d\x76\x61\x6c\x75\x65\x2d\x31\x00\x06\x15\x61\x73\x2d\x67\x6c\x6f\x62\x61\x6c\x5f\x73\x65\x74\x2d\x76\x61\x6c\x75\x65\x2d\x33\x00\x07\x0a\xa1\x81\x80\x80\x00\x08\x90\x80\x80\x80\x00\x00\x20\x00\xfd\x15\x00\x04\x7f\x41\xff\x01\x05\x41\x00\x0b\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x1a\x00\x0f\x0b\x8e\x80\x80\x80\x00\x01\x01\x7f\x20\x00\xfd\x1b\x00\x21\x01\x20\x01\x0f\x0b\x8e\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x20\x00\x24\x00\x23\x00\x0f\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x0e\x0f\x0b\x9d\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x0d\x00\x01\x02\x03\x04\x05\x06\x07\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x24\x01\x23\x01\x0f\x0b\x8e\x80\x80\x80\x00\x01\x01\x7e\x20\x00\xfd\x1d\x00\x21\x01\x20\x01\x0f\x0b\x8e\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x22\x00\x24\x00\x23\x00\x0f\x0b", "simd_lane.wast:830");

// simd_lane.wast:830
let $5 = instance($$5);

// simd_lane.wast:858
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x61\x73\x2d\x69\x66\x2d\x63\x6f\x6e\x64\x69\x74\x69\x6f\x6e\x2d\x76\x61\x6c\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($5)),  "run", []), "simd_lane.wast:858");  // assert_return(() => call($5, "as-if-condition-value", [v128("0 0 0 0")]), "simd_lane.wast:858", 0)

// simd_lane.wast:859
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7f\x01\x7b\x02\xc1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x11\x61\x73\x2d\x72\x65\x74\x75\x72\x6e\x2d\x76\x61\x6c\x75\x65\x2d\x31\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd0\x80\x80\x80\x00\x01\xca\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($5)),  "run", []), "simd_lane.wast:859");  // assert_return(() => call($5, "as-return-value-1", [v128("0 0 0 0"), 1]), "simd_lane.wast:859", v128("1 0 0 0 0 0 0 0"))

// simd_lane.wast:860
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x12\x61\x73\x2d\x6c\x6f\x63\x61\x6c\x5f\x73\x65\x74\x2d\x76\x61\x6c\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x7f\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($5)),  "run", []), "simd_lane.wast:860");  // assert_return(() => call($5, "as-local_set-value", [v128("-1 -1 -1 -1")]), "simd_lane.wast:860", -1)

// simd_lane.wast:861
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7d\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x61\x73\x2d\x67\x6c\x6f\x62\x61\x6c\x5f\x73\x65\x74\x2d\x76\x61\x6c\x75\x65\x2d\x31\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd3\x80\x80\x80\x00\x01\xcd\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\xc3\xf5\x48\x40\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xc3\xf5\x48\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($5)),  "run", []), "simd_lane.wast:861");  // assert_return(() => call($5, "as-global_set-value-1", [v128("0 0 0 0"), 3.1400001049]), "simd_lane.wast:861", v128("3.1400001049 0. 0. 0."))

// simd_lane.wast:863
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x11\x61\x73\x2d\x72\x65\x74\x75\x72\x6e\x2d\x76\x61\x6c\x75\x65\x2d\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\xfd\x0c\x0f\x0e\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\x04\x03\x02\x01\x00\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xff\xfe\xfd\xfc\xfb\xfa\xf9\xf8\xf7\xf6\xf5\xf4\xf3\xf2\xf1\xf0\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($5)),  "run", []), "simd_lane.wast:863");  // assert_return(() => call($5, "as-return-value-2", [v128("-202_182_160 -134_810_124 -67_438_088 -66_052"), v128("202_182_159 134_810_123 67_438_087 66_051")]), "simd_lane.wast:863", v128("-1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15 -16"))

// simd_lane.wast:867
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x61\x73\x2d\x67\x6c\x6f\x62\x61\x6c\x5f\x73\x65\x74\x2d\x76\x61\x6c\x75\x65\x2d\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xe0\x80\x80\x80\x00\x01\xda\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff\xfd\x0c\x10\x0f\x0e\x0d\x0c\x0b\x0a\x09\x08\x07\x06\x05\x04\x03\x02\x01\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\x08\x07\x06\x05\x04\x03\x02\x01\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($5)),  "run", []), "simd_lane.wast:867");  // assert_return(() => call($5, "as-global_set-value-2", [v128("-202_182_160 -134_810_124 -67_438_088 -66_052"), v128("219_025_168 151_653_132 84_281_096 16_909_060")]), "simd_lane.wast:867", v128("-16 -15 -14 -13 -12 -11 -10 -9 8 7 6 5 4 3 2 1"))

// simd_lane.wast:872
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7e\x02\xc4\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x14\x61\x73\x2d\x6c\x6f\x63\x61\x6c\x5f\x73\x65\x74\x2d\x76\x61\x6c\x75\x65\x2d\x31\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x42\x7f\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($5)),  "run", []), "simd_lane.wast:872");  // assert_return(() => call($5, "as-local_set-value-1", [v128("-1 -1 -1 -1")]), "simd_lane.wast:872", -1n)

// simd_lane.wast:873
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7c\x01\x7b\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x61\x73\x2d\x67\x6c\x6f\x62\x61\x6c\x5f\x73\x65\x74\x2d\x76\x61\x6c\x75\x65\x2d\x33\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xd7\x80\x80\x80\x00\x01\xd1\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x44\x1f\x85\xeb\x51\xb8\x1e\x09\x40\x10\x00\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x4e\xfd\x0c\x1f\x85\xeb\x51\xb8\x1e\x09\x40\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x23\xfd\x63\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($5)),  "run", []), "simd_lane.wast:873");  // assert_return(() => call($5, "as-global_set-value-3", [v128("0 0 0 0"), 3.14]), "simd_lane.wast:873", v128("3.14 0."))

// simd_lane.wast:877
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:877");

// simd_lane.wast:878
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:878");

// simd_lane.wast:879
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:879");

// simd_lane.wast:880
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:880");

// simd_lane.wast:881
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:881");

// simd_lane.wast:882
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:882");

// simd_lane.wast:883
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:883");

// simd_lane.wast:887
let $$6 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x15\x0f\x0b", "simd_lane.wast:887");

// simd_lane.wast:887
let $6 = instance($$6);

// simd_lane.wast:888
let $$7 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x18\x07\x0b", "simd_lane.wast:888");

// simd_lane.wast:888
let $7 = instance($$7);

// simd_lane.wast:889
let $$8 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x19\x07\x0b", "simd_lane.wast:889");

// simd_lane.wast:889
let $8 = instance($$8);

// simd_lane.wast:890
let $$9 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x1b\x03\x0b", "simd_lane.wast:890");

// simd_lane.wast:890
let $9 = instance($$9);

// simd_lane.wast:891
let $$10 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7c\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x21\x01\x0b", "simd_lane.wast:891");

// simd_lane.wast:891
let $10 = instance($$10);

// simd_lane.wast:892
let $$11 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xa2\x80\x80\x80\x00\x01\x9c\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x00\x00\x80\x3f\xfd\x20\x03\x0b", "simd_lane.wast:892");

// simd_lane.wast:892
let $11 = instance($$11);

// simd_lane.wast:893
let $$12 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9f\x80\x80\x80\x00\x01\x99\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x42\x01\xfd\x1e\x01\x0b", "simd_lane.wast:893");

// simd_lane.wast:893
let $12 = instance($$12);

// simd_lane.wast:897
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:897");

// simd_lane.wast:901
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:901");

// simd_lane.wast:909
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\x15\x00\x0b", "simd_lane.wast:909");

// simd_lane.wast:917
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:917");

// simd_lane.wast:925
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:925");

// simd_lane.wast:933
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\x19\x00\x0b", "simd_lane.wast:933");

// simd_lane.wast:941
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:941");

// simd_lane.wast:949
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:949");

// simd_lane.wast:957
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\x1b\x00\x0b", "simd_lane.wast:957");

// simd_lane.wast:965
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:965");

// simd_lane.wast:973
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:973");

// simd_lane.wast:981
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\x1d\x00\x0b", "simd_lane.wast:981");

// simd_lane.wast:989
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:989");

// simd_lane.wast:997
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:997");

// simd_lane.wast:1005
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7d\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\x1f\x00\x0b", "simd_lane.wast:1005");

// simd_lane.wast:1013
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:1013");

// simd_lane.wast:1021
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:1021");

// simd_lane.wast:1029
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7c\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\x21\x00\x0b", "simd_lane.wast:1029");

// simd_lane.wast:1037
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:1037");

// simd_lane.wast:1045
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:1045");

// simd_lane.wast:1053
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x01\xfd\x17\x00\x0b", "simd_lane.wast:1053");

// simd_lane.wast:1061
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x17\x00\x0b", "simd_lane.wast:1061");

// simd_lane.wast:1069
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:1069");

// simd_lane.wast:1077
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:1077");

// simd_lane.wast:1085
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x01\xfd\x1a\x00\x0b", "simd_lane.wast:1085");

// simd_lane.wast:1093
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x1a\x00\x0b", "simd_lane.wast:1093");

// simd_lane.wast:1101
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:1101");

// simd_lane.wast:1109
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:1109");

// simd_lane.wast:1117
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x01\xfd\x1c\x00\x0b", "simd_lane.wast:1117");

// simd_lane.wast:1125
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x1c\x00\x0b", "simd_lane.wast:1125");

// simd_lane.wast:1133
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:1133");

// simd_lane.wast:1141
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:1141");

// simd_lane.wast:1149
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x90\x80\x80\x80\x00\x01\x8a\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\xfd\x20\x00\x0b", "simd_lane.wast:1149");

// simd_lane.wast:1157
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x20\x00\x0b", "simd_lane.wast:1157");

// simd_lane.wast:1165
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:1165");

// simd_lane.wast:1173
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:1173");

// simd_lane.wast:1181
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x42\x01\xfd\x1e\x00\x0b", "simd_lane.wast:1181");

// simd_lane.wast:1189
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x1e\x00\x0b", "simd_lane.wast:1189");

// simd_lane.wast:1197
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:1197");

// simd_lane.wast:1205
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:1205");

// simd_lane.wast:1213
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x94\x80\x80\x80\x00\x01\x8e\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfd\x22\x00\x0b", "simd_lane.wast:1213");

// simd_lane.wast:1221
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x22\x00\x0b", "simd_lane.wast:1221");

// simd_lane.wast:1229
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:1229");

// simd_lane.wast:1237
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:1237");

// simd_lane.wast:1248
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\xac\x80\x80\x80\x00\x01\xa6\x80\x80\x80\x00\x00\xfd\x0c\x01\x02\x03\x05\x06\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\xfd\x0d\x00\x01\x02\x03\x05\x06\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x0b", "simd_lane.wast:1248");

// simd_lane.wast:1258
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_lane.wast:1258");
reinitializeRegistry();
})();
