(function simd_boolean_wast_js() {

// simd_boolean.wast:3
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x7b\x01\x7f\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xb8\x81\x80\x80\x00\x0b\x0e\x69\x38\x78\x31\x36\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x00\x0e\x69\x38\x78\x31\x36\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x01\x0d\x69\x38\x78\x31\x36\x2e\x62\x69\x74\x6d\x61\x73\x6b\x00\x02\x0e\x69\x31\x36\x78\x38\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x0e\x69\x31\x36\x78\x38\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x04\x0d\x69\x31\x36\x78\x38\x2e\x62\x69\x74\x6d\x61\x73\x6b\x00\x05\x0e\x69\x33\x32\x78\x34\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x06\x0e\x69\x33\x32\x78\x34\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x07\x0d\x69\x33\x32\x78\x34\x2e\x62\x69\x74\x6d\x61\x73\x6b\x00\x08\x0e\x69\x36\x34\x78\x32\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x09\x0d\x69\x36\x34\x78\x32\x2e\x62\x69\x74\x6d\x61\x73\x6b\x00\x0a\x0a\x80\x81\x80\x80\x00\x0b\x86\x80\x80\x80\x00\x00\x20\x00\xfd\x53\x0b\x86\x80\x80\x80\x00\x00\x20\x00\xfd\x63\x0b\x86\x80\x80\x80\x00\x00\x20\x00\xfd\x64\x0b\x86\x80\x80\x80\x00\x00\x20\x00\xfd\x53\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x83\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\x84\x01\x0b\x86\x80\x80\x80\x00\x00\x20\x00\xfd\x53\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\xa3\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\xa4\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\xc3\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\xfd\xc4\x01\x0b", "simd_boolean.wast:3");

// simd_boolean.wast:3
let $1 = instance($$1);

// simd_boolean.wast:21
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:21");  // assert_return(() => call($1, "i8x16.any_true", [v128("0 0 0 0")]), "simd_boolean.wast:21", 0)

// simd_boolean.wast:23
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:23");  // assert_return(() => call($1, "i8x16.any_true", [v128("0 0 0 65_536")]), "simd_boolean.wast:23", 1)

// simd_boolean.wast:25
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:25");  // assert_return(() => call($1, "i8x16.any_true", [v128("16_843_009 16_843_009 16_843_009 16_777_473")]), "simd_boolean.wast:25", 1)

// simd_boolean.wast:27
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:27");  // assert_return(() => call($1, "i8x16.any_true", [v128("16_843_009 16_843_009 16_843_009 16_843_009")]), "simd_boolean.wast:27", 1)

// simd_boolean.wast:29
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0f\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:29");  // assert_return(() => call($1, "i8x16.any_true", [v128("33_620_223 100_992_003 168_364_039 252_513_291")]), "simd_boolean.wast:29", 1)

// simd_boolean.wast:31
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:31");  // assert_return(() => call($1, "i8x16.any_true", [v128("0 0 0 0")]), "simd_boolean.wast:31", 0)

// simd_boolean.wast:33
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:33");  // assert_return(() => call($1, "i8x16.any_true", [v128("-1 -1 -1 -1")]), "simd_boolean.wast:33", 1)

// simd_boolean.wast:35
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xab\xab\xab\xab\xab\xab\xab\xab\xab\xab\xab\xab\xab\xab\xab\xab\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:35");  // assert_return(() => call($1, "i8x16.any_true", [v128("-1_414_812_757 -1_414_812_757 -1_414_812_757 -1_414_812_757")]), "simd_boolean.wast:35", 1)

// simd_boolean.wast:37
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:37");  // assert_return(() => call($1, "i8x16.any_true", [v128("1_431_655_765 1_431_655_765 1_431_655_765 1_431_655_765")]), "simd_boolean.wast:37", 1)

// simd_boolean.wast:39
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:39");  // assert_return(() => call($1, "i8x16.all_true", [v128("0 0 0 0")]), "simd_boolean.wast:39", 0)

// simd_boolean.wast:41
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:41");  // assert_return(() => call($1, "i8x16.all_true", [v128("0 0 0 65_536")]), "simd_boolean.wast:41", 0)

// simd_boolean.wast:43
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:43");  // assert_return(() => call($1, "i8x16.all_true", [v128("16_843_009 16_843_009 16_843_009 16_777_473")]), "simd_boolean.wast:43", 0)

// simd_boolean.wast:45
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:45");  // assert_return(() => call($1, "i8x16.all_true", [v128("16_843_009 16_843_009 16_843_009 16_843_009")]), "simd_boolean.wast:45", 1)

// simd_boolean.wast:47
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0f\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:47");  // assert_return(() => call($1, "i8x16.all_true", [v128("33_620_223 100_992_003 168_364_039 252_513_291")]), "simd_boolean.wast:47", 0)

// simd_boolean.wast:49
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:49");  // assert_return(() => call($1, "i8x16.all_true", [v128("0 0 0 0")]), "simd_boolean.wast:49", 0)

// simd_boolean.wast:51
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:51");  // assert_return(() => call($1, "i8x16.all_true", [v128("-1 -1 -1 -1")]), "simd_boolean.wast:51", 1)

// simd_boolean.wast:53
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xab\xab\xab\xab\xab\xab\xab\xab\xab\xab\xab\xab\xab\xab\xab\xab\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:53");  // assert_return(() => call($1, "i8x16.all_true", [v128("-1_414_812_757 -1_414_812_757 -1_414_812_757 -1_414_812_757")]), "simd_boolean.wast:53", 1)

// simd_boolean.wast:55
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x38\x78\x31\x36\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:55");  // assert_return(() => call($1, "i8x16.all_true", [v128("1_431_655_765 1_431_655_765 1_431_655_765 1_431_655_765")]), "simd_boolean.wast:55", 1)

// simd_boolean.wast:57
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x69\x38\x78\x31\x36\x2e\x62\x69\x74\x6d\x61\x73\x6b\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\xff\xff\x03\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:57");  // assert_return(() => call($1, "i8x16.bitmask", [v128("-1 -1 -1 -1")]), "simd_boolean.wast:57", 65_535)

// simd_boolean.wast:59
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x69\x38\x78\x31\x36\x2e\x62\x69\x74\x6d\x61\x73\x6b\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0f\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:59");  // assert_return(() => call($1, "i8x16.bitmask", [v128("33_620_223 100_992_003 168_364_039 252_513_291")]), "simd_boolean.wast:59", 1)

// simd_boolean.wast:63
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:63");  // assert_return(() => call($1, "i16x8.any_true", [v128("0 0 0 0")]), "simd_boolean.wast:63", 0)

// simd_boolean.wast:65
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:65");  // assert_return(() => call($1, "i16x8.any_true", [v128("0 0 0 1")]), "simd_boolean.wast:65", 1)

// simd_boolean.wast:67
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x00\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:67");  // assert_return(() => call($1, "i16x8.any_true", [v128("65_537 65_537 65_537 65_536")]), "simd_boolean.wast:67", 1)

// simd_boolean.wast:69
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:69");  // assert_return(() => call($1, "i16x8.any_true", [v128("65_537 65_537 65_537 65_537")]), "simd_boolean.wast:69", 1)

// simd_boolean.wast:71
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\x00\x00\x01\x00\x02\x00\x0b\x00\x0c\x00\x0d\x00\x0f\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:71");  // assert_return(() => call($1, "i16x8.any_true", [v128("65_535 131_073 786_443 983_053")]), "simd_boolean.wast:71", 1)

// simd_boolean.wast:73
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:73");  // assert_return(() => call($1, "i16x8.any_true", [v128("0 0 0 0")]), "simd_boolean.wast:73", 0)

// simd_boolean.wast:75
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:75");  // assert_return(() => call($1, "i16x8.any_true", [v128("16_711_935 16_711_935 16_711_935 16_711_935")]), "simd_boolean.wast:75", 1)

// simd_boolean.wast:77
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xab\x00\xab\x00\xab\x00\xab\x00\xab\x00\xab\x00\xab\x00\xab\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:77");  // assert_return(() => call($1, "i16x8.any_true", [v128("11_206_827 11_206_827 11_206_827 11_206_827")]), "simd_boolean.wast:77", 1)

// simd_boolean.wast:79
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:79");  // assert_return(() => call($1, "i16x8.any_true", [v128("5_570_645 5_570_645 5_570_645 5_570_645")]), "simd_boolean.wast:79", 1)

// simd_boolean.wast:81
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x39\x30\x39\x30\x39\x30\x39\x30\x39\x30\x39\x30\x39\x30\x39\x30\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:81");  // assert_return(() => call($1, "i16x8.any_true", [v128("809_054_265 809_054_265 809_054_265 809_054_265")]), "simd_boolean.wast:81", 1)

// simd_boolean.wast:83
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x34\x12\x34\x12\x34\x12\x34\x12\x34\x12\x34\x12\x34\x12\x34\x12\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:83");  // assert_return(() => call($1, "i16x8.any_true", [v128("305_402_420 305_402_420 305_402_420 305_402_420")]), "simd_boolean.wast:83", 1)

// simd_boolean.wast:85
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:85");  // assert_return(() => call($1, "i16x8.all_true", [v128("0 0 0 0")]), "simd_boolean.wast:85", 0)

// simd_boolean.wast:87
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:87");  // assert_return(() => call($1, "i16x8.all_true", [v128("0 0 0 1")]), "simd_boolean.wast:87", 0)

// simd_boolean.wast:89
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x00\x00\x01\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:89");  // assert_return(() => call($1, "i16x8.all_true", [v128("65_537 65_537 65_537 65_536")]), "simd_boolean.wast:89", 0)

// simd_boolean.wast:91
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:91");  // assert_return(() => call($1, "i16x8.all_true", [v128("65_537 65_537 65_537 65_537")]), "simd_boolean.wast:91", 1)

// simd_boolean.wast:93
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\x00\x00\x01\x00\x02\x00\x0b\x00\x0c\x00\x0d\x00\x0f\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:93");  // assert_return(() => call($1, "i16x8.all_true", [v128("65_535 131_073 786_443 983_053")]), "simd_boolean.wast:93", 0)

// simd_boolean.wast:95
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:95");  // assert_return(() => call($1, "i16x8.all_true", [v128("0 0 0 0")]), "simd_boolean.wast:95", 0)

// simd_boolean.wast:97
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:97");  // assert_return(() => call($1, "i16x8.all_true", [v128("16_711_935 16_711_935 16_711_935 16_711_935")]), "simd_boolean.wast:97", 1)

// simd_boolean.wast:99
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xab\x00\xab\x00\xab\x00\xab\x00\xab\x00\xab\x00\xab\x00\xab\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:99");  // assert_return(() => call($1, "i16x8.all_true", [v128("11_206_827 11_206_827 11_206_827 11_206_827")]), "simd_boolean.wast:99", 1)

// simd_boolean.wast:101
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:101");  // assert_return(() => call($1, "i16x8.all_true", [v128("5_570_645 5_570_645 5_570_645 5_570_645")]), "simd_boolean.wast:101", 1)

// simd_boolean.wast:103
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x39\x30\x39\x30\x39\x30\x39\x30\x39\x30\x39\x30\x39\x30\x39\x30\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:103");  // assert_return(() => call($1, "i16x8.all_true", [v128("809_054_265 809_054_265 809_054_265 809_054_265")]), "simd_boolean.wast:103", 1)

// simd_boolean.wast:105
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x31\x36\x78\x38\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x34\x12\x34\x12\x34\x12\x34\x12\x34\x12\x34\x12\x34\x12\x34\x12\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:105");  // assert_return(() => call($1, "i16x8.all_true", [v128("305_402_420 305_402_420 305_402_420 305_402_420")]), "simd_boolean.wast:105", 1)

// simd_boolean.wast:107
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x69\x31\x36\x78\x38\x2e\x62\x69\x74\x6d\x61\x73\x6b\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xaa\x80\x80\x80\x00\x01\xa4\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\xff\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:107");  // assert_return(() => call($1, "i16x8.bitmask", [v128("-1 -1 -1 -1")]), "simd_boolean.wast:107", 255)

// simd_boolean.wast:109
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x69\x31\x36\x78\x38\x2e\x62\x69\x74\x6d\x61\x73\x6b\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\x00\x00\x01\x00\x02\x00\x0b\x00\x0c\x00\x0d\x00\x0f\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:109");  // assert_return(() => call($1, "i16x8.bitmask", [v128("65_535 131_073 786_443 983_053")]), "simd_boolean.wast:109", 1)

// simd_boolean.wast:113
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:113");  // assert_return(() => call($1, "i32x4.any_true", [v128("0 0 0 0")]), "simd_boolean.wast:113", 0)

// simd_boolean.wast:115
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:115");  // assert_return(() => call($1, "i32x4.any_true", [v128("0 0 1 0")]), "simd_boolean.wast:115", 1)

// simd_boolean.wast:117
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:117");  // assert_return(() => call($1, "i32x4.any_true", [v128("1 1 0 1")]), "simd_boolean.wast:117", 1)

// simd_boolean.wast:119
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:119");  // assert_return(() => call($1, "i32x4.any_true", [v128("1 1 1 1")]), "simd_boolean.wast:119", 1)

// simd_boolean.wast:121
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\x00\x00\x00\x00\x01\x00\x00\x00\x0f\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:121");  // assert_return(() => call($1, "i32x4.any_true", [v128("-1 0 1 15")]), "simd_boolean.wast:121", 1)

// simd_boolean.wast:123
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:123");  // assert_return(() => call($1, "i32x4.any_true", [v128("0 0 0 0")]), "simd_boolean.wast:123", 0)

// simd_boolean.wast:125
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x00\x00\x00\xff\x00\x00\x00\xff\x00\x00\x00\xff\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:125");  // assert_return(() => call($1, "i32x4.any_true", [v128("255 255 255 255")]), "simd_boolean.wast:125", 1)

// simd_boolean.wast:127
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xab\x00\x00\x00\xab\x00\x00\x00\xab\x00\x00\x00\xab\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:127");  // assert_return(() => call($1, "i32x4.any_true", [v128("171 171 171 171")]), "simd_boolean.wast:127", 1)

// simd_boolean.wast:129
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x55\x00\x00\x00\x55\x00\x00\x00\x55\x00\x00\x00\x55\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:129");  // assert_return(() => call($1, "i32x4.any_true", [v128("85 85 85 85")]), "simd_boolean.wast:129", 1)

// simd_boolean.wast:131
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xd2\x02\x96\x49\xd2\x02\x96\x49\xd2\x02\x96\x49\xd2\x02\x96\x49\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:131");  // assert_return(() => call($1, "i32x4.any_true", [v128("1_234_567_890 1_234_567_890 1_234_567_890 1_234_567_890")]), "simd_boolean.wast:131", 1)

// simd_boolean.wast:133
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6e\x79\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x78\x56\x34\x12\x78\x56\x34\x12\x78\x56\x34\x12\x78\x56\x34\x12\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:133");  // assert_return(() => call($1, "i32x4.any_true", [v128("305_419_896 305_419_896 305_419_896 305_419_896")]), "simd_boolean.wast:133", 1)

// simd_boolean.wast:135
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:135");  // assert_return(() => call($1, "i32x4.all_true", [v128("0 0 0 0")]), "simd_boolean.wast:135", 0)

// simd_boolean.wast:137
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:137");  // assert_return(() => call($1, "i32x4.all_true", [v128("0 0 1 0")]), "simd_boolean.wast:137", 0)

// simd_boolean.wast:139
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:139");  // assert_return(() => call($1, "i32x4.all_true", [v128("1 1 0 1")]), "simd_boolean.wast:139", 0)

// simd_boolean.wast:141
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:141");  // assert_return(() => call($1, "i32x4.all_true", [v128("1 1 1 1")]), "simd_boolean.wast:141", 1)

// simd_boolean.wast:143
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\x00\x00\x00\x00\x01\x00\x00\x00\x0f\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:143");  // assert_return(() => call($1, "i32x4.all_true", [v128("-1 0 1 15")]), "simd_boolean.wast:143", 0)

// simd_boolean.wast:145
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:145");  // assert_return(() => call($1, "i32x4.all_true", [v128("0 0 0 0")]), "simd_boolean.wast:145", 0)

// simd_boolean.wast:147
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x00\x00\x00\xff\x00\x00\x00\xff\x00\x00\x00\xff\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:147");  // assert_return(() => call($1, "i32x4.all_true", [v128("255 255 255 255")]), "simd_boolean.wast:147", 1)

// simd_boolean.wast:149
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xab\x00\x00\x00\xab\x00\x00\x00\xab\x00\x00\x00\xab\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:149");  // assert_return(() => call($1, "i32x4.all_true", [v128("171 171 171 171")]), "simd_boolean.wast:149", 1)

// simd_boolean.wast:151
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x55\x00\x00\x00\x55\x00\x00\x00\x55\x00\x00\x00\x55\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:151");  // assert_return(() => call($1, "i32x4.all_true", [v128("85 85 85 85")]), "simd_boolean.wast:151", 1)

// simd_boolean.wast:153
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xd2\x02\x96\x49\xd2\x02\x96\x49\xd2\x02\x96\x49\xd2\x02\x96\x49\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:153");  // assert_return(() => call($1, "i32x4.all_true", [v128("1_234_567_890 1_234_567_890 1_234_567_890 1_234_567_890")]), "simd_boolean.wast:153", 1)

// simd_boolean.wast:155
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x33\x32\x78\x34\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x78\x56\x34\x12\x78\x56\x34\x12\x78\x56\x34\x12\x78\x56\x34\x12\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:155");  // assert_return(() => call($1, "i32x4.all_true", [v128("305_419_896 305_419_896 305_419_896 305_419_896")]), "simd_boolean.wast:155", 1)

// simd_boolean.wast:157
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x69\x33\x32\x78\x34\x2e\x62\x69\x74\x6d\x61\x73\x6b\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x0f\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:157");  // assert_return(() => call($1, "i32x4.bitmask", [v128("-1 -1 -1 -1")]), "simd_boolean.wast:157", 15)

// simd_boolean.wast:159
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x69\x33\x32\x78\x34\x2e\x62\x69\x74\x6d\x61\x73\x6b\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\x00\x00\x00\x00\x01\x00\x00\x00\x0f\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:159");  // assert_return(() => call($1, "i32x4.bitmask", [v128("-1 0 1 15")]), "simd_boolean.wast:159", 1)

// simd_boolean.wast:163
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x36\x34\x78\x32\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:163");  // assert_return(() => call($1, "i64x2.all_true", [v128("0 0 0 0")]), "simd_boolean.wast:163", 0)

// simd_boolean.wast:165
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x36\x34\x78\x32\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:165");  // assert_return(() => call($1, "i64x2.all_true", [v128("0 0 1 0")]), "simd_boolean.wast:165", 0)

// simd_boolean.wast:167
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x36\x34\x78\x32\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:167");  // assert_return(() => call($1, "i64x2.all_true", [v128("1 0 0 0")]), "simd_boolean.wast:167", 0)

// simd_boolean.wast:169
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x36\x34\x78\x32\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:169");  // assert_return(() => call($1, "i64x2.all_true", [v128("1 0 1 0")]), "simd_boolean.wast:169", 1)

// simd_boolean.wast:171
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x36\x34\x78\x32\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:171");  // assert_return(() => call($1, "i64x2.all_true", [v128("-1 -1 0 0")]), "simd_boolean.wast:171", 0)

// simd_boolean.wast:173
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x36\x34\x78\x32\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:173");  // assert_return(() => call($1, "i64x2.all_true", [v128("0 0 0 0")]), "simd_boolean.wast:173", 0)

// simd_boolean.wast:175
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x36\x34\x78\x32\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\x00\x00\x00\x00\x00\x00\x00\xff\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:175");  // assert_return(() => call($1, "i64x2.all_true", [v128("255 0 255 0")]), "simd_boolean.wast:175", 1)

// simd_boolean.wast:177
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x36\x34\x78\x32\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xab\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:177");  // assert_return(() => call($1, "i64x2.all_true", [v128("171 0 171 0")]), "simd_boolean.wast:177", 1)

// simd_boolean.wast:179
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbe\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0e\x69\x36\x34\x78\x32\x2e\x61\x6c\x6c\x5f\x74\x72\x75\x65\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x55\x00\x00\x00\x00\x00\x00\x00\x55\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:179");  // assert_return(() => call($1, "i64x2.all_true", [v128("85 0 85 0")]), "simd_boolean.wast:179", 1)

// simd_boolean.wast:181
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x69\x36\x34\x78\x32\x2e\x62\x69\x74\x6d\x61\x73\x6b\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x03\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:181");  // assert_return(() => call($1, "i64x2.bitmask", [v128("-1 -1 -1 -1")]), "simd_boolean.wast:181", 3)

// simd_boolean.wast:183
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xbd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x0d\x69\x36\x34\x78\x32\x2e\x62\x69\x74\x6d\x61\x73\x6b\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\x0f\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($1)),  "run", []), "simd_boolean.wast:183");  // assert_return(() => call($1, "i64x2.bitmask", [v128("-1 -1 15 0")]), "simd_boolean.wast:183", 1)

// simd_boolean.wast:188
let $$2 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x93\x80\x80\x80\x00\x03\x60\x01\x7b\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x60\x03\x7b\x7b\x7b\x01\x7f\x03\xc3\x80\x80\x80\x00\x42\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x02\x02\x02\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x02\x02\x02\x05\x83\x80\x80\x80\x00\x01\x00\x01\x07\xe5\x90\x80\x80\x00\x42\x19\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x00\x19\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x01\x19\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x02\x19\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x19\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x04\x19\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x05\x1d\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x06\x1d\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x07\x1d\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x08\x1d\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x09\x1d\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x0a\x1d\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x0b\x1c\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x0c\x1c\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x0d\x1c\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x0e\x1c\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x0f\x1c\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x10\x1c\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x11\x21\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x12\x21\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x13\x21\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x14\x20\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x15\x20\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x16\x20\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x17\x21\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x18\x21\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x19\x21\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x1a\x21\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x1b\x21\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x1c\x21\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x1d\x20\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x1e\x20\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x1f\x20\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x20\x21\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x21\x21\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x22\x21\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x23\x1c\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x24\x1c\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x25\x1c\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x26\x1c\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x27\x1c\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x28\x1c\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x29\x1b\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x2a\x1b\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x2b\x1b\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x2c\x1c\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x2d\x1c\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x2e\x1c\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x2f\x22\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x30\x22\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x31\x22\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x32\x1c\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x33\x1c\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x34\x1c\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x35\x1c\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x36\x1c\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x37\x1c\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x38\x1b\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x39\x1b\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x3a\x1b\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x3b\x1c\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x3c\x1c\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x3d\x1c\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x3e\x22\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x3f\x22\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x40\x22\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x41\x0a\x91\x89\x80\x80\x00\x42\x8e\x80\x80\x80\x00\x00\x20\x00\xfd\x53\x04\x7f\x41\x01\x05\x41\x00\x0b\x0b\x8e\x80\x80\x80\x00\x00\x20\x00\xfd\x53\x04\x7f\x41\x01\x05\x41\x00\x0b\x0b\x8e\x80\x80\x80\x00\x00\x20\x00\xfd\x53\x04\x7f\x41\x01\x05\x41\x00\x0b\x0b\x8e\x80\x80\x80\x00\x00\x20\x00\xfd\x63\x04\x7f\x41\x01\x05\x41\x00\x0b\x0b\x8f\x80\x80\x80\x00\x00\x20\x00\xfd\x83\x01\x04\x7f\x41\x01\x05\x41\x00\x0b\x0b\x8f\x80\x80\x80\x00\x00\x20\x00\xfd\xa3\x01\x04\x7f\x41\x01\x05\x41\x00\x0b\x0b\x8b\x80\x80\x80\x00\x00\x41\x01\x41\x00\x20\x00\xfd\x53\x1b\x0b\x8b\x80\x80\x80\x00\x00\x41\x01\x41\x00\x20\x00\xfd\x53\x1b\x0b\x8b\x80\x80\x80\x00\x00\x41\x01\x41\x00\x20\x00\xfd\x53\x1b\x0b\x8b\x80\x80\x80\x00\x00\x41\x01\x41\x00\x20\x00\xfd\x63\x1b\x0b\x8c\x80\x80\x80\x00\x00\x41\x01\x41\x00\x20\x00\xfd\x83\x01\x1b\x0b\x8c\x80\x80\x80\x00\x00\x41\x01\x41\x00\x20\x00\xfd\xa3\x01\x1b\x0b\x9b\x80\x80\x80\x00\x01\x01\x7f\x41\x02\x21\x01\x02\x40\x41\x01\x21\x01\x20\x00\xfd\x53\x0d\x00\x41\x00\x21\x01\x0b\x20\x01\x0b\x9b\x80\x80\x80\x00\x01\x01\x7f\x41\x02\x21\x01\x02\x40\x41\x01\x21\x01\x20\x00\xfd\x53\x0d\x00\x41\x00\x21\x01\x0b\x20\x01\x0b\x9b\x80\x80\x80\x00\x01\x01\x7f\x41\x02\x21\x01\x02\x40\x41\x01\x21\x01\x20\x00\xfd\x53\x0d\x00\x41\x00\x21\x01\x0b\x20\x01\x0b\x9b\x80\x80\x80\x00\x01\x01\x7f\x41\x02\x21\x01\x02\x40\x41\x01\x21\x01\x20\x00\xfd\x63\x0d\x00\x41\x00\x21\x01\x0b\x20\x01\x0b\x9c\x80\x80\x80\x00\x01\x01\x7f\x41\x02\x21\x01\x02\x40\x41\x01\x21\x01\x20\x00\xfd\x83\x01\x0d\x00\x41\x00\x21\x01\x0b\x20\x01\x0b\x9c\x80\x80\x80\x00\x01\x01\x7f\x41\x02\x21\x01\x02\x40\x41\x01\x21\x01\x20\x00\xfd\xa3\x01\x0d\x00\x41\x00\x21\x01\x0b\x20\x01\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\xfd\x53\x20\x01\xfd\x53\x71\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\xfd\x53\x20\x01\xfd\x53\x71\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\xfd\x53\x20\x01\xfd\x53\x71\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\xfd\x53\x20\x01\xfd\x53\x72\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\xfd\x53\x20\x01\xfd\x53\x72\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\xfd\x53\x20\x01\xfd\x53\x72\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\xfd\x53\x20\x01\xfd\x53\x73\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\xfd\x53\x20\x01\xfd\x53\x73\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\xfd\x53\x20\x01\xfd\x53\x73\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\xfd\x63\x20\x01\xfd\x63\x71\x0b\x8d\x80\x80\x80\x00\x00\x20\x00\xfd\x83\x01\x20\x01\xfd\x83\x01\x71\x0b\x8d\x80\x80\x80\x00\x00\x20\x00\xfd\xa3\x01\x20\x01\xfd\xa3\x01\x71\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\xfd\x63\x20\x01\xfd\x63\x72\x0b\x8d\x80\x80\x80\x00\x00\x20\x00\xfd\x83\x01\x20\x01\xfd\x83\x01\x72\x0b\x8d\x80\x80\x80\x00\x00\x20\x00\xfd\xa3\x01\x20\x01\xfd\xa3\x01\x72\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\xfd\x63\x20\x01\xfd\x63\x73\x0b\x8d\x80\x80\x80\x00\x00\x20\x00\xfd\x83\x01\x20\x01\xfd\x83\x01\x73\x0b\x8d\x80\x80\x80\x00\x00\x20\x00\xfd\xa3\x01\x20\x01\xfd\xa3\x01\x73\x0b\x88\x80\x80\x80\x00\x00\x20\x00\xfd\x4d\xfd\x53\x0b\x88\x80\x80\x80\x00\x00\x20\x00\xfd\x4d\xfd\x53\x0b\x88\x80\x80\x80\x00\x00\x20\x00\xfd\x4d\xfd\x53\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x4e\xfd\x53\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x4e\xfd\x53\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x4e\xfd\x53\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x50\xfd\x53\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x50\xfd\x53\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x50\xfd\x53\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x51\xfd\x53\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x51\xfd\x53\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x51\xfd\x53\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\x20\x02\xfd\x52\xfd\x53\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\x20\x02\xfd\x52\xfd\x53\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\x20\x02\xfd\x52\xfd\x53\x0b\x88\x80\x80\x80\x00\x00\x20\x00\xfd\x4d\xfd\x63\x0b\x89\x80\x80\x80\x00\x00\x20\x00\xfd\x4d\xfd\x83\x01\x0b\x89\x80\x80\x80\x00\x00\x20\x00\xfd\x4d\xfd\xa3\x01\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x4e\xfd\x63\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x4e\xfd\x83\x01\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x4e\xfd\xa3\x01\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x50\xfd\x63\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x50\xfd\x83\x01\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x50\xfd\xa3\x01\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x51\xfd\x63\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x51\xfd\x83\x01\x0b\x8b\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfd\x51\xfd\xa3\x01\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\x20\x02\xfd\x52\xfd\x63\x0b\x8d\x80\x80\x80\x00\x00\x20\x00\x20\x01\x20\x02\xfd\x52\xfd\x83\x01\x0b\x8d\x80\x80\x80\x00\x00\x20\x00\x20\x01\x20\x02\xfd\x52\xfd\xa3\x01\x0b", "simd_boolean.wast:188");

// simd_boolean.wast:188
let $2 = instance($$2);

// simd_boolean.wast:472
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:472");  // assert_return(() => call($2, "i8x16_any_true_as_if_cond", [v128("0 0 0 0")]), "simd_boolean.wast:472", 0)

// simd_boolean.wast:474
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:474");  // assert_return(() => call($2, "i8x16_any_true_as_if_cond", [v128("65_536 65_536 65_536 65_536")]), "simd_boolean.wast:474", 1)

// simd_boolean.wast:476
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:476");  // assert_return(() => call($2, "i8x16_any_true_as_if_cond", [v128("16_843_009 16_843_009 16_843_009 16_843_009")]), "simd_boolean.wast:476", 1)

// simd_boolean.wast:479
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:479");  // assert_return(() => call($2, "i16x8_any_true_as_if_cond", [v128("0 0 0 0")]), "simd_boolean.wast:479", 0)

// simd_boolean.wast:481
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:481");  // assert_return(() => call($2, "i16x8_any_true_as_if_cond", [v128("0 1 0 1")]), "simd_boolean.wast:481", 1)

// simd_boolean.wast:483
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:483");  // assert_return(() => call($2, "i16x8_any_true_as_if_cond", [v128("65_537 65_537 65_537 65_537")]), "simd_boolean.wast:483", 1)

// simd_boolean.wast:486
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:486");  // assert_return(() => call($2, "i32x4_any_true_as_if_cond", [v128("0 0 0 0")]), "simd_boolean.wast:486", 0)

// simd_boolean.wast:488
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:488");  // assert_return(() => call($2, "i32x4_any_true_as_if_cond", [v128("0 0 1 0")]), "simd_boolean.wast:488", 1)

// simd_boolean.wast:490
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:490");  // assert_return(() => call($2, "i32x4_any_true_as_if_cond", [v128("1 1 1 1")]), "simd_boolean.wast:490", 1)

// simd_boolean.wast:495
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:495");  // assert_return(() => call($2, "i8x16_all_true_as_if_cond", [v128("0 0 0 0")]), "simd_boolean.wast:495", 0)

// simd_boolean.wast:497
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x00\x01\x01\x01\x00\x01\x01\x01\x00\x01\x01\x01\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:497");  // assert_return(() => call($2, "i8x16_all_true_as_if_cond", [v128("65_793 65_793 65_793 65_793")]), "simd_boolean.wast:497", 0)

// simd_boolean.wast:499
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:499");  // assert_return(() => call($2, "i8x16_all_true_as_if_cond", [v128("16_843_009 16_843_009 16_843_009 16_843_009")]), "simd_boolean.wast:499", 1)

// simd_boolean.wast:502
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:502");  // assert_return(() => call($2, "i16x8_all_true_as_if_cond", [v128("0 0 0 0")]), "simd_boolean.wast:502", 0)

// simd_boolean.wast:504
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x00\x00\x01\x00\x01\x00\x01\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:504");  // assert_return(() => call($2, "i16x8_all_true_as_if_cond", [v128("65_537 1 65_537 1")]), "simd_boolean.wast:504", 0)

// simd_boolean.wast:506
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:506");  // assert_return(() => call($2, "i16x8_all_true_as_if_cond", [v128("65_537 65_537 65_537 65_537")]), "simd_boolean.wast:506", 1)

// simd_boolean.wast:509
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:509");  // assert_return(() => call($2, "i32x4_all_true_as_if_cond", [v128("0 0 0 0")]), "simd_boolean.wast:509", 0)

// simd_boolean.wast:511
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:511");  // assert_return(() => call($2, "i32x4_all_true_as_if_cond", [v128("1 1 1 0")]), "simd_boolean.wast:511", 0)

// simd_boolean.wast:513
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:513");  // assert_return(() => call($2, "i32x4_all_true_as_if_cond", [v128("1 1 1 1")]), "simd_boolean.wast:513", 1)

// simd_boolean.wast:517
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1d\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:517");  // assert_return(() => call($2, "i8x16_any_true_as_select_cond", [v128("0 0 0 0")]), "simd_boolean.wast:517", 0)

// simd_boolean.wast:519
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1d\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:519");  // assert_return(() => call($2, "i8x16_any_true_as_select_cond", [v128("0 0 0 65_536")]), "simd_boolean.wast:519", 1)

// simd_boolean.wast:521
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1d\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:521");  // assert_return(() => call($2, "i16x8_any_true_as_select_cond", [v128("0 0 0 0")]), "simd_boolean.wast:521", 0)

// simd_boolean.wast:523
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1d\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:523");  // assert_return(() => call($2, "i16x8_any_true_as_select_cond", [v128("0 0 0 1")]), "simd_boolean.wast:523", 1)

// simd_boolean.wast:525
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1d\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:525");  // assert_return(() => call($2, "i32x4_any_true_as_select_cond", [v128("0 0 0 0")]), "simd_boolean.wast:525", 0)

// simd_boolean.wast:527
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1d\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:527");  // assert_return(() => call($2, "i32x4_any_true_as_select_cond", [v128("0 0 1 0")]), "simd_boolean.wast:527", 1)

// simd_boolean.wast:530
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1d\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:530");  // assert_return(() => call($2, "i8x16_all_true_as_select_cond", [v128("16_843_009 16_843_009 16_843_009 16_843_009")]), "simd_boolean.wast:530", 1)

// simd_boolean.wast:532
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1d\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:532");  // assert_return(() => call($2, "i8x16_all_true_as_select_cond", [v128("16_843_009 16_843_009 16_843_009 16_777_473")]), "simd_boolean.wast:532", 0)

// simd_boolean.wast:534
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1d\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:534");  // assert_return(() => call($2, "i16x8_all_true_as_select_cond", [v128("65_537 65_537 65_537 65_537")]), "simd_boolean.wast:534", 1)

// simd_boolean.wast:536
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1d\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x00\x00\x01\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:536");  // assert_return(() => call($2, "i16x8_all_true_as_select_cond", [v128("65_537 65_537 65_537 65_536")]), "simd_boolean.wast:536", 0)

// simd_boolean.wast:538
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1d\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:538");  // assert_return(() => call($2, "i32x4_all_true_as_select_cond", [v128("1 1 1 1")]), "simd_boolean.wast:538", 1)

// simd_boolean.wast:540
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcd\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1d\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x73\x65\x6c\x65\x63\x74\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:540");  // assert_return(() => call($2, "i32x4_all_true_as_select_cond", [v128("1 1 0 1")]), "simd_boolean.wast:540", 0)

// simd_boolean.wast:543
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:543");  // assert_return(() => call($2, "i8x16_any_true_as_br_if_cond", [v128("0 0 0 0")]), "simd_boolean.wast:543", 0)

// simd_boolean.wast:545
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:545");  // assert_return(() => call($2, "i8x16_any_true_as_br_if_cond", [v128("0 0 0 65_536")]), "simd_boolean.wast:545", 1)

// simd_boolean.wast:547
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:547");  // assert_return(() => call($2, "i16x8_any_true_as_br_if_cond", [v128("0 0 0 0")]), "simd_boolean.wast:547", 0)

// simd_boolean.wast:549
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:549");  // assert_return(() => call($2, "i16x8_any_true_as_br_if_cond", [v128("0 0 0 1")]), "simd_boolean.wast:549", 1)

// simd_boolean.wast:551
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:551");  // assert_return(() => call($2, "i32x4_any_true_as_br_if_cond", [v128("0 0 0 0")]), "simd_boolean.wast:551", 0)

// simd_boolean.wast:553
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:553");  // assert_return(() => call($2, "i32x4_any_true_as_br_if_cond", [v128("0 0 1 0")]), "simd_boolean.wast:553", 1)

// simd_boolean.wast:556
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:556");  // assert_return(() => call($2, "i8x16_all_true_as_br_if_cond", [v128("16_843_009 16_843_009 16_843_009 16_843_009")]), "simd_boolean.wast:556", 1)

// simd_boolean.wast:558
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:558");  // assert_return(() => call($2, "i8x16_all_true_as_br_if_cond", [v128("16_843_009 16_843_009 16_843_009 16_777_473")]), "simd_boolean.wast:558", 0)

// simd_boolean.wast:560
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:560");  // assert_return(() => call($2, "i16x8_all_true_as_br_if_cond", [v128("65_537 65_537 65_537 65_537")]), "simd_boolean.wast:560", 1)

// simd_boolean.wast:562
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x00\x00\x01\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:562");  // assert_return(() => call($2, "i16x8_all_true_as_br_if_cond", [v128("65_537 65_537 65_537 65_536")]), "simd_boolean.wast:562", 0)

// simd_boolean.wast:564
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:564");  // assert_return(() => call($2, "i32x4_all_true_as_br_if_cond", [v128("1 1 1 1")]), "simd_boolean.wast:564", 1)

// simd_boolean.wast:566
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x62\x72\x5f\x69\x66\x5f\x63\x6f\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:566");  // assert_return(() => call($2, "i32x4_all_true_as_br_if_cond", [v128("1 1 0 1")]), "simd_boolean.wast:566", 0)

// simd_boolean.wast:569
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:569");  // assert_return(() => call($2, "i8x16_any_true_as_i32.and_operand", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:569", 0)

// simd_boolean.wast:572
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:572");  // assert_return(() => call($2, "i8x16_any_true_as_i32.and_operand", [v128("0 0 0 0"), v128("0 0 0 65_536")]), "simd_boolean.wast:572", 0)

// simd_boolean.wast:575
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:575");  // assert_return(() => call($2, "i8x16_any_true_as_i32.and_operand", [v128("0 0 0 65_536"), v128("0 0 0 65_536")]), "simd_boolean.wast:575", 1)

// simd_boolean.wast:578
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:578");  // assert_return(() => call($2, "i16x8_any_true_as_i32.and_operand", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:578", 0)

// simd_boolean.wast:581
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:581");  // assert_return(() => call($2, "i16x8_any_true_as_i32.and_operand", [v128("0 0 0 0"), v128("0 0 0 1")]), "simd_boolean.wast:581", 0)

// simd_boolean.wast:584
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:584");  // assert_return(() => call($2, "i16x8_any_true_as_i32.and_operand", [v128("0 0 0 1"), v128("0 0 0 1")]), "simd_boolean.wast:584", 1)

// simd_boolean.wast:587
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:587");  // assert_return(() => call($2, "i32x4_any_true_as_i32.and_operand", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:587", 0)

// simd_boolean.wast:590
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:590");  // assert_return(() => call($2, "i32x4_any_true_as_i32.and_operand", [v128("0 0 0 0"), v128("0 0 1 0")]), "simd_boolean.wast:590", 0)

// simd_boolean.wast:593
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:593");  // assert_return(() => call($2, "i32x4_any_true_as_i32.and_operand", [v128("0 0 1 0"), v128("0 0 1 0")]), "simd_boolean.wast:593", 1)

// simd_boolean.wast:597
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:597");  // assert_return(() => call($2, "i8x16_any_true_as_i32.or_operand", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:597", 0)

// simd_boolean.wast:600
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:600");  // assert_return(() => call($2, "i8x16_any_true_as_i32.or_operand", [v128("0 0 0 0"), v128("0 0 0 65_536")]), "simd_boolean.wast:600", 1)

// simd_boolean.wast:603
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:603");  // assert_return(() => call($2, "i8x16_any_true_as_i32.or_operand", [v128("0 0 0 65_536"), v128("0 0 0 65_536")]), "simd_boolean.wast:603", 1)

// simd_boolean.wast:606
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:606");  // assert_return(() => call($2, "i16x8_any_true_as_i32.or_operand", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:606", 0)

// simd_boolean.wast:609
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:609");  // assert_return(() => call($2, "i16x8_any_true_as_i32.or_operand", [v128("0 0 0 0"), v128("0 0 0 1")]), "simd_boolean.wast:609", 1)

// simd_boolean.wast:612
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:612");  // assert_return(() => call($2, "i16x8_any_true_as_i32.or_operand", [v128("0 0 0 1"), v128("0 0 0 1")]), "simd_boolean.wast:612", 1)

// simd_boolean.wast:615
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:615");  // assert_return(() => call($2, "i32x4_any_true_as_i32.or_operand", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:615", 0)

// simd_boolean.wast:618
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:618");  // assert_return(() => call($2, "i32x4_any_true_as_i32.or_operand", [v128("0 0 0 0"), v128("0 0 1 0")]), "simd_boolean.wast:618", 1)

// simd_boolean.wast:621
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:621");  // assert_return(() => call($2, "i32x4_any_true_as_i32.or_operand", [v128("0 0 1 0"), v128("0 0 1 0")]), "simd_boolean.wast:621", 1)

// simd_boolean.wast:625
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:625");  // assert_return(() => call($2, "i8x16_any_true_as_i32.xor_operand", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:625", 0)

// simd_boolean.wast:628
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:628");  // assert_return(() => call($2, "i8x16_any_true_as_i32.xor_operand", [v128("0 0 0 0"), v128("0 0 0 65_536")]), "simd_boolean.wast:628", 1)

// simd_boolean.wast:631
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:631");  // assert_return(() => call($2, "i8x16_any_true_as_i32.xor_operand", [v128("0 0 0 65_536"), v128("0 0 0 65_536")]), "simd_boolean.wast:631", 0)

// simd_boolean.wast:634
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:634");  // assert_return(() => call($2, "i16x8_any_true_as_i32.xor_operand", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:634", 0)

// simd_boolean.wast:637
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:637");  // assert_return(() => call($2, "i16x8_any_true_as_i32.xor_operand", [v128("0 0 0 0"), v128("0 0 0 1")]), "simd_boolean.wast:637", 1)

// simd_boolean.wast:640
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:640");  // assert_return(() => call($2, "i16x8_any_true_as_i32.xor_operand", [v128("0 0 0 1"), v128("0 0 0 1")]), "simd_boolean.wast:640", 0)

// simd_boolean.wast:643
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:643");  // assert_return(() => call($2, "i32x4_any_true_as_i32.xor_operand", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:643", 0)

// simd_boolean.wast:646
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:646");  // assert_return(() => call($2, "i32x4_any_true_as_i32.xor_operand", [v128("0 0 0 0"), v128("0 0 1 0")]), "simd_boolean.wast:646", 1)

// simd_boolean.wast:649
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:649");  // assert_return(() => call($2, "i32x4_any_true_as_i32.xor_operand", [v128("0 0 1 0"), v128("0 0 1 0")]), "simd_boolean.wast:649", 0)

// simd_boolean.wast:653
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:653");  // assert_return(() => call($2, "i8x16_all_true_as_i32.and_operand", [v128("16_843_009 16_843_009 16_843_009 16_843_009"), v128("16_843_009 16_843_009 16_843_009 16_843_009")]), "simd_boolean.wast:653", 1)

// simd_boolean.wast:656
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:656");  // assert_return(() => call($2, "i8x16_all_true_as_i32.and_operand", [v128("16_843_009 16_843_009 16_843_009 16_843_009"), v128("16_843_009 16_843_009 16_843_009 16_777_473")]), "simd_boolean.wast:656", 0)

// simd_boolean.wast:659
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:659");  // assert_return(() => call($2, "i8x16_all_true_as_i32.and_operand", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:659", 0)

// simd_boolean.wast:662
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:662");  // assert_return(() => call($2, "i16x8_all_true_as_i32.and_operand", [v128("65_537 65_537 65_537 65_537"), v128("65_537 65_537 65_537 65_537")]), "simd_boolean.wast:662", 1)

// simd_boolean.wast:665
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x00\x00\x01\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:665");  // assert_return(() => call($2, "i16x8_all_true_as_i32.and_operand", [v128("65_537 65_537 65_537 65_537"), v128("65_537 65_537 65_537 65_536")]), "simd_boolean.wast:665", 0)

// simd_boolean.wast:668
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:668");  // assert_return(() => call($2, "i16x8_all_true_as_i32.and_operand", [v128("0 0 0 0"), v128("0 0 0 1")]), "simd_boolean.wast:668", 0)

// simd_boolean.wast:671
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:671");  // assert_return(() => call($2, "i32x4_all_true_as_i32.and_operand", [v128("1 1 1 1"), v128("1 1 1 1")]), "simd_boolean.wast:671", 1)

// simd_boolean.wast:674
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:674");  // assert_return(() => call($2, "i32x4_all_true_as_i32.and_operand", [v128("1 1 1 1"), v128("1 1 0 1")]), "simd_boolean.wast:674", 0)

// simd_boolean.wast:677
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x61\x6e\x64\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:677");  // assert_return(() => call($2, "i32x4_all_true_as_i32.and_operand", [v128("0 0 0 0"), v128("0 0 1 0")]), "simd_boolean.wast:677", 0)

// simd_boolean.wast:681
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:681");  // assert_return(() => call($2, "i8x16_all_true_as_i32.or_operand", [v128("16_843_009 16_843_009 16_843_009 16_843_009"), v128("16_843_009 16_843_009 16_843_009 16_843_009")]), "simd_boolean.wast:681", 1)

// simd_boolean.wast:684
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:684");  // assert_return(() => call($2, "i8x16_all_true_as_i32.or_operand", [v128("16_843_009 16_843_009 16_843_009 16_843_009"), v128("16_843_009 16_843_009 16_843_009 16_777_473")]), "simd_boolean.wast:684", 1)

// simd_boolean.wast:687
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:687");  // assert_return(() => call($2, "i8x16_all_true_as_i32.or_operand", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:687", 0)

// simd_boolean.wast:690
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:690");  // assert_return(() => call($2, "i16x8_all_true_as_i32.or_operand", [v128("65_537 65_537 65_537 65_537"), v128("65_537 65_537 65_537 65_537")]), "simd_boolean.wast:690", 1)

// simd_boolean.wast:693
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x00\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:693");  // assert_return(() => call($2, "i16x8_all_true_as_i32.or_operand", [v128("65_537 65_537 65_537 65_537"), v128("65_537 65_537 65_537 65_536")]), "simd_boolean.wast:693", 1)

// simd_boolean.wast:696
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:696");  // assert_return(() => call($2, "i16x8_all_true_as_i32.or_operand", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:696", 0)

// simd_boolean.wast:699
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:699");  // assert_return(() => call($2, "i32x4_all_true_as_i32.or_operand", [v128("1 1 1 1"), v128("1 1 1 1")]), "simd_boolean.wast:699", 1)

// simd_boolean.wast:702
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:702");  // assert_return(() => call($2, "i32x4_all_true_as_i32.or_operand", [v128("1 1 1 1"), v128("1 1 0 1")]), "simd_boolean.wast:702", 1)

// simd_boolean.wast:705
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd0\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x20\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:705");  // assert_return(() => call($2, "i32x4_all_true_as_i32.or_operand", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:705", 0)

// simd_boolean.wast:709
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:709");  // assert_return(() => call($2, "i8x16_all_true_as_i32.xor_operand", [v128("16_843_009 16_843_009 16_843_009 16_843_009"), v128("16_843_009 16_843_009 16_843_009 16_843_009")]), "simd_boolean.wast:709", 0)

// simd_boolean.wast:712
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xfd\x0c\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x01\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:712");  // assert_return(() => call($2, "i8x16_all_true_as_i32.xor_operand", [v128("16_843_009 16_843_009 16_843_009 16_843_009"), v128("16_843_009 16_843_009 16_843_009 16_777_473")]), "simd_boolean.wast:712", 1)

// simd_boolean.wast:715
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:715");  // assert_return(() => call($2, "i8x16_all_true_as_i32.xor_operand", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:715", 0)

// simd_boolean.wast:718
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:718");  // assert_return(() => call($2, "i16x8_all_true_as_i32.xor_operand", [v128("65_537 65_537 65_537 65_537"), v128("65_537 65_537 65_537 65_537")]), "simd_boolean.wast:718", 0)

// simd_boolean.wast:721
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\xfd\x0c\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x01\x00\x00\x00\x01\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:721");  // assert_return(() => call($2, "i16x8_all_true_as_i32.xor_operand", [v128("65_537 65_537 65_537 65_537"), v128("65_537 65_537 65_537 65_536")]), "simd_boolean.wast:721", 1)

// simd_boolean.wast:724
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:724");  // assert_return(() => call($2, "i16x8_all_true_as_i32.xor_operand", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:724", 0)

// simd_boolean.wast:727
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:727");  // assert_return(() => call($2, "i32x4_all_true_as_i32.xor_operand", [v128("1 1 1 1"), v128("1 1 1 1")]), "simd_boolean.wast:727", 0)

// simd_boolean.wast:730
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\xfd\x0c\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:730");  // assert_return(() => call($2, "i32x4_all_true_as_i32.xor_operand", [v128("1 1 1 1"), v128("1 1 0 1")]), "simd_boolean.wast:730", 1)

// simd_boolean.wast:733
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xd1\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x21\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x61\x73\x5f\x69\x33\x32\x2e\x78\x6f\x72\x5f\x6f\x70\x65\x72\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:733");  // assert_return(() => call($2, "i32x4_all_true_as_i32.xor_operand", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:733", 0)

// simd_boolean.wast:737
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:737");  // assert_return(() => call($2, "i8x16_any_true_with_v128.not", [v128("0 0 0 0")]), "simd_boolean.wast:737", 1)

// simd_boolean.wast:739
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:739");  // assert_return(() => call($2, "i8x16_any_true_with_v128.not", [v128("-1 -1 -1 -1")]), "simd_boolean.wast:739", 0)

// simd_boolean.wast:741
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:741");  // assert_return(() => call($2, "i8x16_any_true_with_v128.not", [v128("0 0 0 16_711_680")]), "simd_boolean.wast:741", 1)

// simd_boolean.wast:743
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:743");  // assert_return(() => call($2, "i16x8_any_true_with_v128.not", [v128("0 0 0 0")]), "simd_boolean.wast:743", 1)

// simd_boolean.wast:745
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:745");  // assert_return(() => call($2, "i16x8_any_true_with_v128.not", [v128("-1 -1 -1 -1")]), "simd_boolean.wast:745", 0)

// simd_boolean.wast:747
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:747");  // assert_return(() => call($2, "i16x8_any_true_with_v128.not", [v128("0 0 0 65_535")]), "simd_boolean.wast:747", 1)

// simd_boolean.wast:749
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:749");  // assert_return(() => call($2, "i32x4_any_true_with_v128.not", [v128("0 0 0 0")]), "simd_boolean.wast:749", 1)

// simd_boolean.wast:751
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:751");  // assert_return(() => call($2, "i32x4_any_true_with_v128.not", [v128("-1 -1 -1 -1")]), "simd_boolean.wast:751", 0)

// simd_boolean.wast:753
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:753");  // assert_return(() => call($2, "i32x4_any_true_with_v128.not", [v128("0 0 -1 0")]), "simd_boolean.wast:753", 1)

// simd_boolean.wast:756
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:756");  // assert_return(() => call($2, "i8x16_any_true_with_v128.and", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:756", 0)

// simd_boolean.wast:759
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:759");  // assert_return(() => call($2, "i8x16_any_true_with_v128.and", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:759", 1)

// simd_boolean.wast:762
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:762");  // assert_return(() => call($2, "i8x16_any_true_with_v128.and", [v128("0 0 0 16_711_680"), v128("0 0 0 16_711_680")]), "simd_boolean.wast:762", 1)

// simd_boolean.wast:765
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:765");  // assert_return(() => call($2, "i16x8_any_true_with_v128.and", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:765", 0)

// simd_boolean.wast:768
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:768");  // assert_return(() => call($2, "i16x8_any_true_with_v128.and", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:768", 1)

// simd_boolean.wast:771
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:771");  // assert_return(() => call($2, "i16x8_any_true_with_v128.and", [v128("0 0 0 65_535"), v128("0 0 0 65_535")]), "simd_boolean.wast:771", 1)

// simd_boolean.wast:774
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:774");  // assert_return(() => call($2, "i32x4_any_true_with_v128.and", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:774", 0)

// simd_boolean.wast:777
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:777");  // assert_return(() => call($2, "i32x4_any_true_with_v128.and", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:777", 1)

// simd_boolean.wast:780
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:780");  // assert_return(() => call($2, "i32x4_any_true_with_v128.and", [v128("0 0 -1 0"), v128("0 0 -1 0")]), "simd_boolean.wast:780", 1)

// simd_boolean.wast:784
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:784");  // assert_return(() => call($2, "i8x16_any_true_with_v128.or", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:784", 0)

// simd_boolean.wast:787
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:787");  // assert_return(() => call($2, "i8x16_any_true_with_v128.or", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:787", 1)

// simd_boolean.wast:790
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:790");  // assert_return(() => call($2, "i8x16_any_true_with_v128.or", [v128("0 0 0 16_711_680"), v128("0 0 0 16_711_680")]), "simd_boolean.wast:790", 1)

// simd_boolean.wast:793
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:793");  // assert_return(() => call($2, "i16x8_any_true_with_v128.or", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:793", 0)

// simd_boolean.wast:796
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:796");  // assert_return(() => call($2, "i16x8_any_true_with_v128.or", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:796", 1)

// simd_boolean.wast:799
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:799");  // assert_return(() => call($2, "i16x8_any_true_with_v128.or", [v128("0 0 0 65_535"), v128("0 0 0 65_535")]), "simd_boolean.wast:799", 1)

// simd_boolean.wast:802
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:802");  // assert_return(() => call($2, "i32x4_any_true_with_v128.or", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:802", 0)

// simd_boolean.wast:805
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:805");  // assert_return(() => call($2, "i32x4_any_true_with_v128.or", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:805", 1)

// simd_boolean.wast:808
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:808");  // assert_return(() => call($2, "i32x4_any_true_with_v128.or", [v128("0 0 -1 0"), v128("0 0 -1 0")]), "simd_boolean.wast:808", 1)

// simd_boolean.wast:812
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:812");  // assert_return(() => call($2, "i8x16_any_true_with_v128.xor", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:812", 0)

// simd_boolean.wast:815
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:815");  // assert_return(() => call($2, "i8x16_any_true_with_v128.xor", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:815", 0)

// simd_boolean.wast:818
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:818");  // assert_return(() => call($2, "i8x16_any_true_with_v128.xor", [v128("0 0 0 0"), v128("0 0 0 16_711_680")]), "simd_boolean.wast:818", 1)

// simd_boolean.wast:821
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:821");  // assert_return(() => call($2, "i16x8_any_true_with_v128.xor", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:821", 0)

// simd_boolean.wast:824
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:824");  // assert_return(() => call($2, "i16x8_any_true_with_v128.xor", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:824", 0)

// simd_boolean.wast:827
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:827");  // assert_return(() => call($2, "i16x8_any_true_with_v128.xor", [v128("0 0 0 0"), v128("0 0 0 65_535")]), "simd_boolean.wast:827", 1)

// simd_boolean.wast:830
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:830");  // assert_return(() => call($2, "i32x4_any_true_with_v128.xor", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:830", 0)

// simd_boolean.wast:833
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:833");  // assert_return(() => call($2, "i32x4_any_true_with_v128.xor", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:833", 0)

// simd_boolean.wast:836
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:836");  // assert_return(() => call($2, "i32x4_any_true_with_v128.xor", [v128("0 0 0 0"), v128("0 0 -1 0")]), "simd_boolean.wast:836", 1)

// simd_boolean.wast:840
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x96\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x03\x7b\x7b\x7b\x01\x7f\x02\xd2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x22\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xcd\x80\x80\x80\x00\x01\xc7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xfd\x0c\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\xfd\x0c\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:840");  // assert_return(() => call($2, "i8x16_any_true_with_v128.bitselect", [v128("-1_431_655_766 -1_431_655_766 -1_431_655_766 -1_431_655_766"), v128("1_431_655_765 1_431_655_765 1_431_655_765 1_431_655_765"), v128("1_431_655_765 1_431_655_765 1_431_655_765 1_431_655_765")]), "simd_boolean.wast:840", 0)

// simd_boolean.wast:844
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x96\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x03\x7b\x7b\x7b\x01\x7f\x02\xd2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x22\x69\x38\x78\x31\x36\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xcd\x80\x80\x80\x00\x01\xc7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xfd\x0c\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\xfd\x0c\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\xff\x55\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:844");  // assert_return(() => call($2, "i8x16_any_true_with_v128.bitselect", [v128("-1_431_655_766 -1_431_655_766 -1_431_655_766 -1_431_655_766"), v128("1_431_655_765 1_431_655_765 1_431_655_765 1_431_655_765"), v128("1_431_655_765 1_431_655_765 1_431_655_765 1_442_796_885")]), "simd_boolean.wast:844", 1)

// simd_boolean.wast:848
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x96\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x03\x7b\x7b\x7b\x01\x7f\x02\xd2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x22\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xcd\x80\x80\x80\x00\x01\xc7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xfd\x0c\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\xfd\x0c\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:848");  // assert_return(() => call($2, "i16x8_any_true_with_v128.bitselect", [v128("11_141_290 11_141_290 11_141_290 11_141_290"), v128("5_570_645 5_570_645 5_570_645 5_570_645"), v128("5_570_645 5_570_645 5_570_645 5_570_645")]), "simd_boolean.wast:848", 0)

// simd_boolean.wast:852
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x96\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x03\x7b\x7b\x7b\x01\x7f\x02\xd2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x22\x69\x31\x36\x78\x38\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xcd\x80\x80\x80\x00\x01\xc7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xfd\x0c\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\xfd\x0c\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\xff\x00\x55\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:852");  // assert_return(() => call($2, "i16x8_any_true_with_v128.bitselect", [v128("11_141_290 11_141_290 11_141_290 11_141_290"), v128("5_570_645 5_570_645 5_570_645 5_570_645"), v128("5_570_645 5_570_645 5_570_645 5_570_815")]), "simd_boolean.wast:852", 1)

// simd_boolean.wast:856
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x96\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x03\x7b\x7b\x7b\x01\x7f\x02\xd2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x22\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xcd\x80\x80\x80\x00\x01\xc7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xaa\x00\x00\x00\xaa\x00\x00\x00\xaa\x00\x00\x00\xaa\x00\x00\x00\xfd\x0c\x55\x00\x00\x00\x55\x00\x00\x00\x55\x00\x00\x00\x55\x00\x00\x00\xfd\x0c\x55\x00\x00\x00\x55\x00\x00\x00\x55\x00\x00\x00\x55\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:856");  // assert_return(() => call($2, "i32x4_any_true_with_v128.bitselect", [v128("170 170 170 170"), v128("85 85 85 85"), v128("85 85 85 85")]), "simd_boolean.wast:856", 0)

// simd_boolean.wast:860
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x96\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x03\x7b\x7b\x7b\x01\x7f\x02\xd2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x22\x69\x33\x32\x78\x34\x5f\x61\x6e\x79\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xcd\x80\x80\x80\x00\x01\xc7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xaa\x00\x00\x00\xaa\x00\x00\x00\xaa\x00\x00\x00\xaa\x00\x00\x00\xfd\x0c\x55\x00\x00\x00\x55\x00\x00\x00\x55\x00\x00\x00\x55\x00\x00\x00\xfd\x0c\x55\x00\x00\x00\x55\x00\x00\x00\xff\x00\x00\x00\x55\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:860");  // assert_return(() => call($2, "i32x4_any_true_with_v128.bitselect", [v128("170 170 170 170"), v128("85 85 85 85"), v128("85 85 255 85")]), "simd_boolean.wast:860", 1)

// simd_boolean.wast:865
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:865");  // assert_return(() => call($2, "i8x16_all_true_with_v128.not", [v128("0 0 0 0")]), "simd_boolean.wast:865", 1)

// simd_boolean.wast:867
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:867");  // assert_return(() => call($2, "i8x16_all_true_with_v128.not", [v128("-1 -1 -1 -1")]), "simd_boolean.wast:867", 0)

// simd_boolean.wast:869
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:869");  // assert_return(() => call($2, "i8x16_all_true_with_v128.not", [v128("0 0 0 16_711_680")]), "simd_boolean.wast:869", 0)

// simd_boolean.wast:871
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:871");  // assert_return(() => call($2, "i16x8_all_true_with_v128.not", [v128("0 0 0 0")]), "simd_boolean.wast:871", 1)

// simd_boolean.wast:873
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:873");  // assert_return(() => call($2, "i16x8_all_true_with_v128.not", [v128("-1 -1 -1 -1")]), "simd_boolean.wast:873", 0)

// simd_boolean.wast:875
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:875");  // assert_return(() => call($2, "i16x8_all_true_with_v128.not", [v128("0 0 0 65_535")]), "simd_boolean.wast:875", 0)

// simd_boolean.wast:877
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:877");  // assert_return(() => call($2, "i32x4_all_true_with_v128.not", [v128("0 0 0 0")]), "simd_boolean.wast:877", 1)

// simd_boolean.wast:879
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:879");  // assert_return(() => call($2, "i32x4_all_true_with_v128.not", [v128("-1 -1 -1 -1")]), "simd_boolean.wast:879", 0)

// simd_boolean.wast:881
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6e\x6f\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:881");  // assert_return(() => call($2, "i32x4_all_true_with_v128.not", [v128("0 0 -1 0")]), "simd_boolean.wast:881", 0)

// simd_boolean.wast:884
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:884");  // assert_return(() => call($2, "i8x16_all_true_with_v128.and", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:884", 0)

// simd_boolean.wast:887
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:887");  // assert_return(() => call($2, "i8x16_all_true_with_v128.and", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:887", 1)

// simd_boolean.wast:890
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:890");  // assert_return(() => call($2, "i8x16_all_true_with_v128.and", [v128("0 0 0 16_711_680"), v128("0 0 0 16_711_680")]), "simd_boolean.wast:890", 0)

// simd_boolean.wast:893
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:893");  // assert_return(() => call($2, "i16x8_all_true_with_v128.and", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:893", 0)

// simd_boolean.wast:896
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:896");  // assert_return(() => call($2, "i16x8_all_true_with_v128.and", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:896", 1)

// simd_boolean.wast:899
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:899");  // assert_return(() => call($2, "i16x8_all_true_with_v128.and", [v128("0 0 0 65_535"), v128("0 0 0 65_535")]), "simd_boolean.wast:899", 0)

// simd_boolean.wast:902
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:902");  // assert_return(() => call($2, "i32x4_all_true_with_v128.and", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:902", 0)

// simd_boolean.wast:905
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:905");  // assert_return(() => call($2, "i32x4_all_true_with_v128.and", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:905", 1)

// simd_boolean.wast:908
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x61\x6e\x64\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:908");  // assert_return(() => call($2, "i32x4_all_true_with_v128.and", [v128("0 0 -1 0"), v128("0 0 -1 0")]), "simd_boolean.wast:908", 0)

// simd_boolean.wast:912
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:912");  // assert_return(() => call($2, "i8x16_all_true_with_v128.or", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:912", 0)

// simd_boolean.wast:915
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:915");  // assert_return(() => call($2, "i8x16_all_true_with_v128.or", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:915", 1)

// simd_boolean.wast:918
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:918");  // assert_return(() => call($2, "i8x16_all_true_with_v128.or", [v128("0 0 0 16_711_680"), v128("0 0 0 16_711_680")]), "simd_boolean.wast:918", 0)

// simd_boolean.wast:921
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:921");  // assert_return(() => call($2, "i16x8_all_true_with_v128.or", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:921", 0)

// simd_boolean.wast:924
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:924");  // assert_return(() => call($2, "i16x8_all_true_with_v128.or", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:924", 1)

// simd_boolean.wast:927
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:927");  // assert_return(() => call($2, "i16x8_all_true_with_v128.or", [v128("0 0 0 65_535"), v128("0 0 0 65_535")]), "simd_boolean.wast:927", 0)

// simd_boolean.wast:930
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:930");  // assert_return(() => call($2, "i32x4_all_true_with_v128.or", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:930", 0)

// simd_boolean.wast:933
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:933");  // assert_return(() => call($2, "i32x4_all_true_with_v128.or", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:933", 1)

// simd_boolean.wast:936
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcb\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1b\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:936");  // assert_return(() => call($2, "i32x4_all_true_with_v128.or", [v128("0 0 -1 0"), v128("0 0 -1 0")]), "simd_boolean.wast:936", 0)

// simd_boolean.wast:940
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:940");  // assert_return(() => call($2, "i8x16_all_true_with_v128.xor", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:940", 0)

// simd_boolean.wast:943
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:943");  // assert_return(() => call($2, "i8x16_all_true_with_v128.xor", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:943", 0)

// simd_boolean.wast:946
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\xfd\x0c\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\xff\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:946");  // assert_return(() => call($2, "i8x16_all_true_with_v128.xor", [v128("-16_711_936 -16_711_936 -16_711_936 -16_711_936"), v128("16_711_935 16_711_935 16_711_935 16_711_935")]), "simd_boolean.wast:946", 1)

// simd_boolean.wast:949
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:949");  // assert_return(() => call($2, "i16x8_all_true_with_v128.xor", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:949", 0)

// simd_boolean.wast:952
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:952");  // assert_return(() => call($2, "i16x8_all_true_with_v128.xor", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:952", 0)

// simd_boolean.wast:955
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\xfd\x0c\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\xff\xff\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:955");  // assert_return(() => call($2, "i16x8_all_true_with_v128.xor", [v128("-65_536 -65_536 -65_536 -65_536"), v128("65_535 65_535 65_535 65_535")]), "simd_boolean.wast:955", 1)

// simd_boolean.wast:958
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfd\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:958");  // assert_return(() => call($2, "i32x4_all_true_with_v128.xor", [v128("0 0 0 0"), v128("0 0 0 0")]), "simd_boolean.wast:958", 0)

// simd_boolean.wast:961
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:961");  // assert_return(() => call($2, "i32x4_all_true_with_v128.xor", [v128("-1 -1 -1 -1"), v128("-1 -1 -1 -1")]), "simd_boolean.wast:961", 0)

// simd_boolean.wast:964
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x02\x7b\x7b\x01\x7f\x02\xcc\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x1c\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x78\x6f\x72\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xbb\x80\x80\x80\x00\x01\xb5\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\xfd\x0c\xff\xff\xff\xff\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:964");  // assert_return(() => call($2, "i32x4_all_true_with_v128.xor", [v128("0 -1 0 -1"), v128("-1 0 -1 0")]), "simd_boolean.wast:964", 1)

// simd_boolean.wast:968
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x96\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x03\x7b\x7b\x7b\x01\x7f\x02\xd2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x22\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xcd\x80\x80\x80\x00\x01\xc7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xfd\x0c\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\xfd\x0c\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:968");  // assert_return(() => call($2, "i8x16_all_true_with_v128.bitselect", [v128("-1_431_655_766 -1_431_655_766 -1_431_655_766 -1_431_655_766"), v128("1_431_655_765 1_431_655_765 1_431_655_765 1_431_655_765"), v128("1_431_655_765 1_431_655_765 1_431_655_765 1_431_655_765")]), "simd_boolean.wast:968", 0)

// simd_boolean.wast:972
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x96\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x03\x7b\x7b\x7b\x01\x7f\x02\xd2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x22\x69\x38\x78\x31\x36\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xcd\x80\x80\x80\x00\x01\xc7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xfd\x0c\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\xfd\x0c\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:972");  // assert_return(() => call($2, "i8x16_all_true_with_v128.bitselect", [v128("-1_431_655_766 -1_431_655_766 -1_431_655_766 -1_431_655_766"), v128("1_431_655_765 1_431_655_765 1_431_655_765 1_431_655_765"), v128("-1_431_655_766 -1_431_655_766 -1_431_655_766 -1_431_655_766")]), "simd_boolean.wast:972", 1)

// simd_boolean.wast:976
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x96\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x03\x7b\x7b\x7b\x01\x7f\x02\xd2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x22\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xcd\x80\x80\x80\x00\x01\xc7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xfd\x0c\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\xfd\x0c\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:976");  // assert_return(() => call($2, "i16x8_all_true_with_v128.bitselect", [v128("11_141_290 11_141_290 11_141_290 11_141_290"), v128("5_570_645 5_570_645 5_570_645 5_570_645"), v128("5_570_645 5_570_645 5_570_645 5_570_645")]), "simd_boolean.wast:976", 0)

// simd_boolean.wast:980
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x96\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x03\x7b\x7b\x7b\x01\x7f\x02\xd2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x22\x69\x31\x36\x78\x38\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xcd\x80\x80\x80\x00\x01\xc7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xfd\x0c\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\x55\x00\xfd\x0c\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\xaa\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:980");  // assert_return(() => call($2, "i16x8_all_true_with_v128.bitselect", [v128("11_141_290 11_141_290 11_141_290 11_141_290"), v128("5_570_645 5_570_645 5_570_645 5_570_645"), v128("11_141_290 11_141_290 11_141_290 11_141_290")]), "simd_boolean.wast:980", 1)

// simd_boolean.wast:984
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x96\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x03\x7b\x7b\x7b\x01\x7f\x02\xd2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x22\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xcd\x80\x80\x80\x00\x01\xc7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xaa\x00\x00\x00\xaa\x00\x00\x00\xaa\x00\x00\x00\xaa\x00\x00\x00\xfd\x0c\x55\x00\x00\x00\x55\x00\x00\x00\x55\x00\x00\x00\x55\x00\x00\x00\xfd\x0c\x55\x00\x00\x00\x55\x00\x00\x00\x55\x00\x00\x00\x55\x00\x00\x00\x10\x00\x01\x41\x00\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:984");  // assert_return(() => call($2, "i32x4_all_true_with_v128.bitselect", [v128("170 170 170 170"), v128("85 85 85 85"), v128("85 85 85 85")]), "simd_boolean.wast:984", 0)

// simd_boolean.wast:988
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x96\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x03\x7b\x7b\x7b\x01\x7f\x02\xd2\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x22\x69\x33\x32\x78\x34\x5f\x61\x6c\x6c\x5f\x74\x72\x75\x65\x5f\x77\x69\x74\x68\x5f\x76\x31\x32\x38\x2e\x62\x69\x74\x73\x65\x6c\x65\x63\x74\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xcd\x80\x80\x80\x00\x01\xc7\x80\x80\x80\x00\x00\x02\x40\xfd\x0c\xaa\x00\x00\x00\xaa\x00\x00\x00\xaa\x00\x00\x00\xaa\x00\x00\x00\xfd\x0c\x55\x00\x00\x00\x55\x00\x00\x00\x55\x00\x00\x00\x55\x00\x00\x00\xfd\x0c\xaa\x00\x00\x00\xaa\x00\x00\x00\xaa\x00\x00\x00\xaa\x00\x00\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "simd_boolean.wast:988");  // assert_return(() => call($2, "i32x4_all_true_with_v128.bitselect", [v128("170 170 170 170"), v128("85 85 85 85"), v128("170 170 170 170")]), "simd_boolean.wast:988", 1)

// simd_boolean.wast:995
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x41\x00\xfd\x53\x0b", "simd_boolean.wast:995");

// simd_boolean.wast:996
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x41\x00\xfd\x63\x0b", "simd_boolean.wast:996");

// simd_boolean.wast:997
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x41\x00\xfd\x53\x0b", "simd_boolean.wast:997");

// simd_boolean.wast:998
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x00\xfd\x83\x01\x0b", "simd_boolean.wast:998");

// simd_boolean.wast:999
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x41\x00\xfd\x53\x0b", "simd_boolean.wast:999");

// simd_boolean.wast:1000
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x00\xfd\xa3\x01\x0b", "simd_boolean.wast:1000");

// simd_boolean.wast:1004
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_boolean.wast:1004");

// simd_boolean.wast:1005
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_boolean.wast:1005");

// simd_boolean.wast:1006
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_boolean.wast:1006");

// simd_boolean.wast:1007
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "simd_boolean.wast:1007");

// simd_boolean.wast:1011
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\xfd\x53\x0b", "simd_boolean.wast:1011");

// simd_boolean.wast:1019
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\xfd\x63\x0b", "simd_boolean.wast:1019");

// simd_boolean.wast:1027
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\xfd\x53\x0b", "simd_boolean.wast:1027");

// simd_boolean.wast:1035
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\x83\x01\x0b", "simd_boolean.wast:1035");

// simd_boolean.wast:1043
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\xfd\x53\x0b", "simd_boolean.wast:1043");

// simd_boolean.wast:1051
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7b\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfd\xa3\x01\x0b", "simd_boolean.wast:1051");
reinitializeRegistry();
})();
