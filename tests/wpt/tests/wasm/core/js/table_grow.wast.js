(function table_grow_wast_js() {

// table_grow.wast:1
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x01\x7f\x01\x6f\x60\x02\x7f\x6f\x00\x60\x02\x7f\x6f\x01\x7f\x60\x00\x01\x7f\x03\x86\x80\x80\x80\x00\x05\x00\x01\x02\x02\x03\x04\x84\x80\x80\x80\x00\x01\x6f\x00\x00\x07\xa9\x80\x80\x80\x00\x05\x03\x67\x65\x74\x00\x00\x03\x73\x65\x74\x00\x01\x04\x67\x72\x6f\x77\x00\x02\x0b\x67\x72\x6f\x77\x2d\x61\x62\x62\x72\x65\x76\x00\x03\x04\x73\x69\x7a\x65\x00\x04\x0a\xbf\x80\x80\x80\x00\x05\x86\x80\x80\x80\x00\x00\x20\x00\x25\x00\x0b\x88\x80\x80\x80\x00\x00\x20\x00\x20\x01\x26\x00\x0b\x89\x80\x80\x80\x00\x00\x20\x01\x20\x00\xfc\x0f\x00\x0b\x89\x80\x80\x80\x00\x00\x20\x01\x20\x00\xfc\x0f\x00\x0b\x85\x80\x80\x80\x00\x00\xfc\x10\x00\x0b", "table_grow.wast:1");

// table_grow.wast:1
let $1 = instance($$1);

// table_grow.wast:17
assert_return(() => call($1, "size", []), "table_grow.wast:17", 0);

// table_grow.wast:18
assert_trap(() => call($1, "set", [0, hostref(2)]), "table_grow.wast:18");

// table_grow.wast:19
assert_trap(() => call($1, "get", [0]), "table_grow.wast:19");

// table_grow.wast:21
assert_return(() => call($1, "grow", [1, null]), "table_grow.wast:21", 0);

// table_grow.wast:22
assert_return(() => call($1, "size", []), "table_grow.wast:22", 1);

// table_grow.wast:23
assert_return(() => call($1, "get", [0]), "table_grow.wast:23", null);

// table_grow.wast:24
assert_return(() => call($1, "set", [0, hostref(2)]), "table_grow.wast:24");

// table_grow.wast:25
assert_return(() => call($1, "get", [0]), "table_grow.wast:25", hostref(2));

// table_grow.wast:26
assert_trap(() => call($1, "set", [1, hostref(2)]), "table_grow.wast:26");

// table_grow.wast:27
assert_trap(() => call($1, "get", [1]), "table_grow.wast:27");

// table_grow.wast:29
assert_return(() => call($1, "grow-abbrev", [4, hostref(3)]), "table_grow.wast:29", 1);

// table_grow.wast:30
assert_return(() => call($1, "size", []), "table_grow.wast:30", 5);

// table_grow.wast:31
assert_return(() => call($1, "get", [0]), "table_grow.wast:31", hostref(2));

// table_grow.wast:32
assert_return(() => call($1, "set", [0, hostref(2)]), "table_grow.wast:32");

// table_grow.wast:33
assert_return(() => call($1, "get", [0]), "table_grow.wast:33", hostref(2));

// table_grow.wast:34
assert_return(() => call($1, "get", [1]), "table_grow.wast:34", hostref(3));

// table_grow.wast:35
assert_return(() => call($1, "get", [4]), "table_grow.wast:35", hostref(3));

// table_grow.wast:36
assert_return(() => call($1, "set", [4, hostref(4)]), "table_grow.wast:36");

// table_grow.wast:37
assert_return(() => call($1, "get", [4]), "table_grow.wast:37", hostref(4));

// table_grow.wast:38
assert_trap(() => call($1, "set", [5, hostref(2)]), "table_grow.wast:38");

// table_grow.wast:39
assert_trap(() => call($1, "get", [5]), "table_grow.wast:39");

// table_grow.wast:43
let $$2 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x10\x07\x88\x80\x80\x80\x00\x01\x04\x67\x72\x6f\x77\x00\x00\x09\x85\x80\x80\x80\x00\x01\x03\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\xd2\x00\x41\x70\xfc\x0f\x00\x0b", "table_grow.wast:43");

// table_grow.wast:43
let $2 = instance($$2);

// table_grow.wast:51
assert_return(() => call($2, "grow", []), "table_grow.wast:51", -1);

// table_grow.wast:54
let $$3 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x7f\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x04\x84\x80\x80\x80\x00\x01\x6f\x00\x00\x07\x88\x80\x80\x80\x00\x01\x04\x67\x72\x6f\x77\x00\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\xd0\x6f\x20\x00\xfc\x0f\x00\x0b", "table_grow.wast:54");

// table_grow.wast:54
let $3 = instance($$3);

// table_grow.wast:61
assert_return(() => call($3, "grow", [0]), "table_grow.wast:61", 0);

// table_grow.wast:62
assert_return(() => call($3, "grow", [1]), "table_grow.wast:62", 0);

// table_grow.wast:63
assert_return(() => call($3, "grow", [0]), "table_grow.wast:63", 1);

// table_grow.wast:64
assert_return(() => call($3, "grow", [2]), "table_grow.wast:64", 1);

// table_grow.wast:65
assert_return(() => call($3, "grow", [800]), "table_grow.wast:65", 3);

// table_grow.wast:68
let $$4 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x7f\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x04\x85\x80\x80\x80\x00\x01\x6f\x01\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x67\x72\x6f\x77\x00\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\xd0\x6f\x20\x00\xfc\x0f\x00\x0b", "table_grow.wast:68");

// table_grow.wast:68
let $4 = instance($$4);

// table_grow.wast:75
assert_return(() => call($4, "grow", [0]), "table_grow.wast:75", 0);

// table_grow.wast:76
assert_return(() => call($4, "grow", [1]), "table_grow.wast:76", 0);

// table_grow.wast:77
assert_return(() => call($4, "grow", [1]), "table_grow.wast:77", 1);

// table_grow.wast:78
assert_return(() => call($4, "grow", [2]), "table_grow.wast:78", 2);

// table_grow.wast:79
assert_return(() => call($4, "grow", [6]), "table_grow.wast:79", 4);

// table_grow.wast:80
assert_return(() => call($4, "grow", [0]), "table_grow.wast:80", 10);

// table_grow.wast:81
assert_return(() => call($4, "grow", [1]), "table_grow.wast:81", -1);

// table_grow.wast:82
assert_return(() => call($4, "grow", [65_536]), "table_grow.wast:82", -1);

// table_grow.wast:85
let $$5 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8c\x80\x80\x80\x00\x02\x60\x01\x7f\x01\x7f\x60\x02\x7f\x7f\x01\x70\x03\x83\x80\x80\x80\x00\x02\x00\x01\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x9b\x80\x80\x80\x00\x02\x04\x67\x72\x6f\x77\x00\x00\x10\x63\x68\x65\x63\x6b\x2d\x74\x61\x62\x6c\x65\x2d\x6e\x75\x6c\x6c\x00\x01\x09\x85\x80\x80\x80\x00\x01\x03\x00\x01\x01\x0a\xc5\x80\x80\x80\x00\x02\x89\x80\x80\x80\x00\x00\xd0\x70\x20\x00\xfc\x0f\x00\x0b\xb1\x80\x80\x80\x00\x01\x01\x70\xd2\x01\x21\x02\x02\x40\x03\x40\x20\x00\x25\x00\x21\x02\x20\x02\xd1\x45\x0d\x01\x20\x00\x20\x01\x4f\x0d\x01\x20\x00\x41\x01\x6a\x21\x00\x20\x00\x20\x01\x4d\x0d\x00\x0b\x0b\x20\x02\x0b", "table_grow.wast:85");

// table_grow.wast:85
let $5 = instance($$5);

// table_grow.wast:107
assert_return(() => call($5, "check-table-null", [0, 9]), "table_grow.wast:107", null);

// table_grow.wast:108
assert_return(() => call($5, "grow", [10]), "table_grow.wast:108", 10);

// table_grow.wast:109
assert_return(() => call($5, "check-table-null", [0, 19]), "table_grow.wast:109", null);

// table_grow.wast:112
let $$6 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x01\x07\x90\x80\x80\x80\x00\x02\x05\x74\x61\x62\x6c\x65\x01\x00\x04\x67\x72\x6f\x77\x00\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\xd0\x70\x41\x01\xfc\x0f\x00\x0b", "table_grow.wast:112");
let $Tgt = $$6;

// table_grow.wast:112
let $6 = instance($Tgt);
let Tgt = $6;

// table_grow.wast:116
register("grown-table", Tgt)

// table_grow.wast:117
assert_return(() => call(Tgt, "grow", []), "table_grow.wast:117", 1);

// table_grow.wast:118
let $$7 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x02\x97\x80\x80\x80\x00\x01\x0b\x67\x72\x6f\x77\x6e\x2d\x74\x61\x62\x6c\x65\x05\x74\x61\x62\x6c\x65\x01\x70\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x90\x80\x80\x80\x00\x02\x05\x74\x61\x62\x6c\x65\x01\x00\x04\x67\x72\x6f\x77\x00\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\xd0\x70\x41\x01\xfc\x0f\x00\x0b", "table_grow.wast:118");
let $Tgit1 = $$7;

// table_grow.wast:118
let $7 = instance($Tgit1);
let Tgit1 = $7;

// table_grow.wast:123
register("grown-imported-table", Tgit1)

// table_grow.wast:124
assert_return(() => call(Tgit1, "grow", []), "table_grow.wast:124", 2);

// table_grow.wast:125
let $$8 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x02\xa0\x80\x80\x80\x00\x01\x14\x67\x72\x6f\x77\x6e\x2d\x69\x6d\x70\x6f\x72\x74\x65\x64\x2d\x74\x61\x62\x6c\x65\x05\x74\x61\x62\x6c\x65\x01\x70\x00\x03\x03\x82\x80\x80\x80\x00\x01\x00\x07\x88\x80\x80\x80\x00\x01\x04\x73\x69\x7a\x65\x00\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfc\x10\x00\x0b", "table_grow.wast:125");
let $Tgit2 = $$8;

// table_grow.wast:125
let $8 = instance($Tgit2);
let Tgit2 = $8;

// table_grow.wast:130
assert_return(() => call(Tgit2, "size", []), "table_grow.wast:130", 3);

// table_grow.wast:135
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x04\x84\x80\x80\x80\x00\x01\x6f\x00\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfc\x0f\x00\x0b", "table_grow.wast:135");

// table_grow.wast:144
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x04\x84\x80\x80\x80\x00\x01\x6f\x00\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\xd0\x6f\xfc\x0f\x00\x0b", "table_grow.wast:144");

// table_grow.wast:153
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x04\x84\x80\x80\x80\x00\x01\x6f\x00\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x01\xfc\x0f\x00\x0b", "table_grow.wast:153");

// table_grow.wast:162
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x04\x84\x80\x80\x80\x00\x01\x6f\x00\x00\x0a\x92\x80\x80\x80\x00\x01\x8c\x80\x80\x80\x00\x00\xd0\x6f\x43\x00\x00\x80\x3f\xfc\x0f\x00\x0b", "table_grow.wast:162");

// table_grow.wast:171
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x6f\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x20\x00\x41\x01\xfc\x0f\x00\x0b", "table_grow.wast:171");

// table_grow.wast:181
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x04\x84\x80\x80\x80\x00\x01\x6f\x00\x01\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\xd0\x6f\x41\x00\xfc\x0f\x00\x0b", "table_grow.wast:181");

// table_grow.wast:190
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7d\x03\x82\x80\x80\x80\x00\x01\x00\x04\x84\x80\x80\x80\x00\x01\x6f\x00\x01\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\xd0\x6f\x41\x00\xfc\x0f\x00\x0b", "table_grow.wast:190");
reinitializeRegistry();
})();
