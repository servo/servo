(function table_init_wast_js() {

// table_init.wast:6
let $1 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x86\x80\x80\x80\x00\x05\x00\x00\x00\x00\x00\x07\x9f\x80\x80\x80\x00\x05\x03\x65\x66\x30\x00\x00\x03\x65\x66\x31\x00\x01\x03\x65\x66\x32\x00\x02\x03\x65\x66\x33\x00\x03\x03\x65\x66\x34\x00\x04\x0a\xae\x80\x80\x80\x00\x05\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b");

// table_init.wast:13
register("a", $1)

// table_init.wast:15
let $2 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8d\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x00\x00\x60\x01\x7f\x01\x7f\x02\xa9\x80\x80\x80\x00\x05\x01\x61\x03\x65\x66\x30\x00\x00\x01\x61\x03\x65\x66\x31\x00\x00\x01\x61\x03\x65\x66\x32\x00\x00\x01\x61\x03\x65\x66\x33\x00\x00\x01\x61\x03\x65\x66\x34\x00\x00\x03\x88\x80\x80\x80\x00\x07\x00\x00\x00\x00\x00\x01\x02\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1e\x1e\x07\x90\x80\x80\x80\x00\x02\x04\x74\x65\x73\x74\x00\x0a\x05\x63\x68\x65\x63\x6b\x00\x0b\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xcb\x80\x80\x80\x00\x07\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x07\x41\x00\x41\x04\xfc\x0c\x01\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b");

// table_init.wast:41
run(() => call($2, "test", []));

// table_init.wast:42
assert_trap(() => call($2, "check", [0]));

// table_init.wast:43
assert_trap(() => call($2, "check", [1]));

// table_init.wast:44
assert_return(() => call($2, "check", [2]), 3);

// table_init.wast:45
assert_return(() => call($2, "check", [3]), 1);

// table_init.wast:46
assert_return(() => call($2, "check", [4]), 4);

// table_init.wast:47
assert_return(() => call($2, "check", [5]), 1);

// table_init.wast:48
assert_trap(() => call($2, "check", [6]));

// table_init.wast:49
assert_return(() => call($2, "check", [7]), 2);

// table_init.wast:50
assert_return(() => call($2, "check", [8]), 7);

// table_init.wast:51
assert_return(() => call($2, "check", [9]), 1);

// table_init.wast:52
assert_return(() => call($2, "check", [10]), 8);

// table_init.wast:53
assert_trap(() => call($2, "check", [11]));

// table_init.wast:54
assert_return(() => call($2, "check", [12]), 7);

// table_init.wast:55
assert_return(() => call($2, "check", [13]), 5);

// table_init.wast:56
assert_return(() => call($2, "check", [14]), 2);

// table_init.wast:57
assert_return(() => call($2, "check", [15]), 3);

// table_init.wast:58
assert_return(() => call($2, "check", [16]), 6);

// table_init.wast:59
assert_trap(() => call($2, "check", [17]));

// table_init.wast:60
assert_trap(() => call($2, "check", [18]));

// table_init.wast:61
assert_trap(() => call($2, "check", [19]));

// table_init.wast:62
assert_trap(() => call($2, "check", [20]));

// table_init.wast:63
assert_trap(() => call($2, "check", [21]));

// table_init.wast:64
assert_trap(() => call($2, "check", [22]));

// table_init.wast:65
assert_trap(() => call($2, "check", [23]));

// table_init.wast:66
assert_trap(() => call($2, "check", [24]));

// table_init.wast:67
assert_trap(() => call($2, "check", [25]));

// table_init.wast:68
assert_trap(() => call($2, "check", [26]));

// table_init.wast:69
assert_trap(() => call($2, "check", [27]));

// table_init.wast:70
assert_trap(() => call($2, "check", [28]));

// table_init.wast:71
assert_trap(() => call($2, "check", [29]));

// table_init.wast:73
let $3 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8d\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x00\x00\x60\x01\x7f\x01\x7f\x02\xa9\x80\x80\x80\x00\x05\x01\x61\x03\x65\x66\x30\x00\x00\x01\x61\x03\x65\x66\x31\x00\x00\x01\x61\x03\x65\x66\x32\x00\x00\x01\x61\x03\x65\x66\x33\x00\x00\x01\x61\x03\x65\x66\x34\x00\x00\x03\x88\x80\x80\x80\x00\x07\x00\x00\x00\x00\x00\x01\x02\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1e\x1e\x07\x90\x80\x80\x80\x00\x02\x04\x74\x65\x73\x74\x00\x0a\x05\x63\x68\x65\x63\x6b\x00\x0b\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xcb\x80\x80\x80\x00\x07\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x0f\x41\x01\x41\x03\xfc\x0c\x03\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b");

// table_init.wast:99
run(() => call($3, "test", []));

// table_init.wast:100
assert_trap(() => call($3, "check", [0]));

// table_init.wast:101
assert_trap(() => call($3, "check", [1]));

// table_init.wast:102
assert_return(() => call($3, "check", [2]), 3);

// table_init.wast:103
assert_return(() => call($3, "check", [3]), 1);

// table_init.wast:104
assert_return(() => call($3, "check", [4]), 4);

// table_init.wast:105
assert_return(() => call($3, "check", [5]), 1);

// table_init.wast:106
assert_trap(() => call($3, "check", [6]));

// table_init.wast:107
assert_trap(() => call($3, "check", [7]));

// table_init.wast:108
assert_trap(() => call($3, "check", [8]));

// table_init.wast:109
assert_trap(() => call($3, "check", [9]));

// table_init.wast:110
assert_trap(() => call($3, "check", [10]));

// table_init.wast:111
assert_trap(() => call($3, "check", [11]));

// table_init.wast:112
assert_return(() => call($3, "check", [12]), 7);

// table_init.wast:113
assert_return(() => call($3, "check", [13]), 5);

// table_init.wast:114
assert_return(() => call($3, "check", [14]), 2);

// table_init.wast:115
assert_return(() => call($3, "check", [15]), 9);

// table_init.wast:116
assert_return(() => call($3, "check", [16]), 2);

// table_init.wast:117
assert_return(() => call($3, "check", [17]), 7);

// table_init.wast:118
assert_trap(() => call($3, "check", [18]));

// table_init.wast:119
assert_trap(() => call($3, "check", [19]));

// table_init.wast:120
assert_trap(() => call($3, "check", [20]));

// table_init.wast:121
assert_trap(() => call($3, "check", [21]));

// table_init.wast:122
assert_trap(() => call($3, "check", [22]));

// table_init.wast:123
assert_trap(() => call($3, "check", [23]));

// table_init.wast:124
assert_trap(() => call($3, "check", [24]));

// table_init.wast:125
assert_trap(() => call($3, "check", [25]));

// table_init.wast:126
assert_trap(() => call($3, "check", [26]));

// table_init.wast:127
assert_trap(() => call($3, "check", [27]));

// table_init.wast:128
assert_trap(() => call($3, "check", [28]));

// table_init.wast:129
assert_trap(() => call($3, "check", [29]));

// table_init.wast:131
let $4 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8d\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x00\x00\x60\x01\x7f\x01\x7f\x02\xa9\x80\x80\x80\x00\x05\x01\x61\x03\x65\x66\x30\x00\x00\x01\x61\x03\x65\x66\x31\x00\x00\x01\x61\x03\x65\x66\x32\x00\x00\x01\x61\x03\x65\x66\x33\x00\x00\x01\x61\x03\x65\x66\x34\x00\x00\x03\x88\x80\x80\x80\x00\x07\x00\x00\x00\x00\x00\x01\x02\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1e\x1e\x07\x90\x80\x80\x80\x00\x02\x04\x74\x65\x73\x74\x00\x0a\x05\x63\x68\x65\x63\x6b\x00\x0b\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\x8d\x81\x80\x80\x00\x07\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\xce\x80\x80\x80\x00\x00\x41\x07\x41\x00\x41\x04\xfc\x0c\x01\x00\xfc\x0d\x01\x41\x0f\x41\x01\x41\x03\xfc\x0c\x03\x00\xfc\x0d\x03\x41\x14\x41\x0f\x41\x05\xfc\x0e\x00\x00\x41\x15\x41\x1d\x41\x01\xfc\x0e\x00\x00\x41\x18\x41\x0a\x41\x01\xfc\x0e\x00\x00\x41\x0d\x41\x0b\x41\x04\xfc\x0e\x00\x00\x41\x13\x41\x14\x41\x05\xfc\x0e\x00\x00\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b");

// table_init.wast:165
run(() => call($4, "test", []));

// table_init.wast:166
assert_trap(() => call($4, "check", [0]));

// table_init.wast:167
assert_trap(() => call($4, "check", [1]));

// table_init.wast:168
assert_return(() => call($4, "check", [2]), 3);

// table_init.wast:169
assert_return(() => call($4, "check", [3]), 1);

// table_init.wast:170
assert_return(() => call($4, "check", [4]), 4);

// table_init.wast:171
assert_return(() => call($4, "check", [5]), 1);

// table_init.wast:172
assert_trap(() => call($4, "check", [6]));

// table_init.wast:173
assert_return(() => call($4, "check", [7]), 2);

// table_init.wast:174
assert_return(() => call($4, "check", [8]), 7);

// table_init.wast:175
assert_return(() => call($4, "check", [9]), 1);

// table_init.wast:176
assert_return(() => call($4, "check", [10]), 8);

// table_init.wast:177
assert_trap(() => call($4, "check", [11]));

// table_init.wast:178
assert_return(() => call($4, "check", [12]), 7);

// table_init.wast:179
assert_trap(() => call($4, "check", [13]));

// table_init.wast:180
assert_return(() => call($4, "check", [14]), 7);

// table_init.wast:181
assert_return(() => call($4, "check", [15]), 5);

// table_init.wast:182
assert_return(() => call($4, "check", [16]), 2);

// table_init.wast:183
assert_return(() => call($4, "check", [17]), 7);

// table_init.wast:184
assert_trap(() => call($4, "check", [18]));

// table_init.wast:185
assert_return(() => call($4, "check", [19]), 9);

// table_init.wast:186
assert_trap(() => call($4, "check", [20]));

// table_init.wast:187
assert_return(() => call($4, "check", [21]), 7);

// table_init.wast:188
assert_trap(() => call($4, "check", [22]));

// table_init.wast:189
assert_return(() => call($4, "check", [23]), 8);

// table_init.wast:190
assert_return(() => call($4, "check", [24]), 8);

// table_init.wast:191
assert_trap(() => call($4, "check", [25]));

// table_init.wast:192
assert_trap(() => call($4, "check", [26]));

// table_init.wast:193
assert_trap(() => call($4, "check", [27]));

// table_init.wast:194
assert_trap(() => call($4, "check", [28]));

// table_init.wast:195
assert_trap(() => call($4, "check", [29]));

// table_init.wast:197
let $5 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8d\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x00\x00\x60\x01\x7f\x01\x7f\x02\xa9\x80\x80\x80\x00\x05\x01\x61\x03\x65\x66\x30\x00\x00\x01\x61\x03\x65\x66\x31\x00\x00\x01\x61\x03\x65\x66\x32\x00\x00\x01\x61\x03\x65\x66\x33\x00\x00\x01\x61\x03\x65\x66\x34\x00\x00\x03\x88\x80\x80\x80\x00\x07\x00\x00\x00\x00\x00\x01\x02\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1e\x1e\x07\x90\x80\x80\x80\x00\x02\x04\x74\x65\x73\x74\x00\x0a\x05\x63\x68\x65\x63\x6b\x00\x0b\x09\xa7\x80\x80\x80\x00\x04\x02\x01\x41\x02\x0b\x00\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x02\x01\x41\x0c\x0b\x00\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xcb\x80\x80\x80\x00\x07\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x07\x41\x00\x41\x04\xfc\x0c\x01\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x01\x0b");

// table_init.wast:223
run(() => call($5, "test", []));

// table_init.wast:224
assert_trap(() => call($5, "check", [0]));

// table_init.wast:225
assert_trap(() => call($5, "check", [1]));

// table_init.wast:226
assert_return(() => call($5, "check", [2]), 3);

// table_init.wast:227
assert_return(() => call($5, "check", [3]), 1);

// table_init.wast:228
assert_return(() => call($5, "check", [4]), 4);

// table_init.wast:229
assert_return(() => call($5, "check", [5]), 1);

// table_init.wast:230
assert_trap(() => call($5, "check", [6]));

// table_init.wast:231
assert_return(() => call($5, "check", [7]), 2);

// table_init.wast:232
assert_return(() => call($5, "check", [8]), 7);

// table_init.wast:233
assert_return(() => call($5, "check", [9]), 1);

// table_init.wast:234
assert_return(() => call($5, "check", [10]), 8);

// table_init.wast:235
assert_trap(() => call($5, "check", [11]));

// table_init.wast:236
assert_return(() => call($5, "check", [12]), 7);

// table_init.wast:237
assert_return(() => call($5, "check", [13]), 5);

// table_init.wast:238
assert_return(() => call($5, "check", [14]), 2);

// table_init.wast:239
assert_return(() => call($5, "check", [15]), 3);

// table_init.wast:240
assert_return(() => call($5, "check", [16]), 6);

// table_init.wast:241
assert_trap(() => call($5, "check", [17]));

// table_init.wast:242
assert_trap(() => call($5, "check", [18]));

// table_init.wast:243
assert_trap(() => call($5, "check", [19]));

// table_init.wast:244
assert_trap(() => call($5, "check", [20]));

// table_init.wast:245
assert_trap(() => call($5, "check", [21]));

// table_init.wast:246
assert_trap(() => call($5, "check", [22]));

// table_init.wast:247
assert_trap(() => call($5, "check", [23]));

// table_init.wast:248
assert_trap(() => call($5, "check", [24]));

// table_init.wast:249
assert_trap(() => call($5, "check", [25]));

// table_init.wast:250
assert_trap(() => call($5, "check", [26]));

// table_init.wast:251
assert_trap(() => call($5, "check", [27]));

// table_init.wast:252
assert_trap(() => call($5, "check", [28]));

// table_init.wast:253
assert_trap(() => call($5, "check", [29]));

// table_init.wast:255
let $6 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8d\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x00\x00\x60\x01\x7f\x01\x7f\x02\xa9\x80\x80\x80\x00\x05\x01\x61\x03\x65\x66\x30\x00\x00\x01\x61\x03\x65\x66\x31\x00\x00\x01\x61\x03\x65\x66\x32\x00\x00\x01\x61\x03\x65\x66\x33\x00\x00\x01\x61\x03\x65\x66\x34\x00\x00\x03\x88\x80\x80\x80\x00\x07\x00\x00\x00\x00\x00\x01\x02\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1e\x1e\x07\x90\x80\x80\x80\x00\x02\x04\x74\x65\x73\x74\x00\x0a\x05\x63\x68\x65\x63\x6b\x00\x0b\x09\xa7\x80\x80\x80\x00\x04\x02\x01\x41\x02\x0b\x00\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x02\x01\x41\x0c\x0b\x00\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xcb\x80\x80\x80\x00\x07\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x0f\x41\x01\x41\x03\xfc\x0c\x03\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x01\x0b");

// table_init.wast:281
run(() => call($6, "test", []));

// table_init.wast:282
assert_trap(() => call($6, "check", [0]));

// table_init.wast:283
assert_trap(() => call($6, "check", [1]));

// table_init.wast:284
assert_return(() => call($6, "check", [2]), 3);

// table_init.wast:285
assert_return(() => call($6, "check", [3]), 1);

// table_init.wast:286
assert_return(() => call($6, "check", [4]), 4);

// table_init.wast:287
assert_return(() => call($6, "check", [5]), 1);

// table_init.wast:288
assert_trap(() => call($6, "check", [6]));

// table_init.wast:289
assert_trap(() => call($6, "check", [7]));

// table_init.wast:290
assert_trap(() => call($6, "check", [8]));

// table_init.wast:291
assert_trap(() => call($6, "check", [9]));

// table_init.wast:292
assert_trap(() => call($6, "check", [10]));

// table_init.wast:293
assert_trap(() => call($6, "check", [11]));

// table_init.wast:294
assert_return(() => call($6, "check", [12]), 7);

// table_init.wast:295
assert_return(() => call($6, "check", [13]), 5);

// table_init.wast:296
assert_return(() => call($6, "check", [14]), 2);

// table_init.wast:297
assert_return(() => call($6, "check", [15]), 9);

// table_init.wast:298
assert_return(() => call($6, "check", [16]), 2);

// table_init.wast:299
assert_return(() => call($6, "check", [17]), 7);

// table_init.wast:300
assert_trap(() => call($6, "check", [18]));

// table_init.wast:301
assert_trap(() => call($6, "check", [19]));

// table_init.wast:302
assert_trap(() => call($6, "check", [20]));

// table_init.wast:303
assert_trap(() => call($6, "check", [21]));

// table_init.wast:304
assert_trap(() => call($6, "check", [22]));

// table_init.wast:305
assert_trap(() => call($6, "check", [23]));

// table_init.wast:306
assert_trap(() => call($6, "check", [24]));

// table_init.wast:307
assert_trap(() => call($6, "check", [25]));

// table_init.wast:308
assert_trap(() => call($6, "check", [26]));

// table_init.wast:309
assert_trap(() => call($6, "check", [27]));

// table_init.wast:310
assert_trap(() => call($6, "check", [28]));

// table_init.wast:311
assert_trap(() => call($6, "check", [29]));

// table_init.wast:313
let $7 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8d\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x00\x00\x60\x01\x7f\x01\x7f\x02\xa9\x80\x80\x80\x00\x05\x01\x61\x03\x65\x66\x30\x00\x00\x01\x61\x03\x65\x66\x31\x00\x00\x01\x61\x03\x65\x66\x32\x00\x00\x01\x61\x03\x65\x66\x33\x00\x00\x01\x61\x03\x65\x66\x34\x00\x00\x03\x88\x80\x80\x80\x00\x07\x00\x00\x00\x00\x00\x01\x02\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1e\x1e\x07\x90\x80\x80\x80\x00\x02\x04\x74\x65\x73\x74\x00\x0a\x05\x63\x68\x65\x63\x6b\x00\x0b\x09\xa7\x80\x80\x80\x00\x04\x02\x01\x41\x02\x0b\x00\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x02\x01\x41\x0c\x0b\x00\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\x8d\x81\x80\x80\x00\x07\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\xce\x80\x80\x80\x00\x00\x41\x07\x41\x00\x41\x04\xfc\x0c\x01\x01\xfc\x0d\x01\x41\x0f\x41\x01\x41\x03\xfc\x0c\x03\x01\xfc\x0d\x03\x41\x14\x41\x0f\x41\x05\xfc\x0e\x01\x01\x41\x15\x41\x1d\x41\x01\xfc\x0e\x01\x01\x41\x18\x41\x0a\x41\x01\xfc\x0e\x01\x01\x41\x0d\x41\x0b\x41\x04\xfc\x0e\x01\x01\x41\x13\x41\x14\x41\x05\xfc\x0e\x01\x01\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x01\x0b");

// table_init.wast:347
run(() => call($7, "test", []));

// table_init.wast:348
assert_trap(() => call($7, "check", [0]));

// table_init.wast:349
assert_trap(() => call($7, "check", [1]));

// table_init.wast:350
assert_return(() => call($7, "check", [2]), 3);

// table_init.wast:351
assert_return(() => call($7, "check", [3]), 1);

// table_init.wast:352
assert_return(() => call($7, "check", [4]), 4);

// table_init.wast:353
assert_return(() => call($7, "check", [5]), 1);

// table_init.wast:354
assert_trap(() => call($7, "check", [6]));

// table_init.wast:355
assert_return(() => call($7, "check", [7]), 2);

// table_init.wast:356
assert_return(() => call($7, "check", [8]), 7);

// table_init.wast:357
assert_return(() => call($7, "check", [9]), 1);

// table_init.wast:358
assert_return(() => call($7, "check", [10]), 8);

// table_init.wast:359
assert_trap(() => call($7, "check", [11]));

// table_init.wast:360
assert_return(() => call($7, "check", [12]), 7);

// table_init.wast:361
assert_trap(() => call($7, "check", [13]));

// table_init.wast:362
assert_return(() => call($7, "check", [14]), 7);

// table_init.wast:363
assert_return(() => call($7, "check", [15]), 5);

// table_init.wast:364
assert_return(() => call($7, "check", [16]), 2);

// table_init.wast:365
assert_return(() => call($7, "check", [17]), 7);

// table_init.wast:366
assert_trap(() => call($7, "check", [18]));

// table_init.wast:367
assert_return(() => call($7, "check", [19]), 9);

// table_init.wast:368
assert_trap(() => call($7, "check", [20]));

// table_init.wast:369
assert_return(() => call($7, "check", [21]), 7);

// table_init.wast:370
assert_trap(() => call($7, "check", [22]));

// table_init.wast:371
assert_return(() => call($7, "check", [23]), 8);

// table_init.wast:372
assert_return(() => call($7, "check", [24]), 8);

// table_init.wast:373
assert_trap(() => call($7, "check", [25]));

// table_init.wast:374
assert_trap(() => call($7, "check", [26]));

// table_init.wast:375
assert_trap(() => call($7, "check", [27]));

// table_init.wast:376
assert_trap(() => call($7, "check", [28]));

// table_init.wast:377
assert_trap(() => call($7, "check", [29]));

// table_init.wast:378
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\xfc\x0d\x00\x0b");

// table_init.wast:384
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x00\x0a\x92\x80\x80\x80\x00\x01\x8c\x80\x80\x80\x00\x00\x41\x0c\x41\x01\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:390
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x01\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x85\x80\x80\x80\x00\x01\x01\x00\x01\x00\x0a\x94\x80\x80\x80\x00\x02\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x85\x80\x80\x80\x00\x00\xfc\x0d\x04\x0b");

// table_init.wast:398
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x01\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x85\x80\x80\x80\x00\x01\x01\x00\x01\x00\x0a\x9b\x80\x80\x80\x00\x02\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x8c\x80\x80\x80\x00\x00\x41\x0c\x41\x01\x41\x01\xfc\x0c\x04\x00\x0b");

// table_init.wast:407
let $8 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xe5\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x85\x80\x80\x80\x00\x00\xfc\x0d\x02\x0b");

// table_init.wast:429
run(() => call($8, "test", []));

// table_init.wast:431
let $9 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x0c\x41\x01\x41\x01\xfc\x0c\x02\x00\x0b");

// table_init.wast:453
assert_trap(() => call($9, "test", []));

// table_init.wast:455
let $10 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xf6\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x96\x80\x80\x80\x00\x00\x41\x0c\x41\x01\x41\x01\xfc\x0c\x01\x00\x41\x15\x41\x01\x41\x01\xfc\x0c\x01\x00\x0b");

// table_init.wast:477
run(() => call($10, "test", []));

// table_init.wast:479
let $11 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xe8\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x88\x80\x80\x80\x00\x00\xfc\x0d\x01\xfc\x0d\x01\x0b");

// table_init.wast:501
run(() => call($11, "test", []));

// table_init.wast:503
let $12 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xef\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8f\x80\x80\x80\x00\x00\xfc\x0d\x01\x41\x0c\x41\x01\x41\x01\xfc\x0c\x01\x00\x0b");

// table_init.wast:525
assert_trap(() => call($12, "test", []));

// table_init.wast:527
let $13 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x0c\x41\x00\x41\x05\xfc\x0c\x01\x00\x0b");

// table_init.wast:549
assert_trap(() => call($13, "test", []));

// table_init.wast:551
let $14 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x0c\x41\x02\x41\x03\xfc\x0c\x01\x00\x0b");

// table_init.wast:573
assert_trap(() => call($14, "test", []));

// table_init.wast:575
let $15 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x1c\x41\x01\x41\x03\xfc\x0c\x01\x00\x0b");

// table_init.wast:597
assert_trap(() => call($15, "test", []));

// table_init.wast:599
let $16 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x0c\x41\x04\x41\x00\xfc\x0c\x01\x00\x0b");

// table_init.wast:621
run(() => call($16, "test", []));

// table_init.wast:623
let $17 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x0c\x41\x05\x41\x00\xfc\x0c\x01\x00\x0b");

// table_init.wast:645
assert_trap(() => call($17, "test", []));

// table_init.wast:647
let $18 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x1e\x41\x02\x41\x00\xfc\x0c\x01\x00\x0b");

// table_init.wast:669
run(() => call($18, "test", []));

// table_init.wast:671
let $19 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x1f\x41\x02\x41\x00\xfc\x0c\x01\x00\x0b");

// table_init.wast:693
assert_trap(() => call($19, "test", []));

// table_init.wast:695
let $20 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x1e\x41\x04\x41\x00\xfc\x0c\x01\x00\x0b");

// table_init.wast:717
run(() => call($20, "test", []));

// table_init.wast:719
let $21 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa3\x80\x80\x80\x00\x04\x00\x41\x02\x0b\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x00\x41\x0c\x0b\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x1f\x41\x05\x41\x00\xfc\x0c\x01\x00\x0b");

// table_init.wast:741
assert_trap(() => call($21, "test", []));

// table_init.wast:743
let $22 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa7\x80\x80\x80\x00\x04\x02\x01\x41\x02\x0b\x00\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x02\x01\x41\x0c\x0b\x00\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x1a\x41\x01\x41\x03\xfc\x0c\x01\x01\x0b");

// table_init.wast:765
assert_trap(() => call($22, "test", []));

// table_init.wast:767
let $23 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa7\x80\x80\x80\x00\x04\x02\x01\x41\x02\x0b\x00\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x02\x01\x41\x0c\x0b\x00\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x0c\x41\x04\x41\x00\xfc\x0c\x01\x01\x0b");

// table_init.wast:789
run(() => call($23, "test", []));

// table_init.wast:791
let $24 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa7\x80\x80\x80\x00\x04\x02\x01\x41\x02\x0b\x00\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x02\x01\x41\x0c\x0b\x00\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x0c\x41\x05\x41\x00\xfc\x0c\x01\x01\x0b");

// table_init.wast:813
assert_trap(() => call($24, "test", []));

// table_init.wast:815
let $25 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa7\x80\x80\x80\x00\x04\x02\x01\x41\x02\x0b\x00\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x02\x01\x41\x0c\x0b\x00\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x1c\x41\x02\x41\x00\xfc\x0c\x01\x01\x0b");

// table_init.wast:837
run(() => call($25, "test", []));

// table_init.wast:839
let $26 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa7\x80\x80\x80\x00\x04\x02\x01\x41\x02\x0b\x00\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x02\x01\x41\x0c\x0b\x00\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x1d\x41\x02\x41\x00\xfc\x0c\x01\x01\x0b");

// table_init.wast:861
assert_trap(() => call($26, "test", []));

// table_init.wast:863
let $27 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa7\x80\x80\x80\x00\x04\x02\x01\x41\x02\x0b\x00\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x02\x01\x41\x0c\x0b\x00\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x1c\x41\x04\x41\x00\xfc\x0c\x01\x01\x0b");

// table_init.wast:885
run(() => call($27, "test", []));

// table_init.wast:887
let $28 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x00\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x04\x89\x80\x80\x80\x00\x02\x70\x01\x1e\x1e\x70\x01\x1c\x1c\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x0a\x09\xa7\x80\x80\x80\x00\x04\x02\x01\x41\x02\x0b\x00\x04\x03\x01\x04\x01\x01\x00\x04\x02\x07\x01\x08\x02\x01\x41\x0c\x0b\x00\x05\x07\x05\x02\x03\x06\x01\x00\x05\x05\x09\x02\x07\x06\x0a\xec\x80\x80\x80\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x8c\x80\x80\x80\x00\x00\x41\x1d\x41\x05\x41\x00\xfc\x0c\x01\x01\x0b");

// table_init.wast:909
assert_trap(() => call($28, "test", []));

// table_init.wast:911
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x41\x01\x41\x01\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:920
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x99\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x41\x01\x41\x01\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:929
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x41\x01\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:938
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x41\x01\x43\x00\x00\x80\x3f\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:947
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9f\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x92\x80\x80\x80\x00\x00\x41\x01\x43\x00\x00\x80\x3f\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:956
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x41\x01\x43\x00\x00\x80\x3f\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:965
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x41\x01\x43\x00\x00\x80\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:974
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x99\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x41\x01\x42\x01\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:983
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x41\x01\x42\x01\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:992
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x99\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x41\x01\x42\x01\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1001
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x41\x01\x42\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1010
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1019
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1028
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1037
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa7\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9a\x80\x80\x80\x00\x00\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1046
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x41\x01\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1055
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9f\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x92\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x41\x01\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1064
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x41\x01\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1073
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1082
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9f\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x92\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x43\x00\x00\x80\x3f\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1091
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa2\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x95\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x43\x00\x00\x80\x3f\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1100
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9f\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x92\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x43\x00\x00\x80\x3f\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1109
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa6\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x99\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x43\x00\x00\x80\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1118
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x42\x01\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1127
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9f\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x92\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x42\x01\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1136
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x42\x01\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1145
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x42\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1154
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1163
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa6\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x99\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1172
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1181
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xaa\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9d\x80\x80\x80\x00\x00\x43\x00\x00\x80\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1190
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x99\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x42\x01\x41\x01\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1199
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x42\x01\x41\x01\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1208
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x99\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x42\x01\x41\x01\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1217
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x42\x01\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1226
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x42\x01\x43\x00\x00\x80\x3f\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1235
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9f\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x92\x80\x80\x80\x00\x00\x42\x01\x43\x00\x00\x80\x3f\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1244
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x42\x01\x43\x00\x00\x80\x3f\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1253
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x42\x01\x43\x00\x00\x80\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1262
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x99\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x42\x01\x42\x01\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1271
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x9c\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8f\x80\x80\x80\x00\x00\x42\x01\x42\x01\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1280
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\x99\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x42\x01\x42\x01\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1289
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x42\x01\x42\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1298
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x42\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1307
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x42\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1316
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x42\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1325
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa7\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9a\x80\x80\x80\x00\x00\x42\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1334
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1343
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1352
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1361
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa7\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9a\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1370
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x43\x00\x00\x80\x3f\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1379
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa6\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x99\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x43\x00\x00\x80\x3f\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1388
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x43\x00\x00\x80\x3f\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1397
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xaa\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9d\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x43\x00\x00\x80\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1406
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x42\x01\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1415
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa3\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x96\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x42\x01\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1424
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa0\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x93\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x42\x01\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1433
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa7\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9a\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x42\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1442
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa7\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9a\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x41\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1451
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xaa\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9d\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x43\x00\x00\x80\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1460
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xa7\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\x9a\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x42\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1469
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x83\x80\x80\x80\x00\x02\x00\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x0a\x07\x88\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x00\x01\x09\x87\x80\x80\x80\x00\x01\x01\x00\x03\x00\x00\x00\x0a\xae\x80\x80\x80\x00\x02\x82\x80\x80\x80\x00\x00\x0b\xa1\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xfc\x0c\x00\x00\x0b");

// table_init.wast:1478
let $29 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8f\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x01\x7f\x01\x7f\x60\x02\x7f\x7f\x00\x03\x93\x80\x80\x80\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x04\x85\x80\x80\x80\x00\x01\x70\x01\x20\x40\x07\xe4\x80\x80\x80\x00\x12\x02\x66\x30\x00\x00\x02\x66\x31\x00\x01\x02\x66\x32\x00\x02\x02\x66\x33\x00\x03\x02\x66\x34\x00\x04\x02\x66\x35\x00\x05\x02\x66\x36\x00\x06\x02\x66\x37\x00\x07\x02\x66\x38\x00\x08\x02\x66\x39\x00\x09\x03\x66\x31\x30\x00\x0a\x03\x66\x31\x31\x00\x0b\x03\x66\x31\x32\x00\x0c\x03\x66\x31\x33\x00\x0d\x03\x66\x31\x34\x00\x0e\x03\x66\x31\x35\x00\x0f\x04\x74\x65\x73\x74\x00\x10\x03\x72\x75\x6e\x00\x11\x09\x94\x80\x80\x80\x00\x01\x01\x00\x10\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x0a\xae\x81\x80\x80\x00\x12\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x84\x80\x80\x80\x00\x00\x41\x0a\x0b\x84\x80\x80\x80\x00\x00\x41\x0b\x0b\x84\x80\x80\x80\x00\x00\x41\x0c\x0b\x84\x80\x80\x80\x00\x00\x41\x0d\x0b\x84\x80\x80\x80\x00\x00\x41\x0e\x0b\x84\x80\x80\x80\x00\x00\x41\x0f\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x41\x00\x20\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1506
assert_trap(() => call($29, "run", [24, 16]));

// table_init.wast:1507
assert_trap(() => call($29, "test", [0]));

// table_init.wast:1508
assert_trap(() => call($29, "test", [1]));

// table_init.wast:1509
assert_trap(() => call($29, "test", [2]));

// table_init.wast:1510
assert_trap(() => call($29, "test", [3]));

// table_init.wast:1511
assert_trap(() => call($29, "test", [4]));

// table_init.wast:1512
assert_trap(() => call($29, "test", [5]));

// table_init.wast:1513
assert_trap(() => call($29, "test", [6]));

// table_init.wast:1514
assert_trap(() => call($29, "test", [7]));

// table_init.wast:1515
assert_trap(() => call($29, "test", [8]));

// table_init.wast:1516
assert_trap(() => call($29, "test", [9]));

// table_init.wast:1517
assert_trap(() => call($29, "test", [10]));

// table_init.wast:1518
assert_trap(() => call($29, "test", [11]));

// table_init.wast:1519
assert_trap(() => call($29, "test", [12]));

// table_init.wast:1520
assert_trap(() => call($29, "test", [13]));

// table_init.wast:1521
assert_trap(() => call($29, "test", [14]));

// table_init.wast:1522
assert_trap(() => call($29, "test", [15]));

// table_init.wast:1523
assert_trap(() => call($29, "test", [16]));

// table_init.wast:1524
assert_trap(() => call($29, "test", [17]));

// table_init.wast:1525
assert_trap(() => call($29, "test", [18]));

// table_init.wast:1526
assert_trap(() => call($29, "test", [19]));

// table_init.wast:1527
assert_trap(() => call($29, "test", [20]));

// table_init.wast:1528
assert_trap(() => call($29, "test", [21]));

// table_init.wast:1529
assert_trap(() => call($29, "test", [22]));

// table_init.wast:1530
assert_trap(() => call($29, "test", [23]));

// table_init.wast:1531
assert_trap(() => call($29, "test", [24]));

// table_init.wast:1532
assert_trap(() => call($29, "test", [25]));

// table_init.wast:1533
assert_trap(() => call($29, "test", [26]));

// table_init.wast:1534
assert_trap(() => call($29, "test", [27]));

// table_init.wast:1535
assert_trap(() => call($29, "test", [28]));

// table_init.wast:1536
assert_trap(() => call($29, "test", [29]));

// table_init.wast:1537
assert_trap(() => call($29, "test", [30]));

// table_init.wast:1538
assert_trap(() => call($29, "test", [31]));

// table_init.wast:1540
let $30 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8f\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x01\x7f\x01\x7f\x60\x02\x7f\x7f\x00\x03\x93\x80\x80\x80\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x04\x85\x80\x80\x80\x00\x01\x70\x01\x20\x40\x07\xe4\x80\x80\x80\x00\x12\x02\x66\x30\x00\x00\x02\x66\x31\x00\x01\x02\x66\x32\x00\x02\x02\x66\x33\x00\x03\x02\x66\x34\x00\x04\x02\x66\x35\x00\x05\x02\x66\x36\x00\x06\x02\x66\x37\x00\x07\x02\x66\x38\x00\x08\x02\x66\x39\x00\x09\x03\x66\x31\x30\x00\x0a\x03\x66\x31\x31\x00\x0b\x03\x66\x31\x32\x00\x0c\x03\x66\x31\x33\x00\x0d\x03\x66\x31\x34\x00\x0e\x03\x66\x31\x35\x00\x0f\x04\x74\x65\x73\x74\x00\x10\x03\x72\x75\x6e\x00\x11\x09\x94\x80\x80\x80\x00\x01\x01\x00\x10\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x0a\xae\x81\x80\x80\x00\x12\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x84\x80\x80\x80\x00\x00\x41\x0a\x0b\x84\x80\x80\x80\x00\x00\x41\x0b\x0b\x84\x80\x80\x80\x00\x00\x41\x0c\x0b\x84\x80\x80\x80\x00\x00\x41\x0d\x0b\x84\x80\x80\x80\x00\x00\x41\x0e\x0b\x84\x80\x80\x80\x00\x00\x41\x0f\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x41\x00\x20\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1568
assert_trap(() => call($30, "run", [25, 16]));

// table_init.wast:1569
assert_trap(() => call($30, "test", [0]));

// table_init.wast:1570
assert_trap(() => call($30, "test", [1]));

// table_init.wast:1571
assert_trap(() => call($30, "test", [2]));

// table_init.wast:1572
assert_trap(() => call($30, "test", [3]));

// table_init.wast:1573
assert_trap(() => call($30, "test", [4]));

// table_init.wast:1574
assert_trap(() => call($30, "test", [5]));

// table_init.wast:1575
assert_trap(() => call($30, "test", [6]));

// table_init.wast:1576
assert_trap(() => call($30, "test", [7]));

// table_init.wast:1577
assert_trap(() => call($30, "test", [8]));

// table_init.wast:1578
assert_trap(() => call($30, "test", [9]));

// table_init.wast:1579
assert_trap(() => call($30, "test", [10]));

// table_init.wast:1580
assert_trap(() => call($30, "test", [11]));

// table_init.wast:1581
assert_trap(() => call($30, "test", [12]));

// table_init.wast:1582
assert_trap(() => call($30, "test", [13]));

// table_init.wast:1583
assert_trap(() => call($30, "test", [14]));

// table_init.wast:1584
assert_trap(() => call($30, "test", [15]));

// table_init.wast:1585
assert_trap(() => call($30, "test", [16]));

// table_init.wast:1586
assert_trap(() => call($30, "test", [17]));

// table_init.wast:1587
assert_trap(() => call($30, "test", [18]));

// table_init.wast:1588
assert_trap(() => call($30, "test", [19]));

// table_init.wast:1589
assert_trap(() => call($30, "test", [20]));

// table_init.wast:1590
assert_trap(() => call($30, "test", [21]));

// table_init.wast:1591
assert_trap(() => call($30, "test", [22]));

// table_init.wast:1592
assert_trap(() => call($30, "test", [23]));

// table_init.wast:1593
assert_trap(() => call($30, "test", [24]));

// table_init.wast:1594
assert_trap(() => call($30, "test", [25]));

// table_init.wast:1595
assert_trap(() => call($30, "test", [26]));

// table_init.wast:1596
assert_trap(() => call($30, "test", [27]));

// table_init.wast:1597
assert_trap(() => call($30, "test", [28]));

// table_init.wast:1598
assert_trap(() => call($30, "test", [29]));

// table_init.wast:1599
assert_trap(() => call($30, "test", [30]));

// table_init.wast:1600
assert_trap(() => call($30, "test", [31]));

// table_init.wast:1602
let $31 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8f\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x01\x7f\x01\x7f\x60\x02\x7f\x7f\x00\x03\x93\x80\x80\x80\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x04\x87\x80\x80\x80\x00\x01\x70\x01\xa0\x01\xc0\x02\x07\xe4\x80\x80\x80\x00\x12\x02\x66\x30\x00\x00\x02\x66\x31\x00\x01\x02\x66\x32\x00\x02\x02\x66\x33\x00\x03\x02\x66\x34\x00\x04\x02\x66\x35\x00\x05\x02\x66\x36\x00\x06\x02\x66\x37\x00\x07\x02\x66\x38\x00\x08\x02\x66\x39\x00\x09\x03\x66\x31\x30\x00\x0a\x03\x66\x31\x31\x00\x0b\x03\x66\x31\x32\x00\x0c\x03\x66\x31\x33\x00\x0d\x03\x66\x31\x34\x00\x0e\x03\x66\x31\x35\x00\x0f\x04\x74\x65\x73\x74\x00\x10\x03\x72\x75\x6e\x00\x11\x09\x94\x80\x80\x80\x00\x01\x01\x00\x10\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x0a\xae\x81\x80\x80\x00\x12\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x84\x80\x80\x80\x00\x00\x41\x0a\x0b\x84\x80\x80\x80\x00\x00\x41\x0b\x0b\x84\x80\x80\x80\x00\x00\x41\x0c\x0b\x84\x80\x80\x80\x00\x00\x41\x0d\x0b\x84\x80\x80\x80\x00\x00\x41\x0e\x0b\x84\x80\x80\x80\x00\x00\x41\x0f\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x41\x00\x20\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1630
assert_trap(() => call($31, "run", [96, 32]));

// table_init.wast:1631
assert_trap(() => call($31, "test", [0]));

// table_init.wast:1632
assert_trap(() => call($31, "test", [1]));

// table_init.wast:1633
assert_trap(() => call($31, "test", [2]));

// table_init.wast:1634
assert_trap(() => call($31, "test", [3]));

// table_init.wast:1635
assert_trap(() => call($31, "test", [4]));

// table_init.wast:1636
assert_trap(() => call($31, "test", [5]));

// table_init.wast:1637
assert_trap(() => call($31, "test", [6]));

// table_init.wast:1638
assert_trap(() => call($31, "test", [7]));

// table_init.wast:1639
assert_trap(() => call($31, "test", [8]));

// table_init.wast:1640
assert_trap(() => call($31, "test", [9]));

// table_init.wast:1641
assert_trap(() => call($31, "test", [10]));

// table_init.wast:1642
assert_trap(() => call($31, "test", [11]));

// table_init.wast:1643
assert_trap(() => call($31, "test", [12]));

// table_init.wast:1644
assert_trap(() => call($31, "test", [13]));

// table_init.wast:1645
assert_trap(() => call($31, "test", [14]));

// table_init.wast:1646
assert_trap(() => call($31, "test", [15]));

// table_init.wast:1647
assert_trap(() => call($31, "test", [16]));

// table_init.wast:1648
assert_trap(() => call($31, "test", [17]));

// table_init.wast:1649
assert_trap(() => call($31, "test", [18]));

// table_init.wast:1650
assert_trap(() => call($31, "test", [19]));

// table_init.wast:1651
assert_trap(() => call($31, "test", [20]));

// table_init.wast:1652
assert_trap(() => call($31, "test", [21]));

// table_init.wast:1653
assert_trap(() => call($31, "test", [22]));

// table_init.wast:1654
assert_trap(() => call($31, "test", [23]));

// table_init.wast:1655
assert_trap(() => call($31, "test", [24]));

// table_init.wast:1656
assert_trap(() => call($31, "test", [25]));

// table_init.wast:1657
assert_trap(() => call($31, "test", [26]));

// table_init.wast:1658
assert_trap(() => call($31, "test", [27]));

// table_init.wast:1659
assert_trap(() => call($31, "test", [28]));

// table_init.wast:1660
assert_trap(() => call($31, "test", [29]));

// table_init.wast:1661
assert_trap(() => call($31, "test", [30]));

// table_init.wast:1662
assert_trap(() => call($31, "test", [31]));

// table_init.wast:1663
assert_trap(() => call($31, "test", [32]));

// table_init.wast:1664
assert_trap(() => call($31, "test", [33]));

// table_init.wast:1665
assert_trap(() => call($31, "test", [34]));

// table_init.wast:1666
assert_trap(() => call($31, "test", [35]));

// table_init.wast:1667
assert_trap(() => call($31, "test", [36]));

// table_init.wast:1668
assert_trap(() => call($31, "test", [37]));

// table_init.wast:1669
assert_trap(() => call($31, "test", [38]));

// table_init.wast:1670
assert_trap(() => call($31, "test", [39]));

// table_init.wast:1671
assert_trap(() => call($31, "test", [40]));

// table_init.wast:1672
assert_trap(() => call($31, "test", [41]));

// table_init.wast:1673
assert_trap(() => call($31, "test", [42]));

// table_init.wast:1674
assert_trap(() => call($31, "test", [43]));

// table_init.wast:1675
assert_trap(() => call($31, "test", [44]));

// table_init.wast:1676
assert_trap(() => call($31, "test", [45]));

// table_init.wast:1677
assert_trap(() => call($31, "test", [46]));

// table_init.wast:1678
assert_trap(() => call($31, "test", [47]));

// table_init.wast:1679
assert_trap(() => call($31, "test", [48]));

// table_init.wast:1680
assert_trap(() => call($31, "test", [49]));

// table_init.wast:1681
assert_trap(() => call($31, "test", [50]));

// table_init.wast:1682
assert_trap(() => call($31, "test", [51]));

// table_init.wast:1683
assert_trap(() => call($31, "test", [52]));

// table_init.wast:1684
assert_trap(() => call($31, "test", [53]));

// table_init.wast:1685
assert_trap(() => call($31, "test", [54]));

// table_init.wast:1686
assert_trap(() => call($31, "test", [55]));

// table_init.wast:1687
assert_trap(() => call($31, "test", [56]));

// table_init.wast:1688
assert_trap(() => call($31, "test", [57]));

// table_init.wast:1689
assert_trap(() => call($31, "test", [58]));

// table_init.wast:1690
assert_trap(() => call($31, "test", [59]));

// table_init.wast:1691
assert_trap(() => call($31, "test", [60]));

// table_init.wast:1692
assert_trap(() => call($31, "test", [61]));

// table_init.wast:1693
assert_trap(() => call($31, "test", [62]));

// table_init.wast:1694
assert_trap(() => call($31, "test", [63]));

// table_init.wast:1695
assert_trap(() => call($31, "test", [64]));

// table_init.wast:1696
assert_trap(() => call($31, "test", [65]));

// table_init.wast:1697
assert_trap(() => call($31, "test", [66]));

// table_init.wast:1698
assert_trap(() => call($31, "test", [67]));

// table_init.wast:1699
assert_trap(() => call($31, "test", [68]));

// table_init.wast:1700
assert_trap(() => call($31, "test", [69]));

// table_init.wast:1701
assert_trap(() => call($31, "test", [70]));

// table_init.wast:1702
assert_trap(() => call($31, "test", [71]));

// table_init.wast:1703
assert_trap(() => call($31, "test", [72]));

// table_init.wast:1704
assert_trap(() => call($31, "test", [73]));

// table_init.wast:1705
assert_trap(() => call($31, "test", [74]));

// table_init.wast:1706
assert_trap(() => call($31, "test", [75]));

// table_init.wast:1707
assert_trap(() => call($31, "test", [76]));

// table_init.wast:1708
assert_trap(() => call($31, "test", [77]));

// table_init.wast:1709
assert_trap(() => call($31, "test", [78]));

// table_init.wast:1710
assert_trap(() => call($31, "test", [79]));

// table_init.wast:1711
assert_trap(() => call($31, "test", [80]));

// table_init.wast:1712
assert_trap(() => call($31, "test", [81]));

// table_init.wast:1713
assert_trap(() => call($31, "test", [82]));

// table_init.wast:1714
assert_trap(() => call($31, "test", [83]));

// table_init.wast:1715
assert_trap(() => call($31, "test", [84]));

// table_init.wast:1716
assert_trap(() => call($31, "test", [85]));

// table_init.wast:1717
assert_trap(() => call($31, "test", [86]));

// table_init.wast:1718
assert_trap(() => call($31, "test", [87]));

// table_init.wast:1719
assert_trap(() => call($31, "test", [88]));

// table_init.wast:1720
assert_trap(() => call($31, "test", [89]));

// table_init.wast:1721
assert_trap(() => call($31, "test", [90]));

// table_init.wast:1722
assert_trap(() => call($31, "test", [91]));

// table_init.wast:1723
assert_trap(() => call($31, "test", [92]));

// table_init.wast:1724
assert_trap(() => call($31, "test", [93]));

// table_init.wast:1725
assert_trap(() => call($31, "test", [94]));

// table_init.wast:1726
assert_trap(() => call($31, "test", [95]));

// table_init.wast:1727
assert_trap(() => call($31, "test", [96]));

// table_init.wast:1728
assert_trap(() => call($31, "test", [97]));

// table_init.wast:1729
assert_trap(() => call($31, "test", [98]));

// table_init.wast:1730
assert_trap(() => call($31, "test", [99]));

// table_init.wast:1731
assert_trap(() => call($31, "test", [100]));

// table_init.wast:1732
assert_trap(() => call($31, "test", [101]));

// table_init.wast:1733
assert_trap(() => call($31, "test", [102]));

// table_init.wast:1734
assert_trap(() => call($31, "test", [103]));

// table_init.wast:1735
assert_trap(() => call($31, "test", [104]));

// table_init.wast:1736
assert_trap(() => call($31, "test", [105]));

// table_init.wast:1737
assert_trap(() => call($31, "test", [106]));

// table_init.wast:1738
assert_trap(() => call($31, "test", [107]));

// table_init.wast:1739
assert_trap(() => call($31, "test", [108]));

// table_init.wast:1740
assert_trap(() => call($31, "test", [109]));

// table_init.wast:1741
assert_trap(() => call($31, "test", [110]));

// table_init.wast:1742
assert_trap(() => call($31, "test", [111]));

// table_init.wast:1743
assert_trap(() => call($31, "test", [112]));

// table_init.wast:1744
assert_trap(() => call($31, "test", [113]));

// table_init.wast:1745
assert_trap(() => call($31, "test", [114]));

// table_init.wast:1746
assert_trap(() => call($31, "test", [115]));

// table_init.wast:1747
assert_trap(() => call($31, "test", [116]));

// table_init.wast:1748
assert_trap(() => call($31, "test", [117]));

// table_init.wast:1749
assert_trap(() => call($31, "test", [118]));

// table_init.wast:1750
assert_trap(() => call($31, "test", [119]));

// table_init.wast:1751
assert_trap(() => call($31, "test", [120]));

// table_init.wast:1752
assert_trap(() => call($31, "test", [121]));

// table_init.wast:1753
assert_trap(() => call($31, "test", [122]));

// table_init.wast:1754
assert_trap(() => call($31, "test", [123]));

// table_init.wast:1755
assert_trap(() => call($31, "test", [124]));

// table_init.wast:1756
assert_trap(() => call($31, "test", [125]));

// table_init.wast:1757
assert_trap(() => call($31, "test", [126]));

// table_init.wast:1758
assert_trap(() => call($31, "test", [127]));

// table_init.wast:1759
assert_trap(() => call($31, "test", [128]));

// table_init.wast:1760
assert_trap(() => call($31, "test", [129]));

// table_init.wast:1761
assert_trap(() => call($31, "test", [130]));

// table_init.wast:1762
assert_trap(() => call($31, "test", [131]));

// table_init.wast:1763
assert_trap(() => call($31, "test", [132]));

// table_init.wast:1764
assert_trap(() => call($31, "test", [133]));

// table_init.wast:1765
assert_trap(() => call($31, "test", [134]));

// table_init.wast:1766
assert_trap(() => call($31, "test", [135]));

// table_init.wast:1767
assert_trap(() => call($31, "test", [136]));

// table_init.wast:1768
assert_trap(() => call($31, "test", [137]));

// table_init.wast:1769
assert_trap(() => call($31, "test", [138]));

// table_init.wast:1770
assert_trap(() => call($31, "test", [139]));

// table_init.wast:1771
assert_trap(() => call($31, "test", [140]));

// table_init.wast:1772
assert_trap(() => call($31, "test", [141]));

// table_init.wast:1773
assert_trap(() => call($31, "test", [142]));

// table_init.wast:1774
assert_trap(() => call($31, "test", [143]));

// table_init.wast:1775
assert_trap(() => call($31, "test", [144]));

// table_init.wast:1776
assert_trap(() => call($31, "test", [145]));

// table_init.wast:1777
assert_trap(() => call($31, "test", [146]));

// table_init.wast:1778
assert_trap(() => call($31, "test", [147]));

// table_init.wast:1779
assert_trap(() => call($31, "test", [148]));

// table_init.wast:1780
assert_trap(() => call($31, "test", [149]));

// table_init.wast:1781
assert_trap(() => call($31, "test", [150]));

// table_init.wast:1782
assert_trap(() => call($31, "test", [151]));

// table_init.wast:1783
assert_trap(() => call($31, "test", [152]));

// table_init.wast:1784
assert_trap(() => call($31, "test", [153]));

// table_init.wast:1785
assert_trap(() => call($31, "test", [154]));

// table_init.wast:1786
assert_trap(() => call($31, "test", [155]));

// table_init.wast:1787
assert_trap(() => call($31, "test", [156]));

// table_init.wast:1788
assert_trap(() => call($31, "test", [157]));

// table_init.wast:1789
assert_trap(() => call($31, "test", [158]));

// table_init.wast:1790
assert_trap(() => call($31, "test", [159]));

// table_init.wast:1792
let $32 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8f\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x01\x7f\x01\x7f\x60\x02\x7f\x7f\x00\x03\x93\x80\x80\x80\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x04\x87\x80\x80\x80\x00\x01\x70\x01\xa0\x01\xc0\x02\x07\xe4\x80\x80\x80\x00\x12\x02\x66\x30\x00\x00\x02\x66\x31\x00\x01\x02\x66\x32\x00\x02\x02\x66\x33\x00\x03\x02\x66\x34\x00\x04\x02\x66\x35\x00\x05\x02\x66\x36\x00\x06\x02\x66\x37\x00\x07\x02\x66\x38\x00\x08\x02\x66\x39\x00\x09\x03\x66\x31\x30\x00\x0a\x03\x66\x31\x31\x00\x0b\x03\x66\x31\x32\x00\x0c\x03\x66\x31\x33\x00\x0d\x03\x66\x31\x34\x00\x0e\x03\x66\x31\x35\x00\x0f\x04\x74\x65\x73\x74\x00\x10\x03\x72\x75\x6e\x00\x11\x09\x94\x80\x80\x80\x00\x01\x01\x00\x10\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x0a\xae\x81\x80\x80\x00\x12\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x84\x80\x80\x80\x00\x00\x41\x0a\x0b\x84\x80\x80\x80\x00\x00\x41\x0b\x0b\x84\x80\x80\x80\x00\x00\x41\x0c\x0b\x84\x80\x80\x80\x00\x00\x41\x0d\x0b\x84\x80\x80\x80\x00\x00\x41\x0e\x0b\x84\x80\x80\x80\x00\x00\x41\x0f\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x41\x00\x20\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:1820
assert_trap(() => call($32, "run", [97, 31]));

// table_init.wast:1821
assert_trap(() => call($32, "test", [0]));

// table_init.wast:1822
assert_trap(() => call($32, "test", [1]));

// table_init.wast:1823
assert_trap(() => call($32, "test", [2]));

// table_init.wast:1824
assert_trap(() => call($32, "test", [3]));

// table_init.wast:1825
assert_trap(() => call($32, "test", [4]));

// table_init.wast:1826
assert_trap(() => call($32, "test", [5]));

// table_init.wast:1827
assert_trap(() => call($32, "test", [6]));

// table_init.wast:1828
assert_trap(() => call($32, "test", [7]));

// table_init.wast:1829
assert_trap(() => call($32, "test", [8]));

// table_init.wast:1830
assert_trap(() => call($32, "test", [9]));

// table_init.wast:1831
assert_trap(() => call($32, "test", [10]));

// table_init.wast:1832
assert_trap(() => call($32, "test", [11]));

// table_init.wast:1833
assert_trap(() => call($32, "test", [12]));

// table_init.wast:1834
assert_trap(() => call($32, "test", [13]));

// table_init.wast:1835
assert_trap(() => call($32, "test", [14]));

// table_init.wast:1836
assert_trap(() => call($32, "test", [15]));

// table_init.wast:1837
assert_trap(() => call($32, "test", [16]));

// table_init.wast:1838
assert_trap(() => call($32, "test", [17]));

// table_init.wast:1839
assert_trap(() => call($32, "test", [18]));

// table_init.wast:1840
assert_trap(() => call($32, "test", [19]));

// table_init.wast:1841
assert_trap(() => call($32, "test", [20]));

// table_init.wast:1842
assert_trap(() => call($32, "test", [21]));

// table_init.wast:1843
assert_trap(() => call($32, "test", [22]));

// table_init.wast:1844
assert_trap(() => call($32, "test", [23]));

// table_init.wast:1845
assert_trap(() => call($32, "test", [24]));

// table_init.wast:1846
assert_trap(() => call($32, "test", [25]));

// table_init.wast:1847
assert_trap(() => call($32, "test", [26]));

// table_init.wast:1848
assert_trap(() => call($32, "test", [27]));

// table_init.wast:1849
assert_trap(() => call($32, "test", [28]));

// table_init.wast:1850
assert_trap(() => call($32, "test", [29]));

// table_init.wast:1851
assert_trap(() => call($32, "test", [30]));

// table_init.wast:1852
assert_trap(() => call($32, "test", [31]));

// table_init.wast:1853
assert_trap(() => call($32, "test", [32]));

// table_init.wast:1854
assert_trap(() => call($32, "test", [33]));

// table_init.wast:1855
assert_trap(() => call($32, "test", [34]));

// table_init.wast:1856
assert_trap(() => call($32, "test", [35]));

// table_init.wast:1857
assert_trap(() => call($32, "test", [36]));

// table_init.wast:1858
assert_trap(() => call($32, "test", [37]));

// table_init.wast:1859
assert_trap(() => call($32, "test", [38]));

// table_init.wast:1860
assert_trap(() => call($32, "test", [39]));

// table_init.wast:1861
assert_trap(() => call($32, "test", [40]));

// table_init.wast:1862
assert_trap(() => call($32, "test", [41]));

// table_init.wast:1863
assert_trap(() => call($32, "test", [42]));

// table_init.wast:1864
assert_trap(() => call($32, "test", [43]));

// table_init.wast:1865
assert_trap(() => call($32, "test", [44]));

// table_init.wast:1866
assert_trap(() => call($32, "test", [45]));

// table_init.wast:1867
assert_trap(() => call($32, "test", [46]));

// table_init.wast:1868
assert_trap(() => call($32, "test", [47]));

// table_init.wast:1869
assert_trap(() => call($32, "test", [48]));

// table_init.wast:1870
assert_trap(() => call($32, "test", [49]));

// table_init.wast:1871
assert_trap(() => call($32, "test", [50]));

// table_init.wast:1872
assert_trap(() => call($32, "test", [51]));

// table_init.wast:1873
assert_trap(() => call($32, "test", [52]));

// table_init.wast:1874
assert_trap(() => call($32, "test", [53]));

// table_init.wast:1875
assert_trap(() => call($32, "test", [54]));

// table_init.wast:1876
assert_trap(() => call($32, "test", [55]));

// table_init.wast:1877
assert_trap(() => call($32, "test", [56]));

// table_init.wast:1878
assert_trap(() => call($32, "test", [57]));

// table_init.wast:1879
assert_trap(() => call($32, "test", [58]));

// table_init.wast:1880
assert_trap(() => call($32, "test", [59]));

// table_init.wast:1881
assert_trap(() => call($32, "test", [60]));

// table_init.wast:1882
assert_trap(() => call($32, "test", [61]));

// table_init.wast:1883
assert_trap(() => call($32, "test", [62]));

// table_init.wast:1884
assert_trap(() => call($32, "test", [63]));

// table_init.wast:1885
assert_trap(() => call($32, "test", [64]));

// table_init.wast:1886
assert_trap(() => call($32, "test", [65]));

// table_init.wast:1887
assert_trap(() => call($32, "test", [66]));

// table_init.wast:1888
assert_trap(() => call($32, "test", [67]));

// table_init.wast:1889
assert_trap(() => call($32, "test", [68]));

// table_init.wast:1890
assert_trap(() => call($32, "test", [69]));

// table_init.wast:1891
assert_trap(() => call($32, "test", [70]));

// table_init.wast:1892
assert_trap(() => call($32, "test", [71]));

// table_init.wast:1893
assert_trap(() => call($32, "test", [72]));

// table_init.wast:1894
assert_trap(() => call($32, "test", [73]));

// table_init.wast:1895
assert_trap(() => call($32, "test", [74]));

// table_init.wast:1896
assert_trap(() => call($32, "test", [75]));

// table_init.wast:1897
assert_trap(() => call($32, "test", [76]));

// table_init.wast:1898
assert_trap(() => call($32, "test", [77]));

// table_init.wast:1899
assert_trap(() => call($32, "test", [78]));

// table_init.wast:1900
assert_trap(() => call($32, "test", [79]));

// table_init.wast:1901
assert_trap(() => call($32, "test", [80]));

// table_init.wast:1902
assert_trap(() => call($32, "test", [81]));

// table_init.wast:1903
assert_trap(() => call($32, "test", [82]));

// table_init.wast:1904
assert_trap(() => call($32, "test", [83]));

// table_init.wast:1905
assert_trap(() => call($32, "test", [84]));

// table_init.wast:1906
assert_trap(() => call($32, "test", [85]));

// table_init.wast:1907
assert_trap(() => call($32, "test", [86]));

// table_init.wast:1908
assert_trap(() => call($32, "test", [87]));

// table_init.wast:1909
assert_trap(() => call($32, "test", [88]));

// table_init.wast:1910
assert_trap(() => call($32, "test", [89]));

// table_init.wast:1911
assert_trap(() => call($32, "test", [90]));

// table_init.wast:1912
assert_trap(() => call($32, "test", [91]));

// table_init.wast:1913
assert_trap(() => call($32, "test", [92]));

// table_init.wast:1914
assert_trap(() => call($32, "test", [93]));

// table_init.wast:1915
assert_trap(() => call($32, "test", [94]));

// table_init.wast:1916
assert_trap(() => call($32, "test", [95]));

// table_init.wast:1917
assert_trap(() => call($32, "test", [96]));

// table_init.wast:1918
assert_trap(() => call($32, "test", [97]));

// table_init.wast:1919
assert_trap(() => call($32, "test", [98]));

// table_init.wast:1920
assert_trap(() => call($32, "test", [99]));

// table_init.wast:1921
assert_trap(() => call($32, "test", [100]));

// table_init.wast:1922
assert_trap(() => call($32, "test", [101]));

// table_init.wast:1923
assert_trap(() => call($32, "test", [102]));

// table_init.wast:1924
assert_trap(() => call($32, "test", [103]));

// table_init.wast:1925
assert_trap(() => call($32, "test", [104]));

// table_init.wast:1926
assert_trap(() => call($32, "test", [105]));

// table_init.wast:1927
assert_trap(() => call($32, "test", [106]));

// table_init.wast:1928
assert_trap(() => call($32, "test", [107]));

// table_init.wast:1929
assert_trap(() => call($32, "test", [108]));

// table_init.wast:1930
assert_trap(() => call($32, "test", [109]));

// table_init.wast:1931
assert_trap(() => call($32, "test", [110]));

// table_init.wast:1932
assert_trap(() => call($32, "test", [111]));

// table_init.wast:1933
assert_trap(() => call($32, "test", [112]));

// table_init.wast:1934
assert_trap(() => call($32, "test", [113]));

// table_init.wast:1935
assert_trap(() => call($32, "test", [114]));

// table_init.wast:1936
assert_trap(() => call($32, "test", [115]));

// table_init.wast:1937
assert_trap(() => call($32, "test", [116]));

// table_init.wast:1938
assert_trap(() => call($32, "test", [117]));

// table_init.wast:1939
assert_trap(() => call($32, "test", [118]));

// table_init.wast:1940
assert_trap(() => call($32, "test", [119]));

// table_init.wast:1941
assert_trap(() => call($32, "test", [120]));

// table_init.wast:1942
assert_trap(() => call($32, "test", [121]));

// table_init.wast:1943
assert_trap(() => call($32, "test", [122]));

// table_init.wast:1944
assert_trap(() => call($32, "test", [123]));

// table_init.wast:1945
assert_trap(() => call($32, "test", [124]));

// table_init.wast:1946
assert_trap(() => call($32, "test", [125]));

// table_init.wast:1947
assert_trap(() => call($32, "test", [126]));

// table_init.wast:1948
assert_trap(() => call($32, "test", [127]));

// table_init.wast:1949
assert_trap(() => call($32, "test", [128]));

// table_init.wast:1950
assert_trap(() => call($32, "test", [129]));

// table_init.wast:1951
assert_trap(() => call($32, "test", [130]));

// table_init.wast:1952
assert_trap(() => call($32, "test", [131]));

// table_init.wast:1953
assert_trap(() => call($32, "test", [132]));

// table_init.wast:1954
assert_trap(() => call($32, "test", [133]));

// table_init.wast:1955
assert_trap(() => call($32, "test", [134]));

// table_init.wast:1956
assert_trap(() => call($32, "test", [135]));

// table_init.wast:1957
assert_trap(() => call($32, "test", [136]));

// table_init.wast:1958
assert_trap(() => call($32, "test", [137]));

// table_init.wast:1959
assert_trap(() => call($32, "test", [138]));

// table_init.wast:1960
assert_trap(() => call($32, "test", [139]));

// table_init.wast:1961
assert_trap(() => call($32, "test", [140]));

// table_init.wast:1962
assert_trap(() => call($32, "test", [141]));

// table_init.wast:1963
assert_trap(() => call($32, "test", [142]));

// table_init.wast:1964
assert_trap(() => call($32, "test", [143]));

// table_init.wast:1965
assert_trap(() => call($32, "test", [144]));

// table_init.wast:1966
assert_trap(() => call($32, "test", [145]));

// table_init.wast:1967
assert_trap(() => call($32, "test", [146]));

// table_init.wast:1968
assert_trap(() => call($32, "test", [147]));

// table_init.wast:1969
assert_trap(() => call($32, "test", [148]));

// table_init.wast:1970
assert_trap(() => call($32, "test", [149]));

// table_init.wast:1971
assert_trap(() => call($32, "test", [150]));

// table_init.wast:1972
assert_trap(() => call($32, "test", [151]));

// table_init.wast:1973
assert_trap(() => call($32, "test", [152]));

// table_init.wast:1974
assert_trap(() => call($32, "test", [153]));

// table_init.wast:1975
assert_trap(() => call($32, "test", [154]));

// table_init.wast:1976
assert_trap(() => call($32, "test", [155]));

// table_init.wast:1977
assert_trap(() => call($32, "test", [156]));

// table_init.wast:1978
assert_trap(() => call($32, "test", [157]));

// table_init.wast:1979
assert_trap(() => call($32, "test", [158]));

// table_init.wast:1980
assert_trap(() => call($32, "test", [159]));

// table_init.wast:1982
let $33 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8f\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x01\x7f\x01\x7f\x60\x02\x7f\x7f\x00\x03\x93\x80\x80\x80\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x04\x85\x80\x80\x80\x00\x01\x70\x01\x40\x40\x07\xe4\x80\x80\x80\x00\x12\x02\x66\x30\x00\x00\x02\x66\x31\x00\x01\x02\x66\x32\x00\x02\x02\x66\x33\x00\x03\x02\x66\x34\x00\x04\x02\x66\x35\x00\x05\x02\x66\x36\x00\x06\x02\x66\x37\x00\x07\x02\x66\x38\x00\x08\x02\x66\x39\x00\x09\x03\x66\x31\x30\x00\x0a\x03\x66\x31\x31\x00\x0b\x03\x66\x31\x32\x00\x0c\x03\x66\x31\x33\x00\x0d\x03\x66\x31\x34\x00\x0e\x03\x66\x31\x35\x00\x0f\x04\x74\x65\x73\x74\x00\x10\x03\x72\x75\x6e\x00\x11\x09\x94\x80\x80\x80\x00\x01\x01\x00\x10\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x0a\xae\x81\x80\x80\x00\x12\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x84\x80\x80\x80\x00\x00\x41\x0a\x0b\x84\x80\x80\x80\x00\x00\x41\x0b\x0b\x84\x80\x80\x80\x00\x00\x41\x0c\x0b\x84\x80\x80\x80\x00\x00\x41\x0d\x0b\x84\x80\x80\x80\x00\x00\x41\x0e\x0b\x84\x80\x80\x80\x00\x00\x41\x0f\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x41\x00\x20\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:2010
assert_trap(() => call($33, "run", [48, -16]));

// table_init.wast:2011
assert_trap(() => call($33, "test", [0]));

// table_init.wast:2012
assert_trap(() => call($33, "test", [1]));

// table_init.wast:2013
assert_trap(() => call($33, "test", [2]));

// table_init.wast:2014
assert_trap(() => call($33, "test", [3]));

// table_init.wast:2015
assert_trap(() => call($33, "test", [4]));

// table_init.wast:2016
assert_trap(() => call($33, "test", [5]));

// table_init.wast:2017
assert_trap(() => call($33, "test", [6]));

// table_init.wast:2018
assert_trap(() => call($33, "test", [7]));

// table_init.wast:2019
assert_trap(() => call($33, "test", [8]));

// table_init.wast:2020
assert_trap(() => call($33, "test", [9]));

// table_init.wast:2021
assert_trap(() => call($33, "test", [10]));

// table_init.wast:2022
assert_trap(() => call($33, "test", [11]));

// table_init.wast:2023
assert_trap(() => call($33, "test", [12]));

// table_init.wast:2024
assert_trap(() => call($33, "test", [13]));

// table_init.wast:2025
assert_trap(() => call($33, "test", [14]));

// table_init.wast:2026
assert_trap(() => call($33, "test", [15]));

// table_init.wast:2027
assert_trap(() => call($33, "test", [16]));

// table_init.wast:2028
assert_trap(() => call($33, "test", [17]));

// table_init.wast:2029
assert_trap(() => call($33, "test", [18]));

// table_init.wast:2030
assert_trap(() => call($33, "test", [19]));

// table_init.wast:2031
assert_trap(() => call($33, "test", [20]));

// table_init.wast:2032
assert_trap(() => call($33, "test", [21]));

// table_init.wast:2033
assert_trap(() => call($33, "test", [22]));

// table_init.wast:2034
assert_trap(() => call($33, "test", [23]));

// table_init.wast:2035
assert_trap(() => call($33, "test", [24]));

// table_init.wast:2036
assert_trap(() => call($33, "test", [25]));

// table_init.wast:2037
assert_trap(() => call($33, "test", [26]));

// table_init.wast:2038
assert_trap(() => call($33, "test", [27]));

// table_init.wast:2039
assert_trap(() => call($33, "test", [28]));

// table_init.wast:2040
assert_trap(() => call($33, "test", [29]));

// table_init.wast:2041
assert_trap(() => call($33, "test", [30]));

// table_init.wast:2042
assert_trap(() => call($33, "test", [31]));

// table_init.wast:2043
assert_trap(() => call($33, "test", [32]));

// table_init.wast:2044
assert_trap(() => call($33, "test", [33]));

// table_init.wast:2045
assert_trap(() => call($33, "test", [34]));

// table_init.wast:2046
assert_trap(() => call($33, "test", [35]));

// table_init.wast:2047
assert_trap(() => call($33, "test", [36]));

// table_init.wast:2048
assert_trap(() => call($33, "test", [37]));

// table_init.wast:2049
assert_trap(() => call($33, "test", [38]));

// table_init.wast:2050
assert_trap(() => call($33, "test", [39]));

// table_init.wast:2051
assert_trap(() => call($33, "test", [40]));

// table_init.wast:2052
assert_trap(() => call($33, "test", [41]));

// table_init.wast:2053
assert_trap(() => call($33, "test", [42]));

// table_init.wast:2054
assert_trap(() => call($33, "test", [43]));

// table_init.wast:2055
assert_trap(() => call($33, "test", [44]));

// table_init.wast:2056
assert_trap(() => call($33, "test", [45]));

// table_init.wast:2057
assert_trap(() => call($33, "test", [46]));

// table_init.wast:2058
assert_trap(() => call($33, "test", [47]));

// table_init.wast:2059
assert_trap(() => call($33, "test", [48]));

// table_init.wast:2060
assert_trap(() => call($33, "test", [49]));

// table_init.wast:2061
assert_trap(() => call($33, "test", [50]));

// table_init.wast:2062
assert_trap(() => call($33, "test", [51]));

// table_init.wast:2063
assert_trap(() => call($33, "test", [52]));

// table_init.wast:2064
assert_trap(() => call($33, "test", [53]));

// table_init.wast:2065
assert_trap(() => call($33, "test", [54]));

// table_init.wast:2066
assert_trap(() => call($33, "test", [55]));

// table_init.wast:2067
assert_trap(() => call($33, "test", [56]));

// table_init.wast:2068
assert_trap(() => call($33, "test", [57]));

// table_init.wast:2069
assert_trap(() => call($33, "test", [58]));

// table_init.wast:2070
assert_trap(() => call($33, "test", [59]));

// table_init.wast:2071
assert_trap(() => call($33, "test", [60]));

// table_init.wast:2072
assert_trap(() => call($33, "test", [61]));

// table_init.wast:2073
assert_trap(() => call($33, "test", [62]));

// table_init.wast:2074
assert_trap(() => call($33, "test", [63]));

// table_init.wast:2076
let $34 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8f\x80\x80\x80\x00\x03\x60\x00\x01\x7f\x60\x01\x7f\x01\x7f\x60\x02\x7f\x7f\x00\x03\x93\x80\x80\x80\x00\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x04\x85\x80\x80\x80\x00\x01\x70\x01\x10\x10\x07\xe4\x80\x80\x80\x00\x12\x02\x66\x30\x00\x00\x02\x66\x31\x00\x01\x02\x66\x32\x00\x02\x02\x66\x33\x00\x03\x02\x66\x34\x00\x04\x02\x66\x35\x00\x05\x02\x66\x36\x00\x06\x02\x66\x37\x00\x07\x02\x66\x38\x00\x08\x02\x66\x39\x00\x09\x03\x66\x31\x30\x00\x0a\x03\x66\x31\x31\x00\x0b\x03\x66\x31\x32\x00\x0c\x03\x66\x31\x33\x00\x0d\x03\x66\x31\x34\x00\x0e\x03\x66\x31\x35\x00\x0f\x04\x74\x65\x73\x74\x00\x10\x03\x72\x75\x6e\x00\x11\x09\x94\x80\x80\x80\x00\x01\x01\x00\x10\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x0a\xae\x81\x80\x80\x00\x12\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x41\x02\x0b\x84\x80\x80\x80\x00\x00\x41\x03\x0b\x84\x80\x80\x80\x00\x00\x41\x04\x0b\x84\x80\x80\x80\x00\x00\x41\x05\x0b\x84\x80\x80\x80\x00\x00\x41\x06\x0b\x84\x80\x80\x80\x00\x00\x41\x07\x0b\x84\x80\x80\x80\x00\x00\x41\x08\x0b\x84\x80\x80\x80\x00\x00\x41\x09\x0b\x84\x80\x80\x80\x00\x00\x41\x0a\x0b\x84\x80\x80\x80\x00\x00\x41\x0b\x0b\x84\x80\x80\x80\x00\x00\x41\x0c\x0b\x84\x80\x80\x80\x00\x00\x41\x0d\x0b\x84\x80\x80\x80\x00\x00\x41\x0e\x0b\x84\x80\x80\x80\x00\x00\x41\x0f\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x11\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x41\x08\x20\x01\xfc\x0c\x00\x00\x0b");

// table_init.wast:2104
assert_trap(() => call($34, "run", [0, -4]));

// table_init.wast:2105
assert_trap(() => call($34, "test", [0]));

// table_init.wast:2106
assert_trap(() => call($34, "test", [1]));

// table_init.wast:2107
assert_trap(() => call($34, "test", [2]));

// table_init.wast:2108
assert_trap(() => call($34, "test", [3]));

// table_init.wast:2109
assert_trap(() => call($34, "test", [4]));

// table_init.wast:2110
assert_trap(() => call($34, "test", [5]));

// table_init.wast:2111
assert_trap(() => call($34, "test", [6]));

// table_init.wast:2112
assert_trap(() => call($34, "test", [7]));

// table_init.wast:2113
assert_trap(() => call($34, "test", [8]));

// table_init.wast:2114
assert_trap(() => call($34, "test", [9]));

// table_init.wast:2115
assert_trap(() => call($34, "test", [10]));

// table_init.wast:2116
assert_trap(() => call($34, "test", [11]));

// table_init.wast:2117
assert_trap(() => call($34, "test", [12]));

// table_init.wast:2118
assert_trap(() => call($34, "test", [13]));

// table_init.wast:2119
assert_trap(() => call($34, "test", [14]));

// table_init.wast:2120
assert_trap(() => call($34, "test", [15]));

// table_init.wast:2122
let $35 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x04\x84\x80\x80\x80\x00\x01\x70\x00\x01\x09\xc4\x81\x80\x80\x00\x41\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x0a\x92\x80\x80\x80\x00\x01\x8c\x80\x80\x80\x00\x00\x41\x00\x41\x00\x41\x00\xfc\x0c\x40\x00\x0b");
reinitializeRegistry();
})();
