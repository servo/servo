(function try_table_wast_js() {

// try_table.wast:3
let $$1 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0d\x83\x80\x80\x80\x00\x01\x00\x00\x07\x8e\x80\x80\x80\x00\x02\x02\x65\x30\x04\x00\x05\x74\x68\x72\x6f\x77\x00\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x08\x00\x0b", "try_table.wast:3");

// try_table.wast:3
let $1 = instance($$1);

// try_table.wast:8
register("test", $1)

// try_table.wast:10
let $$2 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xc6\x80\x80\x80\x00\x0f\x60\x00\x00\x60\x01\x7f\x00\x60\x01\x7d\x00\x60\x01\x7e\x00\x60\x01\x7c\x00\x60\x01\x7f\x01\x7f\x60\x02\x7f\x7f\x01\x7f\x60\x01\x7d\x01\x7d\x60\x01\x7e\x01\x7e\x60\x01\x7c\x01\x7c\x60\x00\x02\x7f\x69\x60\x00\x02\x7d\x69\x60\x00\x02\x7e\x69\x60\x00\x02\x7c\x69\x60\x00\x01\x7f\x02\xa4\x80\x80\x80\x00\x03\x04\x74\x65\x73\x74\x02\x65\x30\x04\x00\x00\x04\x74\x65\x73\x74\x02\x65\x30\x04\x00\x00\x04\x74\x65\x73\x74\x05\x74\x68\x72\x6f\x77\x00\x00\x03\x99\x80\x80\x80\x00\x18\x05\x05\x00\x06\x06\x05\x05\x05\x07\x08\x09\x05\x07\x08\x09\x01\x05\x0e\x0e\x05\x00\x00\x00\x00\x04\x85\x80\x80\x80\x00\x01\x70\x01\x01\x01\x0d\x8f\x80\x80\x80\x00\x07\x00\x00\x00\x00\x00\x00\x00\x01\x00\x02\x00\x03\x00\x04\x07\xce\x83\x80\x80\x00\x14\x12\x73\x69\x6d\x70\x6c\x65\x2d\x74\x68\x72\x6f\x77\x2d\x63\x61\x74\x63\x68\x00\x02\x16\x75\x6e\x72\x65\x61\x63\x68\x61\x62\x6c\x65\x2d\x6e\x6f\x74\x2d\x63\x61\x75\x67\x68\x74\x00\x03\x0e\x74\x72\x61\x70\x2d\x69\x6e\x2d\x63\x61\x6c\x6c\x65\x65\x00\x05\x0f\x63\x61\x74\x63\x68\x2d\x63\x6f\x6d\x70\x6c\x65\x78\x2d\x31\x00\x06\x0f\x63\x61\x74\x63\x68\x2d\x63\x6f\x6d\x70\x6c\x65\x78\x2d\x32\x00\x07\x15\x74\x68\x72\x6f\x77\x2d\x63\x61\x74\x63\x68\x2d\x70\x61\x72\x61\x6d\x2d\x69\x33\x32\x00\x08\x15\x74\x68\x72\x6f\x77\x2d\x63\x61\x74\x63\x68\x2d\x70\x61\x72\x61\x6d\x2d\x66\x33\x32\x00\x09\x15\x74\x68\x72\x6f\x77\x2d\x63\x61\x74\x63\x68\x2d\x70\x61\x72\x61\x6d\x2d\x69\x36\x34\x00\x0a\x15\x74\x68\x72\x6f\x77\x2d\x63\x61\x74\x63\x68\x2d\x70\x61\x72\x61\x6d\x2d\x66\x36\x34\x00\x0b\x19\x74\x68\x72\x6f\x77\x2d\x63\x61\x74\x63\x68\x5f\x72\x65\x66\x2d\x70\x61\x72\x61\x6d\x2d\x69\x33\x32\x00\x0c\x19\x74\x68\x72\x6f\x77\x2d\x63\x61\x74\x63\x68\x5f\x72\x65\x66\x2d\x70\x61\x72\x61\x6d\x2d\x66\x33\x32\x00\x0d\x19\x74\x68\x72\x6f\x77\x2d\x63\x61\x74\x63\x68\x5f\x72\x65\x66\x2d\x70\x61\x72\x61\x6d\x2d\x69\x36\x34\x00\x0e\x19\x74\x68\x72\x6f\x77\x2d\x63\x61\x74\x63\x68\x5f\x72\x65\x66\x2d\x70\x61\x72\x61\x6d\x2d\x66\x36\x34\x00\x0f\x0f\x63\x61\x74\x63\x68\x2d\x70\x61\x72\x61\x6d\x2d\x69\x33\x32\x00\x11\x0e\x63\x61\x74\x63\x68\x2d\x69\x6d\x70\x6f\x72\x74\x65\x64\x00\x12\x14\x63\x61\x74\x63\x68\x2d\x69\x6d\x70\x6f\x72\x74\x65\x64\x2d\x61\x6c\x69\x61\x73\x00\x13\x0d\x63\x61\x74\x63\x68\x6c\x65\x73\x73\x2d\x74\x72\x79\x00\x14\x18\x72\x65\x74\x75\x72\x6e\x2d\x63\x61\x6c\x6c\x2d\x69\x6e\x2d\x74\x72\x79\x2d\x63\x61\x74\x63\x68\x00\x16\x21\x72\x65\x74\x75\x72\x6e\x2d\x63\x61\x6c\x6c\x2d\x69\x6e\x64\x69\x72\x65\x63\x74\x2d\x69\x6e\x2d\x74\x72\x79\x2d\x63\x61\x74\x63\x68\x00\x17\x0e\x74\x72\x79\x2d\x77\x69\x74\x68\x2d\x70\x61\x72\x61\x6d\x00\x18\x09\x89\x80\x80\x80\x00\x01\x04\x41\x00\x0b\x01\xd2\x15\x0b\x0a\xe7\x84\x80\x80\x00\x18\x8e\x80\x80\x80\x00\x00\x20\x00\x41\x00\x47\x04\x40\x08\x02\x0b\x41\x00\x0b\x99\x80\x80\x80\x00\x00\x02\x40\x1f\x7f\x01\x00\x02\x00\x20\x00\x45\x04\x40\x08\x02\x0b\x41\x2a\x0b\x0f\x0b\x41\x17\x0b\x8d\x80\x80\x80\x00\x00\x02\x40\x1f\x40\x01\x02\x00\x00\x0b\x0f\x0b\x0b\x87\x80\x80\x80\x00\x00\x20\x00\x20\x01\x6e\x0b\x94\x80\x80\x80\x00\x00\x02\x40\x1f\x7f\x01\x02\x00\x20\x00\x20\x01\x10\x04\x0b\x0f\x0b\x41\x0b\x0b\xb5\x80\x80\x80\x00\x00\x02\x40\x1f\x7f\x01\x00\x03\x00\x02\x40\x1f\x7f\x01\x00\x02\x00\x20\x00\x45\x04\x40\x08\x02\x05\x20\x00\x41\x01\x46\x04\x40\x08\x03\x05\x08\x04\x0b\x0b\x41\x02\x0b\x0c\x01\x0b\x41\x03\x0b\x0f\x0b\x41\x04\x0b\xb0\x80\x80\x80\x00\x00\x02\x40\x02\x40\x1f\x7f\x02\x00\x02\x01\x00\x03\x00\x20\x00\x45\x04\x40\x08\x02\x05\x20\x00\x41\x01\x46\x04\x40\x08\x03\x05\x08\x04\x0b\x0b\x41\x02\x0b\x0f\x0b\x41\x04\x0f\x0b\x41\x03\x0b\x94\x80\x80\x80\x00\x00\x02\x7f\x1f\x7f\x01\x00\x05\x00\x20\x00\x08\x05\x41\x02\x0b\x0f\x0b\x0f\x0b\x97\x80\x80\x80\x00\x00\x02\x7d\x1f\x7d\x01\x00\x06\x00\x20\x00\x08\x06\x43\x00\x00\x00\x00\x0b\x0f\x0b\x0f\x0b\x94\x80\x80\x80\x00\x00\x02\x7e\x1f\x7e\x01\x00\x07\x00\x20\x00\x08\x07\x42\x02\x0b\x0f\x0b\x0f\x0b\x9b\x80\x80\x80\x00\x00\x02\x7c\x1f\x7c\x01\x00\x08\x00\x20\x00\x08\x08\x44\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x0f\x0b\x0f\x0b\x95\x80\x80\x80\x00\x00\x02\x0a\x1f\x7f\x01\x01\x05\x00\x20\x00\x08\x05\x41\x02\x0b\x0f\x0b\x1a\x0f\x0b\x98\x80\x80\x80\x00\x00\x02\x0b\x1f\x7d\x01\x01\x06\x00\x20\x00\x08\x06\x43\x00\x00\x00\x00\x0b\x0f\x0b\x1a\x0f\x0b\x95\x80\x80\x80\x00\x00\x02\x0c\x1f\x7e\x01\x01\x07\x00\x20\x00\x08\x07\x42\x02\x0b\x0f\x0b\x1a\x0f\x0b\x9c\x80\x80\x80\x00\x00\x02\x0d\x1f\x7c\x01\x01\x08\x00\x20\x00\x08\x08\x44\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x0f\x0b\x1a\x0f\x0b\x86\x80\x80\x80\x00\x00\x20\x00\x08\x05\x0b\x93\x80\x80\x80\x00\x00\x02\x7f\x1f\x7f\x01\x00\x05\x00\x41\x00\x20\x00\x10\x10\x0b\x0f\x0b\x0b\x93\x80\x80\x80\x00\x00\x02\x40\x1f\x7f\x01\x00\x00\x00\x41\x01\x10\x00\x0b\x0f\x0b\x41\x02\x0b\x93\x80\x80\x80\x00\x00\x02\x40\x1f\x7f\x01\x00\x00\x00\x41\x01\x08\x01\x0b\x0f\x0b\x41\x02\x0b\x97\x80\x80\x80\x00\x00\x02\x40\x1f\x7f\x01\x00\x02\x00\x1f\x7f\x00\x20\x00\x10\x01\x0b\x0b\x0f\x0b\x41\x01\x0b\x84\x80\x80\x80\x00\x00\x08\x02\x0b\x8e\x80\x80\x80\x00\x00\x02\x40\x1f\x40\x01\x00\x02\x00\x12\x15\x0b\x0b\x0b\x91\x80\x80\x80\x00\x00\x02\x40\x1f\x40\x01\x00\x02\x00\x41\x00\x13\x00\x00\x0b\x0b\x0b\x89\x80\x80\x80\x00\x00\x41\x00\x1f\x01\x00\x1a\x0b\x0b", "try_table.wast:10");

// try_table.wast:10
let $2 = instance($$2);

// try_table.wast:258
assert_return(() => call($2, "simple-throw-catch", [0]), "try_table.wast:258", 23);

// try_table.wast:259
assert_return(() => call($2, "simple-throw-catch", [1]), "try_table.wast:259", 42);

// try_table.wast:261
assert_trap(() => call($2, "unreachable-not-caught", []), "try_table.wast:261");

// try_table.wast:263
assert_return(() => call($2, "trap-in-callee", [7, 2]), "try_table.wast:263", 3);

// try_table.wast:264
assert_trap(() => call($2, "trap-in-callee", [1, 0]), "try_table.wast:264");

// try_table.wast:266
assert_return(() => call($2, "catch-complex-1", [0]), "try_table.wast:266", 3);

// try_table.wast:267
assert_return(() => call($2, "catch-complex-1", [1]), "try_table.wast:267", 4);

// try_table.wast:268
assert_exception(() => call($2, "catch-complex-1", [2]), "try_table.wast:268");

// try_table.wast:270
assert_return(() => call($2, "catch-complex-2", [0]), "try_table.wast:270", 3);

// try_table.wast:271
assert_return(() => call($2, "catch-complex-2", [1]), "try_table.wast:271", 4);

// try_table.wast:272
assert_exception(() => call($2, "catch-complex-2", [2]), "try_table.wast:272");

// try_table.wast:274
assert_return(() => call($2, "throw-catch-param-i32", [0]), "try_table.wast:274", 0);

// try_table.wast:275
assert_return(() => call($2, "throw-catch-param-i32", [1]), "try_table.wast:275", 1);

// try_table.wast:276
assert_return(() => call($2, "throw-catch-param-i32", [10]), "try_table.wast:276", 10);

// try_table.wast:278
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7d\x01\x7d\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x74\x68\x72\x6f\x77\x2d\x63\x61\x74\x63\x68\x2d\x70\x61\x72\x61\x6d\x2d\x66\x33\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9f\x80\x80\x80\x00\x01\x99\x80\x80\x80\x00\x00\x02\x40\x43\x00\x00\xa0\x40\x10\x00\xbc\x43\x00\x00\xa0\x40\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "try_table.wast:278");  // assert_return(() => call($2, "throw-catch-param-f32", [5.]), "try_table.wast:278", 5.)

// try_table.wast:279
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7d\x01\x7d\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x74\x68\x72\x6f\x77\x2d\x63\x61\x74\x63\x68\x2d\x70\x61\x72\x61\x6d\x2d\x66\x33\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9f\x80\x80\x80\x00\x01\x99\x80\x80\x80\x00\x00\x02\x40\x43\x00\x00\x28\x41\x10\x00\xbc\x43\x00\x00\x28\x41\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "try_table.wast:279");  // assert_return(() => call($2, "throw-catch-param-f32", [10.5]), "try_table.wast:279", 10.5)

// try_table.wast:281
assert_return(() => call($2, "throw-catch-param-i64", [5n]), "try_table.wast:281", 5n);

// try_table.wast:282
assert_return(() => call($2, "throw-catch-param-i64", [0n]), "try_table.wast:282", 0n);

// try_table.wast:283
assert_return(() => call($2, "throw-catch-param-i64", [-1n]), "try_table.wast:283", -1n);

// try_table.wast:285
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7c\x01\x7c\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x74\x68\x72\x6f\x77\x2d\x63\x61\x74\x63\x68\x2d\x70\x61\x72\x61\x6d\x2d\x66\x36\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa7\x80\x80\x80\x00\x01\xa1\x80\x80\x80\x00\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x14\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x14\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "try_table.wast:285");  // assert_return(() => call($2, "throw-catch-param-f64", [5.]), "try_table.wast:285", 5.)

// try_table.wast:286
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7c\x01\x7c\x02\xc5\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x15\x74\x68\x72\x6f\x77\x2d\x63\x61\x74\x63\x68\x2d\x70\x61\x72\x61\x6d\x2d\x66\x36\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa7\x80\x80\x80\x00\x01\xa1\x80\x80\x80\x00\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x25\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x25\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "try_table.wast:286");  // assert_return(() => call($2, "throw-catch-param-f64", [10.5]), "try_table.wast:286", 10.5)

// try_table.wast:288
assert_return(() => call($2, "throw-catch_ref-param-i32", [0]), "try_table.wast:288", 0);

// try_table.wast:289
assert_return(() => call($2, "throw-catch_ref-param-i32", [1]), "try_table.wast:289", 1);

// try_table.wast:290
assert_return(() => call($2, "throw-catch_ref-param-i32", [10]), "try_table.wast:290", 10);

// try_table.wast:292
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7d\x01\x7d\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x74\x68\x72\x6f\x77\x2d\x63\x61\x74\x63\x68\x5f\x72\x65\x66\x2d\x70\x61\x72\x61\x6d\x2d\x66\x33\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9f\x80\x80\x80\x00\x01\x99\x80\x80\x80\x00\x00\x02\x40\x43\x00\x00\xa0\x40\x10\x00\xbc\x43\x00\x00\xa0\x40\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "try_table.wast:292");  // assert_return(() => call($2, "throw-catch_ref-param-f32", [5.]), "try_table.wast:292", 5.)

// try_table.wast:293
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7d\x01\x7d\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x74\x68\x72\x6f\x77\x2d\x63\x61\x74\x63\x68\x5f\x72\x65\x66\x2d\x70\x61\x72\x61\x6d\x2d\x66\x33\x32\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\x9f\x80\x80\x80\x00\x01\x99\x80\x80\x80\x00\x00\x02\x40\x43\x00\x00\x28\x41\x10\x00\xbc\x43\x00\x00\x28\x41\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "try_table.wast:293");  // assert_return(() => call($2, "throw-catch_ref-param-f32", [10.5]), "try_table.wast:293", 10.5)

// try_table.wast:295
assert_return(() => call($2, "throw-catch_ref-param-i64", [5n]), "try_table.wast:295", 5n);

// try_table.wast:296
assert_return(() => call($2, "throw-catch_ref-param-i64", [0n]), "try_table.wast:296", 0n);

// try_table.wast:297
assert_return(() => call($2, "throw-catch_ref-param-i64", [-1n]), "try_table.wast:297", -1n);

// try_table.wast:299
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7c\x01\x7c\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x74\x68\x72\x6f\x77\x2d\x63\x61\x74\x63\x68\x5f\x72\x65\x66\x2d\x70\x61\x72\x61\x6d\x2d\x66\x36\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa7\x80\x80\x80\x00\x01\xa1\x80\x80\x80\x00\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x14\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x14\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "try_table.wast:299");  // assert_return(() => call($2, "throw-catch_ref-param-f64", [5.]), "try_table.wast:299", 5.)

// try_table.wast:300
run(() => call(instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x94\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x7f\x01\x6e\x60\x02\x6d\x6d\x01\x7f\x60\x01\x7c\x01\x7c\x02\xc9\x80\x80\x80\x00\x03\x06\x6d\x6f\x64\x75\x6c\x65\x19\x74\x68\x72\x6f\x77\x2d\x63\x61\x74\x63\x68\x5f\x72\x65\x66\x2d\x70\x61\x72\x61\x6d\x2d\x66\x36\x34\x00\x03\x08\x73\x70\x65\x63\x74\x65\x73\x74\x07\x68\x6f\x73\x74\x72\x65\x66\x00\x01\x08\x73\x70\x65\x63\x74\x65\x73\x74\x06\x65\x71\x5f\x72\x65\x66\x00\x02\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x03\x0a\xa7\x80\x80\x80\x00\x01\xa1\x80\x80\x80\x00\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x25\x40\x10\x00\xbd\x44\x00\x00\x00\x00\x00\x00\x25\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b", "wrapper"), exports($2)),  "run", []), "try_table.wast:300");  // assert_return(() => call($2, "throw-catch_ref-param-f64", [10.5]), "try_table.wast:300", 10.5)

// try_table.wast:302
assert_return(() => call($2, "catch-param-i32", [5]), "try_table.wast:302", 5);

// try_table.wast:304
assert_return(() => call($2, "catch-imported", []), "try_table.wast:304", 2);

// try_table.wast:305
assert_return(() => call($2, "catch-imported-alias", []), "try_table.wast:305", 2);

// try_table.wast:307
assert_return(() => call($2, "catchless-try", [0]), "try_table.wast:307", 0);

// try_table.wast:308
assert_return(() => call($2, "catchless-try", [1]), "try_table.wast:308", 1);

// try_table.wast:310
assert_exception(() => call($2, "return-call-in-try-catch", []), "try_table.wast:310");

// try_table.wast:311
assert_exception(() => call($2, "return-call-indirect-in-try-catch", []), "try_table.wast:311");

// try_table.wast:313
assert_return(() => call($2, "try-with-param", []), "try_table.wast:313");

// try_table.wast:315
let $$3 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x00\x01\x7f\x02\x8e\x80\x80\x80\x00\x01\x04\x74\x65\x73\x74\x05\x74\x68\x72\x6f\x77\x00\x00\x03\x82\x80\x80\x80\x00\x01\x01\x0d\x83\x80\x80\x80\x00\x01\x00\x00\x07\x95\x80\x80\x80\x00\x01\x11\x69\x6d\x70\x6f\x72\x74\x65\x64\x2d\x6d\x69\x73\x6d\x61\x74\x63\x68\x00\x01\x0a\xa5\x80\x80\x80\x00\x01\x9f\x80\x80\x80\x00\x00\x02\x40\x1f\x7f\x01\x02\x00\x02\x40\x1f\x7f\x01\x00\x00\x00\x41\x01\x10\x00\x0b\x0f\x0b\x41\x02\x0b\x0f\x0b\x41\x03\x0b", "try_table.wast:315");

// try_table.wast:315
let $3 = instance($$3);

// try_table.wast:337
assert_return(() => call($3, "imported-mismatch", []), "try_table.wast:337", 3);

// try_table.wast:339
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "try_table.wast:339");

// try_table.wast:344
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e", "try_table.wast:344");

// try_table.wast:349
let $$4 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x00\x01\x69\x03\x87\x80\x80\x80\x00\x06\x00\x00\x00\x01\x01\x01\x0d\x83\x80\x80\x80\x00\x01\x00\x00\x0a\xe4\x80\x80\x80\x00\x06\x8c\x80\x80\x80\x00\x00\x1f\x40\x02\x00\x00\x00\x00\x00\x00\x0b\x0b\x8b\x80\x80\x80\x00\x00\x1f\x40\x02\x02\x00\x00\x00\x00\x0b\x0b\x8a\x80\x80\x80\x00\x00\x1f\x40\x02\x02\x00\x02\x00\x0b\x0b\x8d\x80\x80\x80\x00\x00\x1f\x40\x02\x01\x00\x00\x01\x00\x00\x0b\x00\x0b\x8c\x80\x80\x80\x00\x00\x1f\x40\x02\x03\x00\x01\x00\x00\x0b\x00\x0b\x8b\x80\x80\x80\x00\x00\x1f\x40\x02\x03\x00\x03\x00\x0b\x00\x0b", "try_table.wast:349");

// try_table.wast:349
let $4 = instance($$4);

// try_table.wast:359
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x1f\x7f\x00\x0b\x0b", "try_table.wast:359");

// try_table.wast:363
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x1f\x7f\x00\x42\x2a\x0b\x0b", "try_table.wast:363");

// try_table.wast:368
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0d\x83\x80\x80\x80\x00\x01\x00\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x1f\x40\x01\x01\x00\x00\x0b\x0b", "try_table.wast:368");

// try_table.wast:372
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x00\x01\x69\x03\x82\x80\x80\x80\x00\x01\x01\x0d\x83\x80\x80\x80\x00\x01\x00\x00\x0a\x90\x80\x80\x80\x00\x01\x8a\x80\x80\x80\x00\x00\x1f\x40\x01\x00\x00\x00\x0b\x00\x0b", "try_table.wast:372");

// try_table.wast:376
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x1f\x40\x01\x03\x00\x0b\x0b", "try_table.wast:376");

// try_table.wast:380
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x69\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x1f\x40\x01\x02\x00\x0b\x00\x0b", "try_table.wast:380");

// try_table.wast:384
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x01\x7e\x00\x60\x00\x02\x7f\x69\x03\x82\x80\x80\x80\x00\x01\x01\x0d\x83\x80\x80\x80\x00\x01\x00\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x1f\x7f\x01\x01\x00\x00\x41\x2a\x0b\x0b", "try_table.wast:384");

// try_table.wast:393
let $$5 = module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x9b\x80\x80\x80\x00\x05\x60\x00\x00\x60\x01\x64\x00\x00\x60\x00\x01\x63\x00\x60\x00\x02\x63\x00\x64\x69\x60\x00\x02\x63\x00\x69\x03\x88\x80\x80\x80\x00\x07\x00\x00\x02\x02\x02\x00\x00\x0d\x83\x80\x80\x80\x00\x01\x00\x01\x07\xc5\x80\x80\x80\x00\x05\x05\x63\x61\x74\x63\x68\x00\x02\x0a\x63\x61\x74\x63\x68\x5f\x72\x65\x66\x31\x00\x03\x0a\x63\x61\x74\x63\x68\x5f\x72\x65\x66\x32\x00\x04\x0e\x63\x61\x74\x63\x68\x5f\x61\x6c\x6c\x5f\x72\x65\x66\x31\x00\x05\x0e\x63\x61\x74\x63\x68\x5f\x61\x6c\x6c\x5f\x72\x65\x66\x32\x00\x06\x09\x85\x80\x80\x80\x00\x01\x03\x00\x01\x00\x0a\xfb\x80\x80\x80\x00\x07\x82\x80\x80\x80\x00\x00\x0b\x86\x80\x80\x80\x00\x00\xd2\x00\x08\x00\x0b\x90\x80\x80\x80\x00\x00\x02\x63\x00\x1f\x40\x01\x00\x00\x00\x10\x01\x0b\x00\x0b\x0b\x90\x80\x80\x80\x00\x00\x02\x03\x1f\x40\x01\x01\x00\x00\x10\x01\x0b\x00\x0b\x1a\x0b\x90\x80\x80\x80\x00\x00\x02\x04\x1f\x40\x01\x01\x00\x00\x10\x01\x0b\x00\x0b\x1a\x0b\x90\x80\x80\x80\x00\x00\x02\x64\x69\x1f\x40\x01\x03\x00\x10\x01\x0b\x00\x0b\x1a\x0b\x8f\x80\x80\x80\x00\x00\x02\x69\x1f\x40\x01\x03\x00\x10\x01\x0b\x00\x0b\x1a\x0b", "try_table.wast:393");

// try_table.wast:393
let $5 = instance($$5);

// try_table.wast:437
assert_return(() => call($5, "catch", []), "try_table.wast:437", "ref.func");

// try_table.wast:438
assert_return(() => call($5, "catch_ref1", []), "try_table.wast:438", "ref.func");

// try_table.wast:439
assert_return(() => call($5, "catch_ref2", []), "try_table.wast:439", "ref.func");

// try_table.wast:440
assert_return(() => call($5, "catch_all_ref1", []), "try_table.wast:440");

// try_table.wast:441
assert_return(() => call($5, "catch_all_ref2", []), "try_table.wast:441");

// try_table.wast:443
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8e\x80\x80\x80\x00\x03\x60\x00\x00\x60\x01\x63\x00\x00\x60\x00\x01\x64\x00\x03\x82\x80\x80\x80\x00\x01\x02\x0d\x83\x80\x80\x80\x00\x01\x00\x01\x07\x89\x80\x80\x80\x00\x01\x05\x63\x61\x74\x63\x68\x00\x00\x0a\x94\x80\x80\x80\x00\x01\x8e\x80\x80\x80\x00\x00\x02\x64\x00\x1f\x40\x01\x00\x00\x00\x0b\x00\x0b\x0b", "try_table.wast:443");

// try_table.wast:456
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x95\x80\x80\x80\x00\x04\x60\x00\x00\x60\x01\x63\x00\x00\x60\x00\x01\x64\x00\x60\x00\x02\x64\x00\x64\x69\x03\x82\x80\x80\x80\x00\x01\x02\x0d\x83\x80\x80\x80\x00\x01\x00\x01\x07\x8d\x80\x80\x80\x00\x01\x09\x63\x61\x74\x63\x68\x5f\x72\x65\x66\x00\x00\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x03\x1f\x40\x01\x00\x00\x00\x0b\x00\x0b\x0b", "try_table.wast:456");
reinitializeRegistry();
})();
