# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
sys.path.insert(0, os.path.abspath('..'))
sys.path.insert(0, os.path.abspath('../tools/wptserve'))
sys.path.insert(0, os.path.abspath('../tools/third_party/pywebsocket3'))
sys.path.insert(0, os.path.abspath('../tools'))
import localpaths

# -- Project information -----------------------------------------------------

project = u'web-platform-tests'
copyright = u'2019, wpt contributors'
author = u'wpt contributors'

# The short X.Y version
version = u''
# The full version, including alpha/beta/rc tags
release = u''


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'recommonmark',
    'sphinxarg.ext',
    'sphinx.ext.autodoc',
    'sphinx.ext.intersphinx',
    # Google-style Python docs
    'sphinx.ext.napoleon',
    'sphinx_js'
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# These values are used in third-party documentation not recognized by Sphinx.
# https://stackoverflow.com/questions/51824453/how-to-document-parameter-of-type-function-in-sphinx
nitpick_ignore = [
    # wptserve
    ('py:class', 'Callable'),
    ('py:obj', 'None'),
    # pywebsocket3
    ('py:exc', 'AbortedByUserException'),
    ('py:exc', 'HandshakeException'),
    ('py:exc', 'InvalidFrameException'),
    ('py:exc', 'UnsupportedFrameException'),
    ('py:exc', 'InvalidUTF8Exception'),
    ('py:exc', 'ConnectionTerminatedException'),
    ('py:exc', 'BadOperationException'),
    ('py:exc', 'Exception'),
    ('py:exc', 'ValueError'),
    ('py:class', 'http.client.HTTPMessage')
]

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = [
    '**/.tox',
    '**/.DS_Store',
    '**/Thumbs.db',
    '_build',
    'node_modules',
    'package.json',
    'package-lock.json',
]

from docs.wpt_lint_rules import WPTLintRules
# Enable inline reStructured Text within Markdown-formatted files
# https://recommonmark.readthedocs.io/en/latest/auto_structify.html
from recommonmark.transform import AutoStructify
def setup(app):
    app.add_transform(AutoStructify)
    app.add_directive('wpt-lint-rules', WPTLintRules)

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = None


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'alabaster'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['assets']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}

# Sphix-js configuration

# Only document things under resources/ for now
js_source_path = '../resources'

# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'web-platform-testsdoc'


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'web-platform-tests.tex', u'web-platform-tests Documentation',
     u'wpt contributors', 'manual'),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'web-platform-tests', u'web-platform-tests Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'web-platform-tests', u'web-platform-tests Documentation',
     author, 'web-platform-tests', 'One line description of project.',
     'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']

intersphinx_mapping = {'python': ('https://docs.python.org/3/', None),
                       'mozilla': ('https://firefox-source-docs.mozilla.org/', None)}
