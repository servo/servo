<!DOCTYPE html>
<html><head>
        <title>Shape Outside Ellipse Valid Formats</title>
        <link href="http://html.adobe.com/" rel="author" title="Adobe">
        <link href="mailto:betravis@adobe.com" rel="author" title="Bear Travis">
        <link href="mailto:stearns@adobe.com" rel="reviewer" title="Alan Stearns"> <!-- 2014-03-04 -->
        <link href="http://www.w3.org/TR/css-shapes-1/#funcdef-ellipse" rel="help">
        <link href="http://www.w3.org/TR/css-shapes-1/#shape-outside-property" rel="help">
        <meta content="An elliptical basic shape has two optional components, radii (2) and a position." name="assert">
        <meta content="dom" name="flags">
        <script src="/resources/testharness.js"></script>
        <script src="/resources/testharnessreport.js"></script>
        <script src="support/parsing-utils.js"></script>
    </head>
    <body>
        <div id="log"></div>
        <script type="text/javascript">
            var valid_ellipse_tests = [
                {
                  "name": "No arguments",
                  "actual": "ellipse()",
                  "expected_inline": "ellipse(at 50% 50%)",
                  "expected_computed": "ellipse(at 50% 50%)"
                },
                {
                  "name": "Radial arguments",
                  "actual": "ellipse(50px 50px)",
                  "expected_inline": "ellipse(50px 50px at 50% 50%)",
                  "expected_computed": "ellipse(50px 50px at 50% 50%)"
                },
                {
                   "name": "Position argument",
                   "actual": "ellipse(at 50px 50px)",
                   "expected_inline": "ellipse(at 50px 50px)",
                   "expected_computed": "ellipse(at 50px 50px)"
                },
                {
                   "name": "Radial and position argument",
                   "actual": "ellipse(50px 50px at 50px 50px)",
                   "expected_inline": "ellipse(50px 50px at 50px 50px)",
                   "expected_computed": "ellipse(50px 50px at 50px 50px)"
                }
            ];
            generate_tests( ParsingUtils.testInlineStyle,
                            ParsingUtils.buildTestCases(valid_ellipse_tests, "inline") );
            generate_tests( ParsingUtils.testComputedStyle,
                            ParsingUtils.buildTestCases(valid_ellipse_tests, "computed") );
        </script>
    

</body></html>