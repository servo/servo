<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

 <head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

  <title>CSS Writing Modes Test: absolutely positioned non-replaced element - 'direction: ltr' and 'top' and 'bottom are 'auto' and 'height' is not 'auto'</title>
  <style type="text/css">
    @page { font: italic 8pt sans-serif; color: gray;
            margin: 7%;
            counter-increment: page;
            @top-left { content: "CSS Writing Modes Module Level 3 CR Test Suite"; }
            @top-right { content: "Test abs-pos-non-replaced-vlr-031"; }
            @bottom-right { content: counter(page); }
          }
</style>

  <link rel="author" title="Gérard Talbot" href="http://www.gtalbot.org/BrowserBugsSection/css21testsuite/" />
  <link rel="help" href="http://www.w3.org/TR/css-writing-modes-3/#vertical-layout" title="7.1 Principles of Layout in Vertical Writing Modes" />
  <link rel="match" href="reference/abs-pos-non-replaced-vlr-007-ref.xht" />

  <meta name="flags" content="ahem image" />
  <meta name="assert" content="When 'direction' is 'ltr' and 'top' and 'bottom are 'auto' and 'height' is not 'auto', then set 'top' to static position and solve for 'bottom'." />

  <style type="text/css"><![CDATA[
  html
    {
      writing-mode: vertical-lr;
    }

  div#containing-block
    {
      background: red url("support/bg-red-2col-3row-320x320.png");
      color: transparent;
      direction: ltr;
      font: 80px/1 Ahem;
      height: 320px;
      position: relative;
      width: 320px;

    }

  div#containing-block > span
    {
      background-color: red;
      bottom: auto;
      color: green;
      height: 1em;
      position: absolute;
      top: auto;
    }

/*
"
2. 'left' and 'right' are 'auto' and 'width' is not 'auto', then if the 'direction' property of the element establishing the static-position containing block is 'ltr' set 'left' to the static position, otherwise set 'right' to the static position. Then solve for 'left' (if 'direction is 'rtl') or 'right' (if 'direction' is 'ltr').
"

'left' + 'margin-left' + 'border-left-width' + 'padding-left' + 'width' + 'padding-right' + 'border-right-width' + 'margin-right' + 'right' = width of containing block
CSS2.1, § 10.3.7 Absolutely positioned, non-replaced elements
http://www.w3.org/TR/CSS21/visudet.html#abs-non-replaced-width

"
Layout rules that refer to the *-left and *-right box properties (border, margin, padding) use *-top and *-bottom instead, and vice versa. Which side of the box the property applies to doesn't change: only which values are inputs to which layout calculations changes.
"
7.1 Principles of Layout in Vertical Writing Modes
http://www.w3.org/TR/css-writing-modes-3/#logical-direction-layout

So:

    160px : top: auto
  +
      0px : margin-top: auto
  +
      0px : border-top-width
  +
      0px : padding-top
  +
     80px : height
  +
      0px : padding-bottom
  +
      0px : border-bottom-width
  +
      0px : margin-bottom: auto
  +
  (solve) : bottom: auto
    =====================
    320px : height of containing block

gives us:

    160px : top: auto
  +
      0px : margin-top: auto
  +
      0px : border-top-width
  +
      0px : padding-top
  +
     80px : height
  +
      0px : padding-bottom
  +
      0px : border-bottom-width
  +
      0px : margin-bottom: auto
  +
  (solve) : bottom: auto
    =====================
    320px : height of containing block

And so computed bottom value must be 80px.
*/

  ]]></style>

 </head>

 <body>

  <p><img src="support/pass-cdts-abs-pos-non-replaced.png" width="246" height="36" alt="Image download support must be enabled" /></p>

  <div id="containing-block">1 2 34<span>X</span></div>

 </body>
</html>