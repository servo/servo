<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xmlns="http://www.w3.org/1999/xhtml"><head>
<meta charset="utf-8" />
<title>Won and halfwidth characters around line break</title>
<link href="mailto:ishida@w3.org" rel="author" title="Richard Ishida" />
<link href="https://drafts.csswg.org/css-text-3/#line-break-transform" rel="help" />
<meta content="If the East Asian Width property of both the character before and after the line feed is F or H and neither side is Hangul, then the segment break is removed." name="assert" />
<style type="text/css">
/* the CSS below is not part of the test */
.test span { font-size: 24px; font-family: sans-serif; background-color: #2AA5F7; color: white; }
.ref span { font-size: 24px; font-family: sans-serif; background-color: #270CEF; color: white; }
</style>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
</head>
<body>
<div id="log"></div>
<div class="test" id="test1"><span>₩
２４</span></div>
<div class="test" id="test2"><span>₩   
２４</span></div>
<div class="test" id="test3"><span>₩
        ２４</span></div>
<div class="test" id="test4"><span>₩   
     ２４</span></div>
<div class="test" id="test5"><span>₩


２４</span></div>
<div class="test" id="test6"><span>₩  
   
   
   ２４</span></div>
<div class="ref" id="ref1"><span>₩２４</span></div>
<div class="test" id="test7"><span>２４
₩</span></div>
<div class="test" id="test8"><span>２４   
₩</span></div>
<div class="test" id="test9"><span>２４
        ₩</span></div>
<div class="test" id="test10"><span>２４   
     ₩</span></div>
<div class="test" id="test11"><span>２４


₩</span></div>
<div class="test" id="test12"><span>２４  
   
   
   ₩</span></div>
<div class="ref" id="ref2"><span>２４₩</span></div>
<script>
test(function() {
assert_equals(document.getElementById('test1').firstChild.offsetWidth, document.getElementById('ref1').firstChild.offsetWidth);
}, "linebreak only ₩２４");
test(function() {
assert_equals(document.getElementById('test2').firstChild.offsetWidth, document.getElementById('ref1').firstChild.offsetWidth);
}, "spaces linebreak ₩２４");
test(function() {
assert_equals(document.getElementById('test3').firstChild.offsetWidth, document.getElementById('ref1').firstChild.offsetWidth);
}, "linebreak spaces ₩２４");
test(function() {
assert_equals(document.getElementById('test4').firstChild.offsetWidth, document.getElementById('ref1').firstChild.offsetWidth);
}, "spaces linebreak spaces ₩２４");
test(function() {
assert_equals(document.getElementById('test5').firstChild.offsetWidth, document.getElementById('ref1').firstChild.offsetWidth);
}, "multiple linebreaks ₩２４");
test(function() {
assert_equals(document.getElementById('test6').firstChild.offsetWidth, document.getElementById('ref1').firstChild.offsetWidth);
}, "multiple linebreaks + spaces ₩２４");
test(function() {
assert_equals(document.getElementById('test7').firstChild.offsetWidth, document.getElementById('ref2').firstChild.offsetWidth);
}, "linebreak only ２４₩");
test(function() {
assert_equals(document.getElementById('test8').firstChild.offsetWidth, document.getElementById('ref2').firstChild.offsetWidth);
}, "spaces linebreak ２４₩");
test(function() {
assert_equals(document.getElementById('test9').firstChild.offsetWidth, document.getElementById('ref2').firstChild.offsetWidth);
}, "linebreak spaces ２４₩");
test(function() {
assert_equals(document.getElementById('test10').firstChild.offsetWidth, document.getElementById('ref2').firstChild.offsetWidth);
}, "spaces linebreak spaces ２４₩");
test(function() {
assert_equals(document.getElementById('test11').firstChild.offsetWidth, document.getElementById('ref2').firstChild.offsetWidth);
}, "multiple linebreaks ２４₩");
test(function() {
assert_equals(document.getElementById('test12').firstChild.offsetWidth, document.getElementById('ref2').firstChild.offsetWidth);
}, "multiple linebreaks + spaces ２４₩");
</script>
<!-- Notes:
The assertion will fail if space is produced for any line in the test paragraph.
-->




</body></html>