<!DOCTYPE html>
<html lang="en"><head><meta charset="utf-8">
<title>Selectors Level 4: focus-within</title>
<link href="mailto:kli79@bloomberg.net" rel="author" title="Keyong Li">
<link href="mailto:florian@rivoal.net" rel="author" title="Florian Rivoal">
<link href="https://drafts.csswg.org/selectors-4/#focus-within-pseudo" rel="help">
<link href="reference/focus-within-001-ref.htm" rel="match">
<meta content="interact" name="flags">
<meta content="Test that :focus-within works on form controls, using an input element." name="assert">
<style>
/* Suppress things that cannot be reproduced in the reference file */
:focus {
  all: initial;
  outline: none;

  /* Make the caret invisible
     since it matches the color of the text, which is transparent,
     while keeping the text readable thanks to its shadow.
     Not using the caret-color property as it is too new to be relied on. */
  color: transparent; text-shadow: black 0px 0px 0px;
}

/* Use blue to indicate that the user needs to pay attention.
   This element needs to be focused for the test to make sense. */
#focusme:not(:focus) {
  border: solid 15px blue;
}

#focusme:focus:not(:focus-within) {
  background: red;
}
div:focus-within {
  border: solid 5px green;
}
</style>
</head><body><p>Test passes if, when the element below is focused,
it is surrounded by a thick green border.
There must be no red or blue once it is focused.</p>
<div>
  <div>
    <div>
      <input onfocus="this.classList.toggle('reftest-wait');" class="reftest-wait" value="Focus this element" id="focusme">
    <div>
  </div>
</div>
<script>
/* This script is an optional convenience,
   simply removing the need to manually focus the element.
   The test is valid even if the script is not run. */
var editor = document.getElementById('focusme');
editor.focus();
</script>


</div></div></body></html>