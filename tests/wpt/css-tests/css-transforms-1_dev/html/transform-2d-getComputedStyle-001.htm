<!DOCTYPE html>
<html><head>
    <title>CSS Transforms API Test: transform translate</title>
    <link href="mailto:mibalan@adobe.com" rel="author" title="Mihai Balan">
    <link href="http://www.w3.org/TR/css-transforms-1/#transform-property" rel="help">
    <link href="http://www.w3.org/TR/css-transforms-1/#two-d-transform-functions" rel="help">
    <meta content="dom" name="flags">
    <meta content="CSS 2D transforms correctly report their matrix via getComputedStyle()" name="assert">
    <style type="text/css">
    .block {
    	display: block;
    	width: 50px;
    	height: 50px;
    	background-color: green;
    }
    #translate {
    	transform: translate(10px, 20px);
    }
    #translateX {
    	transform: translateX(10px);
    }
    #translateY {
    	transform: translateY(20px);
    }
    #rotate {
    	transform: rotate(90deg);
    }
    #scale {
    	transform: scale(2.0);
    }
    #scaleX {
    	transform: scaleX(0.5);
    }
    #scaleY {
    	transform: scaleY(1.5);
    }
    #skewX {
    	transform: skewX(45deg);
    }
    #skewY {
    	transform: skewY(45deg);
    }
    #matrix {
    	transform: matrix(1, 2, 3, 4, 5, 6);
    }
    </style>
    <script id="metadata_cache">/*
	{
	  "Matrix for translation transforms": {},
	  "Matrix for rotate": {},
	  "Matrix for scaling": {},
	  "Matrix for skew": {},
	  "Matrix for general transform": {}
	}
	*/</script>
    <script src="/resources/testharness.js" type="text/javascript"></script>
    <script src="/resources/testharnessreport.js" type="text/javascript"></script>
</head>
<body>
	<div id="log"></div>

	<div class="block" id="translate"></div>
	<div class="block" id="translateX"></div>
	<div class="block" id="translateY"></div>
	<div class="block" id="rotate"></div>
	<div class="block" id="scale"></div>
	<div class="block" id="scaleX"></div>
	<div class="block" id="scaleY"></div>
	<div class="block" id="skewX"></div>
	<div class="block" id="skewY"></div>
	<div class="block" id="matrix"></div>
    <script type="text/javascript">
    function getTransformFor(id) {
    	return window.getComputedStyle(document.getElementById(id)).getPropertyValue("transform");
    }
    function clear(id) {
    	document.getElementById(id).style.display = 'none';
    }

    test(function() {
    	assert_equals(getTransformFor("translate"), "matrix(1, 0, 0, 1, 10, 20)", "Incorrect matrix for translate()");
    	clear("translate");
    	assert_equals(getTransformFor("translateX"), "matrix(1, 0, 0, 1, 10, 0)", "Incorrect matrix for translateX()");
    	clear("translateX");
    	assert_equals(getTransformFor("translateY"), "matrix(1, 0, 0, 1, 0, 20)", "Incorrect matrix for translateY()");
    	clear("translateY");
    }, "Matrix for translation transforms");

    test(function() {
    	assert_equals(getTransformFor("rotate"), "matrix(0, 1, -1, 0, 0, 0)", "Incorrect matrix for rotate()");
    	clear("rotate");
    }, "Matrix for rotate");

    test(function() {
    	assert_equals(getTransformFor("scale"), "matrix(2, 0, 0, 2, 0, 0)", "Incorrect matrix for scale()");
    	clear("scale");
    	assert_equals(getTransformFor("scaleX"), "matrix(0.5, 0, 0, 1, 0, 0)", "Incorrect matrix for scaleX()");
    	clear("scaleX");
    	assert_equals(getTransformFor("scaleY"), "matrix(1, 0, 0, 1.5, 0, 0)", "Incorrect matrix for scaleY()");
    	clear("scaleY");
    }, "Matrix for scaling");

    test(function() {
    	assert_equals(getTransformFor("skewX"), "matrix(1, 0, 1, 1, 0, 0)", "Incorrect matrix for skewX()");
    	clear("skewX");
    	assert_equals(getTransformFor("skewY"), "matrix(1, 1, 0, 1, 0, 0)", "Incorrect matrix for skewY()");
    	clear("skewY");
    }, "Matrix for skew");

    test(function() {
    	assert_equals(getTransformFor("matrix"), "matrix(1, 2, 3, 4, 5, 6)", "Incorrect matrix for matrix()");
    	clear("matrix");
    }, "Matrix for general transform");
    </script>


</body></html>