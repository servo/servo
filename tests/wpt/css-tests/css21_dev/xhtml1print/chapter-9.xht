

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <title>Visual formatting model - CSS 2.1 Conformance Test Suite</title>
  <style type="text/css">
    @import "http://www.w3.org/StyleSheets/TR/base.css";
    @import "../indices.css";
  </style>
 </head>

 <body>

  <h1>CSS 2.1 Conformance Test Suite</h1>
  <h2>Visual formatting model (1245 tests)</h2>
  <table width="100%">
    <col id="test-column"></col>
    <col id="refs-column"></col>
    <col id="flags-column"></col>
    <col id="info-column"></col>
    <thead>
      <tr>
        <th>Test</th>
        <th><abbr title="Rendering References">Refs</abbr></th>
        <th>Flags</th>
        <th>Info</th>
      </tr>
    </thead>
    <tbody id="s9">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html">9 Visual formatting model</a></th></tr>
      <!-- 1 tests -->
      <tr id="c5526c-display-000-9" class="">
        <td>
            <a href="c5526c-display-000.xht">c5526c-display-000</a></td>
        <td></td>
        <td></td>
        <td>display/box/float/clear test
        </td>
      </tr>
    </tbody>
    <tbody id="s9.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.1">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#visual-model-intro">9.1 Introduction to the visual formatting model</a></th></tr>
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.1.#x0">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.1.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.1.1">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#viewport">9.1.1 The viewport</a></th></tr>
      <!-- 7 tests -->
      <tr id="first-line-selector-014-9.1.1" class="">
        <td>
            <a href="first-line-selector-014.xht">first-line-selector-014</a></td>
        <td></td>
        <td></td>
        <td>:first-line pseudo-element - text-transform
        </td>
      </tr>
      <tr id="first-line-selector-015-9.1.1" class="">
        <td>
            <a href="first-line-selector-015.xht">first-line-selector-015</a></td>
        <td></td>
        <td></td>
        <td>:first-line pseudo-element - text-transform
          <ul class="assert">
            <li>The :first-line pseudo-element can be attached to an unordered list because it is a block-level element. The &quot;first formatted line&quot; of an unordered list occurs inside its first list-item because it is a non-positioned and non-floated block-level descendant in the same flow. User agents may change the document's layout (preferred behavior but nonetheless optional) when the viewport is resized.</li>
          </ul>
        </td>
      </tr>
      <tr id="root-canvas-001-9.1.1" class="primary">
        <td><strong>
            <a href="root-canvas-001.xht">root-canvas-001</a></strong></td>
        <td><a href="reference/root-canvas-001-ref.xht">=</a> </td>
        <td></td>
        <td>Canvas: Embedded documents
        </td>
      </tr>
      <tr id="viewport-001-9.1.1" class="primary interact may">
        <td><strong>
            <a href="viewport-001.xht">viewport-001</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Viewport resize can change layout
          <ul class="assert">
            <li>Resizing the viewport may change the layout of page.</li>
          </ul>
        </td>
      </tr>
      <tr id="viewport-002-9.1.1" class="primary interact scroll should">
        <td><strong>
            <a href="viewport-002.xht">viewport-002</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr><abbr class="scroll" title="Only valid for continuous media">Scroll</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Scrolling mechanism
          <ul class="assert">
            <li>Scrolling mechanism should be available when canvas is larger than viewport.</li>
          </ul>
        </td>
      </tr>
      <tr id="viewport-003-9.1.1" class="primary interact scroll should">
        <td><strong>
            <a href="viewport-003.xht">viewport-003</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr><abbr class="scroll" title="Only valid for continuous media">Scroll</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Scrolling mechanism and right-to-left
          <ul class="assert">
            <li>Scrolling mechanism should be available when canvas is larger than viewport even when page is set to right-to-left.</li>
          </ul>
        </td>
      </tr>
      <tr id="viewport-004-9.1.1" class="primary may">
        <td><strong>
            <a href="viewport-004.xht">viewport-004</a></strong></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Rendering more than one canvas
          <ul class="assert">
            <li>User agents may render more than one canvas.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.1.1.#x1">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.1.2">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.1.2">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#containing-block">9.1.2 Containing blocks</a></th></tr>
      <!-- 3 tests -->
      <tr id="containing-block-026-9.1.2" class="primary">
        <td><strong>
            <a href="containing-block-026.xht">containing-block-026</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Element position based on containing block
          <ul class="assert">
            <li>An element's position is based on the position of its containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-027-9.1.2" class="primary may">
        <td><strong>
            <a href="containing-block-027.xht">containing-block-027</a></strong></td>
        <td><a href="reference/containing-block-027-ref.xht">=</a> </td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Content is not confined by containing blocks
          <ul class="assert">
            <li>Content may overflow containing blocks.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-030-9.1.2" class="primary may">
        <td><strong>
            <a href="containing-block-030.xht">containing-block-030</a></strong></td>
        <td><a href="reference/containing-block-030-ref.xht">=</a> </td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Content is not confined by containing blocks
          <ul class="assert">
            <li>Content may overflow containing blocks.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.1.2.#x3">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.2">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#box-gen">9.2 Controlling box generation</a></th></tr>
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.2.1">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#block-boxes">9.2.1 Block-level elements and block boxes</a></th></tr>
      <!-- 21 tests -->
      <tr id="box-generation-001-9.2.1" class="primary">
        <td><strong>
            <a href="box-generation-001.xht">box-generation-001</a></strong></td>
        <td><a href="reference/box-generation-001-ref.xht">=</a> </td>
        <td></td>
        <td>Block-level elements generate principal block boxes with block boxes
          <ul class="assert">
            <li>Block boxes can reside within a principal block box established by a block-level element; inline boxes are outside of the principal block box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-generation-002-9.2.1" class="primary">
        <td><strong>
            <a href="box-generation-002.xht">box-generation-002</a></strong></td>
        <td><a href="reference/box-generation-002-ref.xht">=</a> </td>
        <td></td>
        <td>Block-level elements generate principal block boxes with inline boxes
          <ul class="assert">
            <li>Inline boxes can reside within a principal block box established by a block-level element; block boxes are outside of the principal block box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-generation-003-9.2.1" class="primary">
        <td><strong>
            <a href="box-generation-003.xht">box-generation-003</a></strong></td>
        <td></td>
        <td></td>
        <td>Additional boxes generated outside the principal block box
          <ul class="assert">
            <li>Some block-level elements (i.e. 'list-item' elements) can generate additional boxes outside the principal block box.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-028-9.2.1" class="primary">
        <td><strong>
            <a href="containing-block-028.xht">containing-block-028</a></strong></td>
        <td><a href="reference/containing-block-028-ref.xht">=</a> </td>
        <td></td>
        <td>Principal block box establishes the containing block
          <ul class="assert">
            <li>Principal block boxes establish a containing block for descendant boxes.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-029-9.2.1" class="primary">
        <td><strong>
            <a href="containing-block-029.xht">containing-block-029</a></strong></td>
        <td><a href="reference/containing-block-029-ref.xht">=</a> </td>
        <td></td>
        <td>Principal block box establishes the containing block for generated content
          <ul class="assert">
            <li>Principal block boxes establish a containing block for generated content.</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-001-9.2.1" class="">
        <td>
            <a href="list-style-position-001.xht">list-style-position-001</a></td>
        <td></td>
        <td></td>
        <td>Marker box position - first-child block box with 'overflow'
          <ul class="assert">
            <li>The position of a first-child block box inside a principal box must not be affected by 'overflow' being applied to the first-child, when marker box is positioned outside the principal box</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-002-9.2.1" class="">
        <td>
            <a href="list-style-position-002.xht">list-style-position-002</a></td>
        <td></td>
        <td></td>
        <td>Marker box position - descendant block box with 'overflow'
          <ul class="assert">
            <li>The position of a descendant block box inside a principal box must not be affected by 'overflow' being applied to the descendant, when marker box is positioned outside the principal box</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-003-9.2.1" class="">
        <td>
            <a href="list-style-position-003.xht">list-style-position-003</a></td>
        <td></td>
        <td></td>
        <td>Marker box position - list-item overflow - 'list-style-position:inside'
          <ul class="assert">
            <li>'overflow' applied to principal box and presence of child block box (in normal flow) must have no affect on visibility or position of marker box</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-005-9.2.1" class="">
        <td>
            <a href="list-style-position-005.xht">list-style-position-005</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (inside principal box) - block box in normal flow (as child of principal box)
          <ul class="assert">
            <li>Since a marker box is the first inline element in the principal box when 'list-style-position:inside', the following block box (in normal flow) must create a new stacking context below the marker box</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-006-9.2.1" class="">
        <td>
            <a href="list-style-position-006.xht">list-style-position-006</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (inside principal box) - block box with 'float:left' (as child of principal box)
          <ul class="assert">
            <li>Since a marker box is the first inline element in the principal box when 'list-style-position:inside', the following block box (floated to the left) must visually appear before the marker box in the rendered document</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-007-9.2.1" class="">
        <td>
            <a href="list-style-position-007.xht">list-style-position-007</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (inside principal box) - block box with 'float:right' (as child of principal box)
          <ul class="assert">
            <li></li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-008-9.2.1" class="">
        <td>
            <a href="list-style-position-008.xht">list-style-position-008</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (outside principal box) - floated-left child
          <ul class="assert">
            <li>A floated element (as a child of the principal box) should not affect the horizontal position of the marker box (positioned outside principal box) in relation to the principal box's content</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-009-9.2.1" class="">
        <td>
            <a href="list-style-position-009.xht">list-style-position-009</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (outside principal box) - floated-right child
          <ul class="assert">
            <li>A floated element (as a child of the principal box) should not affect the horizontal position of the marker box (positioned outside principal box) in relation to the principal box's content</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-010-9.2.1" class="">
        <td>
            <a href="list-style-position-010.xht">list-style-position-010</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (outside principal box) - :before pseudo-element list-item ('list-style-position:inside')
          <ul class="assert">
            <li>When the :before element is set as a list-item, it establishes a principal box into which a marker box is placed (when 'list-style-position:inside). The document tree content of the associated element must be placed after the principal box established by the :before pseudo element. The presence of the :before pseudo element in this context, must have no affect on the position of the marker box of the associated element as it must still appear to the outside left edge of it's own principal box (since 'list-style-position:outside').</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-011-9.2.1" class="">
        <td>
            <a href="list-style-position-011.xht">list-style-position-011</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (inside principal box) - :before pseudo-element list-item ('list-style-position:outside')
          <ul class="assert">
            <li>When the :before element is set as a list-item, it establishes a principal box and a marker box which is positioned outside of that principal box (since 'list-style-position:outside). The document tree content of the associated element must be placed after the principal box established by the :before pseudo element. Since the marker box of the associated element must be the first inline element within it's principal box (since 'list-style-position:inside'), that marker box must appear before the marker box and principal box of the :before pseudo-element.</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-012-9.2.1" class="">
        <td>
            <a href="list-style-position-012.xht">list-style-position-012</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (inside principal box) - :before pseudo-element list-item ('list-style-position:inside')
          <ul class="assert">
            <li>When the :before element is set as a list-item, it establishes a principal box into which a marker box is placed (when 'list-style-position:inside). The document tree content of the associated element must be placed after the principal box established by the :before pseudo element. Since the marker box of the associated element must be the first inline element within it's principal box (since 'list-style-position:inside'), that marker box must appear before the marker box and principal box of the :before pseudo-element.</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-013-9.2.1" class="">
        <td>
            <a href="list-style-position-013.xht">list-style-position-013</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (outside principal box) - :before pseudo-element list-item ('list-style-position:outside')
          <ul class="assert">
            <li>When the :before element is set as a list-item, it establishes a principal box and a marker box which is positioned outside of that principal box (since 'list-style-position:outside). The document tree content of the associated element must be placed after the principal box established by the :before pseudo element. The position of the marker box of the associated element must still appear to the outside left edge of it's principal box (since 'list-style-position:outside') and should be positioned towards the top of this principal box. Since the marker box of the :before pseudo element should be positioned at the same coordinate as the associated element's marker box, either bullet could appear in front of the other (since stacking levels of marker boxes aren't defined in CSS2.1, in this context).</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-014-9.2.1" class="">
        <td>
            <a href="list-style-position-014.xht">list-style-position-014</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (outside principal box) - floated :before pseudo-element list-item ('list-style-position:inside')
          <ul class="assert">
            <li>When the :before element is set as a list-item, it establishes a principal box into which a marker box is placed (when 'list-style-position:inside). Since this :before pseudo element is floated left, the document tree content of the associated element must appear alongside (after) this :before pseudo element. The position of the marker box of the associated element must not be affected, as it must still appear to the outside left edge of it's principal box (since 'list-style-position:outside').</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-015-9.2.1" class="">
        <td>
            <a href="list-style-position-015.xht">list-style-position-015</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (inside principal box) - floated :before pseudo-element list-item ('list-style-position:outside')
          <ul class="assert">
            <li>When the :before element is set as a list-item, it establishes a principal box and a marker box which is positioned outside of that principal box (since 'list-style-position:outside). Since this :before pseudo element is floated left, the principal box (and marker box, since 'list-style-position:inside') of the associated element must appear alongside (after) this :before pseudo element. The position of the marker box of the :before pseudo element must still appear to the outside left edge of it's associated element's principal box (since 'list-style-position:outside').</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-016-9.2.1" class="">
        <td>
            <a href="list-style-position-016.xht">list-style-position-016</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (inside principal box) - floated :before pseudo-element list-item ('list-style-position:inside')
          <ul class="assert">
            <li>When the :before element is set as a list-item, it establishes a principal box into which a marker box is placed (when 'list-style-position:inside). Since the :before pseudo element is floated left, the principal box (and marker box, since 'list-style-position:inside') of the associated element must appear alongside (after) the :before pseudo element.</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-017-9.2.1" class="">
        <td>
            <a href="list-style-position-017.xht">list-style-position-017</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (outside principal box) - floated :before pseudo-element list-item ('list-style-position:outside')
          <ul class="assert">
            <li>When the :before element is set as a list-item, it establishes a principal box into which a marker box is placed (when 'list-style-position:inside). Since the :before pseudo element is floated left, The document tree content of the associated element must appear alongside (after) the :before pseudo element. Since the marker box of the :before pseudo element should be positioned at the same coordinate as the associated element's marker box, either bullet could appear in front of the other (since stacking levels of marker boxes aren't defined in CSS2.1, in this context).</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.2.1.#block-container-box">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.1.#block-level">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.1.#principal-box">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.1.#x5">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.1.#x8">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.1.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.2.1.1">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#anonymous-block-level">9.2.1.1 Anonymous block boxes</a></th></tr>
      <!-- 107 tests -->
      <tr id="anonymous-box-generation-001-9.2.1.1" class="primary">
        <td><strong>
            <a href="anonymous-box-generation-001.xht">anonymous-box-generation-001</a></strong></td>
        <td><a href="reference/anonymous-box-generation-001-ref.xht">=</a> </td>
        <td></td>
        <td>Anonymous block box generation
          <ul class="assert">
            <li>Block boxes with inline content followed by a block box generate an anonymous block box around the inline content.</li>
          </ul>
        </td>
      </tr>
      <tr id="anonymous-box-generation-002-9.2.1.1" class="primary">
        <td><strong>
            <a href="anonymous-box-generation-002.xht">anonymous-box-generation-002</a></strong></td>
        <td></td>
        <td></td>
        <td>Anonymous run-in box generation
          <ul class="assert">
            <li>Block boxes with inline content followed by a run-in box generate an anonymous run-in box around the inline content.</li>
          </ul>
        </td>
      </tr>
      <tr id="anonymous-boxes-001-9.2.1.1" class="primary">
        <td><strong>
            <a href="anonymous-boxes-001.xht">anonymous-boxes-001</a></strong></td>
        <td><a href="reference/ref-green-box-100x100.xht">=</a> </td>
        <td></td>
        <td>Percent heights inside anonymous blocks
          <ul class="assert">
            <li>Anonymous block boxes are ignored when resolving percentage values that would refer to it: the closest non-anonymous ancestor box is used instead.</li>
          </ul>
        </td>
      </tr>
      <tr id="anonymous-boxes-001a-9.2.1.1" class="primary ahem image">
        <td><strong>
            <a href="anonymous-boxes-001a.xht">anonymous-boxes-001a</a></strong></td>
        <td><a href="reference/anonymous-boxes-001a-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Percent height inside anonymous block
          <ul class="assert">
            <li>Anonymous block boxes are ignored when resolving percentage values that would refer to it: the closest non-anonymous ancestor box is used instead.</li>
          </ul>
        </td>
      </tr>
      <tr id="anonymous-boxes-001b-9.2.1.1" class="primary ahem">
        <td><strong>
            <a href="anonymous-boxes-001b.xht">anonymous-boxes-001b</a></strong></td>
        <td><a href="reference/anonymous-boxes-001b-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Percent height inside anonymous block
          <ul class="assert">
            <li>Anonymous block boxes are ignored when resolving percentage values that would refer to it: the closest non-anonymous ancestor box is used instead.</li>
          </ul>
        </td>
      </tr>
      <tr id="anonymous-boxes-inheritance-001-9.2.1.1" class="primary ahem">
        <td><strong>
            <a href="anonymous-boxes-inheritance-001.xht">anonymous-boxes-inheritance-001</a></strong></td>
        <td><a href="reference/anonymous-boxes-inheritance-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Anonymous box property inheritance
          <ul class="assert">
            <li>Anonymous boxes inherit property values from their non-anonymous box.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-in-inline-001-9.2.1.1" class="primary">
        <td><strong>
            <a href="block-in-inline-001.xht">block-in-inline-001</a></strong></td>
        <td><a href="reference/block-in-inline-001-ref.xht">=</a> </td>
        <td></td>
        <td>CSS: Blocks Within Inlines - Basic
          <ul class="assert">
            <li>When an inline box contains a block box, the inline box is broken around the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-in-inline-002-9.2.1.1" class="primary">
        <td><strong>
            <a href="block-in-inline-002.xht">block-in-inline-002</a></strong></td>
        <td><a href="reference/block-in-inline-001-ref.xht">=</a> </td>
        <td></td>
        <td>CSS: Blocks Within Inlines - Backgrounds
          <ul class="assert">
            <li>When an inline box contains a block box, the inline box is broken around the box and its background is drawn only behind the inline's pieces, not behind the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-in-inline-append-001-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-append-001.xht">block-in-inline-append-001</a></strong></td>
        <td><a href="reference/block-in-inline-append-001-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; append-to-empty-trailing-inline-1
        </td>
      </tr>
      <tr id="block-in-inline-append-002-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-append-002.xht">block-in-inline-append-002</a></strong></td>
        <td><a href="reference/block-in-inline-append-002-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-append-002-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; append-to-nested-split-inline-1
        </td>
      </tr>
      <tr id="block-in-inline-empty-001-9.2.1.1" class="primary">
        <td><strong>
            <a href="block-in-inline-empty-001.xht">block-in-inline-empty-001</a></strong></td>
        <td><a href="reference/block-in-inline-empty-001-ref.xht">=</a> </td>
        <td></td>
        <td>blocks inside inlines &amp;#8211; emptyspan-1
        </td>
      </tr>
      <tr id="block-in-inline-empty-002-9.2.1.1" class="primary">
        <td><strong>
            <a href="block-in-inline-empty-002.xht">block-in-inline-empty-002</a></strong></td>
        <td><a href="reference/block-in-inline-empty-002-ref.xht">=</a> </td>
        <td></td>
        <td>blocks inside inlines &amp;#8211; emptyspan-2
        </td>
      </tr>
      <tr id="block-in-inline-empty-003-9.2.1.1" class="primary">
        <td><strong>
            <a href="block-in-inline-empty-003.xht">block-in-inline-empty-003</a></strong></td>
        <td><a href="reference/block-in-inline-empty-003-ref.xht">=</a> </td>
        <td></td>
        <td>blocks inside inlines &amp;#8211; emptyspan-3
        </td>
      </tr>
      <tr id="block-in-inline-empty-004-9.2.1.1" class="primary">
        <td><strong>
            <a href="block-in-inline-empty-004.xht">block-in-inline-empty-004</a></strong></td>
        <td><a href="reference/block-in-inline-empty-004-ref.xht">=</a> </td>
        <td></td>
        <td>blocks inside inlines &amp;#8211; emptyspan-4
        </td>
      </tr>
      <tr id="block-in-inline-float-between-001-9.2.1.1" class="primary">
        <td><strong>
            <a href="block-in-inline-float-between-001.xht">block-in-inline-float-between-001</a></strong></td>
        <td><a href="reference/block-in-inline-float-between-001-ref.xht">=</a> </td>
        <td></td>
        <td>blocks inside inlines &amp;#8211; float-inside-inline-between-blocks-1
        </td>
      </tr>
      <tr id="block-in-inline-insert-001a-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-001a.xht">block-in-inline-insert-001a</a></strong></td>
        <td><a href="reference/block-in-inline-insert-001-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-insert-001-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-1a
        </td>
      </tr>
      <tr id="block-in-inline-insert-001b-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-001b.xht">block-in-inline-insert-001b</a></strong></td>
        <td><a href="reference/block-in-inline-insert-001-ref.xht">=</a> <a href="reference/block-in-inline-insert-001-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-1b
        </td>
      </tr>
      <tr id="block-in-inline-insert-001c-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-001c.xht">block-in-inline-insert-001c</a></strong></td>
        <td><a href="reference/block-in-inline-insert-001-ref.xht">=</a> <a href="reference/block-in-inline-insert-001-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-1c
        </td>
      </tr>
      <tr id="block-in-inline-insert-001d-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-001d.xht">block-in-inline-insert-001d</a></strong></td>
        <td><a href="reference/block-in-inline-insert-001-ref.xht">=</a> <a href="reference/block-in-inline-insert-001-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-1d
        </td>
      </tr>
      <tr id="block-in-inline-insert-001e-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-001e.xht">block-in-inline-insert-001e</a></strong></td>
        <td><a href="reference/block-in-inline-insert-001-ref.xht">=</a> <a href="reference/block-in-inline-insert-001-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-1e
        </td>
      </tr>
      <tr id="block-in-inline-insert-001f-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-001f.xht">block-in-inline-insert-001f</a></strong></td>
        <td><a href="reference/block-in-inline-insert-001-ref.xht">=</a> <a href="reference/block-in-inline-insert-001-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-1f
        </td>
      </tr>
      <tr id="block-in-inline-insert-001g-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-001g.xht">block-in-inline-insert-001g</a></strong></td>
        <td><a href="reference/block-in-inline-insert-001-ref.xht">=</a> <a href="reference/block-in-inline-insert-001-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-1g
        </td>
      </tr>
      <tr id="block-in-inline-insert-001h-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-001h.xht">block-in-inline-insert-001h</a></strong></td>
        <td><a href="reference/block-in-inline-insert-001-ref.xht">=</a> <a href="reference/block-in-inline-insert-001-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-1h
        </td>
      </tr>
      <tr id="block-in-inline-insert-001i-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-001i.xht">block-in-inline-insert-001i</a></strong></td>
        <td><a href="reference/block-in-inline-insert-001-ref.xht">=</a> <a href="reference/block-in-inline-insert-001-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-1i
        </td>
      </tr>
      <tr id="block-in-inline-insert-001j-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-001j.xht">block-in-inline-insert-001j</a></strong></td>
        <td><a href="reference/block-in-inline-insert-001-ref.xht">=</a> <a href="reference/block-in-inline-insert-001-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-1j
        </td>
      </tr>
      <tr id="block-in-inline-insert-001k-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-001k.xht">block-in-inline-insert-001k</a></strong></td>
        <td><a href="reference/block-in-inline-insert-001-ref.xht">=</a> <a href="reference/block-in-inline-insert-001-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-1k
        </td>
      </tr>
      <tr id="block-in-inline-insert-001l-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-001l.xht">block-in-inline-insert-001l</a></strong></td>
        <td><a href="reference/block-in-inline-insert-001-ref.xht">=</a> <a href="reference/block-in-inline-insert-001-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-1l
        </td>
      </tr>
      <tr id="block-in-inline-insert-002a-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-002a.xht">block-in-inline-insert-002a</a></strong></td>
        <td><a href="reference/block-in-inline-insert-002-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-insert-002-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-2a
        </td>
      </tr>
      <tr id="block-in-inline-insert-002b-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-002b.xht">block-in-inline-insert-002b</a></strong></td>
        <td><a href="reference/block-in-inline-insert-002-ref.xht">=</a> <a href="reference/block-in-inline-insert-002-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-2b
        </td>
      </tr>
      <tr id="block-in-inline-insert-002c-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-002c.xht">block-in-inline-insert-002c</a></strong></td>
        <td><a href="reference/block-in-inline-insert-002-ref.xht">=</a> <a href="reference/block-in-inline-insert-002-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-2c
        </td>
      </tr>
      <tr id="block-in-inline-insert-002d-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-002d.xht">block-in-inline-insert-002d</a></strong></td>
        <td><a href="reference/block-in-inline-insert-002-ref.xht">=</a> <a href="reference/block-in-inline-insert-002-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-2d
        </td>
      </tr>
      <tr id="block-in-inline-insert-002e-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-002e.xht">block-in-inline-insert-002e</a></strong></td>
        <td><a href="reference/block-in-inline-insert-002-ref.xht">=</a> <a href="reference/block-in-inline-insert-002-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-2e
        </td>
      </tr>
      <tr id="block-in-inline-insert-002f-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-002f.xht">block-in-inline-insert-002f</a></strong></td>
        <td><a href="reference/block-in-inline-insert-002-ref.xht">=</a> <a href="reference/block-in-inline-insert-002-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-2f
        </td>
      </tr>
      <tr id="block-in-inline-insert-002g-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-002g.xht">block-in-inline-insert-002g</a></strong></td>
        <td><a href="reference/block-in-inline-insert-002-ref.xht">=</a> <a href="reference/block-in-inline-insert-002-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-2g
        </td>
      </tr>
      <tr id="block-in-inline-insert-002h-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-002h.xht">block-in-inline-insert-002h</a></strong></td>
        <td><a href="reference/block-in-inline-insert-002-ref.xht">=</a> <a href="reference/block-in-inline-insert-002-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-2h
        </td>
      </tr>
      <tr id="block-in-inline-insert-002i-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-002i.xht">block-in-inline-insert-002i</a></strong></td>
        <td><a href="reference/block-in-inline-insert-002-ref.xht">=</a> <a href="reference/block-in-inline-insert-002-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-2i
        </td>
      </tr>
      <tr id="block-in-inline-insert-003-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-003.xht">block-in-inline-insert-003</a></strong></td>
        <td><a href="reference/block-in-inline-insert-003-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-insert-003-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-3
        </td>
      </tr>
      <tr id="block-in-inline-insert-004-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-004.xht">block-in-inline-insert-004</a></strong></td>
        <td><a href="reference/block-in-inline-insert-004-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-insert-004-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-4
        </td>
      </tr>
      <tr id="block-in-inline-insert-006-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-006.xht">block-in-inline-insert-006</a></strong></td>
        <td><a href="reference/block-in-inline-insert-006-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-insert-006-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-6
        </td>
      </tr>
      <tr id="block-in-inline-insert-007-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-007.xht">block-in-inline-insert-007</a></strong></td>
        <td><a href="reference/block-in-inline-insert-007-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-insert-007-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-7
        </td>
      </tr>
      <tr id="block-in-inline-insert-008a-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-008a.xht">block-in-inline-insert-008a</a></strong></td>
        <td><a href="reference/block-in-inline-insert-008-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-insert-008-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-8a
        </td>
      </tr>
      <tr id="block-in-inline-insert-008b-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-008b.xht">block-in-inline-insert-008b</a></strong></td>
        <td><a href="reference/block-in-inline-insert-008-ref.xht">=</a> <a href="reference/block-in-inline-insert-008-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-8b
        </td>
      </tr>
      <tr id="block-in-inline-insert-008c-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-008c.xht">block-in-inline-insert-008c</a></strong></td>
        <td><a href="reference/block-in-inline-insert-008-ref.xht">=</a> <a href="reference/block-in-inline-insert-008-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-8c
        </td>
      </tr>
      <tr id="block-in-inline-insert-009-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-009.xht">block-in-inline-insert-009</a></strong></td>
        <td><a href="reference/block-in-inline-insert-009-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-insert-009-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-9
        </td>
      </tr>
      <tr id="block-in-inline-insert-010-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-010.xht">block-in-inline-insert-010</a></strong></td>
        <td><a href="reference/block-in-inline-insert-010-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-insert-010-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-10
        </td>
      </tr>
      <tr id="block-in-inline-insert-011-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-011.xht">block-in-inline-insert-011</a></strong></td>
        <td><a href="reference/block-in-inline-insert-011-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-insert-011-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-11
        </td>
      </tr>
      <tr id="block-in-inline-insert-012-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-012.xht">block-in-inline-insert-012</a></strong></td>
        <td><a href="reference/block-in-inline-insert-012-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-insert-012-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-12
        </td>
      </tr>
      <tr id="block-in-inline-insert-013-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-013.xht">block-in-inline-insert-013</a></strong></td>
        <td><a href="reference/block-in-inline-insert-013-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-insert-013-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-13
        </td>
      </tr>
      <tr id="block-in-inline-insert-014-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-014.xht">block-in-inline-insert-014</a></strong></td>
        <td><a href="reference/block-in-inline-insert-014-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-insert-014-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-14
        </td>
      </tr>
      <tr id="block-in-inline-insert-015-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-015.xht">block-in-inline-insert-015</a></strong></td>
        <td><a href="reference/block-in-inline-insert-015-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-insert-015-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-15
        </td>
      </tr>
      <tr id="block-in-inline-insert-016a-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-016a.xht">block-in-inline-insert-016a</a></strong></td>
        <td><a href="reference/block-in-inline-insert-016-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-insert-016-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-16a
        </td>
      </tr>
      <tr id="block-in-inline-insert-016b-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-016b.xht">block-in-inline-insert-016b</a></strong></td>
        <td><a href="reference/block-in-inline-insert-016-ref.xht">=</a> <a href="reference/block-in-inline-insert-016-nosplit-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; insert-into-split-inline-16b
        </td>
      </tr>
      <tr id="block-in-inline-insert-017-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-insert-017.xht">block-in-inline-insert-017</a></strong></td>
        <td><a href="reference/block-in-inline-insert-017-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; trailing-inline-with-continuations-1
        </td>
      </tr>
      <tr id="block-in-inline-margins-001a-9.2.1.1" class="primary">
        <td><strong>
            <a href="block-in-inline-margins-001a.xht">block-in-inline-margins-001a</a></strong></td>
        <td><a href="reference/block-in-inline-margins-001-ref.xht">=</a> </td>
        <td></td>
        <td>blocks inside inlines &amp;#8211; ignored-margins-1a
        </td>
      </tr>
      <tr id="block-in-inline-margins-001b-9.2.1.1" class="primary">
        <td><strong>
            <a href="block-in-inline-margins-001b.xht">block-in-inline-margins-001b</a></strong></td>
        <td><a href="reference/block-in-inline-margins-001-ref.xht">=</a> </td>
        <td></td>
        <td>blocks inside inlines &amp;#8211; ignored-margins-1b
        </td>
      </tr>
      <tr id="block-in-inline-margins-002a-9.2.1.1" class="primary">
        <td><strong>
            <a href="block-in-inline-margins-002a.xht">block-in-inline-margins-002a</a></strong></td>
        <td><a href="reference/block-in-inline-margins-002-ref.xht">=</a> </td>
        <td></td>
        <td>blocks inside inlines &amp;#8211; ignored-margins-2a
        </td>
      </tr>
      <tr id="block-in-inline-margins-002b-9.2.1.1" class="primary">
        <td><strong>
            <a href="block-in-inline-margins-002b.xht">block-in-inline-margins-002b</a></strong></td>
        <td><a href="reference/block-in-inline-margins-002-ref.xht">=</a> </td>
        <td></td>
        <td>blocks inside inlines &amp;#8211; ignored-margins-2b
        </td>
      </tr>
      <tr id="block-in-inline-nested-001-9.2.1.1" class="primary">
        <td><strong>
            <a href="block-in-inline-nested-001.xht">block-in-inline-nested-001</a></strong></td>
        <td><a href="reference/block-in-inline-nested-001-ref.xht">=</a> </td>
        <td></td>
        <td>blocks inside inlines &amp;#8211; split-inner-inline-1
        </td>
      </tr>
      <tr id="block-in-inline-nested-002-9.2.1.1" class="primary">
        <td><strong>
            <a href="block-in-inline-nested-002.xht">block-in-inline-nested-002</a></strong></td>
        <td><a href="reference/block-in-inline-nested-002-ref.xht">=</a> </td>
        <td></td>
        <td>blocks inside inlines &amp;#8211; split-inner-inline-2
        </td>
      </tr>
      <tr id="block-in-inline-percents-001-9.2.1.1" class="primary">
        <td><strong>
            <a href="block-in-inline-percents-001.xht">block-in-inline-percents-001</a></strong></td>
        <td><a href="reference/block-in-inline-percents-001-ref.xht">=</a> </td>
        <td></td>
        <td>blocks inside inlines &amp;#8211; percent-height-1
        </td>
      </tr>
      <tr id="block-in-inline-relpos-001-9.2.1.1" class="primary ahem">
        <td><strong>
            <a href="block-in-inline-relpos-001.xht">block-in-inline-relpos-001</a></strong></td>
        <td><a href="reference/block-in-inline-relpos-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Relative-positioning Inline Containing Block
          <ul class="assert">
            <li>When such an inline box is affected by relative positioning, the relative positioning also affects the block-level box contained in the inline box.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-in-inline-relpos-002-9.2.1.1" class="primary ahem">
        <td><strong>
            <a href="block-in-inline-relpos-002.xht">block-in-inline-relpos-002</a></strong></td>
        <td><a href="reference/block-in-inline-relpos-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Relative-positioning Inline Containing Blocks and Floats
          <ul class="assert">
            <li>When such an inline box is affected by relative positioning, the relative positioning also affects the block-level box contained in the inline box.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-in-inline-remove-000-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-remove-000.xht">block-in-inline-remove-000</a></strong></td>
        <td><a href="reference/block-in-inline-remove-000-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; remove-split-inline-1
        </td>
      </tr>
      <tr id="block-in-inline-remove-001-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-remove-001.xht">block-in-inline-remove-001</a></strong></td>
        <td><a href="reference/block-in-inline-remove-001-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-remove-001-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; remove-from-split-inline-1
        </td>
      </tr>
      <tr id="block-in-inline-remove-002-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-remove-002.xht">block-in-inline-remove-002</a></strong></td>
        <td><a href="reference/block-in-inline-remove-002-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; remove-from-split-inline-2
        </td>
      </tr>
      <tr id="block-in-inline-remove-003-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-remove-003.xht">block-in-inline-remove-003</a></strong></td>
        <td><a href="reference/block-in-inline-remove-003-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-remove-003-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; remove-from-split-inline-3
        </td>
      </tr>
      <tr id="block-in-inline-remove-004-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-remove-004.xht">block-in-inline-remove-004</a></strong></td>
        <td><a href="reference/block-in-inline-remove-004-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-remove-004-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; remove-from-split-inline-4
        </td>
      </tr>
      <tr id="block-in-inline-remove-005-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-remove-005.xht">block-in-inline-remove-005</a></strong></td>
        <td><a href="reference/block-in-inline-remove-005-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-remove-005-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; remove-from-split-inline-5
        </td>
      </tr>
      <tr id="block-in-inline-remove-006-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-remove-006.xht">block-in-inline-remove-006</a></strong></td>
        <td><a href="reference/block-in-inline-remove-006-nosplit-ref.xht">=</a> <a href="reference/block-in-inline-remove-006-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; remove-from-split-inline-6
        </td>
      </tr>
      <tr id="block-in-inline-whitespace-001a-9.2.1.1" class="primary">
        <td><strong>
            <a href="block-in-inline-whitespace-001a.xht">block-in-inline-whitespace-001a</a></strong></td>
        <td><a href="reference/block-in-inline-whitespace-001-ref.xht">=</a> </td>
        <td></td>
        <td>blocks inside inlines &amp;#8211; whitespace-present-1a
        </td>
      </tr>
      <tr id="block-in-inline-whitespace-001b-9.2.1.1" class="primary dom">
        <td><strong>
            <a href="block-in-inline-whitespace-001b.xht">block-in-inline-whitespace-001b</a></strong></td>
        <td><a href="reference/block-in-inline-whitespace-001-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>blocks inside inlines &amp;#8211; whitespace-present-1b
        </td>
      </tr>
      <tr id="delete-block-in-inlines-beginning-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="delete-block-in-inlines-beginning-001.xht">delete-block-in-inlines-beginning-001</a></strong></td>
        <td><a href="reference/delete-block-in-inlines-beginning-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Delete a block-level element inside a block whose children are otherwise all inline at its beginning
        </td>
      </tr>
      <tr id="delete-block-in-inlines-end-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="delete-block-in-inlines-end-001.xht">delete-block-in-inlines-end-001</a></strong></td>
        <td><a href="reference/delete-block-in-inlines-beginning-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Delete a block-level element inside a block whose children are otherwise all inline at its end
        </td>
      </tr>
      <tr id="delete-block-in-inlines-middle-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="delete-block-in-inlines-middle-001.xht">delete-block-in-inlines-middle-001</a></strong></td>
        <td><a href="reference/delete-block-in-inlines-beginning-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Delete a block-level element inside a block whose children are otherwise all inline at its middle
        </td>
      </tr>
      <tr id="delete-inline-in-blocks-beginning-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="delete-inline-in-blocks-beginning-001.xht">delete-inline-in-blocks-beginning-001</a></strong></td>
        <td><a href="reference/delete-inline-in-blocks-beginning-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Delete an inline-level element inside a block whose children are otherwise all block-level, located at its beginning
        </td>
      </tr>
      <tr id="delete-inline-in-blocks-end-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="delete-inline-in-blocks-end-001.xht">delete-inline-in-blocks-end-001</a></strong></td>
        <td><a href="reference/delete-inline-in-blocks-beginning-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Delete an inline-level element inside a block whose children are otherwise all block-level, located at its end
        </td>
      </tr>
      <tr id="delete-inline-in-blocks-middle-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="delete-inline-in-blocks-middle-001.xht">delete-inline-in-blocks-middle-001</a></strong></td>
        <td><a href="reference/delete-inline-in-blocks-beginning-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Delete an inline-level element inside a block whose children are otherwise all block-level, located in its middle
        </td>
      </tr>
      <tr id="delete-inline-in-blocks-middle-002-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="delete-inline-in-blocks-middle-002.xht">delete-inline-in-blocks-middle-002</a></strong></td>
        <td><a href="reference/delete-inline-in-blocks-middle-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Delete an inline-level element inside a block whose children are otherwise all block-level, located in its middle
        </td>
      </tr>
      <tr id="delete-inline-in-blocks-middle-003-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="delete-inline-in-blocks-middle-003.xht">delete-inline-in-blocks-middle-003</a></strong></td>
        <td><a href="reference/delete-inline-in-blocks-middle-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Delete an inline-level element inside a block whose children are otherwise all block-level, located in its middle
        </td>
      </tr>
      <tr id="inline-box-001-9.2.1.1" class="primary">
        <td><strong>
            <a href="inline-box-001.xht">inline-box-001</a></strong></td>
        <td><a href="reference/inline-box-001-ref.xht">=</a> </td>
        <td></td>
        <td>Inline box containing block boxes
          <ul class="assert">
            <li>Inline boxes that contain block boxes will break up the inline content around the block box.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-box-002-9.2.1.1" class="primary">
        <td><strong>
            <a href="inline-box-002.xht">inline-box-002</a></strong></td>
        <td><a href="reference/inline-box-002-ref.xht">=</a> </td>
        <td></td>
        <td>Block boxes within inline boxes are affected by positioning
          <ul class="assert">
            <li>Block boxes within inline boxes are also affected by relative positioning on the inline box.</li>
          </ul>
        </td>
      </tr>
      <tr id="insert-block-in-blocks-n-inlines-begin-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-block-in-blocks-n-inlines-begin-001.xht">insert-block-in-blocks-n-inlines-begin-001</a></strong></td>
        <td><a href="reference/insert-block-in-blocks-n-inlines-begin-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert a block-level element into an element that contains both blocks and inlines and directly into the block-of-blocks (and not into any anonymous block-of-inlines) at the beginning of the block-of-blocks
        </td>
      </tr>
      <tr id="insert-block-in-blocks-n-inlines-begin-002-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-block-in-blocks-n-inlines-begin-002.xht">insert-block-in-blocks-n-inlines-begin-002</a></strong></td>
        <td><a href="reference/insert-block-in-blocks-n-inlines-begin-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert a block-level element into an element that contains both blocks and inlines and directly into the block-of-blocks (and not into any anonymous block-of-inlines) at the beginning of the block-of-blocks
        </td>
      </tr>
      <tr id="insert-block-in-blocks-n-inlines-begin-003-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-block-in-blocks-n-inlines-begin-003.xht">insert-block-in-blocks-n-inlines-begin-003</a></strong></td>
        <td><a href="reference/insert-block-in-blocks-n-inlines-begin-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert a block-level element into an element that contains both blocks and inlines and directly into the block-of-blocks (and not into any anonymous block-of-inlines) at the beginning of the block-of-blocks
        </td>
      </tr>
      <tr id="insert-block-in-blocks-n-inlines-end-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-block-in-blocks-n-inlines-end-001.xht">insert-block-in-blocks-n-inlines-end-001</a></strong></td>
        <td><a href="reference/insert-block-in-blocks-n-inlines-end-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert a block-level element into an element that contains both blocks and inlines and directly into the block-of-blocks (and not into any anonymous block-of-inlines) at the end of the block-of-blocks
        </td>
      </tr>
      <tr id="insert-block-in-blocks-n-inlines-end-002-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-block-in-blocks-n-inlines-end-002.xht">insert-block-in-blocks-n-inlines-end-002</a></strong></td>
        <td><a href="reference/insert-block-in-blocks-n-inlines-end-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert a block-level element into an element that contains both blocks and inlines and directly into the block-of-blocks (and not into any anonymous block-of-inlines) at the end of the block-of-blocks
        </td>
      </tr>
      <tr id="insert-block-in-blocks-n-inlines-end-003-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-block-in-blocks-n-inlines-end-003.xht">insert-block-in-blocks-n-inlines-end-003</a></strong></td>
        <td><a href="reference/insert-block-in-blocks-n-inlines-end-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert a block-level element into an element that contains both blocks and inlines and directly into the block-of-blocks (and not into any anonymous block-of-inlines) at the end of the block-of-blocks
        </td>
      </tr>
      <tr id="insert-block-in-blocks-n-inlines-middle-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-block-in-blocks-n-inlines-middle-001.xht">insert-block-in-blocks-n-inlines-middle-001</a></strong></td>
        <td><a href="reference/insert-block-in-blocks-n-inlines-middle-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert a block-level element into an element that contains both blocks and inlines and directly into the block-of-blocks (and not into any anonymous block-of-inlines) in the middle of the block-of-blocks
        </td>
      </tr>
      <tr id="insert-block-in-blocks-n-inlines-middle-002-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-block-in-blocks-n-inlines-middle-002.xht">insert-block-in-blocks-n-inlines-middle-002</a></strong></td>
        <td><a href="reference/insert-block-in-blocks-n-inlines-middle-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert a block-level element into an element that contains both blocks and inlines and directly into the block-of-blocks (and not into any anonymous block-of-inlines) in the middle of the block-of-blocks
        </td>
      </tr>
      <tr id="insert-block-in-blocks-n-inlines-middle-003-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-block-in-blocks-n-inlines-middle-003.xht">insert-block-in-blocks-n-inlines-middle-003</a></strong></td>
        <td><a href="reference/insert-block-in-blocks-n-inlines-middle-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert a block-level element into an element that contains both blocks and inlines and directly into the block-of-blocks (and not into any anonymous block-of-inlines) in the middle of the block-of-blocks
        </td>
      </tr>
      <tr id="insert-block-in-inlines-beginning-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-block-in-inlines-beginning-001.xht">insert-block-in-inlines-beginning-001</a></strong></td>
        <td><a href="reference/insert-block-in-inlines-beginning-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert a block-level element into a block of inlines at its beginning
        </td>
      </tr>
      <tr id="insert-block-in-inlines-end-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-block-in-inlines-end-001.xht">insert-block-in-inlines-end-001</a></strong></td>
        <td><a href="reference/insert-block-in-inlines-end-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert a block-level element into a block of inlines at its end
        </td>
      </tr>
      <tr id="insert-block-in-inlines-middle-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-block-in-inlines-middle-001.xht">insert-block-in-inlines-middle-001</a></strong></td>
        <td><a href="reference/insert-block-in-inlines-middle-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert a block-level element into a block of inlines at its middle
        </td>
      </tr>
      <tr id="insert-inline-in-blocks-beginning-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-inline-in-blocks-beginning-001.xht">insert-inline-in-blocks-beginning-001</a></strong></td>
        <td><a href="reference/insert-inline-in-blocks-beginning-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert an inline-level element into a block of blocks at its beginning
        </td>
      </tr>
      <tr id="insert-inline-in-blocks-end-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-inline-in-blocks-end-001.xht">insert-inline-in-blocks-end-001</a></strong></td>
        <td><a href="reference/insert-inline-in-blocks-end-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert an inline-level element into a block of blocks at its end
        </td>
      </tr>
      <tr id="insert-inline-in-blocks-middle-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-inline-in-blocks-middle-001.xht">insert-inline-in-blocks-middle-001</a></strong></td>
        <td><a href="reference/insert-inline-in-blocks-middle-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert an inline-level element into a block of blocks at its middle
        </td>
      </tr>
      <tr id="insert-inline-in-blocks-middle-002-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-inline-in-blocks-middle-002.xht">insert-inline-in-blocks-middle-002</a></strong></td>
        <td><a href="reference/insert-inline-in-blocks-middle-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert an inline-level element into a block of blocks at its middle
        </td>
      </tr>
      <tr id="insert-inline-in-blocks-n-inlines-begin-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-inline-in-blocks-n-inlines-begin-001.xht">insert-inline-in-blocks-n-inlines-begin-001</a></strong></td>
        <td><a href="reference/insert-inline-in-blocks-n-inlines-begin-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert an inline-level element into an element that contains both blocks and inlines and directly into the block-of-inlines at its beginning
        </td>
      </tr>
      <tr id="insert-inline-in-blocks-n-inlines-begin-002-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-inline-in-blocks-n-inlines-begin-002.xht">insert-inline-in-blocks-n-inlines-begin-002</a></strong></td>
        <td><a href="reference/insert-inline-in-blocks-n-inlines-begin-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert an inline-level element into an element that contains both blocks and inlines and directly into the block-of-inlines at its beginning
        </td>
      </tr>
      <tr id="insert-inline-in-blocks-n-inlines-begin-003-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-inline-in-blocks-n-inlines-begin-003.xht">insert-inline-in-blocks-n-inlines-begin-003</a></strong></td>
        <td><a href="reference/insert-inline-in-blocks-n-inlines-begin-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert an inline-level element into an element that contains both blocks and inlines and directly into the block-of-inlines at its beginning
        </td>
      </tr>
      <tr id="insert-inline-in-blocks-n-inlines-end-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-inline-in-blocks-n-inlines-end-001.xht">insert-inline-in-blocks-n-inlines-end-001</a></strong></td>
        <td><a href="reference/insert-inline-in-blocks-n-inlines-end-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert an inline-level element into an element that contains both blocks and inlines and directly into the block-of-inlines at its end
        </td>
      </tr>
      <tr id="insert-inline-in-blocks-n-inlines-end-002-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-inline-in-blocks-n-inlines-end-002.xht">insert-inline-in-blocks-n-inlines-end-002</a></strong></td>
        <td><a href="reference/insert-inline-in-blocks-n-inlines-end-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert an inline-level element into an element that contains both blocks and inlines and directly into the block-of-inlines at its end
        </td>
      </tr>
      <tr id="insert-inline-in-blocks-n-inlines-end-003-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-inline-in-blocks-n-inlines-end-003.xht">insert-inline-in-blocks-n-inlines-end-003</a></strong></td>
        <td><a href="reference/insert-inline-in-blocks-n-inlines-end-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert an inline-level element into an element that contains both blocks and inlines and directly into the block-of-inlines at its end
        </td>
      </tr>
      <tr id="insert-inline-in-blocks-n-inlines-middle-001-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-inline-in-blocks-n-inlines-middle-001.xht">insert-inline-in-blocks-n-inlines-middle-001</a></strong></td>
        <td><a href="reference/insert-inline-in-blocks-n-inlines-middle-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert an inline-level element into an element that contains both blocks and inlines and directly into the block-of-inlines at its middle
        </td>
      </tr>
      <tr id="insert-inline-in-blocks-n-inlines-middle-002-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-inline-in-blocks-n-inlines-middle-002.xht">insert-inline-in-blocks-n-inlines-middle-002</a></strong></td>
        <td><a href="reference/insert-inline-in-blocks-n-inlines-middle-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert an inline-level element into an element that contains both blocks and inlines and directly into the block-of-inlines at its middle
        </td>
      </tr>
      <tr id="insert-inline-in-blocks-n-inlines-middle-003-9.2.1.1" class="primary ahem dom">
        <td><strong>
            <a href="insert-inline-in-blocks-n-inlines-middle-003.xht">insert-inline-in-blocks-n-inlines-middle-003</a></strong></td>
        <td><a href="reference/insert-inline-in-blocks-n-inlines-middle-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Insert an inline-level element into an element that contains both blocks and inlines and directly into the block-of-inlines at its middle
        </td>
      </tr>
      <tr id="table-in-inline-001-9.2.1.1" class="primary">
        <td><strong>
            <a href="table-in-inline-001.xht">table-in-inline-001</a></strong></td>
        <td><a href="reference/table-in-inline-001-ref.xht">=</a> </td>
        <td></td>
        <td>blocks inside inlines &amp;#8211; table-pseudo-in-part3-1
        </td>
      </tr>
    </tbody>
    <tbody id="s9.2.1.1.#img-anon-block">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.1.1.#x9">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.2">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.2.2">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#inline-boxes">9.2.2 Inline-level elements and inline boxes</a></th></tr>
      <!-- 19 tests -->
      <tr id="inline-block-alignment-002-9.2.2" class="ahem">
        <td>
            <a href="inline-block-alignment-002.xht">inline-block-alignment-002</a></td>
        <td><a href="reference/inline-block-alignment-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>inline-block alignment - central alignment with vertical layout
          <ul class="assert">
            <li>This test checks the generation of inline-block baseline. When 'writing-mode' is 'vertical-rl' and when 'text-orientation' is 'mixed', then the central baseline is used as the dominant baseline.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-alignment-003-9.2.2" class="ahem">
        <td>
            <a href="inline-block-alignment-003.xht">inline-block-alignment-003</a></td>
        <td><a href="reference/inline-block-alignment-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>inline-block alignment - central alignment with vertical layout
          <ul class="assert">
            <li>This test checks the generation of inline-block baseline. When 'writing-mode' is 'vertical-lr' and when 'text-orientation' is 'mixed', then the central baseline is used as the dominant baseline.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-alignment-004-9.2.2" class="ahem">
        <td>
            <a href="inline-block-alignment-004.xht">inline-block-alignment-004</a></td>
        <td><a href="reference/inline-block-alignment-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>inline-block alignment - central alignment with vertical layout
          <ul class="assert">
            <li>This test checks the generation of inline-block baseline. When 'writing-mode' is 'vertical-rl' and when 'text-orientation' is 'upright', then the central baseline is used as the dominant baseline.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-alignment-005-9.2.2" class="ahem">
        <td>
            <a href="inline-block-alignment-005.xht">inline-block-alignment-005</a></td>
        <td><a href="reference/inline-block-alignment-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>inline-block alignment - central alignment with vertical layout
          <ul class="assert">
            <li>This test checks the generation of inline-block baseline. When 'writing-mode' is 'vertical-lr' and when 'text-orientation' is 'upright', then the central baseline is used as the dominant baseline.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-alignment-006-9.2.2" class="ahem">
        <td>
            <a href="inline-block-alignment-006.xht">inline-block-alignment-006</a></td>
        <td><a href="reference/inline-block-alignment-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>inline block alignment - alphabetical alignment with vertical layout
          <ul class="assert">
            <li>This test checks the generation of inline-block baseline. When 'writing-mode' is 'vertical-rl' and when 'text-orientation' is 'sideways', then the alphabetical baseline is used as the dominant baseline.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-alignment-007-9.2.2" class="ahem">
        <td>
            <a href="inline-block-alignment-007.xht">inline-block-alignment-007</a></td>
        <td><a href="reference/inline-block-alignment-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>inline block alignment - alphabetical alignment with vertical layout
          <ul class="assert">
            <li>This test checks the generation of inline-block baseline. When 'writing-mode' is 'vertical-lr' and when 'text-orientation' is 'sideways', then the alphabetical baseline is used as the dominant baseline.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-alignment-008-9.2.2" class="ahem">
        <td>
            <a href="inline-block-alignment-008.xht">inline-block-alignment-008</a></td>
        <td><a href="reference/inline-block-alignment-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>inline block alignment - alphabetical alignment with vertical layout
          <ul class="assert">
            <li>This test checks the generation of inline-block baseline. When 'writing-mode' is 'vertical-rl' and when 'text-orientation' is 'sideways-right', then the alphabetical baseline is used as the dominant baseline.</li>
          </ul>
        </td>
      </tr>
      <tr id="inlines-002-9.2.2" class="primary">
        <td><strong>
            <a href="inlines-002.xht">inlines-002</a></strong></td>
        <td><a href="reference/inlines-002-ref.xht">=</a> </td>
        <td></td>
        <td>CSS Inline Box Model: Layering Model
        </td>
      </tr>
      <tr id="inlines-003-9.2.2" class="primary interact">
        <td><strong>
            <a href="inlines-003.xht">inlines-003</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>CSS Inline Box Model: Wrapping Borders
        </td>
      </tr>
      <tr id="inlines-004-9.2.2" class="primary interact">
        <td><strong>
            <a href="inlines-004.xht">inlines-004</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>CSS Inline Box Model: Wrapping Spaces Outside Inline Elements
        </td>
      </tr>
      <tr id="inlines-005-9.2.2" class="primary interact">
        <td><strong>
            <a href="inlines-005.xht">inlines-005</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>CSS Inline Box Model: Wrapping Spaces Outside Inline Elements
        </td>
      </tr>
      <tr id="inlines-006-9.2.2" class="primary interact">
        <td><strong>
            <a href="inlines-006.xht">inlines-006</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>CSS Inline Box Model: Wrapping Spaces Outside Inline Elements
        </td>
      </tr>
      <tr id="inlines-007-9.2.2" class="primary">
        <td><strong>
            <a href="inlines-007.xht">inlines-007</a></strong></td>
        <td></td>
        <td></td>
        <td>CSS Inline Box Model: Behaviour near cells
        </td>
      </tr>
      <tr id="inlines-013-9.2.2" class="primary image">
        <td><strong>
            <a href="inlines-013.xht">inlines-013</a></strong></td>
        <td><a href="reference/inlines-013-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Inline box model: space taken by images before floats
        </td>
      </tr>
      <tr id="inlines-014-9.2.2" class="primary image">
        <td><strong>
            <a href="inlines-014.xht">inlines-014</a></strong></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Inline box model: space taken by images in cells
        </td>
      </tr>
      <tr id="inlines-015-9.2.2" class="primary image">
        <td><strong>
            <a href="inlines-015.xht">inlines-015</a></strong></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Inline box model: space taken by images in cells
        </td>
      </tr>
      <tr id="inlines-016-9.2.2" class="ahem">
        <td>
            <a href="inlines-016.xht">inlines-016</a></td>
        <td><a href="reference/inlines-016-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Inline box model: space collapsing, padding, white-space, et al
          <ul class="assert">
            <li>If a space (U+0020) at the beginning of a line has 'white-space' set to 'normal', then it is removed, even if there's padding.</li>
          </ul>
        </td>
      </tr>
      <tr id="inlines-017-9.2.2" class="primary ahem">
        <td><strong>
            <a href="inlines-017.xht">inlines-017</a></strong></td>
        <td><a href="reference/inlines-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>First line alignment
        </td>
      </tr>
      <tr id="inlines-020-9.2.2" class="primary">
        <td><strong>
            <a href="inlines-020.xht">inlines-020</a></strong></td>
        <td><a href="reference/inlines-020-ref.xht">=</a> </td>
        <td></td>
        <td>CSS Inline Box Model: Empty inlines near the top of the document
        </td>
      </tr>
    </tbody>
    <tbody id="s9.2.2.#inline-box">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.2.#inline-level">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.2.#x11">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.2.#x13">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.2.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.2.2.1">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#anonymous">9.2.2.1 Anonymous inline boxes</a></th></tr>
      <!-- 1 tests -->
      <tr id="anonymous-inline-whitespace-001-9.2.2.1" class="primary">
        <td><strong>
            <a href="anonymous-inline-whitespace-001.xht">anonymous-inline-whitespace-001</a></strong></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>White space does not generate an anonymous inline box
          <ul class="assert">
            <li>White space is collapsed according to the 'white-space' property and does not generate an anonymous inline box.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.2.2.1.#x14">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.3">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.2.3">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#run-in">9.2.3 Run-in boxes</a></th></tr>
      <!-- 122 tests -->
      <tr id="run-in-001-9.2.3" class="primary ahem">
        <td><strong>
            <a href="run-in-001.xht">run-in-001</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in with a block box converts to a block box
          <ul class="assert">
            <li>Run-in boxes are converted to block boxes when the run-in box contains a block box.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-002-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-002.xht">run-in-002</a></strong></td>
        <td></td>
        <td></td>
        <td>Run-in boxes change to inline boxes
          <ul class="assert">
            <li>Sibling block boxes following a run-in makes the run-in become an inline of the block box.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-003-9.2.3" class="primary ahem">
        <td><strong>
            <a href="run-in-003.xht">run-in-003</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in boxes and float
          <ul class="assert">
            <li>Float prevents run-in from becoming inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-004-9.2.3" class="primary ahem">
        <td><strong>
            <a href="run-in-004.xht">run-in-004</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in boxes and absolute positioning
          <ul class="assert">
            <li>Absolute positioning prevents run-in from becoming inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-005-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-005.xht">run-in-005</a></strong></td>
        <td></td>
        <td></td>
        <td>Run-in that starts with a run-in
          <ul class="assert">
            <li>Run-in boxes cannot run-in with another box that already starts with a run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-abspos-between-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-abspos-between-001.xht">run-in-abspos-between-001</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - abs pos should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if there is an absolutely positioned element between the run-in and the following block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-abspos-between-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-abspos-between-002.xht">run-in-abspos-between-002</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - block set to abs pos should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if a block is dynamically set to absolutely positioned between them and the following block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-abspos-between-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-abspos-between-003.xht">run-in-abspos-between-003</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - inline toggled from abs pos should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if an inline between them and the block is toggled from being absolutely positioned.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-basic-001.xht">run-in-basic-001</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - basic functionality
          <ul class="assert">
            <li>Run-ins run into a following block if there is nothing between the run-in and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-002-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-basic-002.xht">run-in-basic-002</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - basic functionality with whitespace
          <ul class="assert">
            <li>Run-ins run into a following block if there is collapsed whitespace between the run-in and the following block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-003-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-basic-003.xht">run-in-basic-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - basic functionality with comments
          <ul class="assert">
            <li>Run-ins run into a following block if there is collapsed whitespace and comments between the run-in and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-004-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-basic-004.xht">run-in-basic-004</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - basic functionality with multiple whitespace nodes
          <ul class="assert">
            <li>Tests that run-ins actually run in if there are multiple whitespace nodes between the run-in and the following block. There must be multiple whitespace nodes in the DOM between the run-in and the following block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-005-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-basic-005.xht">run-in-basic-005</a></strong></td>
        <td><a href="reference/run-in-block-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - basic functionality with following block containing run-in
          <ul class="assert">
            <li>Tests that run-ins actually run in if the following block has a display:run-in child.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-006-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-basic-006.xht">run-in-basic-006</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - basic functionality with list-item
          <ul class="assert">
            <li>Tests that run-ins actually run in if followed by a list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-007-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-basic-007.xht">run-in-basic-007</a></strong></td>
        <td><a href="reference/run-in-basic-007-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - runs into overflow:scroll block
          <ul class="assert">
            <li>Tests that run-ins actually run in if the block has overflow:scroll.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-008-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-basic-008.xht">run-in-basic-008</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - runs into relatively positioned block
          <ul class="assert">
            <li>Tests that run-ins actually run in if the block is relatively positioned.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-009-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-basic-009.xht">run-in-basic-009</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - run-ins run in even if given overflow:scroll
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have overflow:scroll set.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-010-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-basic-010.xht">run-in-basic-010</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - parsing a block after a run-in should make the run-in run in
          <ul class="assert">
            <li>Tests that run-ins actually run in if a block is parsed after them.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-011-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-basic-011.xht">run-in-basic-011</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - inserting a block after a run-in should make the run-in run in
          <ul class="assert">
            <li>Tests that run-ins actually run in if a block is inserted after them.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-012-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-basic-012.xht">run-in-basic-012</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - basic functionality with :before
          <ul class="assert">
            <li>Tests that run-ins end up before :before content when they run in.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-013-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-basic-013.xht">run-in-basic-013</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted run-in should run in
          <ul class="assert">
            <li>Tests that dynamically inserted run-ins run in.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-014-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-basic-014.xht">run-in-basic-014</a></strong></td>
        <td><a href="reference/run-in-pre-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - basic functionality with preserved whitespace
          <ul class="assert">
            <li>Tests that run-ins don't run in across preserved whitespace.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-015-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-basic-015.xht">run-in-basic-015</a></strong></td>
        <td><a href="reference/run-in-pre-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically preserved whitespace
          <ul class="assert">
            <li>Tests that run-ins don't run in across preserved whitespace even if it's preserved dynamically.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-016-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-basic-016.xht">run-in-basic-016</a></strong></td>
        <td><a href="reference/run-in-pre-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically added preserved whitespace(2)
          <ul class="assert">
            <li>Tests that run-ins don't run in across preserved whitespace even if it's added dynamically.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-017-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-basic-017.xht">run-in-basic-017</a></strong></td>
        <td><a href="reference/run-in-pre-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically added preserved whitespace(3)
          <ul class="assert">
            <li>Tests that run-ins don't run in across preserved whitespace even if it's added dynamically.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-basic-018-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-basic-018.xht">run-in-basic-018</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically added empty preserved whitespace
          <ul class="assert">
            <li>Tests that run-ins run in across preserved whitespace if the textnode is empty.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-block-between-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-block-between-001.xht">run-in-block-between-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - block should prevent running in
          <ul class="assert">
            <li>Run-ins run into a following block even if the block is empty.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-block-between-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-block-between-002.xht">run-in-block-between-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted block should prevent running in
          <ul class="assert">
            <li>Run-ins run into a following block even if the block is dynamically inserted and empty.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-block-between-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-block-between-003.xht">run-in-block-between-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed block should allow running in
          <ul class="assert">
            <li>Run-ins run into a following block even if there was another block between that was dynamically removed.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-breaking-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-breaking-001.xht">run-in-breaking-001</a></strong></td>
        <td><a href="reference/run-in-breaking-001-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - line-breaking after running in
          <ul class="assert">
            <li>Tests that run-ins that run in can line-break correctly, and that their borders are then painted correctly.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-breaking-002-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-breaking-002.xht">run-in-breaking-002</a></strong></td>
        <td><a href="reference/run-in-breaking-002-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - line-breaking after running in
          <ul class="assert">
            <li>Tests that run-ins that run in can line-break correctly, and that their borders are then painted correctly.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-abspos-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-abspos-001.xht">run-in-contains-abspos-001</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - an abs pos child should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have abs pos kids.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-block-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-block-001.xht">run-in-contains-block-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child block should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if they have child blocks.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-block-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-contains-block-002.xht">run-in-contains-block-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted block child should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if they have dynamically inserted child blocks.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-block-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-contains-block-003.xht">run-in-contains-block-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed block child should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if a block child is dynamically removed.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-block-004-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-contains-block-004.xht">run-in-contains-block-004</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - child dynamically toggled to block display should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if they have a child dynamically toggled to block display.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-block-005-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-contains-block-005.xht">run-in-contains-block-005</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - child dynamically toggled to inline display should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if they have a child dynamically toggled to inline display.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-block-inside-inline-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-block-inside-inline-001.xht">run-in-contains-block-inside-inline-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child inline containing a block should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if they have child inlines which contain blocks.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-block-inside-inline-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-contains-block-inside-inline-002.xht">run-in-contains-block-inside-inline-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted inline child containing block should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if they have dynamically inserted child inlines containing blocks.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-block-inside-inline-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-contains-block-inside-inline-003.xht">run-in-contains-block-inside-inline-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed inline child containing a block should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if an inline child containing a block is dynamically removed.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-float-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-float-001.xht">run-in-contains-float-001</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a floating child should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have floating kids.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-inline-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-inline-001.xht">run-in-contains-inline-001</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child inline should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have child inlines.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-inline-002-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-inline-002.xht">run-in-contains-inline-002</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child inline with table-cell child should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have child inlines which contain table cells.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-inline-003-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-inline-003.xht">run-in-contains-inline-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child inline with table-cell child with an abs pos child should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have child inlines which contain table cells which contain abs pos kids.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-inline-004-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-inline-004.xht">run-in-contains-inline-004</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child inline with table-cell child with a floating child should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have child inlines which contain table cells which contain floating kids.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-inline-005-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-inline-005.xht">run-in-contains-inline-005</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child inline with table-row child should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have child inlines which contain table rowss.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-inline-006-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-inline-006.xht">run-in-contains-inline-006</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child inline with an abs pos child should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have child inlines which contain abs pos kids.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-inline-007-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-inline-007.xht">run-in-contains-inline-007</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child inline with a floating child should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have child inlines which contain floating kids.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-inline-block-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-inline-block-001.xht">run-in-contains-inline-block-001</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child inline-block should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have child inline-blocks.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-inline-table-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-inline-table-001.xht">run-in-contains-inline-table-001</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child inline-table should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have child inline-tables.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-relpos-block-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-relpos-block-001.xht">run-in-contains-relpos-block-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child rel pos block should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if they have child rel pos blocks.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-relpos-block-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-contains-relpos-block-002.xht">run-in-contains-relpos-block-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted rel pos block child should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if they have dynamically inserted child rel pos blocks.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-relpos-block-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-contains-relpos-block-003.xht">run-in-contains-relpos-block-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed rel pos block child should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if a rel pos block child is dynamically removed.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-run-in-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-run-in-001.xht">run-in-contains-run-in-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child run-in should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if they have child run-ins.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-run-in-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-contains-run-in-002.xht">run-in-contains-run-in-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted run-in child should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if they have dynamically inserted child run-ins.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-run-in-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-contains-run-in-003.xht">run-in-contains-run-in-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed run-in child should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if a run-in child is dynamically removed.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-table-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-table-001.xht">run-in-contains-table-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child table should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if they have child tables.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-table-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-contains-table-002.xht">run-in-contains-table-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted table child should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if they have dynamically inserted child tables.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-table-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-contains-table-003.xht">run-in-contains-table-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed table child should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if a table child is dynamically removed.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-table-caption-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-table-caption-001.xht">run-in-contains-table-caption-001</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child table-caption should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have child table-captions.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-table-cell-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-table-cell-001.xht">run-in-contains-table-cell-001</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child table-cell should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have child table-cells.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-table-column-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-table-column-001.xht">run-in-contains-table-column-001</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child table-column should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have child table-columns.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-table-column-group-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-table-column-group-001.xht">run-in-contains-table-column-group-001</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child table-column should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have child table-columns.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-table-inside-inline-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-table-inside-inline-001.xht">run-in-contains-table-inside-inline-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child inline containing a table should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if they have child inlines which contain tables.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-table-inside-inline-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-contains-table-inside-inline-002.xht">run-in-contains-table-inside-inline-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted inline child containing table should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if they have dynamically inserted child inlines containing tables.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-table-inside-inline-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-contains-table-inside-inline-003.xht">run-in-contains-table-inside-inline-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed inline child containing a table should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if an inline child containing a table is dynamically removed.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-table-row-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-table-row-001.xht">run-in-contains-table-row-001</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child table-row should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have child table-rows.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-contains-table-row-group-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-contains-table-row-group-001.xht">run-in-contains-table-row-group-001</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - a child table-row-group should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if they have child table-row-groupss.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-display-none-between-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-display-none-between-001.xht">run-in-display-none-between-001</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - display:none should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if there is a display:none element between the run-in and the following block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-display-none-between-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-display-none-between-002.xht">run-in-display-none-between-002</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - block set to display:none should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if a block is dynamically set to display:none between them and the following block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-display-none-between-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-display-none-between-003.xht">run-in-display-none-between-003</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - inline toggled from display:none should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if an inline between them and the block is toggled from display:none.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-fixedpos-between-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-fixedpos-between-001.xht">run-in-fixedpos-between-001</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - fixed pos should not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if there is an fixed positioned element between the run-in and the following block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-fixedpos-between-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-fixedpos-between-002.xht">run-in-fixedpos-between-002</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - block set to fixed pos should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if a block is dynamically set to fixed positioned between them and the following block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-fixedpos-between-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-fixedpos-between-003.xht">run-in-fixedpos-between-003</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - inline toggled from fixed pos should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if an inline between them and the block is toggled from being fixed positioned.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-float-between-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-float-between-001.xht">run-in-float-between-001</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - floatshould not prevent running in
          <ul class="assert">
            <li>Tests that run-ins actually run in if there is a float element between the run-in and the following block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-float-between-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-float-between-002.xht">run-in-float-between-002</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - block set to float should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if a block is dynamically set to float between them and the following block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-float-between-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-float-between-003.xht">run-in-float-between-003</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - inline toggled from float should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if an inline between them and the block is toggled from float.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-inherit-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-inherit-001.xht">run-in-inherit-001</a></strong></td>
        <td><a href="reference/run-in-inherit-001-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - run-in property inheritance
          <ul class="assert">
            <li>Tests property inheritance for run-ins, and margin collapsing for the block following a run-in. Should inherit from our content parent, and the margins should not collapse through a border.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-inheritance-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-inheritance-001.xht">run-in-inheritance-001</a></strong></td>
        <td></td>
        <td></td>
        <td>Run-in boxes and inheritance
          <ul class="assert">
            <li>Run-in boxes inherit properties from its parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-inline-between-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-inline-between-001.xht">run-in-inline-between-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - inline should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's an inline between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-inline-between-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-inline-between-002.xht">run-in-inline-between-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted inline should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a dynamically inserted inline between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-inline-between-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-inline-between-003.xht">run-in-inline-between-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed inline should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if an inline is dynamically removed from between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-inline-block-between-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-inline-block-between-001.xht">run-in-inline-block-between-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - inline-block should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's an inline-block between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-inline-block-between-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-inline-block-between-002.xht">run-in-inline-block-between-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted inline-block should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a dynamically inserted inline-block between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-inline-block-between-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-inline-block-between-003.xht">run-in-inline-block-between-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed inline-block should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if an inline-block is dynamically removed from between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-inline-table-between-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-inline-table-between-001.xht">run-in-inline-table-between-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - inline-table should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a inline-table between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-inline-table-between-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-inline-table-between-002.xht">run-in-inline-table-between-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted inline-table should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a dynamically inserted inline-table between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-inline-table-between-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-inline-table-between-003.xht">run-in-inline-table-between-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed inline-table should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if a inline-table is dynamically removed from between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-linebox-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-linebox-001.xht">run-in-linebox-001</a></strong></td>
        <td></td>
        <td></td>
        <td>run-in and sibling blocks
        </td>
      </tr>
      <tr id="run-in-linebox-002-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-linebox-002.xht">run-in-linebox-002</a></strong></td>
        <td></td>
        <td></td>
        <td>run-in and the line box model
          <ul class="assert">
            <li>A run-in element inherits (line-height) from its document tree parent</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-listitem-between-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-listitem-between-001.xht">run-in-listitem-between-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - block should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a list-item between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-listitem-between-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-listitem-between-002.xht">run-in-listitem-between-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted block should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a dynamically inserted list-item between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-listitem-between-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-listitem-between-003.xht">run-in-listitem-between-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed block should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if a list-item is dynamically removed from between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-relpos-between-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-relpos-between-001.xht">run-in-relpos-between-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - rel pos inline should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a rel pos inline between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-relpos-between-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-relpos-between-002.xht">run-in-relpos-between-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted rel pos inline should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a dynamically inserted rel pos inline between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-relpos-between-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-relpos-between-003.xht">run-in-relpos-between-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed rel pos inline should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if a rel pos inline is dynamically removed from between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-replaced-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-replaced-001.xht">run-in-replaced-001</a></strong></td>
        <td><a href="reference/run-in-replaced-001-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - basic replaced element
          <ul class="assert">
            <li>Tests that replaced elements can actually run in and that they ten get sized correctly.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-restyle-001-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-restyle-001.xht">run-in-restyle-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - should run out when they stop being run-ins
          <ul class="assert">
            <li>Tests that run-ins don't run once they stop being run-ins.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-restyle-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-restyle-002.xht">run-in-restyle-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - should run out when following block becomes an inline
          <ul class="assert">
            <li>Tests that run-ins don't run once their following block becomes an inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-restyle-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-restyle-003.xht">run-in-restyle-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - should run in when following inline becomes a block
          <ul class="assert">
            <li>Tests that run-ins run in when the inline after them becomes a block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-run-in-between-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-run-in-between-001.xht">run-in-run-in-between-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - run in that has not run in should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a run in that has not run in between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-run-in-between-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-run-in-between-002.xht">run-in-run-in-between-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted run-in which does not run in should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a dynamically inserted run-in which has not run in between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-run-in-between-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-run-in-between-003.xht">run-in-run-in-between-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed run-in which did not run in should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if a run-in which has not run in is dynamically removed from between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-run-in-between-004-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-run-in-between-004.xht">run-in-run-in-between-004</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - run in that has run in should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a run-in that has run in between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-run-in-between-005-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-run-in-between-005.xht">run-in-run-in-between-005</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted run-in which runs in should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a dynamically inserted run-in which has run in between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-run-in-between-006-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-run-in-between-006.xht">run-in-run-in-between-006</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed run-in which ran in should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if a run-in which has run in is dynamically removed from between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-run-in-between-007-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-run-in-between-007.xht">run-in-run-in-between-007</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - run-in which runs in should prevent running in of dynamically inserted run-in
          <ul class="assert">
            <li>Tests that dynamically inserted run-ins don't run in if there's a run-in which has run in between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-run-in-between-008-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-run-in-between-008.xht">run-in-run-in-between-008</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - run-in which does not run in should prevent running in of dynamically inserted run-in
          <ul class="assert">
            <li>Tests that dynamically inserted run-ins don't run in if there's a run-in which has not run in between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-table-between-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-table-between-001.xht">run-in-table-between-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - table should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a table between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-table-between-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-table-between-002.xht">run-in-table-between-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted table should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a dynamically inserted table between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-table-between-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-table-between-003.xht">run-in-table-between-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed table should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if a table is dynamically removed from between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-table-cell-between-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-table-cell-between-001.xht">run-in-table-cell-between-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - table-cell should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a table-cell between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-table-cell-between-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-table-cell-between-002.xht">run-in-table-cell-between-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted table-cell should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a dynamically inserted table-cell between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-table-cell-between-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-table-cell-between-003.xht">run-in-table-cell-between-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed table-cell should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if a table-cell is dynamically removed from between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-table-row-between-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-table-row-between-001.xht">run-in-table-row-between-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - table-row should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a table-row between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-table-row-between-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-table-row-between-002.xht">run-in-table-row-between-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted table-row should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's a dynamically inserted table-row between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-table-row-between-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-table-row-between-003.xht">run-in-table-row-between-003</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed table-row should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if a table-row is dynamically removed from between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-text-between-001-9.2.3" class="primary">
        <td><strong>
            <a href="run-in-text-between-001.xht">run-in-text-between-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - text should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's text between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-text-between-002-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-text-between-002.xht">run-in-text-between-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically inserted text should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's dynamically inserted text between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-text-between-003-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-text-between-003.xht">run-in-text-between-003</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically changed text should prevent running in
          <ul class="assert">
            <li>Tests that run-ins don't run in if there's dynamically changed text between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-text-between-004-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-text-between-004.xht">run-in-text-between-004</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically removed text should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if text is dynamically removed from between them and the block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-text-between-005-9.2.3" class="primary dom">
        <td><strong>
            <a href="run-in-text-between-005.xht">run-in-text-between-005</a></strong></td>
        <td><a href="reference/run-in-basic-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - dynamically set to whitespace text should allow running in
          <ul class="assert">
            <li>Tests that run-ins run in if text is dynamically set to whitespace between them and the block.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.2.3.#x15">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.4">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.2.4">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#display-prop">9.2.4 The 'display' property</a></th></tr>
      <!-- 73 tests -->
      <tr id="after-content-display-001-9.2.4" class="">
        <td>
            <a href="after-content-display-001.xht">after-content-display-001</a></td>
        <td><a href="reference/after-content-display-001-ref.xht">=</a> </td>
        <td></td>
        <td>:after generated content - display inline
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="after-content-display-002-9.2.4" class="">
        <td>
            <a href="after-content-display-002.xht">after-content-display-002</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:after generated content - display block
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="after-content-display-003-9.2.4" class="">
        <td>
            <a href="after-content-display-003.xht">after-content-display-003</a></td>
        <td><a href="reference/after-content-display-003-ref.xht">=</a> </td>
        <td></td>
        <td>:after generated content - display list-item
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="after-content-display-005-9.2.4" class="">
        <td>
            <a href="after-content-display-005.xht">after-content-display-005</a></td>
        <td><a href="reference/after-content-display-001-ref.xht">=</a> </td>
        <td></td>
        <td>:after generated content - display inline-block
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="after-content-display-006-9.2.4" class="">
        <td>
            <a href="after-content-display-006.xht">after-content-display-006</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:after generated content - display table
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="after-content-display-007-9.2.4" class="">
        <td>
            <a href="after-content-display-007.xht">after-content-display-007</a></td>
        <td><a href="reference/after-content-display-001-ref.xht">=</a> </td>
        <td></td>
        <td>:after generated content - display inline-table
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="after-content-display-008-9.2.4" class="">
        <td>
            <a href="after-content-display-008.xht">after-content-display-008</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:after generated content - display table-row-group
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="after-content-display-009-9.2.4" class="">
        <td>
            <a href="after-content-display-009.xht">after-content-display-009</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:after generated content - display table-header-group
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="after-content-display-010-9.2.4" class="">
        <td>
            <a href="after-content-display-010.xht">after-content-display-010</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:after generated content - display table-footer-group
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="after-content-display-011-9.2.4" class="">
        <td>
            <a href="after-content-display-011.xht">after-content-display-011</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:after generated content - display table-row
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="after-content-display-014-9.2.4" class="">
        <td>
            <a href="after-content-display-014.xht">after-content-display-014</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:after generated content - display table-cell
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="after-content-display-015-9.2.4" class="">
        <td>
            <a href="after-content-display-015.xht">after-content-display-015</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:after generated content - display table-caption
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="after-content-display-016-9.2.4" class="">
        <td>
            <a href="after-content-display-016.xht">after-content-display-016</a></td>
        <td><a href="reference/after-content-display-012-ref.xht">=</a> </td>
        <td></td>
        <td>:after generated content - display none
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="after-content-display-017-9.2.4" class="">
        <td>
            <a href="after-content-display-017.xht">after-content-display-017</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:after generated content - display inherit
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="before-content-display-001-9.2.4" class="">
        <td>
            <a href="before-content-display-001.xht">before-content-display-001</a></td>
        <td><a href="reference/after-content-display-001-ref.xht">=</a> </td>
        <td></td>
        <td>:before generated content - display inline
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="before-content-display-002-9.2.4" class="">
        <td>
            <a href="before-content-display-002.xht">before-content-display-002</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:before generated content - display block
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="before-content-display-003-9.2.4" class="">
        <td>
            <a href="before-content-display-003.xht">before-content-display-003</a></td>
        <td><a href="reference/before-content-display-003-ref.xht">=</a> </td>
        <td></td>
        <td>:before generated content - display list-item
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="before-content-display-005-9.2.4" class="">
        <td>
            <a href="before-content-display-005.xht">before-content-display-005</a></td>
        <td><a href="reference/after-content-display-001-ref.xht">=</a> </td>
        <td></td>
        <td>:before generated content - display inline-block
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="before-content-display-006-9.2.4" class="">
        <td>
            <a href="before-content-display-006.xht">before-content-display-006</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:before generated content - display table
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="before-content-display-007-9.2.4" class="">
        <td>
            <a href="before-content-display-007.xht">before-content-display-007</a></td>
        <td><a href="reference/after-content-display-001-ref.xht">=</a> </td>
        <td></td>
        <td>:before generated content - display inline-table
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="before-content-display-008-9.2.4" class="">
        <td>
            <a href="before-content-display-008.xht">before-content-display-008</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:before generated content - display table-row-group
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="before-content-display-009-9.2.4" class="">
        <td>
            <a href="before-content-display-009.xht">before-content-display-009</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:before generated content - display table-header-group
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="before-content-display-010-9.2.4" class="">
        <td>
            <a href="before-content-display-010.xht">before-content-display-010</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:before generated content - display table-footer-group
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="before-content-display-011-9.2.4" class="">
        <td>
            <a href="before-content-display-011.xht">before-content-display-011</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:before generated content - display table-row
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="before-content-display-014-9.2.4" class="">
        <td>
            <a href="before-content-display-014.xht">before-content-display-014</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:before generated content - display table-cell
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="before-content-display-015-9.2.4" class="">
        <td>
            <a href="before-content-display-015.xht">before-content-display-015</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:before generated content - display table-caption
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="before-content-display-016-9.2.4" class="">
        <td>
            <a href="before-content-display-016.xht">before-content-display-016</a></td>
        <td><a href="reference/after-content-display-012-ref.xht">=</a> </td>
        <td></td>
        <td>:before generated content - display none
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="before-content-display-017-9.2.4" class="">
        <td>
            <a href="before-content-display-017.xht">before-content-display-017</a></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>:before generated content - display inherit
          <ul class="assert">
            <li>Generated content can have their own display value explicitly set in which case they behave as if they were real elements inserted just inside their associated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-in-inline-003-9.2.4" class="primary">
        <td><strong>
            <a href="block-in-inline-003.xht">block-in-inline-003</a></strong></td>
        <td><a href="reference/block-in-inline-003-ref.xht">=</a> </td>
        <td></td>
        <td>Blocks within inlines: Simple
          <ul class="assert">
            <li>When an inline box contains a block box, the inline box is broken around the box and its pieces, if empty, will not show any background.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-in-inline-004-9.2.4" class="primary interact">
        <td><strong>
            <a href="block-in-inline-004.xht">block-in-inline-004</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Blocks within inlines: Simple with :hover
          <ul class="assert">
            <li>A block that splits an inline still inherits from the inline, even in dynamic cases.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-in-inline-005-9.2.4" class="primary dom interact">
        <td><strong>
            <a href="block-in-inline-005.xht">block-in-inline-005</a></strong></td>
        <td></td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Blocks within inlines: Simple with dynamic class changes
        </td>
      </tr>
      <tr id="block-in-inline-006-9.2.4" class="primary dom interact">
        <td><strong>
            <a href="block-in-inline-006.xht">block-in-inline-006</a></strong></td>
        <td></td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Blocks within inlines: Simple with dynamic class changes
        </td>
      </tr>
      <tr id="block-in-inline-007-9.2.4" class="primary">
        <td><strong>
            <a href="block-in-inline-007.xht">block-in-inline-007</a></strong></td>
        <td><a href="reference/block-in-inline-007-ref.xht">=</a> </td>
        <td></td>
        <td>Blocks within inlines: Simple
          <ul class="assert">
            <li>When an inline box contains block boxes, the inline box is broken around the blocks.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-in-inline-008-9.2.4" class="primary">
        <td><strong>
            <a href="block-in-inline-008.xht">block-in-inline-008</a></strong></td>
        <td><a href="reference/block-in-inline-008-ref.xht">=</a> </td>
        <td></td>
        <td>Blocks within inlines: Relative positioning
        </td>
      </tr>
      <tr id="c561-list-displ-000-9.2.4" class="">
        <td>
            <a href="c561-list-displ-000.xht">c561-list-displ-000</a></td>
        <td><a href="reference/c561-list-displ-000-ref.xht">=</a> </td>
        <td></td>
        <td>display
        </td>
      </tr>
      <tr id="clear-applies-to-000-9.2.4" class="primary">
        <td><strong>
            <a href="clear-applies-to-000.xht">clear-applies-to-000</a></strong></td>
        <td><a href="reference/clear-applies-to-000-ref.xht">=</a> </td>
        <td></td>
        <td>Clear on floats after floats with display:none blocks between them
        </td>
      </tr>
      <tr id="descendant-display-none-001-9.2.4" class="">
        <td>
            <a href="descendant-display-none-001.xht">descendant-display-none-001</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Descendant elements and 'display: none'
          <ul class="assert">
            <li>Descendant elements do not get generated when parent is 'display: none'.</li>
          </ul>
        </td>
      </tr>
      <tr id="descendant-display-override-001-9.2.4" class="">
        <td>
            <a href="descendant-display-override-001.xht">descendant-display-override-001</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Overriding display none from parent
          <ul class="assert">
            <li>Descendant elements cannot override the parent's setting of the 'display' property when set to 'none'.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-001-9.2.4" class="">
        <td>
            <a href="display-001.xht">display-001</a></td>
        <td><a href="reference/display-001-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'inline'
          <ul class="assert">
            <li>The property 'display' set to 'inline' behaves in layout as an inline element.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-002-9.2.4" class="">
        <td>
            <a href="display-002.xht">display-002</a></td>
        <td><a href="reference/display-002-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'block'
          <ul class="assert">
            <li>The property 'display' set to 'block' behaves in layout as a block.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-003-9.2.4" class="">
        <td>
            <a href="display-003.xht">display-003</a></td>
        <td></td>
        <td></td>
        <td>Display set to 'list-item'
          <ul class="assert">
            <li>The property 'display' set to 'list-item' behaves in layout as a list item block.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-004-9.2.4" class="">
        <td>
            <a href="display-004.xht">display-004</a></td>
        <td></td>
        <td></td>
        <td>Display set to 'run-in'
          <ul class="assert">
            <li>The property 'display' set to 'run-in' behaves in layout as a run-in block.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-005-9.2.4" class="">
        <td>
            <a href="display-005.xht">display-005</a></td>
        <td><a href="reference/display-001-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'inline-block'
          <ul class="assert">
            <li>The property 'display' set to 'inline-block' is formatted in layout as an inline-level element: it creates a new block formatting context for its descendants but it is laid out, flowed as an inline-level element. An inline-block does not begin on a new line and does not require to begin on a new line.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-006-9.2.4" class="">
        <td>
            <a href="display-006.xht">display-006</a></td>
        <td><a href="reference/display-001-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table'
          <ul class="assert">
            <li>The property 'display' set to 'table' behaves in layout as a table.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-007-9.2.4" class="">
        <td>
            <a href="display-007.xht">display-007</a></td>
        <td><a href="reference/display-001-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'inline-table'
          <ul class="assert">
            <li>The property 'display' set to 'inline-table' behaves in layout as an inline table.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-008-9.2.4" class="">
        <td>
            <a href="display-008.xht">display-008</a></td>
        <td><a href="reference/display-008-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table-row-group'
          <ul class="assert">
            <li>The property 'display' set to 'table-row-group' behaves in layout as a table row group.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-009-9.2.4" class="">
        <td>
            <a href="display-009.xht">display-009</a></td>
        <td><a href="reference/display-008-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table-header-group'
          <ul class="assert">
            <li>The property 'display' set to 'table-header-group' behaves in layout as a table header group.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-010-9.2.4" class="">
        <td>
            <a href="display-010.xht">display-010</a></td>
        <td><a href="reference/display-010-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table-footer-group'
          <ul class="assert">
            <li>The property 'display' set to 'table-footer-group' behaves in layout as a table footer group.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-011-9.2.4" class="">
        <td>
            <a href="display-011.xht">display-011</a></td>
        <td><a href="reference/display-002-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table-row'
          <ul class="assert">
            <li>The property 'display' set to 'table-row' behaves in layout as a table row.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-012-9.2.4" class="">
        <td>
            <a href="display-012.xht">display-012</a></td>
        <td><a href="reference/display-012-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table-column-group'
          <ul class="assert">
            <li>The property 'display' set to 'table-column-group' behaves in layout as a table column group.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-013-9.2.4" class="">
        <td>
            <a href="display-013.xht">display-013</a></td>
        <td><a href="reference/display-012-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table-column'
          <ul class="assert">
            <li>The property 'display' set to 'table-column' behaves in layout as a table column.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-014-9.2.4" class="">
        <td>
            <a href="display-014.xht">display-014</a></td>
        <td><a href="reference/display-001-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table-cell'
          <ul class="assert">
            <li>The property 'display' set to 'table-cell' behaves in layout as a table cell.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-015-9.2.4" class="">
        <td>
            <a href="display-015.xht">display-015</a></td>
        <td><a href="reference/display-002-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table-caption'
          <ul class="assert">
            <li>The property 'display' set to 'table-caption' behaves in layout as a table caption.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-016-9.2.4" class="">
        <td>
            <a href="display-016.xht">display-016</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Display set to 'none'
          <ul class="assert">
            <li>The property 'display' set to 'none' has no layout.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-017-9.2.4" class="">
        <td>
            <a href="display-017.xht">display-017</a></td>
        <td><a href="reference/display-002-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'inherit'
          <ul class="assert">
            <li>The property 'display' set to 'inherit' can inherit its layout behavior from a parent container.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-018-9.2.4" class="primary">
        <td><strong>
            <a href="display-018.xht">display-018</a></strong></td>
        <td><a href="reference/display-018-ref.xht">=</a> </td>
        <td></td>
        <td>display - sub-table elements with 'display' set to 'inline'
          <ul class="assert">
            <li>When an element with its property 'display' set to 'inline', then it makes its box laid out horizontally, beginning at the top of its containing block without beginning on a new line and without requiring to begin on a new line. Elements with 'display' set to 'inline' are laid out horizontally, one after the other, in the line box.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-applies-to-001-9.2.4" class="">
        <td>
            <a href="display-applies-to-001.xht">display-applies-to-001</a></td>
        <td></td>
        <td></td>
        <td>Applying the property 'display' set to 'inline' to the 'a' element
          <ul class="assert">
            <li>Display set to 'inline' applies the correct rendering behavior for the 'a' element.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-applies-to-002-9.2.4" class="">
        <td>
            <a href="display-applies-to-002.xht">display-applies-to-002</a></td>
        <td></td>
        <td></td>
        <td>Applying the property 'display' set to 'inline' to the 'abbr' element
          <ul class="assert">
            <li>Display set to 'inline' applies the correct rendering behavior for the 'abbr' element.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-change-001-9.2.4" class="primary ahem dom">
        <td><strong>
            <a href="display-change-001.xht">display-change-001</a></strong></td>
        <td><a href="reference/display-change-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Updating layout on display changes
        </td>
      </tr>
      <tr id="display-initial-001-9.2.4" class="primary">
        <td><strong>
            <a href="display-initial-001.xht">display-initial-001</a></strong></td>
        <td></td>
        <td></td>
        <td>Display initial value
          <ul class="assert">
            <li>The initial display value for all elements is 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-000-9.2.4" class="primary">
        <td><strong>
            <a href="inline-block-000.xht">inline-block-000</a></strong></td>
        <td><a href="reference/inline-block-000-ref.xht">=</a> </td>
        <td></td>
        <td>Test for inline-block
          <ul class="assert">
            <li>This value causes an element to generate a block box, which itself is flowed as a single inline box, similar to a replaced element. The inside of an inline-block is formatted as a block box, and the element itself is formatted as an inline replaced element.</li>
            <li>The baseline of an 'inline-block' is the baseline of its last line box in the normal flow, unless it has either no in-flow line boxes or if its 'overflow' property has a computed value other than 'visible', in which case the baseline is the bottom margin edge.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-valign-001-9.2.4" class="primary">
        <td><strong>
            <a href="inline-block-valign-001.xht">inline-block-valign-001</a></strong></td>
        <td><a href="reference/inline-block-valign-001-ref.xht">=</a> </td>
        <td></td>
        <td>Test for vertical alignment on inline-block
          <ul class="assert">
            <li>This value causes an element to generate a block box, which itself is flowed as a single inline box, similar to a replaced element. The inside of an inline-block is formatted as a block box, and the element itself is formatted as an inline replaced element.</li>
            <li>The baseline of an 'inline-block' is the baseline of its last line box in the normal flow, unless it has either no in-flow line boxes or if its 'overflow' property has a computed value other than 'visible', in which case the baseline is the bottom margin edge.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-valign-002-9.2.4" class="primary">
        <td><strong>
            <a href="inline-block-valign-002.xht">inline-block-valign-002</a></strong></td>
        <td><a href="reference/inline-block-valign-002-ref.xht">=</a> </td>
        <td></td>
        <td>Test for vertical alignment on inline-block
          <ul class="assert">
            <li>This value causes an element to generate a block box, which itself is flowed as a single inline box, similar to a replaced element. The inside of an inline-block is formatted as a block box, and the element itself is formatted as an inline replaced element.</li>
            <li>The baseline of an 'inline-block' is the baseline of its last line box in the normal flow, unless it has either no in-flow line boxes or if its 'overflow' property has a computed value other than 'visible', in which case the baseline is the bottom margin edge.</li>
          </ul>
        </td>
      </tr>
      <tr id="root-box-002-9.2.4" class="primary image">
        <td><strong>
            <a href="root-box-002.xht">root-box-002</a></strong></td>
        <td><a href="reference/root-box-002-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Styling the root element: display:table
          <ul class="assert">
            <li>HTML elements can be set to other display property values - like sub-table elements just like in this testcase - in order to behave like another element.</li>
          </ul>
        </td>
      </tr>
      <tr id="root-box-003-9.2.4" class="primary">
        <td><strong>
            <a href="root-box-003.xht">root-box-003</a></strong></td>
        <td><a href="reference/root-box-003-ref.xht">=</a> </td>
        <td></td>
        <td>Styling the root element: display:none (page should be a big green expanse)
        </td>
      </tr>
      <tr id="run-in-006-9.2.4" class="ahem">
        <td>
            <a href="run-in-006.xht">run-in-006</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in with a table box
          <ul class="assert">
            <li>Run-in boxes are converted to block boxes when the run-in box runs into a table box.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-007-9.2.4" class="ahem">
        <td>
            <a href="run-in-007.xht">run-in-007</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in with a inline-table box
          <ul class="assert">
            <li>Run-in boxes are converted to block boxes when the run-in box runs into an inline-table box.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-008-9.2.4" class="ahem">
        <td>
            <a href="run-in-008.xht">run-in-008</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in with a table-row-group box
          <ul class="assert">
            <li>Run-in boxes are converted to block boxes when the run-in box runs into a table-row-group box.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-009-9.2.4" class="ahem">
        <td>
            <a href="run-in-009.xht">run-in-009</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in with a table-row box
          <ul class="assert">
            <li>Run-in boxes are converted to block boxes when the run-in box runs into a table-row box.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-010-9.2.4" class="ahem">
        <td>
            <a href="run-in-010.xht">run-in-010</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in with a table-cell box
          <ul class="assert">
            <li>Run-in boxes are converted to block boxes when the run-in box runs into a table-cell box.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-011-9.2.4" class="ahem">
        <td>
            <a href="run-in-011.xht">run-in-011</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in with a table-caption box
          <ul class="assert">
            <li>Run-in boxes are converted to block boxes when the run-in box runs into a table-caption box.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-012-9.2.4" class="ahem">
        <td>
            <a href="run-in-012.xht">run-in-012</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in with a table-header-group box
          <ul class="assert">
            <li>Run-in boxes are converted to block boxes when the run-in box runs into a table-header-group box.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-013-9.2.4" class="ahem">
        <td>
            <a href="run-in-013.xht">run-in-013</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in with a table-footer-group box
          <ul class="assert">
            <li>Run-in boxes are converted to block boxes when the run-in box runs into a table-footer-group box.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.2.4.#propdef-display">
      <!-- 29 tests -->
      <tr id="descendant-display-none-001-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="descendant-display-none-001.xht">descendant-display-none-001</a></strong></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Descendant elements and 'display: none'
          <ul class="assert">
            <li>Descendant elements do not get generated when parent is 'display: none'.</li>
          </ul>
        </td>
      </tr>
      <tr id="descendant-display-override-001-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="descendant-display-override-001.xht">descendant-display-override-001</a></strong></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Overriding display none from parent
          <ul class="assert">
            <li>Descendant elements cannot override the parent's setting of the 'display' property when set to 'none'.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-001-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-001.xht">display-001</a></strong></td>
        <td><a href="reference/display-001-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'inline'
          <ul class="assert">
            <li>The property 'display' set to 'inline' behaves in layout as an inline element.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-002-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-002.xht">display-002</a></strong></td>
        <td><a href="reference/display-002-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'block'
          <ul class="assert">
            <li>The property 'display' set to 'block' behaves in layout as a block.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-003-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-003.xht">display-003</a></strong></td>
        <td></td>
        <td></td>
        <td>Display set to 'list-item'
          <ul class="assert">
            <li>The property 'display' set to 'list-item' behaves in layout as a list item block.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-004-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-004.xht">display-004</a></strong></td>
        <td></td>
        <td></td>
        <td>Display set to 'run-in'
          <ul class="assert">
            <li>The property 'display' set to 'run-in' behaves in layout as a run-in block.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-005-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-005.xht">display-005</a></strong></td>
        <td><a href="reference/display-001-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'inline-block'
          <ul class="assert">
            <li>The property 'display' set to 'inline-block' is formatted in layout as an inline-level element: it creates a new block formatting context for its descendants but it is laid out, flowed as an inline-level element. An inline-block does not begin on a new line and does not require to begin on a new line.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-006-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-006.xht">display-006</a></strong></td>
        <td><a href="reference/display-001-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table'
          <ul class="assert">
            <li>The property 'display' set to 'table' behaves in layout as a table.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-007-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-007.xht">display-007</a></strong></td>
        <td><a href="reference/display-001-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'inline-table'
          <ul class="assert">
            <li>The property 'display' set to 'inline-table' behaves in layout as an inline table.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-008-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-008.xht">display-008</a></strong></td>
        <td><a href="reference/display-008-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table-row-group'
          <ul class="assert">
            <li>The property 'display' set to 'table-row-group' behaves in layout as a table row group.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-009-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-009.xht">display-009</a></strong></td>
        <td><a href="reference/display-008-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table-header-group'
          <ul class="assert">
            <li>The property 'display' set to 'table-header-group' behaves in layout as a table header group.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-010-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-010.xht">display-010</a></strong></td>
        <td><a href="reference/display-010-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table-footer-group'
          <ul class="assert">
            <li>The property 'display' set to 'table-footer-group' behaves in layout as a table footer group.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-011-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-011.xht">display-011</a></strong></td>
        <td><a href="reference/display-002-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table-row'
          <ul class="assert">
            <li>The property 'display' set to 'table-row' behaves in layout as a table row.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-012-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-012.xht">display-012</a></strong></td>
        <td><a href="reference/display-012-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table-column-group'
          <ul class="assert">
            <li>The property 'display' set to 'table-column-group' behaves in layout as a table column group.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-013-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-013.xht">display-013</a></strong></td>
        <td><a href="reference/display-012-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table-column'
          <ul class="assert">
            <li>The property 'display' set to 'table-column' behaves in layout as a table column.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-014-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-014.xht">display-014</a></strong></td>
        <td><a href="reference/display-001-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table-cell'
          <ul class="assert">
            <li>The property 'display' set to 'table-cell' behaves in layout as a table cell.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-015-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-015.xht">display-015</a></strong></td>
        <td><a href="reference/display-002-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'table-caption'
          <ul class="assert">
            <li>The property 'display' set to 'table-caption' behaves in layout as a table caption.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-016-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-016.xht">display-016</a></strong></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Display set to 'none'
          <ul class="assert">
            <li>The property 'display' set to 'none' has no layout.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-017-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-017.xht">display-017</a></strong></td>
        <td><a href="reference/display-002-ref.xht">=</a> </td>
        <td></td>
        <td>Display set to 'inherit'
          <ul class="assert">
            <li>The property 'display' set to 'inherit' can inherit its layout behavior from a parent container.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-applies-to-001-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-applies-to-001.xht">display-applies-to-001</a></strong></td>
        <td></td>
        <td></td>
        <td>Applying the property 'display' set to 'inline' to the 'a' element
          <ul class="assert">
            <li>Display set to 'inline' applies the correct rendering behavior for the 'a' element.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-applies-to-002-9.2.4.#propdef-display" class="primary">
        <td><strong>
            <a href="display-applies-to-002.xht">display-applies-to-002</a></strong></td>
        <td></td>
        <td></td>
        <td>Applying the property 'display' set to 'inline' to the 'abbr' element
          <ul class="assert">
            <li>Display set to 'inline' applies the correct rendering behavior for the 'abbr' element.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-006-9.2.4.#propdef-display" class="primary ahem">
        <td><strong>
            <a href="run-in-006.xht">run-in-006</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in with a table box
          <ul class="assert">
            <li>Run-in boxes are converted to block boxes when the run-in box runs into a table box.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-007-9.2.4.#propdef-display" class="primary ahem">
        <td><strong>
            <a href="run-in-007.xht">run-in-007</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in with a inline-table box
          <ul class="assert">
            <li>Run-in boxes are converted to block boxes when the run-in box runs into an inline-table box.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-008-9.2.4.#propdef-display" class="primary ahem">
        <td><strong>
            <a href="run-in-008.xht">run-in-008</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in with a table-row-group box
          <ul class="assert">
            <li>Run-in boxes are converted to block boxes when the run-in box runs into a table-row-group box.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-009-9.2.4.#propdef-display" class="primary ahem">
        <td><strong>
            <a href="run-in-009.xht">run-in-009</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in with a table-row box
          <ul class="assert">
            <li>Run-in boxes are converted to block boxes when the run-in box runs into a table-row box.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-010-9.2.4.#propdef-display" class="primary ahem">
        <td><strong>
            <a href="run-in-010.xht">run-in-010</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in with a table-cell box
          <ul class="assert">
            <li>Run-in boxes are converted to block boxes when the run-in box runs into a table-cell box.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-011-9.2.4.#propdef-display" class="primary ahem">
        <td><strong>
            <a href="run-in-011.xht">run-in-011</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in with a table-caption box
          <ul class="assert">
            <li>Run-in boxes are converted to block boxes when the run-in box runs into a table-caption box.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-012-9.2.4.#propdef-display" class="primary ahem">
        <td><strong>
            <a href="run-in-012.xht">run-in-012</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in with a table-header-group box
          <ul class="assert">
            <li>Run-in boxes are converted to block boxes when the run-in box runs into a table-header-group box.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-013-9.2.4.#propdef-display" class="primary ahem">
        <td><strong>
            <a href="run-in-013.xht">run-in-013</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Run-in with a table-footer-group box
          <ul class="assert">
            <li>Run-in boxes are converted to block boxes when the run-in box runs into a table-footer-group box.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.2.4.#value-def-block">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.4.#value-def-inline">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.4.#value-def-inline-block">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.4.#value-def-list-item">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.2.4.#x21">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.3">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.3">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#positioning-scheme">9.3 Positioning schemes</a></th></tr>
      <!-- 4 tests -->
      <tr id="position-absolute-001-9.3" class="primary">
        <td><strong>
            <a href="position-absolute-001.xht">position-absolute-001</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Absolute positions impact on later siblings
          <ul class="assert">
            <li>Absolute positioned elements do not impact later siblings.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-nested-001-9.3" class="primary">
        <td><strong>
            <a href="position-relative-nested-001.xht">position-relative-nested-001</a></strong></td>
        <td><a href="reference/position-relative-nested-001-ref.xht">=</a> </td>
        <td></td>
        <td>Vertical centering with negative and positive top positioning
          <ul class="assert">
            <li>Equal 50% positive and negative positioning can vertically center objects.</li>
          </ul>
        </td>
      </tr>
      <tr id="positioning-float-001-9.3" class="primary">
        <td><strong>
            <a href="positioning-float-001.xht">positioning-float-001</a></strong></td>
        <td><a href="reference/positioning-float-001-ref.xht">=</a> </td>
        <td></td>
        <td>Positioning a left floated element
          <ul class="assert">
            <li>Floating a box will first lay out the box then shift it to the left.</li>
          </ul>
        </td>
      </tr>
      <tr id="positioning-float-002-9.3" class="primary">
        <td><strong>
            <a href="positioning-float-002.xht">positioning-float-002</a></strong></td>
        <td><a href="reference/positioning-float-002-ref.xht">=</a> </td>
        <td></td>
        <td>Positioning a right floated element
          <ul class="assert">
            <li>Floating a box will first lay out the box then shift it to the right.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.3.#x22">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.3.#x23">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.3.#x24">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.3.#x25">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.3.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.3.1">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#choose-position">9.3.1 Choosing a positioning scheme: 'position' property</a></th></tr>
      <!-- 31 tests -->
      <tr id="abspos-zero-width-001-9.3.1" class="image">
        <td>
            <a href="abspos-zero-width-001.xht">abspos-zero-width-001</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolute positioned elements still affect scrolling mechanism
          <ul class="assert">
            <li>Zero width absolute positioned elements still affects scrolling mechanism even though they are out of flow of the content.</li>
          </ul>
        </td>
      </tr>
      <tr id="page-container-003-9.3.1" class="paged">
        <td>
            <a href="page-container-003.xht">page-container-003</a></td>
        <td></td>
        <td><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>paged media position fixed
          <ul class="assert">
            <li>Elements with 'position: fixed' are positioned relative to the page area and are rendered on every page of the printed document.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-001-9.3.1" class="">
        <td>
            <a href="position-001.xht">position-001</a></td>
        <td></td>
        <td></td>
        <td>Position set to 'static'
          <ul class="assert">
            <li>The 'position' property applies the value 'static' and places the element in normal document flow.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-002-9.3.1" class="">
        <td>
            <a href="position-002.xht">position-002</a></td>
        <td></td>
        <td></td>
        <td>Position set to 'relative'
          <ul class="assert">
            <li>The 'position' property applies the value 'relative' and places the element in normal document flow.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-003-9.3.1" class="">
        <td>
            <a href="position-003.xht">position-003</a></td>
        <td></td>
        <td></td>
        <td>Position set to 'absolute'
          <ul class="assert">
            <li>The 'position' property applies the value 'absolute' and places the element out of flow of the document.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-004-9.3.1" class="interact">
        <td>
            <a href="position-004.xht">position-004</a></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Position set to 'fixed'
          <ul class="assert">
            <li>The 'position' property applies the value 'fixed' and places the element out of flow of the document and locks it to a specific point on the viewport.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-005-9.3.1" class="">
        <td>
            <a href="position-005.xht">position-005</a></td>
        <td></td>
        <td></td>
        <td>Position set to 'inherit'
          <ul class="assert">
            <li>The 'position' property applies the value 'inherit' and inherits the 'position' value from its parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-absolute-002-9.3.1" class="">
        <td>
            <a href="position-absolute-002.xht">position-absolute-002</a></td>
        <td><a href="reference/position-absolute-002-ref.xht">=</a> </td>
        <td></td>
        <td>Position absolute size and positioning
          <ul class="assert">
            <li>Absolutely positioned elements can be sized and positioned using 'top', 'right', 'bottom' and 'left' properties.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-001-9.3.1" class="">
        <td>
            <a href="position-applies-to-001.xht">position-applies-to-001</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-002-9.3.1" class="">
        <td>
            <a href="position-applies-to-002.xht">position-applies-to-002</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-003-9.3.1" class="">
        <td>
            <a href="position-applies-to-003.xht">position-applies-to-003</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-004-9.3.1" class="">
        <td>
            <a href="position-applies-to-004.xht">position-applies-to-004</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-005-9.3.1" class="">
        <td>
            <a href="position-applies-to-005.xht">position-applies-to-005</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-006-9.3.1" class="">
        <td>
            <a href="position-applies-to-006.xht">position-applies-to-006</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-007-9.3.1" class="">
        <td>
            <a href="position-applies-to-007.xht">position-applies-to-007</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-008-9.3.1" class="">
        <td>
            <a href="position-applies-to-008.xht">position-applies-to-008</a></td>
        <td></td>
        <td></td>
        <td>Position applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-009-9.3.1" class="">
        <td>
            <a href="position-applies-to-009.xht">position-applies-to-009</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-010-9.3.1" class="">
        <td>
            <a href="position-applies-to-010.xht">position-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Position applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-011-9.3.1" class="">
        <td>
            <a href="position-applies-to-011.xht">position-applies-to-011</a></td>
        <td></td>
        <td></td>
        <td>Position applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-012-9.3.1" class="">
        <td>
            <a href="position-applies-to-012.xht">position-applies-to-012</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-013-9.3.1" class="">
        <td>
            <a href="position-applies-to-013.xht">position-applies-to-013</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-014-9.3.1" class="">
        <td>
            <a href="position-applies-to-014.xht">position-applies-to-014</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-015-9.3.1" class="">
        <td>
            <a href="position-applies-to-015.xht">position-applies-to-015</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-fixed-001-9.3.1" class="">
        <td>
            <a href="position-fixed-001.xht">position-fixed-001</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Fixed position elements impact on later siblings
          <ul class="assert">
            <li>Fixed positioned elements do not impact later siblings.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-fixed-002-9.3.1" class="">
        <td>
            <a href="position-fixed-002.xht">position-fixed-002</a></td>
        <td></td>
        <td></td>
        <td>Position fixed size and positioning
          <ul class="assert">
            <li>Fixed positioned elements can be sized and positioned using 'top', 'right', 'bottom' and 'left' properties.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-fixed-003-9.3.1" class="interact">
        <td>
            <a href="position-fixed-003.xht">position-fixed-003</a></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Position fixed on different media types
          <ul class="assert">
            <li>Elements that are set to 'position: fixed' are fixed with respect to the viewport.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-fixed-004-9.3.1" class="paged">
        <td>
            <a href="position-fixed-004.xht">position-fixed-004</a></td>
        <td></td>
        <td><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>Position fixed and print media
          <ul class="assert">
            <li>Fixed position elements are positioned with respect to the page box when printed.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-fixed-005-9.3.1" class="paged">
        <td>
            <a href="position-fixed-005.xht">position-fixed-005</a></td>
        <td></td>
        <td><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>Pagination of fixed positioned elements
          <ul class="assert">
            <li>Fixed position elements cannot be paginated.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-fixed-006-9.3.1" class="dom may">
        <td>
            <a href="position-fixed-006.xht">position-fixed-006</a></td>
        <td></td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Non-static position on the root element
          <ul class="assert">
            <li>Root elements may treat non-static positions as 'static'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-001-9.3.1" class="">
        <td>
            <a href="position-relative-001.xht">position-relative-001</a></td>
        <td><a href="reference/position-relative-001-ref.xht">=</a> </td>
        <td></td>
        <td>Relative positioning and normal flow
          <ul class="assert">
            <li>Relatively positioned elements lay out in normal flow.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-static-001-9.3.1" class="">
        <td>
            <a href="position-static-001.xht">position-static-001</a></td>
        <td><a href="reference/position-static-001-ref.xht">=</a> </td>
        <td></td>
        <td>Content laid out in normal flow when 'position' is set to 'static'
          <ul class="assert">
            <li>Static positioned elements are not affected by top, right, bottom, left property settings.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.3.1.#propdef-position">
      <!-- 36 tests -->
      <tr id="dynamic-top-change-001-9.3.1.#propdef-position" class="dom">
        <td>
            <a href="dynamic-top-change-001.xht">dynamic-top-change-001</a></td>
        <td><a href="reference/dynamic-top-change-001-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Inheriting 'top' changes from relpos grandparent
          <ul class="assert">
            <li>The position of a positioned element which inherits its 'top' value from its relatively positioned grandparent changes when the grandparent's 'top' value is changed.</li>
          </ul>
        </td>
      </tr>
      <tr id="dynamic-top-change-002-9.3.1.#propdef-position" class="dom">
        <td>
            <a href="dynamic-top-change-002.xht">dynamic-top-change-002</a></td>
        <td><a href="reference/dynamic-top-change-002-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Inheriting 'top' changes from parent table-row through anonymous table boxes
          <ul class="assert">
            <li>The position of a positioned element which inherits its 'top' value from its parent changes when the parent's 'top' value is changed even if the parent is display:table-row.</li>
          </ul>
        </td>
      </tr>
      <tr id="dynamic-top-change-003-9.3.1.#propdef-position" class="dom">
        <td>
            <a href="dynamic-top-change-003.xht">dynamic-top-change-003</a></td>
        <td><a href="reference/dynamic-top-change-002-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Inheriting 'top' changes from parent table through anonymous table boxes
          <ul class="assert">
            <li>The position of a positioned element which inherits its 'top' value from its parent changes when the parent's 'top' value is changed even if the parent is display:table.</li>
          </ul>
        </td>
      </tr>
      <tr id="dynamic-top-change-004-9.3.1.#propdef-position" class="dom">
        <td>
            <a href="dynamic-top-change-004.xht">dynamic-top-change-004</a></td>
        <td><a href="reference/dynamic-top-change-002-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Inheriting 'top' changes from abspos parent
          <ul class="assert">
            <li>The position of a positioned element which inherits its 'top' value from its parent changes when the parent's 'top' value is changed.</li>
          </ul>
        </td>
      </tr>
      <tr id="dynamic-top-change-005-9.3.1.#propdef-position" class="combo dom">
        <td>
            <a href="dynamic-top-change-005.xht">dynamic-top-change-005</a></td>
        <td></td>
        <td><abbr class="combo" title="Combination of child tests">Combo</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Inheriting 'top' changes from abspos grandparent
          <ul class="assert">
            <li>The position of a positioned element which inherits its 'top' value from its relatively positioned parent changes when the parent's 'top' value is changed.</li>
          </ul>
        </td>
      </tr>
      <tr id="dynamic-top-change-005a-9.3.1.#propdef-position" class="dom">
        <td>
            <a href="dynamic-top-change-005a.xht">dynamic-top-change-005a</a></td>
        <td></td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Inheriting 'top' changes from abspos grandparent (variant: block parent)
          <ul class="assert">
            <li>The position of a positioned element which inherits its 'top' value from its relatively positioned parent changes when the parent's 'top' value is changed.</li>
          </ul>
        </td>
      </tr>
      <tr id="dynamic-top-change-005b-9.3.1.#propdef-position" class="dom">
        <td>
            <a href="dynamic-top-change-005b.xht">dynamic-top-change-005b</a></td>
        <td></td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Inheriting 'top' changes from abspos grandparent (non-dynamic variant)
          <ul class="assert">
            <li>The position of a positioned element which inherits its 'top' value from its relatively positioned parent changes when the parent's 'top' value is changed.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-001-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-001.xht">position-001</a></strong></td>
        <td></td>
        <td></td>
        <td>Position set to 'static'
          <ul class="assert">
            <li>The 'position' property applies the value 'static' and places the element in normal document flow.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-002-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-002.xht">position-002</a></strong></td>
        <td></td>
        <td></td>
        <td>Position set to 'relative'
          <ul class="assert">
            <li>The 'position' property applies the value 'relative' and places the element in normal document flow.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-003-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-003.xht">position-003</a></strong></td>
        <td></td>
        <td></td>
        <td>Position set to 'absolute'
          <ul class="assert">
            <li>The 'position' property applies the value 'absolute' and places the element out of flow of the document.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-004-9.3.1.#propdef-position" class="primary interact">
        <td><strong>
            <a href="position-004.xht">position-004</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Position set to 'fixed'
          <ul class="assert">
            <li>The 'position' property applies the value 'fixed' and places the element out of flow of the document and locks it to a specific point on the viewport.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-005-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-005.xht">position-005</a></strong></td>
        <td></td>
        <td></td>
        <td>Position set to 'inherit'
          <ul class="assert">
            <li>The 'position' property applies the value 'inherit' and inherits the 'position' value from its parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-absolute-002-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-absolute-002.xht">position-absolute-002</a></strong></td>
        <td><a href="reference/position-absolute-002-ref.xht">=</a> </td>
        <td></td>
        <td>Position absolute size and positioning
          <ul class="assert">
            <li>Absolutely positioned elements can be sized and positioned using 'top', 'right', 'bottom' and 'left' properties.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-001-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-applies-to-001.xht">position-applies-to-001</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-002-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-applies-to-002.xht">position-applies-to-002</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-003-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-applies-to-003.xht">position-applies-to-003</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-004-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-applies-to-004.xht">position-applies-to-004</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-005-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-applies-to-005.xht">position-applies-to-005</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-006-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-applies-to-006.xht">position-applies-to-006</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-007-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-applies-to-007.xht">position-applies-to-007</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-008-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-applies-to-008.xht">position-applies-to-008</a></strong></td>
        <td></td>
        <td></td>
        <td>Position applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-009-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-applies-to-009.xht">position-applies-to-009</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-010-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-applies-to-010.xht">position-applies-to-010</a></strong></td>
        <td></td>
        <td></td>
        <td>Position applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-011-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-applies-to-011.xht">position-applies-to-011</a></strong></td>
        <td></td>
        <td></td>
        <td>Position applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-012-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-applies-to-012.xht">position-applies-to-012</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-013-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-applies-to-013.xht">position-applies-to-013</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-014-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-applies-to-014.xht">position-applies-to-014</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-015-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-applies-to-015.xht">position-applies-to-015</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-fixed-001-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-fixed-001.xht">position-fixed-001</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Fixed position elements impact on later siblings
          <ul class="assert">
            <li>Fixed positioned elements do not impact later siblings.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-fixed-002-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-fixed-002.xht">position-fixed-002</a></strong></td>
        <td></td>
        <td></td>
        <td>Position fixed size and positioning
          <ul class="assert">
            <li>Fixed positioned elements can be sized and positioned using 'top', 'right', 'bottom' and 'left' properties.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-fixed-003-9.3.1.#propdef-position" class="primary interact">
        <td><strong>
            <a href="position-fixed-003.xht">position-fixed-003</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Position fixed on different media types
          <ul class="assert">
            <li>Elements that are set to 'position: fixed' are fixed with respect to the viewport.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-fixed-004-9.3.1.#propdef-position" class="primary paged">
        <td><strong>
            <a href="position-fixed-004.xht">position-fixed-004</a></strong></td>
        <td></td>
        <td><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>Position fixed and print media
          <ul class="assert">
            <li>Fixed position elements are positioned with respect to the page box when printed.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-fixed-005-9.3.1.#propdef-position" class="primary paged">
        <td><strong>
            <a href="position-fixed-005.xht">position-fixed-005</a></strong></td>
        <td></td>
        <td><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>Pagination of fixed positioned elements
          <ul class="assert">
            <li>Fixed position elements cannot be paginated.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-fixed-006-9.3.1.#propdef-position" class="primary dom may">
        <td><strong>
            <a href="position-fixed-006.xht">position-fixed-006</a></strong></td>
        <td></td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Non-static position on the root element
          <ul class="assert">
            <li>Root elements may treat non-static positions as 'static'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-001-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-relative-001.xht">position-relative-001</a></strong></td>
        <td><a href="reference/position-relative-001-ref.xht">=</a> </td>
        <td></td>
        <td>Relative positioning and normal flow
          <ul class="assert">
            <li>Relatively positioned elements lay out in normal flow.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-static-001-9.3.1.#propdef-position" class="primary">
        <td><strong>
            <a href="position-static-001.xht">position-static-001</a></strong></td>
        <td><a href="reference/position-static-001-ref.xht">=</a> </td>
        <td></td>
        <td>Content laid out in normal flow when 'position' is set to 'static'
          <ul class="assert">
            <li>Static positioned elements are not affected by top, right, bottom, left property settings.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.3.2">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.3.2">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#position-props">9.3.2 Box offsets: 'top', 'right', 'bottom', 'left'</a></th></tr>
      <!-- 300 tests -->
      <tr id="background-position-152-9.3.2" class="image">
        <td>
            <a href="background-position-152.xht">background-position-152</a></td>
        <td><a href="reference/background-position-152-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>background-position - percentage values versus left offset and top offset percentages
          <ul class="assert">
            <li>The 'background-position' property, when expressed in percentage values will position the inner point (relative to percentage values) of the background-image itself within the padding box of the element. On the other hand, the 'left' property and 'top' property, for absolute positioning, specifies the left offset and the top of the element applied to its left edge (and not its inner horizontal point) and to its top edge (and not its inner vertical point) within the padding box of its nearest positioned ancestor.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-004-9.3.2" class="">
        <td>
            <a href="bottom-004.xht">bottom-004</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using pixels with a value of negative zero, -0px
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-005-9.3.2" class="">
        <td>
            <a href="bottom-005.xht">bottom-005</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using pixels with a value of zero, 0px
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-006-9.3.2" class="">
        <td>
            <a href="bottom-006.xht">bottom-006</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using pixels with a value of positive zero, +0px
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-007-9.3.2" class="">
        <td>
            <a href="bottom-007.xht">bottom-007</a></td>
        <td><a href="reference/bottom-007-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-008-9.3.2" class="">
        <td>
            <a href="bottom-008.xht">bottom-008</a></td>
        <td><a href="reference/bottom-007-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-016-9.3.2" class="">
        <td>
            <a href="bottom-016.xht">bottom-016</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using points with a value of negative zero, -0pt
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-017-9.3.2" class="">
        <td>
            <a href="bottom-017.xht">bottom-017</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using points with a value of zero, 0pt
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-018-9.3.2" class="">
        <td>
            <a href="bottom-018.xht">bottom-018</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using points with a value of positive zero, +0pt
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-019-9.3.2" class="">
        <td>
            <a href="bottom-019.xht">bottom-019</a></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-020-9.3.2" class="">
        <td>
            <a href="bottom-020.xht">bottom-020</a></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-028-9.3.2" class="">
        <td>
            <a href="bottom-028.xht">bottom-028</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using picas with a value of negative zero, -0pc
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-029-9.3.2" class="">
        <td>
            <a href="bottom-029.xht">bottom-029</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using picas with a value of zero, 0pc
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-030-9.3.2" class="">
        <td>
            <a href="bottom-030.xht">bottom-030</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using picas with a value of positive zero, +0pc
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-031-9.3.2" class="">
        <td>
            <a href="bottom-031.xht">bottom-031</a></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-032-9.3.2" class="">
        <td>
            <a href="bottom-032.xht">bottom-032</a></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-040-9.3.2" class="">
        <td>
            <a href="bottom-040.xht">bottom-040</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using centimeters with a value of negative zero, -0cm
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-041-9.3.2" class="">
        <td>
            <a href="bottom-041.xht">bottom-041</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using centimeters with a value of zero, 0cm
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-042-9.3.2" class="">
        <td>
            <a href="bottom-042.xht">bottom-042</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using centimeters with a value of positive zero, +0cm
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-043-9.3.2" class="">
        <td>
            <a href="bottom-043.xht">bottom-043</a></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-044-9.3.2" class="">
        <td>
            <a href="bottom-044.xht">bottom-044</a></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-052-9.3.2" class="">
        <td>
            <a href="bottom-052.xht">bottom-052</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using millimeters with a value of negative zero, -0mm
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-053-9.3.2" class="">
        <td>
            <a href="bottom-053.xht">bottom-053</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using millimeters with a value of zero, 0mm
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-054-9.3.2" class="">
        <td>
            <a href="bottom-054.xht">bottom-054</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using millimeters with a value of positive zero, +0mm
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-055-9.3.2" class="">
        <td>
            <a href="bottom-055.xht">bottom-055</a></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-056-9.3.2" class="">
        <td>
            <a href="bottom-056.xht">bottom-056</a></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-064-9.3.2" class="">
        <td>
            <a href="bottom-064.xht">bottom-064</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using inches with a value of negative zero, -0in
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-065-9.3.2" class="">
        <td>
            <a href="bottom-065.xht">bottom-065</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using inches with a value of zero, 0in
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-066-9.3.2" class="">
        <td>
            <a href="bottom-066.xht">bottom-066</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using inches with a value of positive zero, +0in
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-067-9.3.2" class="">
        <td>
            <a href="bottom-067.xht">bottom-067</a></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using inches with a nominal value, 1in
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-068-9.3.2" class="">
        <td>
            <a href="bottom-068.xht">bottom-068</a></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using inches with a positive nominal value, +1in
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-076-9.3.2" class="ahem">
        <td>
            <a href="bottom-076.xht">bottom-076</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'em' units with a value of negative zero, -0em
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-077-9.3.2" class="ahem">
        <td>
            <a href="bottom-077.xht">bottom-077</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'em' units with a value of zero, 0em
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-078-9.3.2" class="ahem">
        <td>
            <a href="bottom-078.xht">bottom-078</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'em' units with a value of positive zero, +0em
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-079-9.3.2" class="ahem">
        <td>
            <a href="bottom-079.xht">bottom-079</a></td>
        <td><a href="reference/bottom-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-080-9.3.2" class="ahem">
        <td>
            <a href="bottom-080.xht">bottom-080</a></td>
        <td><a href="reference/bottom-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-088-9.3.2" class="ahem">
        <td>
            <a href="bottom-088.xht">bottom-088</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'ex' units with a value of negative zero, -0ex
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-089-9.3.2" class="ahem">
        <td>
            <a href="bottom-089.xht">bottom-089</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'ex' units with a value of zero, 0ex
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-090-9.3.2" class="ahem">
        <td>
            <a href="bottom-090.xht">bottom-090</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'ex' units with a value of positive zero, +0ex
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-091-9.3.2" class="ahem">
        <td>
            <a href="bottom-091.xht">bottom-091</a></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-092-9.3.2" class="ahem">
        <td>
            <a href="bottom-092.xht">bottom-092</a></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-100-9.3.2" class="">
        <td>
            <a href="bottom-100.xht">bottom-100</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using percentages with a value of negative zero, -0%
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-101-9.3.2" class="">
        <td>
            <a href="bottom-101.xht">bottom-101</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using percentages with a value of zero, 0%
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-102-9.3.2" class="">
        <td>
            <a href="bottom-102.xht">bottom-102</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using percentages with a value of positive zero, +0%
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-103-9.3.2" class="">
        <td>
            <a href="bottom-103.xht">bottom-103</a></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-104-9.3.2" class="">
        <td>
            <a href="bottom-104.xht">bottom-104</a></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-109-9.3.2" class="">
        <td>
            <a href="bottom-109.xht">bottom-109</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom with a value of negative zero and no units, -0
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-110-9.3.2" class="">
        <td>
            <a href="bottom-110.xht">bottom-110</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom with a value of zero and no units, 0
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-111-9.3.2" class="">
        <td>
            <a href="bottom-111.xht">bottom-111</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom with a value of positive zero and no units, +0
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-112-9.3.2" class="">
        <td>
            <a href="bottom-112.xht">bottom-112</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom with a value of 'auto'
          <ul class="assert">
            <li>The 'bottom' property sets a value of 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-113-9.3.2" class="">
        <td>
            <a href="bottom-113.xht">bottom-113</a></td>
        <td><a href="reference/bottom-113-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom with a value of 'inherit'
          <ul class="assert">
            <li>The 'bottom' property sets a value of 'inherit', inheriting the computed value from the parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-001-9.3.2" class="">
        <td>
            <a href="bottom-applies-to-001.xht">bottom-applies-to-001</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-002-9.3.2" class="">
        <td>
            <a href="bottom-applies-to-002.xht">bottom-applies-to-002</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-003-9.3.2" class="">
        <td>
            <a href="bottom-applies-to-003.xht">bottom-applies-to-003</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-004-9.3.2" class="">
        <td>
            <a href="bottom-applies-to-004.xht">bottom-applies-to-004</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-005-9.3.2" class="">
        <td>
            <a href="bottom-applies-to-005.xht">bottom-applies-to-005</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-006-9.3.2" class="">
        <td>
            <a href="bottom-applies-to-006.xht">bottom-applies-to-006</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-007-9.3.2" class="">
        <td>
            <a href="bottom-applies-to-007.xht">bottom-applies-to-007</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-008-9.3.2" class="">
        <td>
            <a href="bottom-applies-to-008.xht">bottom-applies-to-008</a></td>
        <td></td>
        <td></td>
        <td>Bottom applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-009-9.3.2" class="">
        <td>
            <a href="bottom-applies-to-009.xht">bottom-applies-to-009</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-010-9.3.2" class="">
        <td>
            <a href="bottom-applies-to-010.xht">bottom-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Bottom applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-011-9.3.2" class="">
        <td>
            <a href="bottom-applies-to-011.xht">bottom-applies-to-011</a></td>
        <td></td>
        <td></td>
        <td>Bottom applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-012-9.3.2" class="">
        <td>
            <a href="bottom-applies-to-012.xht">bottom-applies-to-012</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-013-9.3.2" class="">
        <td>
            <a href="bottom-applies-to-013.xht">bottom-applies-to-013</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-014-9.3.2" class="">
        <td>
            <a href="bottom-applies-to-014.xht">bottom-applies-to-014</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-015-9.3.2" class="">
        <td>
            <a href="bottom-applies-to-015.xht">bottom-applies-to-015</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-offset-001-9.3.2" class="">
        <td>
            <a href="bottom-offset-001.xht">bottom-offset-001</a></td>
        <td><a href="reference/bottom-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>'bottom' offset - offset from the bottom edge of the containing block (abs. pos.)
          <ul class="assert">
            <li>The 'bottom' property, for absolute positioning, specifies the offset of the element in relation to the containing block's bottom edge. The containing block of an absolutely positioned element is formed by the padding box of its nearest (closest) positioned non-inline ancestor element.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-offset-002-9.3.2" class="">
        <td>
            <a href="bottom-offset-002.xht">bottom-offset-002</a></td>
        <td><a href="reference/bottom-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>'bottom' offset - absolute length value and relative positioning
          <ul class="assert">
            <li>The 'bottom' property, when using an absolute length value (not percentage) for relative positioning, specifies the offset of the box itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-offset-003-9.3.2" class="">
        <td>
            <a href="bottom-offset-003.xht">bottom-offset-003</a></td>
        <td><a href="reference/bottom-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>'bottom' offset - offset from the bottom edge of the containing block (abs. pos.)
          <ul class="assert">
            <li>The 'bottom' property, for absolute positioning, specifies the offset of the element in relation to the containing block's bottom edge. The containing block of an absolutely positioned element is formed by the padding box of its nearest (closest) positioned non-inline ancestor element.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-offset-percentage-001-9.3.2" class="">
        <td>
            <a href="bottom-offset-percentage-001.xht">bottom-offset-percentage-001</a></td>
        <td><a href="reference/bottom-offset-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom offset using percentage
          <ul class="assert">
            <li>Percentage offset values for the 'bottom' property are based off the height of the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-offsets-abs-pos-001-9.3.2" class="primary image">
        <td><strong>
            <a href="box-offsets-abs-pos-001.xht">box-offsets-abs-pos-001</a></strong></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>box offsets - containing block for absolute positioned boxes
          <ul class="assert">
            <li>Box offsets (bottom, left, right, top) for an absolutely positioned box refers to the padding box of its nearest positioned ancestor; such padding box forms and acts as the containing block of the absolutely positioned box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-offsets-rel-pos-001-9.3.2" class="primary image">
        <td><strong>
            <a href="box-offsets-rel-pos-001.xht">box-offsets-rel-pos-001</a></strong></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>box offsets - relatively positioned boxes
          <ul class="assert">
            <li>Box offsets (bottom, left, right, top) expressed in absolute units (not with percentage unit) for relatively positioned boxes are with respect to the edges of the boxes themselves.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-offsets-rel-pos-002-9.3.2" class="primary image">
        <td><strong>
            <a href="box-offsets-rel-pos-002.xht">box-offsets-rel-pos-002</a></strong></td>
        <td><a href="reference/box-offsets-rel-pos-002-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>box offsets - position relative
          <ul class="assert">
            <li>The 'top', 'right', 'bottom', 'left' property, for relative positioning, specify the offset of the box itself from its normal in-flow position, from the position it would have had if it had been static.</li>
          </ul>
        </td>
      </tr>
      <tr id="dynamic-top-change-001-9.3.2" class="dom">
        <td>
            <a href="dynamic-top-change-001.xht">dynamic-top-change-001</a></td>
        <td><a href="reference/dynamic-top-change-001-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Inheriting 'top' changes from relpos grandparent
          <ul class="assert">
            <li>The position of a positioned element which inherits its 'top' value from its relatively positioned grandparent changes when the grandparent's 'top' value is changed.</li>
          </ul>
        </td>
      </tr>
      <tr id="dynamic-top-change-002-9.3.2" class="dom">
        <td>
            <a href="dynamic-top-change-002.xht">dynamic-top-change-002</a></td>
        <td><a href="reference/dynamic-top-change-002-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Inheriting 'top' changes from parent table-row through anonymous table boxes
          <ul class="assert">
            <li>The position of a positioned element which inherits its 'top' value from its parent changes when the parent's 'top' value is changed even if the parent is display:table-row.</li>
          </ul>
        </td>
      </tr>
      <tr id="dynamic-top-change-003-9.3.2" class="dom">
        <td>
            <a href="dynamic-top-change-003.xht">dynamic-top-change-003</a></td>
        <td><a href="reference/dynamic-top-change-002-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Inheriting 'top' changes from parent table through anonymous table boxes
          <ul class="assert">
            <li>The position of a positioned element which inherits its 'top' value from its parent changes when the parent's 'top' value is changed even if the parent is display:table.</li>
          </ul>
        </td>
      </tr>
      <tr id="dynamic-top-change-004-9.3.2" class="dom">
        <td>
            <a href="dynamic-top-change-004.xht">dynamic-top-change-004</a></td>
        <td><a href="reference/dynamic-top-change-002-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Inheriting 'top' changes from abspos parent
          <ul class="assert">
            <li>The position of a positioned element which inherits its 'top' value from its parent changes when the parent's 'top' value is changed.</li>
          </ul>
        </td>
      </tr>
      <tr id="dynamic-top-change-005-9.3.2" class="combo dom">
        <td>
            <a href="dynamic-top-change-005.xht">dynamic-top-change-005</a></td>
        <td></td>
        <td><abbr class="combo" title="Combination of child tests">Combo</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Inheriting 'top' changes from abspos grandparent
          <ul class="assert">
            <li>The position of a positioned element which inherits its 'top' value from its relatively positioned parent changes when the parent's 'top' value is changed.</li>
          </ul>
        </td>
      </tr>
      <tr id="dynamic-top-change-005a-9.3.2" class="dom">
        <td>
            <a href="dynamic-top-change-005a.xht">dynamic-top-change-005a</a></td>
        <td></td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Inheriting 'top' changes from abspos grandparent (variant: block parent)
          <ul class="assert">
            <li>The position of a positioned element which inherits its 'top' value from its relatively positioned parent changes when the parent's 'top' value is changed.</li>
          </ul>
        </td>
      </tr>
      <tr id="dynamic-top-change-005b-9.3.2" class="dom">
        <td>
            <a href="dynamic-top-change-005b.xht">dynamic-top-change-005b</a></td>
        <td></td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Inheriting 'top' changes from abspos grandparent (non-dynamic variant)
          <ul class="assert">
            <li>The position of a positioned element which inherits its 'top' value from its relatively positioned parent changes when the parent's 'top' value is changed.</li>
          </ul>
        </td>
      </tr>
      <tr id="inherit-static-offset-001-9.3.2" class="primary image">
        <td><strong>
            <a href="inherit-static-offset-001.xht">inherit-static-offset-001</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>top and left - inherit keyword on element with statically positioned parent
          <ul class="assert">
            <li>When using the 'inherit' reserved keyword value, the property takes the same specified value as the property for the element's parent, even in cases where such property does not apply. This test covers the case where the parent has absolute value lengths for left and top.</li>
          </ul>
        </td>
      </tr>
      <tr id="inherit-static-offset-002-9.3.2" class="primary image">
        <td><strong>
            <a href="inherit-static-offset-002.xht">inherit-static-offset-002</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>top and left - inherit keyword on element with statically positioned parent
          <ul class="assert">
            <li>When using the 'inherit' reserved keyword value, the property takes the same specified value as the property for the element's parent, even in cases where such property does not apply. This test covers the case where the parent has percentage value lengths for left and top. Box offset specified as a percentage refer to the height (for top and bottom) or to the width (for left and right) of its containing block. If an element's position is 'relative', then its containing block is formed by the content edge of the nearest block container ancestor box.</li>
          </ul>
        </td>
      </tr>
      <tr id="inherit-static-offset-003-9.3.2" class="primary image">
        <td><strong>
            <a href="inherit-static-offset-003.xht">inherit-static-offset-003</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>top and left - inherit keyword on element with statically positioned parent
          <ul class="assert">
            <li>When using the 'inherit' reserved keyword value, the property takes the same specified value as the property for the element's parent, even in cases where such property does not apply. This test covers the case where the parent has relative value lengths for left and top.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-004-9.3.2" class="">
        <td>
            <a href="left-004.xht">left-004</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using pixels with a value of negative zero, -0px
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-005-9.3.2" class="">
        <td>
            <a href="left-005.xht">left-005</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using pixels with a value of zero, 0px
          <ul class="assert">
            <li>The 'left' property sets a zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-006-9.3.2" class="">
        <td>
            <a href="left-006.xht">left-006</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using pixels with a value of positive zero, +0px
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-007-9.3.2" class="">
        <td>
            <a href="left-007.xht">left-007</a></td>
        <td><a href="reference/left-007-ref.xht">=</a> </td>
        <td></td>
        <td>Left using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-008-9.3.2" class="">
        <td>
            <a href="left-008.xht">left-008</a></td>
        <td><a href="reference/left-007-ref.xht">=</a> </td>
        <td></td>
        <td>Left using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-016-9.3.2" class="">
        <td>
            <a href="left-016.xht">left-016</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using points with a value of negative zero, -0pt
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-017-9.3.2" class="">
        <td>
            <a href="left-017.xht">left-017</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using points with a value of zero, 0pt
          <ul class="assert">
            <li>The 'left' property sets a zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-018-9.3.2" class="">
        <td>
            <a href="left-018.xht">left-018</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using points with a value of positive zero, +0pt
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-019-9.3.2" class="">
        <td>
            <a href="left-019.xht">left-019</a></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-020-9.3.2" class="">
        <td>
            <a href="left-020.xht">left-020</a></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-028-9.3.2" class="">
        <td>
            <a href="left-028.xht">left-028</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using picas with a value of negative zero, -0pc
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-029-9.3.2" class="">
        <td>
            <a href="left-029.xht">left-029</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using picas with a value of zero, 0pc
          <ul class="assert">
            <li>The 'left' property sets a zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-030-9.3.2" class="">
        <td>
            <a href="left-030.xht">left-030</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using picas with a value of positive zero, +0pc
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-031-9.3.2" class="">
        <td>
            <a href="left-031.xht">left-031</a></td>
        <td><a href="reference/left-031-ref.xht">=</a> </td>
        <td></td>
        <td>Left using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-032-9.3.2" class="">
        <td>
            <a href="left-032.xht">left-032</a></td>
        <td><a href="reference/left-031-ref.xht">=</a> </td>
        <td></td>
        <td>Left using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-040-9.3.2" class="">
        <td>
            <a href="left-040.xht">left-040</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using centimeters with a value of negative zero, -0cm
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-041-9.3.2" class="">
        <td>
            <a href="left-041.xht">left-041</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using centimeters with a value of zero, 0cm
          <ul class="assert">
            <li>The 'left' property sets a zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-042-9.3.2" class="">
        <td>
            <a href="left-042.xht">left-042</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using centimeters with a value of positive zero, +0cm
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-043-9.3.2" class="">
        <td>
            <a href="left-043.xht">left-043</a></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-044-9.3.2" class="">
        <td>
            <a href="left-044.xht">left-044</a></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-052-9.3.2" class="">
        <td>
            <a href="left-052.xht">left-052</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using millimeters with a value of negative zero, -0mm
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-053-9.3.2" class="">
        <td>
            <a href="left-053.xht">left-053</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using millimeters with a value of zero, 0mm
          <ul class="assert">
            <li>The 'left' property sets a zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-054-9.3.2" class="">
        <td>
            <a href="left-054.xht">left-054</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using millimeters with a value of positive zero, +0mm
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-055-9.3.2" class="">
        <td>
            <a href="left-055.xht">left-055</a></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-056-9.3.2" class="">
        <td>
            <a href="left-056.xht">left-056</a></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-064-9.3.2" class="">
        <td>
            <a href="left-064.xht">left-064</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using inches with a value of negative zero, -0in
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-065-9.3.2" class="">
        <td>
            <a href="left-065.xht">left-065</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using inches with a value of zero, 0in
          <ul class="assert">
            <li>The 'left' property sets a zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-066-9.3.2" class="">
        <td>
            <a href="left-066.xht">left-066</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using inches with a value of positive zero, +0in
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-067-9.3.2" class="">
        <td>
            <a href="left-067.xht">left-067</a></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using inches with a nominal value, 1in
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-068-9.3.2" class="">
        <td>
            <a href="left-068.xht">left-068</a></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using inches with a positive nominal value, +1in
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-076-9.3.2" class="ahem">
        <td>
            <a href="left-076.xht">left-076</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'em' units with a value of negative zero, -0em
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-077-9.3.2" class="ahem">
        <td>
            <a href="left-077.xht">left-077</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'em' units with a value of zero, 0em
          <ul class="assert">
            <li>The 'left' property sets a zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-078-9.3.2" class="ahem">
        <td>
            <a href="left-078.xht">left-078</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'em' units with a value of positive zero, +0em
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-079-9.3.2" class="ahem">
        <td>
            <a href="left-079.xht">left-079</a></td>
        <td><a href="reference/left-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-080-9.3.2" class="ahem">
        <td>
            <a href="left-080.xht">left-080</a></td>
        <td><a href="reference/left-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-088-9.3.2" class="ahem">
        <td>
            <a href="left-088.xht">left-088</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'ex' units with a value of negative zero, -0ex
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-089-9.3.2" class="ahem">
        <td>
            <a href="left-089.xht">left-089</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'ex' units with a value of zero, 0ex
          <ul class="assert">
            <li>The 'left' property sets a zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-090-9.3.2" class="ahem">
        <td>
            <a href="left-090.xht">left-090</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'ex' units with a value of positive zero, +0ex
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-091-9.3.2" class="ahem">
        <td>
            <a href="left-091.xht">left-091</a></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-092-9.3.2" class="ahem">
        <td>
            <a href="left-092.xht">left-092</a></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-100-9.3.2" class="">
        <td>
            <a href="left-100.xht">left-100</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using percentages with a value of negative zero, -0%
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-101-9.3.2" class="">
        <td>
            <a href="left-101.xht">left-101</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using percentages with a value of zero, 0%
          <ul class="assert">
            <li>The 'left' property sets a zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-102-9.3.2" class="">
        <td>
            <a href="left-102.xht">left-102</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using percentages with a value of positive zero, +0%
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-103-9.3.2" class="">
        <td>
            <a href="left-103.xht">left-103</a></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-104-9.3.2" class="">
        <td>
            <a href="left-104.xht">left-104</a></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-109-9.3.2" class="">
        <td>
            <a href="left-109.xht">left-109</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left with a value of negative zero and no units, -0
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-110-9.3.2" class="">
        <td>
            <a href="left-110.xht">left-110</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left with a value of zero and no units, 0
          <ul class="assert">
            <li>The 'left' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-111-9.3.2" class="">
        <td>
            <a href="left-111.xht">left-111</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left with a value of positive zero and no units, +0
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-112-9.3.2" class="">
        <td>
            <a href="left-112.xht">left-112</a></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left with a value of 'auto'
          <ul class="assert">
            <li>The 'left' property sets a value of 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-113-9.3.2" class="">
        <td>
            <a href="left-113.xht">left-113</a></td>
        <td><a href="reference/left-113-ref.xht">=</a> </td>
        <td></td>
        <td>Left with a value of 'inherit'
          <ul class="assert">
            <li>The 'left' property sets a value of 'inherit'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-001-9.3.2" class="">
        <td>
            <a href="left-applies-to-001.xht">left-applies-to-001</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-002-9.3.2" class="">
        <td>
            <a href="left-applies-to-002.xht">left-applies-to-002</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-003-9.3.2" class="">
        <td>
            <a href="left-applies-to-003.xht">left-applies-to-003</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-004-9.3.2" class="">
        <td>
            <a href="left-applies-to-004.xht">left-applies-to-004</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-005-9.3.2" class="">
        <td>
            <a href="left-applies-to-005.xht">left-applies-to-005</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-006-9.3.2" class="">
        <td>
            <a href="left-applies-to-006.xht">left-applies-to-006</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-007-9.3.2" class="">
        <td>
            <a href="left-applies-to-007.xht">left-applies-to-007</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-008-9.3.2" class="ahem">
        <td>
            <a href="left-applies-to-008.xht">left-applies-to-008</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-009-9.3.2" class="">
        <td>
            <a href="left-applies-to-009.xht">left-applies-to-009</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-010-9.3.2" class="">
        <td>
            <a href="left-applies-to-010.xht">left-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Left applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-011-9.3.2" class="">
        <td>
            <a href="left-applies-to-011.xht">left-applies-to-011</a></td>
        <td></td>
        <td></td>
        <td>Left applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-012-9.3.2" class="">
        <td>
            <a href="left-applies-to-012.xht">left-applies-to-012</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-013-9.3.2" class="">
        <td>
            <a href="left-applies-to-013.xht">left-applies-to-013</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-014-9.3.2" class="">
        <td>
            <a href="left-applies-to-014.xht">left-applies-to-014</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-015-9.3.2" class="">
        <td>
            <a href="left-applies-to-015.xht">left-applies-to-015</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-offset-001-9.3.2" class="">
        <td>
            <a href="left-offset-001.xht">left-offset-001</a></td>
        <td><a href="reference/left-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>Absolute positioned elements with a left offset
          <ul class="assert">
            <li>Absolute positioned elements with a left offset, offsets the elements left margin edge from the left edge of the elements containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-offset-002-9.3.2" class="">
        <td>
            <a href="left-offset-002.xht">left-offset-002</a></td>
        <td><a href="reference/left-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position 'left' offset property - absolute length value and relative positioning
          <ul class="assert">
            <li>Relative positioned elements with a left offset, offsets with respect to the left edge of the box itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-offset-003-9.3.2" class="">
        <td>
            <a href="left-offset-003.xht">left-offset-003</a></td>
        <td><a href="reference/left-offset-003-ref.xht">=</a> </td>
        <td></td>
        <td>'left' property defines the offset from the left edge of the containing block
          <ul class="assert">
            <li>The 'left' property, for absolute positioning, specifies the offset of the element in relation to the containing block's left edge. In this test, the containing block of the absolutely positioned element is formed by the padding box of its nearest (closest) non-inline positioned ancestor element.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-offset-percentage-001-9.3.2" class="">
        <td>
            <a href="left-offset-percentage-001.xht">left-offset-percentage-001</a></td>
        <td><a href="reference/left-offset-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left offset using percentage
          <ul class="assert">
            <li>Percentage offset values for the 'left' property are based off the width of the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-offset-percentage-002-9.3.2" class="">
        <td>
            <a href="left-offset-percentage-002.xht">left-offset-percentage-002</a></td>
        <td><a href="reference/left-offset-percentage-002-ref.xht">=</a> </td>
        <td></td>
        <td>position absolute - left offset percentage and inherit
          <ul class="assert">
            <li>'left: inherit' makes the left property take the same computed value as the left property for the element's parent; in the case of a percentage value, the computed value is the specified percentage value. 'left: [percentage]' refers to width of containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-offset-position-fixed-001-9.3.2" class="primary">
        <td><strong>
            <a href="left-offset-position-fixed-001.xht">left-offset-position-fixed-001</a></strong></td>
        <td><a href="reference/left-offset-position-fixed-001-ref.xht">=</a> </td>
        <td></td>
        <td>left:auto offset of position:fixed box in a position:relative containing block
          <ul class="assert">
            <li>The 'left' box offset property, for fixed positioning, when set to 'auto' specifies the offset of the box from its 'static-position containing block'. Here, in this test, the 'static-position containing block' is #shifted-column and the containing block for #red is established by the viewport.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-offset-position-fixed-001-9.3.2" class="primary">
        <td><strong>
            <a href="left-offset-position-fixed-001.xht">left-offset-position-fixed-001</a></strong></td>
        <td><a href="reference/left-offset-position-fixed-001-ref.xht">=</a> </td>
        <td></td>
        <td>left:auto offset of position:fixed box in a position:relative containing block
          <ul class="assert">
            <li>The 'left' box offset property, for fixed positioning, when set to 'auto' specifies the offset of the box from its 'static-position containing block'. Here, in this test, the 'static-position containing block' is #shifted-column and the containing block for #red is established by the viewport.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-absolute-percentage-inherit-001-9.3.2" class="primary">
        <td><strong>
            <a href="position-absolute-percentage-inherit-001.xht">position-absolute-percentage-inherit-001</a></strong></td>
        <td><a href="reference/position-absolute-percentage-inherit-001-ref.xht">=</a> </td>
        <td></td>
        <td>position absolute - dimensions and position given by offset percentages and inherit
          <ul class="assert">
            <li>Absolutely positioned boxes can be dimensioned and positioned solely by setting offset 'top', 'right', 'bottom' and 'left' property values with percentage unit and then with inherit keyword. 'inherit' on a offset property makes such offset property take the same computed value as the offset property of the nearest positioned ancestor; in the case of a percentage value - like in this testcase - , the computed value is the specified percentage value of such nearest positioned ancestor.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-004-9.3.2" class="">
        <td>
            <a href="right-004.xht">right-004</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using pixels with a value of negative zero, -0px
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-005-9.3.2" class="">
        <td>
            <a href="right-005.xht">right-005</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using pixels with a value of zero, 0px
          <ul class="assert">
            <li>The 'right' property sets a zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-006-9.3.2" class="">
        <td>
            <a href="right-006.xht">right-006</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using pixels with a value of positive zero, +0px
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-007-9.3.2" class="">
        <td>
            <a href="right-007.xht">right-007</a></td>
        <td><a href="reference/right-007-ref.xht">=</a> </td>
        <td></td>
        <td>Right using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-008-9.3.2" class="">
        <td>
            <a href="right-008.xht">right-008</a></td>
        <td><a href="reference/right-007-ref.xht">=</a> </td>
        <td></td>
        <td>Right using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-016-9.3.2" class="">
        <td>
            <a href="right-016.xht">right-016</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using points with a value of negative zero, -0pt
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-017-9.3.2" class="">
        <td>
            <a href="right-017.xht">right-017</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using points with a value of zero, 0pt
          <ul class="assert">
            <li>The 'right' property sets a zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-018-9.3.2" class="">
        <td>
            <a href="right-018.xht">right-018</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using points with a value of positive zero, +0pt
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-019-9.3.2" class="">
        <td>
            <a href="right-019.xht">right-019</a></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td></td>
        <td>Right using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-020-9.3.2" class="">
        <td>
            <a href="right-020.xht">right-020</a></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td></td>
        <td>Right using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-028-9.3.2" class="">
        <td>
            <a href="right-028.xht">right-028</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using picas with a value of negative zero, -0pc
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-029-9.3.2" class="">
        <td>
            <a href="right-029.xht">right-029</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using picas with a value of zero, 0pc
          <ul class="assert">
            <li>The 'right' property sets a zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-030-9.3.2" class="">
        <td>
            <a href="right-030.xht">right-030</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using picas with a value of positive zero, +0pc
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-031-9.3.2" class="">
        <td>
            <a href="right-031.xht">right-031</a></td>
        <td><a href="reference/right-031-ref.xht">=</a> </td>
        <td></td>
        <td>Right using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-032-9.3.2" class="">
        <td>
            <a href="right-032.xht">right-032</a></td>
        <td><a href="reference/right-031-ref.xht">=</a> </td>
        <td></td>
        <td>Right using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-040-9.3.2" class="">
        <td>
            <a href="right-040.xht">right-040</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using centimeters with a value of negative zero, -0cm
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-041-9.3.2" class="">
        <td>
            <a href="right-041.xht">right-041</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using centimeters with a value of zero, 0cm
          <ul class="assert">
            <li>The 'right' property sets a zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-042-9.3.2" class="">
        <td>
            <a href="right-042.xht">right-042</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using centimeters with a value of positive zero, +0cm
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-043-9.3.2" class="">
        <td>
            <a href="right-043.xht">right-043</a></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td></td>
        <td>Right using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-044-9.3.2" class="">
        <td>
            <a href="right-044.xht">right-044</a></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td></td>
        <td>Right using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-052-9.3.2" class="">
        <td>
            <a href="right-052.xht">right-052</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using millimeters with a value of negative zero, -0mm
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-053-9.3.2" class="">
        <td>
            <a href="right-053.xht">right-053</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using millimeters with a value of zero, 0mm
          <ul class="assert">
            <li>The 'right' property sets a zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-054-9.3.2" class="">
        <td>
            <a href="right-054.xht">right-054</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using millimeters with a value of positive zero, +0mm
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-055-9.3.2" class="">
        <td>
            <a href="right-055.xht">right-055</a></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td></td>
        <td>Right using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-056-9.3.2" class="">
        <td>
            <a href="right-056.xht">right-056</a></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td></td>
        <td>Right using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-064-9.3.2" class="">
        <td>
            <a href="right-064.xht">right-064</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using inches with a value of negative zero, -0in
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-065-9.3.2" class="">
        <td>
            <a href="right-065.xht">right-065</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using inches with a value of zero, 0in
          <ul class="assert">
            <li>The 'right' property sets a zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-066-9.3.2" class="">
        <td>
            <a href="right-066.xht">right-066</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using inches with a value of positive zero, +0in
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-067-9.3.2" class="">
        <td>
            <a href="right-067.xht">right-067</a></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td></td>
        <td>Right using inches with a nominal value, 1in
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-068-9.3.2" class="">
        <td>
            <a href="right-068.xht">right-068</a></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td></td>
        <td>Right using inches with a positive nominal value, +1in
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-076-9.3.2" class="ahem">
        <td>
            <a href="right-076.xht">right-076</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'em' units with a value of negative zero, -0em
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-077-9.3.2" class="ahem">
        <td>
            <a href="right-077.xht">right-077</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'em' units with a value of zero, 0em
          <ul class="assert">
            <li>The 'right' property sets a zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-078-9.3.2" class="ahem">
        <td>
            <a href="right-078.xht">right-078</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'em' units with a value of positive zero, +0em
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-079-9.3.2" class="ahem">
        <td>
            <a href="right-079.xht">right-079</a></td>
        <td><a href="reference/right-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-080-9.3.2" class="ahem">
        <td>
            <a href="right-080.xht">right-080</a></td>
        <td><a href="reference/right-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-088-9.3.2" class="ahem">
        <td>
            <a href="right-088.xht">right-088</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'ex' units with a value of negative zero, -0ex
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-089-9.3.2" class="ahem">
        <td>
            <a href="right-089.xht">right-089</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'ex' units with a value of zero, 0ex
          <ul class="assert">
            <li>The 'right' property sets a zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-090-9.3.2" class="ahem">
        <td>
            <a href="right-090.xht">right-090</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'ex' units with a value of positive zero, +0ex
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-091-9.3.2" class="ahem">
        <td>
            <a href="right-091.xht">right-091</a></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'ex' units with a nominal value, 7.5ex
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-092-9.3.2" class="ahem">
        <td>
            <a href="right-092.xht">right-092</a></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'ex' units with a positive nominal value, +7.5ex
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-100-9.3.2" class="">
        <td>
            <a href="right-100.xht">right-100</a></td>
        <td><a href="reference/right-100-ref.xht">=</a> </td>
        <td></td>
        <td>Right using percentages with a value of negative zero, -0%
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-101-9.3.2" class="">
        <td>
            <a href="right-101.xht">right-101</a></td>
        <td><a href="reference/right-100-ref.xht">=</a> </td>
        <td></td>
        <td>Right using percentages with a value of zero, 0%
          <ul class="assert">
            <li>The 'right' property sets a zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-102-9.3.2" class="">
        <td>
            <a href="right-102.xht">right-102</a></td>
        <td><a href="reference/right-100-ref.xht">=</a> </td>
        <td></td>
        <td>Right using percentages with a value of positive zero, +0%
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-103-9.3.2" class="">
        <td>
            <a href="right-103.xht">right-103</a></td>
        <td><a href="reference/right-103-ref.xht">=</a> </td>
        <td></td>
        <td>Right using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-104-9.3.2" class="">
        <td>
            <a href="right-104.xht">right-104</a></td>
        <td><a href="reference/right-103-ref.xht">=</a> </td>
        <td></td>
        <td>Right using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-109-9.3.2" class="">
        <td>
            <a href="right-109.xht">right-109</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right with a value of negative zero and no units, -0
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-110-9.3.2" class="">
        <td>
            <a href="right-110.xht">right-110</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right with a value of zero and no units, 0
          <ul class="assert">
            <li>The 'right' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-111-9.3.2" class="">
        <td>
            <a href="right-111.xht">right-111</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right with a value of positive zero and no units, +0
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-112-9.3.2" class="">
        <td>
            <a href="right-112.xht">right-112</a></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right with a value of 'auto'
          <ul class="assert">
            <li>The 'right' property sets a value of 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-113-9.3.2" class="">
        <td>
            <a href="right-113.xht">right-113</a></td>
        <td><a href="reference/right-103-ref.xht">=</a> </td>
        <td></td>
        <td>Right with a value of 'inherit'
          <ul class="assert">
            <li>The 'right' property sets a value of 'inherit'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-001-9.3.2" class="">
        <td>
            <a href="right-applies-to-001.xht">right-applies-to-001</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-002-9.3.2" class="">
        <td>
            <a href="right-applies-to-002.xht">right-applies-to-002</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-003-9.3.2" class="">
        <td>
            <a href="right-applies-to-003.xht">right-applies-to-003</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-004-9.3.2" class="">
        <td>
            <a href="right-applies-to-004.xht">right-applies-to-004</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-005-9.3.2" class="">
        <td>
            <a href="right-applies-to-005.xht">right-applies-to-005</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-006-9.3.2" class="">
        <td>
            <a href="right-applies-to-006.xht">right-applies-to-006</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-007-9.3.2" class="">
        <td>
            <a href="right-applies-to-007.xht">right-applies-to-007</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-008-9.3.2" class="">
        <td>
            <a href="right-applies-to-008.xht">right-applies-to-008</a></td>
        <td></td>
        <td></td>
        <td>Right applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-009-9.3.2" class="">
        <td>
            <a href="right-applies-to-009.xht">right-applies-to-009</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-010-9.3.2" class="">
        <td>
            <a href="right-applies-to-010.xht">right-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Right applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-011-9.3.2" class="">
        <td>
            <a href="right-applies-to-011.xht">right-applies-to-011</a></td>
        <td></td>
        <td></td>
        <td>Right applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-012-9.3.2" class="">
        <td>
            <a href="right-applies-to-012.xht">right-applies-to-012</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-013-9.3.2" class="">
        <td>
            <a href="right-applies-to-013.xht">right-applies-to-013</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-014-9.3.2" class="">
        <td>
            <a href="right-applies-to-014.xht">right-applies-to-014</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-015-9.3.2" class="">
        <td>
            <a href="right-applies-to-015.xht">right-applies-to-015</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-offset-001-9.3.2" class="">
        <td>
            <a href="right-offset-001.xht">right-offset-001</a></td>
        <td><a href="reference/right-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>'right' property defines the offset from the right edge of the containing block
          <ul class="assert">
            <li>The 'right' property, for absolute positioning, specifies the offset of the element in relation to the containing block's right edge. The containing block of an absolutely positioned element is formed by the padding box of its nearest (closest) positioned ancestor element.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-offset-002-9.3.2" class="">
        <td>
            <a href="right-offset-002.xht">right-offset-002</a></td>
        <td><a href="reference/left-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position 'right' property defines the offset from the right of the box itself for relative positioning
          <ul class="assert">
            <li>The 'right' property, for relative positioning, specifies the offset of the box itself from the right toward the left. If 'left' is 'auto', then its used value is minus the value of 'right' in which case the box will move from the right toward the left by the value of 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-offset-003-9.3.2" class="">
        <td>
            <a href="right-offset-003.xht">right-offset-003</a></td>
        <td><a href="reference/right-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>'right' property defines the offset from the right edge of the containing block
          <ul class="assert">
            <li>The 'right' property, for absolute positioning, specifies the offset of the element in relation to the containing block's right edge. The containing block of an absolutely positioned element is formed by the padding box of its nearest (closest) positioned ancestor element.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-offset-004-9.3.2" class="primary image">
        <td><strong>
            <a href="right-offset-004.xht">right-offset-004</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>right box offset - position relative
          <ul class="assert">
            <li>The 'right' property, for relative positioning, specifies the offset of the box itself from its normal in-flow position, from the position it would have had if it had been static.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-offset-percentage-001-9.3.2" class="">
        <td>
            <a href="right-offset-percentage-001.xht">right-offset-percentage-001</a></td>
        <td><a href="reference/right-offset-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right offset using percentage
          <ul class="assert">
            <li>Percentage offset values for the 'right' property are based off the width of the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-offset-position-fixed-001-9.3.2" class="primary">
        <td><strong>
            <a href="right-offset-position-fixed-001.xht">right-offset-position-fixed-001</a></strong></td>
        <td><a href="reference/right-offset-position-fixed-001-ref.xht">=</a> </td>
        <td></td>
        <td>right:auto offset of position:fixed box in an RTL position:relative containing block
          <ul class="assert">
            <li>The 'right' box offset property, for fixed positioning, when set to 'auto' specifies the offset of the box from its 'static-position containing block'. Here, in this test, the 'static-position containing block' is #shifted-column and the containing block for #red is established by the viewport.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-offset-position-fixed-001-9.3.2" class="primary">
        <td><strong>
            <a href="right-offset-position-fixed-001.xht">right-offset-position-fixed-001</a></strong></td>
        <td><a href="reference/right-offset-position-fixed-001-ref.xht">=</a> </td>
        <td></td>
        <td>right:auto offset of position:fixed box in an RTL position:relative containing block
          <ul class="assert">
            <li>The 'right' box offset property, for fixed positioning, when set to 'auto' specifies the offset of the box from its 'static-position containing block'. Here, in this test, the 'static-position containing block' is #shifted-column and the containing block for #red is established by the viewport.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-004-9.3.2" class="">
        <td>
            <a href="top-004.xht">top-004</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using pixels with a value of negative zero, -0px
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-005-9.3.2" class="">
        <td>
            <a href="top-005.xht">top-005</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using pixels with a value of zero, 0px
          <ul class="assert">
            <li>The 'top' property sets a zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-006-9.3.2" class="">
        <td>
            <a href="top-006.xht">top-006</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using pixels with a value of positive zero, +0px
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-007-9.3.2" class="">
        <td>
            <a href="top-007.xht">top-007</a></td>
        <td><a href="reference/top-007-ref.xht">=</a> </td>
        <td></td>
        <td>Top using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-008-9.3.2" class="">
        <td>
            <a href="top-008.xht">top-008</a></td>
        <td><a href="reference/top-007-ref.xht">=</a> </td>
        <td></td>
        <td>Top using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-016-9.3.2" class="">
        <td>
            <a href="top-016.xht">top-016</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using points with a value of negative zero, -0pt
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-017-9.3.2" class="">
        <td>
            <a href="top-017.xht">top-017</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using points with a value of zero, 0pt
          <ul class="assert">
            <li>The 'top' property sets a zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-018-9.3.2" class="">
        <td>
            <a href="top-018.xht">top-018</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using points with a value of positive zero, +0pt
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-019-9.3.2" class="">
        <td>
            <a href="top-019.xht">top-019</a></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-020-9.3.2" class="">
        <td>
            <a href="top-020.xht">top-020</a></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-028-9.3.2" class="">
        <td>
            <a href="top-028.xht">top-028</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using picas with a value of negative zero, -0pc
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-029-9.3.2" class="">
        <td>
            <a href="top-029.xht">top-029</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using picas with a value of zero, 0pc
          <ul class="assert">
            <li>The 'top' property sets a zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-030-9.3.2" class="">
        <td>
            <a href="top-030.xht">top-030</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using picas with a value of positive zero, +0pc
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-031-9.3.2" class="">
        <td>
            <a href="top-031.xht">top-031</a></td>
        <td><a href="reference/top-007-ref.xht">=</a> </td>
        <td></td>
        <td>Top using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-032-9.3.2" class="">
        <td>
            <a href="top-032.xht">top-032</a></td>
        <td><a href="reference/top-007-ref.xht">=</a> </td>
        <td></td>
        <td>Top using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-040-9.3.2" class="">
        <td>
            <a href="top-040.xht">top-040</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using centimeters with a value of negative zero, -0cm
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-041-9.3.2" class="">
        <td>
            <a href="top-041.xht">top-041</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using centimeters with a value of zero, 0cm
          <ul class="assert">
            <li>The 'top' property sets a zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-042-9.3.2" class="">
        <td>
            <a href="top-042.xht">top-042</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using centimeters with a value of positive zero, +0cm
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-043-9.3.2" class="">
        <td>
            <a href="top-043.xht">top-043</a></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-044-9.3.2" class="">
        <td>
            <a href="top-044.xht">top-044</a></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-052-9.3.2" class="">
        <td>
            <a href="top-052.xht">top-052</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using millimeters with a value of negative zero, -0mm
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-053-9.3.2" class="">
        <td>
            <a href="top-053.xht">top-053</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using millimeters with a value of zero, 0mm
          <ul class="assert">
            <li>The 'top' property sets a zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-054-9.3.2" class="">
        <td>
            <a href="top-054.xht">top-054</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using millimeters with a value of positive zero, +0mm
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-055-9.3.2" class="">
        <td>
            <a href="top-055.xht">top-055</a></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-056-9.3.2" class="">
        <td>
            <a href="top-056.xht">top-056</a></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-064-9.3.2" class="">
        <td>
            <a href="top-064.xht">top-064</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using inches with a value of negative zero, -0in
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-065-9.3.2" class="">
        <td>
            <a href="top-065.xht">top-065</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using inches with a value of zero, 0in
          <ul class="assert">
            <li>The 'top' property sets a zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-066-9.3.2" class="">
        <td>
            <a href="top-066.xht">top-066</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using inches with a value of positive zero, +0in
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-067-9.3.2" class="">
        <td>
            <a href="top-067.xht">top-067</a></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using inches with a nominal value, 1in
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-068-9.3.2" class="">
        <td>
            <a href="top-068.xht">top-068</a></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using inches with a positive nominal value, +1in
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-076-9.3.2" class="ahem">
        <td>
            <a href="top-076.xht">top-076</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'em' units with a value of negative zero, -0em
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-077-9.3.2" class="ahem">
        <td>
            <a href="top-077.xht">top-077</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'em' units with a value of zero, 0em
          <ul class="assert">
            <li>The 'top' property sets a zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-078-9.3.2" class="ahem">
        <td>
            <a href="top-078.xht">top-078</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'em' units with a value of positive zero, +0em
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-079-9.3.2" class="ahem">
        <td>
            <a href="top-079.xht">top-079</a></td>
        <td><a href="reference/top-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-080-9.3.2" class="ahem">
        <td>
            <a href="top-080.xht">top-080</a></td>
        <td><a href="reference/top-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-088-9.3.2" class="ahem">
        <td>
            <a href="top-088.xht">top-088</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'ex' units with a value of negative zero, -0ex
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-089-9.3.2" class="ahem">
        <td>
            <a href="top-089.xht">top-089</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'ex' units with a value of zero, 0ex
          <ul class="assert">
            <li>The 'top' property sets a zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-090-9.3.2" class="ahem">
        <td>
            <a href="top-090.xht">top-090</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'ex' units with a value of positive zero, +0ex
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-091-9.3.2" class="ahem">
        <td>
            <a href="top-091.xht">top-091</a></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-092-9.3.2" class="ahem">
        <td>
            <a href="top-092.xht">top-092</a></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-100-9.3.2" class="">
        <td>
            <a href="top-100.xht">top-100</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using percentages with a value of negative zero, -0%
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-101-9.3.2" class="">
        <td>
            <a href="top-101.xht">top-101</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using percentages with a value of zero, 0%
          <ul class="assert">
            <li>The 'top' property sets a zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-102-9.3.2" class="">
        <td>
            <a href="top-102.xht">top-102</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using percentages with a value of positive zero, +0%
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-103-9.3.2" class="">
        <td>
            <a href="top-103.xht">top-103</a></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-104-9.3.2" class="">
        <td>
            <a href="top-104.xht">top-104</a></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-109-9.3.2" class="">
        <td>
            <a href="top-109.xht">top-109</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top with a value of negative zero and no units, -0
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-110-9.3.2" class="">
        <td>
            <a href="top-110.xht">top-110</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top with a value of zero and no units, 0
          <ul class="assert">
            <li>The 'top' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-111-9.3.2" class="">
        <td>
            <a href="top-111.xht">top-111</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top with a value of positive zero and no units, +0
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-112-9.3.2" class="">
        <td>
            <a href="top-112.xht">top-112</a></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top with a value of 'auto'
          <ul class="assert">
            <li>The 'top' property sets a value of 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-113-9.3.2" class="">
        <td>
            <a href="top-113.xht">top-113</a></td>
        <td><a href="reference/top-113-ref.xht">=</a> </td>
        <td></td>
        <td>Top with a value of 'inherit'
          <ul class="assert">
            <li>The 'top' property sets a value of 'inherit', inheriting the value from the parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-114-9.3.2" class="primary">
        <td><strong>
            <a href="top-114.xht">top-114</a></strong></td>
        <td><a href="reference/top-114-ref.xht">=</a> </td>
        <td></td>
        <td>position relative - top offset percentage and inherit
          <ul class="assert">
            <li>'top: inherit' makes the top property take the same computed value as the top property for the element's parent; in the case of a percentage value, the computed value is the specified percentage value. 'top: [percentage]' refers to height of containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-115-9.3.2" class="primary">
        <td><strong>
            <a href="top-115.xht">top-115</a></strong></td>
        <td><a href="reference/top-115-ref.xht">=</a> </td>
        <td></td>
        <td>position relative - top offset percentage and auto-height containing block
          <ul class="assert">
            <li>'top: [percentage]' for a relatively positioned box refers to height of its containing block. If the height of the containing block is not specified explicitly (i.e., it depends on content height), and this element is not absolutely positioned, then the percentage height value computes to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-001-9.3.2" class="">
        <td>
            <a href="top-applies-to-001.xht">top-applies-to-001</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-002-9.3.2" class="">
        <td>
            <a href="top-applies-to-002.xht">top-applies-to-002</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-003-9.3.2" class="">
        <td>
            <a href="top-applies-to-003.xht">top-applies-to-003</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-004-9.3.2" class="">
        <td>
            <a href="top-applies-to-004.xht">top-applies-to-004</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-005-9.3.2" class="">
        <td>
            <a href="top-applies-to-005.xht">top-applies-to-005</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-006-9.3.2" class="">
        <td>
            <a href="top-applies-to-006.xht">top-applies-to-006</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-007-9.3.2" class="">
        <td>
            <a href="top-applies-to-007.xht">top-applies-to-007</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-008-9.3.2" class="">
        <td>
            <a href="top-applies-to-008.xht">top-applies-to-008</a></td>
        <td></td>
        <td></td>
        <td>Top applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-009-9.3.2" class="">
        <td>
            <a href="top-applies-to-009.xht">top-applies-to-009</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-010-9.3.2" class="">
        <td>
            <a href="top-applies-to-010.xht">top-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Top applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-011-9.3.2" class="">
        <td>
            <a href="top-applies-to-011.xht">top-applies-to-011</a></td>
        <td></td>
        <td></td>
        <td>Top applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-012-9.3.2" class="">
        <td>
            <a href="top-applies-to-012.xht">top-applies-to-012</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-013-9.3.2" class="">
        <td>
            <a href="top-applies-to-013.xht">top-applies-to-013</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-014-9.3.2" class="">
        <td>
            <a href="top-applies-to-014.xht">top-applies-to-014</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-015-9.3.2" class="">
        <td>
            <a href="top-applies-to-015.xht">top-applies-to-015</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-offset-001-9.3.2" class="">
        <td>
            <a href="top-offset-001.xht">top-offset-001</a></td>
        <td><a href="reference/bottom-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position 'top' property defines the offset from the top edge of the containing block for absolute positioning
          <ul class="assert">
            <li>The 'top' property, for absolute positioning, specifies the offset of the element in relation to the containing block's top edge. The containing block of an absolutely positioned element is formed by the padding box of its nearest (closest) positioned ancestor element.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-offset-002-9.3.2" class="">
        <td>
            <a href="top-offset-002.xht">top-offset-002</a></td>
        <td><a href="reference/bottom-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position 'top' offset property - absolute length value and relative positioning
          <ul class="assert">
            <li>The 'top' property, when using an absolute length value (not percentage) for relative positioning, specifies the offset of the box itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-offset-003-9.3.2" class="">
        <td>
            <a href="top-offset-003.xht">top-offset-003</a></td>
        <td><a href="reference/top-offset-003-ref.xht">=</a> </td>
        <td></td>
        <td>Position 'top' property defines the offset from the top edge of the containing block
          <ul class="assert">
            <li>The 'top' property, for absolute positioning, specifies the offset of the element in relation to the containing block's top edge. The containing block of an absolutely positioned element is formed by the padding box of its nearest (closest) positioned ancestor element.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-offset-percentage-001-9.3.2" class="">
        <td>
            <a href="top-offset-percentage-001.xht">top-offset-percentage-001</a></td>
        <td><a href="reference/top-offset-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top offset using percentage
          <ul class="assert">
            <li>Percentage offset values for the 'top' property are based off the height of the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-offset-percentage-002-9.3.2" class="">
        <td>
            <a href="top-offset-percentage-002.xht">top-offset-percentage-002</a></td>
        <td><a href="reference/left-offset-percentage-002-ref.xht">=</a> </td>
        <td></td>
        <td>position absolute - top offset percentage and inherit
          <ul class="assert">
            <li>'top: inherit' makes the top property take the same computed value as the top property for the element's parent; in the case of a percentage value, the computed value is the specified percentage value. 'top: [percentage]' refers to height of containing block.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.3.2.#positioned-element">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.3.2.#propdef-bottom">
      <!-- 69 tests -->
      <tr id="bottom-004-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-004.xht">bottom-004</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using pixels with a value of negative zero, -0px
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-005-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-005.xht">bottom-005</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using pixels with a value of zero, 0px
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-006-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-006.xht">bottom-006</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using pixels with a value of positive zero, +0px
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-007-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-007.xht">bottom-007</a></strong></td>
        <td><a href="reference/bottom-007-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-008-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-008.xht">bottom-008</a></strong></td>
        <td><a href="reference/bottom-007-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-016-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-016.xht">bottom-016</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using points with a value of negative zero, -0pt
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-017-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-017.xht">bottom-017</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using points with a value of zero, 0pt
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-018-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-018.xht">bottom-018</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using points with a value of positive zero, +0pt
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-019-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-019.xht">bottom-019</a></strong></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-020-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-020.xht">bottom-020</a></strong></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-028-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-028.xht">bottom-028</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using picas with a value of negative zero, -0pc
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-029-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-029.xht">bottom-029</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using picas with a value of zero, 0pc
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-030-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-030.xht">bottom-030</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using picas with a value of positive zero, +0pc
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-031-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-031.xht">bottom-031</a></strong></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-032-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-032.xht">bottom-032</a></strong></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-040-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-040.xht">bottom-040</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using centimeters with a value of negative zero, -0cm
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-041-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-041.xht">bottom-041</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using centimeters with a value of zero, 0cm
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-042-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-042.xht">bottom-042</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using centimeters with a value of positive zero, +0cm
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-043-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-043.xht">bottom-043</a></strong></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-044-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-044.xht">bottom-044</a></strong></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-052-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-052.xht">bottom-052</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using millimeters with a value of negative zero, -0mm
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-053-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-053.xht">bottom-053</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using millimeters with a value of zero, 0mm
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-054-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-054.xht">bottom-054</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using millimeters with a value of positive zero, +0mm
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-055-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-055.xht">bottom-055</a></strong></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-056-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-056.xht">bottom-056</a></strong></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-064-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-064.xht">bottom-064</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using inches with a value of negative zero, -0in
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-065-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-065.xht">bottom-065</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using inches with a value of zero, 0in
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-066-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-066.xht">bottom-066</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using inches with a value of positive zero, +0in
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-067-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-067.xht">bottom-067</a></strong></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using inches with a nominal value, 1in
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-068-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-068.xht">bottom-068</a></strong></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using inches with a positive nominal value, +1in
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-076-9.3.2.#propdef-bottom" class="primary ahem">
        <td><strong>
            <a href="bottom-076.xht">bottom-076</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'em' units with a value of negative zero, -0em
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-077-9.3.2.#propdef-bottom" class="primary ahem">
        <td><strong>
            <a href="bottom-077.xht">bottom-077</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'em' units with a value of zero, 0em
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-078-9.3.2.#propdef-bottom" class="primary ahem">
        <td><strong>
            <a href="bottom-078.xht">bottom-078</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'em' units with a value of positive zero, +0em
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-079-9.3.2.#propdef-bottom" class="primary ahem">
        <td><strong>
            <a href="bottom-079.xht">bottom-079</a></strong></td>
        <td><a href="reference/bottom-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-080-9.3.2.#propdef-bottom" class="primary ahem">
        <td><strong>
            <a href="bottom-080.xht">bottom-080</a></strong></td>
        <td><a href="reference/bottom-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-088-9.3.2.#propdef-bottom" class="primary ahem">
        <td><strong>
            <a href="bottom-088.xht">bottom-088</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'ex' units with a value of negative zero, -0ex
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-089-9.3.2.#propdef-bottom" class="primary ahem">
        <td><strong>
            <a href="bottom-089.xht">bottom-089</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'ex' units with a value of zero, 0ex
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-090-9.3.2.#propdef-bottom" class="primary ahem">
        <td><strong>
            <a href="bottom-090.xht">bottom-090</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'ex' units with a value of positive zero, +0ex
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-091-9.3.2.#propdef-bottom" class="primary ahem">
        <td><strong>
            <a href="bottom-091.xht">bottom-091</a></strong></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-092-9.3.2.#propdef-bottom" class="primary ahem">
        <td><strong>
            <a href="bottom-092.xht">bottom-092</a></strong></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Bottom using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-100-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-100.xht">bottom-100</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using percentages with a value of negative zero, -0%
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-101-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-101.xht">bottom-101</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using percentages with a value of zero, 0%
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-102-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-102.xht">bottom-102</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom using percentages with a value of positive zero, +0%
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-103-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-103.xht">bottom-103</a></strong></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'bottom' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-104-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-104.xht">bottom-104</a></strong></td>
        <td><a href="reference/bottom-019-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'bottom' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-109-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-109.xht">bottom-109</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom with a value of negative zero and no units, -0
          <ul class="assert">
            <li>The 'bottom' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-110-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-110.xht">bottom-110</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom with a value of zero and no units, 0
          <ul class="assert">
            <li>The 'bottom' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-111-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-111.xht">bottom-111</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom with a value of positive zero and no units, +0
          <ul class="assert">
            <li>The 'bottom' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-112-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-112.xht">bottom-112</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Bottom with a value of 'auto'
          <ul class="assert">
            <li>The 'bottom' property sets a value of 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-113-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-113.xht">bottom-113</a></strong></td>
        <td><a href="reference/bottom-113-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom with a value of 'inherit'
          <ul class="assert">
            <li>The 'bottom' property sets a value of 'inherit', inheriting the computed value from the parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-001-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-applies-to-001.xht">bottom-applies-to-001</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-002-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-applies-to-002.xht">bottom-applies-to-002</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-003-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-applies-to-003.xht">bottom-applies-to-003</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-004-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-applies-to-004.xht">bottom-applies-to-004</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-005-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-applies-to-005.xht">bottom-applies-to-005</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-006-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-applies-to-006.xht">bottom-applies-to-006</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-007-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-applies-to-007.xht">bottom-applies-to-007</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-008-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-applies-to-008.xht">bottom-applies-to-008</a></strong></td>
        <td></td>
        <td></td>
        <td>Bottom applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-009-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-applies-to-009.xht">bottom-applies-to-009</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-010-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-applies-to-010.xht">bottom-applies-to-010</a></strong></td>
        <td></td>
        <td></td>
        <td>Bottom applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-011-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-applies-to-011.xht">bottom-applies-to-011</a></strong></td>
        <td></td>
        <td></td>
        <td>Bottom applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-012-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-applies-to-012.xht">bottom-applies-to-012</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-013-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-applies-to-013.xht">bottom-applies-to-013</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-014-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-applies-to-014.xht">bottom-applies-to-014</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-015-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-applies-to-015.xht">bottom-applies-to-015</a></strong></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-offset-001-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-offset-001.xht">bottom-offset-001</a></strong></td>
        <td><a href="reference/bottom-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>'bottom' offset - offset from the bottom edge of the containing block (abs. pos.)
          <ul class="assert">
            <li>The 'bottom' property, for absolute positioning, specifies the offset of the element in relation to the containing block's bottom edge. The containing block of an absolutely positioned element is formed by the padding box of its nearest (closest) positioned non-inline ancestor element.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-offset-002-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-offset-002.xht">bottom-offset-002</a></strong></td>
        <td><a href="reference/bottom-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>'bottom' offset - absolute length value and relative positioning
          <ul class="assert">
            <li>The 'bottom' property, when using an absolute length value (not percentage) for relative positioning, specifies the offset of the box itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-offset-003-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-offset-003.xht">bottom-offset-003</a></strong></td>
        <td><a href="reference/bottom-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>'bottom' offset - offset from the bottom edge of the containing block (abs. pos.)
          <ul class="assert">
            <li>The 'bottom' property, for absolute positioning, specifies the offset of the element in relation to the containing block's bottom edge. The containing block of an absolutely positioned element is formed by the padding box of its nearest (closest) positioned non-inline ancestor element.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-offset-percentage-001-9.3.2.#propdef-bottom" class="primary">
        <td><strong>
            <a href="bottom-offset-percentage-001.xht">bottom-offset-percentage-001</a></strong></td>
        <td><a href="reference/bottom-offset-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom offset using percentage
          <ul class="assert">
            <li>Percentage offset values for the 'bottom' property are based off the height of the containing block.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.3.2.#propdef-left">
      <!-- 66 tests -->
      <tr id="left-004-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-004.xht">left-004</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using pixels with a value of negative zero, -0px
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-005-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-005.xht">left-005</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using pixels with a value of zero, 0px
          <ul class="assert">
            <li>The 'left' property sets a zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-006-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-006.xht">left-006</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using pixels with a value of positive zero, +0px
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-007-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-007.xht">left-007</a></strong></td>
        <td><a href="reference/left-007-ref.xht">=</a> </td>
        <td></td>
        <td>Left using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-008-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-008.xht">left-008</a></strong></td>
        <td><a href="reference/left-007-ref.xht">=</a> </td>
        <td></td>
        <td>Left using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-016-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-016.xht">left-016</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using points with a value of negative zero, -0pt
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-017-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-017.xht">left-017</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using points with a value of zero, 0pt
          <ul class="assert">
            <li>The 'left' property sets a zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-018-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-018.xht">left-018</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using points with a value of positive zero, +0pt
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-019-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-019.xht">left-019</a></strong></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-020-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-020.xht">left-020</a></strong></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-028-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-028.xht">left-028</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using picas with a value of negative zero, -0pc
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-029-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-029.xht">left-029</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using picas with a value of zero, 0pc
          <ul class="assert">
            <li>The 'left' property sets a zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-030-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-030.xht">left-030</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using picas with a value of positive zero, +0pc
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-031-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-031.xht">left-031</a></strong></td>
        <td><a href="reference/left-031-ref.xht">=</a> </td>
        <td></td>
        <td>Left using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-032-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-032.xht">left-032</a></strong></td>
        <td><a href="reference/left-031-ref.xht">=</a> </td>
        <td></td>
        <td>Left using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-040-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-040.xht">left-040</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using centimeters with a value of negative zero, -0cm
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-041-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-041.xht">left-041</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using centimeters with a value of zero, 0cm
          <ul class="assert">
            <li>The 'left' property sets a zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-042-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-042.xht">left-042</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using centimeters with a value of positive zero, +0cm
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-043-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-043.xht">left-043</a></strong></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-044-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-044.xht">left-044</a></strong></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-052-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-052.xht">left-052</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using millimeters with a value of negative zero, -0mm
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-053-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-053.xht">left-053</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using millimeters with a value of zero, 0mm
          <ul class="assert">
            <li>The 'left' property sets a zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-054-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-054.xht">left-054</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using millimeters with a value of positive zero, +0mm
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-055-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-055.xht">left-055</a></strong></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-056-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-056.xht">left-056</a></strong></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-064-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-064.xht">left-064</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using inches with a value of negative zero, -0in
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-065-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-065.xht">left-065</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using inches with a value of zero, 0in
          <ul class="assert">
            <li>The 'left' property sets a zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-066-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-066.xht">left-066</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using inches with a value of positive zero, +0in
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-067-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-067.xht">left-067</a></strong></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using inches with a nominal value, 1in
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-068-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-068.xht">left-068</a></strong></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using inches with a positive nominal value, +1in
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-076-9.3.2.#propdef-left" class="primary ahem">
        <td><strong>
            <a href="left-076.xht">left-076</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'em' units with a value of negative zero, -0em
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-077-9.3.2.#propdef-left" class="primary ahem">
        <td><strong>
            <a href="left-077.xht">left-077</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'em' units with a value of zero, 0em
          <ul class="assert">
            <li>The 'left' property sets a zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-078-9.3.2.#propdef-left" class="primary ahem">
        <td><strong>
            <a href="left-078.xht">left-078</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'em' units with a value of positive zero, +0em
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-079-9.3.2.#propdef-left" class="primary ahem">
        <td><strong>
            <a href="left-079.xht">left-079</a></strong></td>
        <td><a href="reference/left-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-080-9.3.2.#propdef-left" class="primary ahem">
        <td><strong>
            <a href="left-080.xht">left-080</a></strong></td>
        <td><a href="reference/left-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-088-9.3.2.#propdef-left" class="primary ahem">
        <td><strong>
            <a href="left-088.xht">left-088</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'ex' units with a value of negative zero, -0ex
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-089-9.3.2.#propdef-left" class="primary ahem">
        <td><strong>
            <a href="left-089.xht">left-089</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'ex' units with a value of zero, 0ex
          <ul class="assert">
            <li>The 'left' property sets a zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-090-9.3.2.#propdef-left" class="primary ahem">
        <td><strong>
            <a href="left-090.xht">left-090</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'ex' units with a value of positive zero, +0ex
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-091-9.3.2.#propdef-left" class="primary ahem">
        <td><strong>
            <a href="left-091.xht">left-091</a></strong></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-092-9.3.2.#propdef-left" class="primary ahem">
        <td><strong>
            <a href="left-092.xht">left-092</a></strong></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-100-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-100.xht">left-100</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using percentages with a value of negative zero, -0%
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-101-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-101.xht">left-101</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using percentages with a value of zero, 0%
          <ul class="assert">
            <li>The 'left' property sets a zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-102-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-102.xht">left-102</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left using percentages with a value of positive zero, +0%
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-103-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-103.xht">left-103</a></strong></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'left' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-104-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-104.xht">left-104</a></strong></td>
        <td><a href="reference/ref-black-96px-square-no-red.xht">=</a> </td>
        <td></td>
        <td>Left using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'left' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-109-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-109.xht">left-109</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left with a value of negative zero and no units, -0
          <ul class="assert">
            <li>The 'left' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-110-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-110.xht">left-110</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left with a value of zero and no units, 0
          <ul class="assert">
            <li>The 'left' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-111-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-111.xht">left-111</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left with a value of positive zero and no units, +0
          <ul class="assert">
            <li>The 'left' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-112-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-112.xht">left-112</a></strong></td>
        <td><a href="reference/left-004-ref.xht">=</a> </td>
        <td></td>
        <td>Left with a value of 'auto'
          <ul class="assert">
            <li>The 'left' property sets a value of 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-113-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-113.xht">left-113</a></strong></td>
        <td><a href="reference/left-113-ref.xht">=</a> </td>
        <td></td>
        <td>Left with a value of 'inherit'
          <ul class="assert">
            <li>The 'left' property sets a value of 'inherit'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-001-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-applies-to-001.xht">left-applies-to-001</a></strong></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-002-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-applies-to-002.xht">left-applies-to-002</a></strong></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-003-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-applies-to-003.xht">left-applies-to-003</a></strong></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-004-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-applies-to-004.xht">left-applies-to-004</a></strong></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-005-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-applies-to-005.xht">left-applies-to-005</a></strong></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-006-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-applies-to-006.xht">left-applies-to-006</a></strong></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-007-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-applies-to-007.xht">left-applies-to-007</a></strong></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-008-9.3.2.#propdef-left" class="primary ahem">
        <td><strong>
            <a href="left-applies-to-008.xht">left-applies-to-008</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-009-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-applies-to-009.xht">left-applies-to-009</a></strong></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-010-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-applies-to-010.xht">left-applies-to-010</a></strong></td>
        <td></td>
        <td></td>
        <td>Left applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-011-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-applies-to-011.xht">left-applies-to-011</a></strong></td>
        <td></td>
        <td></td>
        <td>Left applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-012-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-applies-to-012.xht">left-applies-to-012</a></strong></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-013-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-applies-to-013.xht">left-applies-to-013</a></strong></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-014-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-applies-to-014.xht">left-applies-to-014</a></strong></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-015-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-applies-to-015.xht">left-applies-to-015</a></strong></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-offset-percentage-001-9.3.2.#propdef-left" class="primary">
        <td><strong>
            <a href="left-offset-percentage-001.xht">left-offset-percentage-001</a></strong></td>
        <td><a href="reference/left-offset-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left offset using percentage
          <ul class="assert">
            <li>Percentage offset values for the 'left' property are based off the width of the containing block.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.3.2.#propdef-right">
      <!-- 72 tests -->
      <tr id="left-offset-001-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="left-offset-001.xht">left-offset-001</a></strong></td>
        <td><a href="reference/left-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>Absolute positioned elements with a left offset
          <ul class="assert">
            <li>Absolute positioned elements with a left offset, offsets the elements left margin edge from the left edge of the elements containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-offset-002-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="left-offset-002.xht">left-offset-002</a></strong></td>
        <td><a href="reference/left-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position 'left' offset property - absolute length value and relative positioning
          <ul class="assert">
            <li>Relative positioned elements with a left offset, offsets with respect to the left edge of the box itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-offset-003-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="left-offset-003.xht">left-offset-003</a></strong></td>
        <td><a href="reference/left-offset-003-ref.xht">=</a> </td>
        <td></td>
        <td>'left' property defines the offset from the left edge of the containing block
          <ul class="assert">
            <li>The 'left' property, for absolute positioning, specifies the offset of the element in relation to the containing block's left edge. In this test, the containing block of the absolutely positioned element is formed by the padding box of its nearest (closest) non-inline positioned ancestor element.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-004-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-004.xht">right-004</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using pixels with a value of negative zero, -0px
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-005-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-005.xht">right-005</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using pixels with a value of zero, 0px
          <ul class="assert">
            <li>The 'right' property sets a zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-006-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-006.xht">right-006</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using pixels with a value of positive zero, +0px
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-007-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-007.xht">right-007</a></strong></td>
        <td><a href="reference/right-007-ref.xht">=</a> </td>
        <td></td>
        <td>Right using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-008-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-008.xht">right-008</a></strong></td>
        <td><a href="reference/right-007-ref.xht">=</a> </td>
        <td></td>
        <td>Right using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-016-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-016.xht">right-016</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using points with a value of negative zero, -0pt
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-017-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-017.xht">right-017</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using points with a value of zero, 0pt
          <ul class="assert">
            <li>The 'right' property sets a zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-018-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-018.xht">right-018</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using points with a value of positive zero, +0pt
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-019-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-019.xht">right-019</a></strong></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td></td>
        <td>Right using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-020-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-020.xht">right-020</a></strong></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td></td>
        <td>Right using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-028-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-028.xht">right-028</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using picas with a value of negative zero, -0pc
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-029-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-029.xht">right-029</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using picas with a value of zero, 0pc
          <ul class="assert">
            <li>The 'right' property sets a zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-030-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-030.xht">right-030</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using picas with a value of positive zero, +0pc
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-031-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-031.xht">right-031</a></strong></td>
        <td><a href="reference/right-031-ref.xht">=</a> </td>
        <td></td>
        <td>Right using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-032-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-032.xht">right-032</a></strong></td>
        <td><a href="reference/right-031-ref.xht">=</a> </td>
        <td></td>
        <td>Right using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-040-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-040.xht">right-040</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using centimeters with a value of negative zero, -0cm
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-041-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-041.xht">right-041</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using centimeters with a value of zero, 0cm
          <ul class="assert">
            <li>The 'right' property sets a zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-042-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-042.xht">right-042</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using centimeters with a value of positive zero, +0cm
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-043-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-043.xht">right-043</a></strong></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td></td>
        <td>Right using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-044-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-044.xht">right-044</a></strong></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td></td>
        <td>Right using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-052-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-052.xht">right-052</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using millimeters with a value of negative zero, -0mm
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-053-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-053.xht">right-053</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using millimeters with a value of zero, 0mm
          <ul class="assert">
            <li>The 'right' property sets a zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-054-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-054.xht">right-054</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using millimeters with a value of positive zero, +0mm
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-055-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-055.xht">right-055</a></strong></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td></td>
        <td>Right using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-056-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-056.xht">right-056</a></strong></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td></td>
        <td>Right using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-064-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-064.xht">right-064</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using inches with a value of negative zero, -0in
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-065-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-065.xht">right-065</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using inches with a value of zero, 0in
          <ul class="assert">
            <li>The 'right' property sets a zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-066-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-066.xht">right-066</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right using inches with a value of positive zero, +0in
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-067-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-067.xht">right-067</a></strong></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td></td>
        <td>Right using inches with a nominal value, 1in
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-068-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-068.xht">right-068</a></strong></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td></td>
        <td>Right using inches with a positive nominal value, +1in
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-076-9.3.2.#propdef-right" class="primary ahem">
        <td><strong>
            <a href="right-076.xht">right-076</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'em' units with a value of negative zero, -0em
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-077-9.3.2.#propdef-right" class="primary ahem">
        <td><strong>
            <a href="right-077.xht">right-077</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'em' units with a value of zero, 0em
          <ul class="assert">
            <li>The 'right' property sets a zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-078-9.3.2.#propdef-right" class="primary ahem">
        <td><strong>
            <a href="right-078.xht">right-078</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'em' units with a value of positive zero, +0em
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-079-9.3.2.#propdef-right" class="primary ahem">
        <td><strong>
            <a href="right-079.xht">right-079</a></strong></td>
        <td><a href="reference/right-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-080-9.3.2.#propdef-right" class="primary ahem">
        <td><strong>
            <a href="right-080.xht">right-080</a></strong></td>
        <td><a href="reference/right-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-088-9.3.2.#propdef-right" class="primary ahem">
        <td><strong>
            <a href="right-088.xht">right-088</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'ex' units with a value of negative zero, -0ex
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-089-9.3.2.#propdef-right" class="primary ahem">
        <td><strong>
            <a href="right-089.xht">right-089</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'ex' units with a value of zero, 0ex
          <ul class="assert">
            <li>The 'right' property sets a zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-090-9.3.2.#propdef-right" class="primary ahem">
        <td><strong>
            <a href="right-090.xht">right-090</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'ex' units with a value of positive zero, +0ex
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-091-9.3.2.#propdef-right" class="primary ahem">
        <td><strong>
            <a href="right-091.xht">right-091</a></strong></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'ex' units with a nominal value, 7.5ex
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-092-9.3.2.#propdef-right" class="primary ahem">
        <td><strong>
            <a href="right-092.xht">right-092</a></strong></td>
        <td><a href="reference/right-019-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right using 'ex' units with a positive nominal value, +7.5ex
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-100-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-100.xht">right-100</a></strong></td>
        <td><a href="reference/right-100-ref.xht">=</a> </td>
        <td></td>
        <td>Right using percentages with a value of negative zero, -0%
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-101-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-101.xht">right-101</a></strong></td>
        <td><a href="reference/right-100-ref.xht">=</a> </td>
        <td></td>
        <td>Right using percentages with a value of zero, 0%
          <ul class="assert">
            <li>The 'right' property sets a zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-102-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-102.xht">right-102</a></strong></td>
        <td><a href="reference/right-100-ref.xht">=</a> </td>
        <td></td>
        <td>Right using percentages with a value of positive zero, +0%
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-103-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-103.xht">right-103</a></strong></td>
        <td><a href="reference/right-103-ref.xht">=</a> </td>
        <td></td>
        <td>Right using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'right' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-104-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-104.xht">right-104</a></strong></td>
        <td><a href="reference/right-103-ref.xht">=</a> </td>
        <td></td>
        <td>Right using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'right' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-109-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-109.xht">right-109</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right with a value of negative zero and no units, -0
          <ul class="assert">
            <li>The 'right' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-110-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-110.xht">right-110</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right with a value of zero and no units, 0
          <ul class="assert">
            <li>The 'right' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-111-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-111.xht">right-111</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right with a value of positive zero and no units, +0
          <ul class="assert">
            <li>The 'right' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-112-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-112.xht">right-112</a></strong></td>
        <td><a href="reference/right-004-ref.xht">=</a> </td>
        <td></td>
        <td>Right with a value of 'auto'
          <ul class="assert">
            <li>The 'right' property sets a value of 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-113-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-113.xht">right-113</a></strong></td>
        <td><a href="reference/right-103-ref.xht">=</a> </td>
        <td></td>
        <td>Right with a value of 'inherit'
          <ul class="assert">
            <li>The 'right' property sets a value of 'inherit'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-001-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-applies-to-001.xht">right-applies-to-001</a></strong></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-002-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-applies-to-002.xht">right-applies-to-002</a></strong></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-003-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-applies-to-003.xht">right-applies-to-003</a></strong></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-004-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-applies-to-004.xht">right-applies-to-004</a></strong></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-005-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-applies-to-005.xht">right-applies-to-005</a></strong></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-006-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-applies-to-006.xht">right-applies-to-006</a></strong></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-007-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-applies-to-007.xht">right-applies-to-007</a></strong></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-008-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-applies-to-008.xht">right-applies-to-008</a></strong></td>
        <td></td>
        <td></td>
        <td>Right applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-009-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-applies-to-009.xht">right-applies-to-009</a></strong></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-010-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-applies-to-010.xht">right-applies-to-010</a></strong></td>
        <td></td>
        <td></td>
        <td>Right applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-011-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-applies-to-011.xht">right-applies-to-011</a></strong></td>
        <td></td>
        <td></td>
        <td>Right applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-012-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-applies-to-012.xht">right-applies-to-012</a></strong></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-013-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-applies-to-013.xht">right-applies-to-013</a></strong></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-014-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-applies-to-014.xht">right-applies-to-014</a></strong></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-015-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-applies-to-015.xht">right-applies-to-015</a></strong></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-offset-001-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-offset-001.xht">right-offset-001</a></strong></td>
        <td><a href="reference/right-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>'right' property defines the offset from the right edge of the containing block
          <ul class="assert">
            <li>The 'right' property, for absolute positioning, specifies the offset of the element in relation to the containing block's right edge. The containing block of an absolutely positioned element is formed by the padding box of its nearest (closest) positioned ancestor element.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-offset-002-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-offset-002.xht">right-offset-002</a></strong></td>
        <td><a href="reference/left-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position 'right' property defines the offset from the right of the box itself for relative positioning
          <ul class="assert">
            <li>The 'right' property, for relative positioning, specifies the offset of the box itself from the right toward the left. If 'left' is 'auto', then its used value is minus the value of 'right' in which case the box will move from the right toward the left by the value of 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-offset-003-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-offset-003.xht">right-offset-003</a></strong></td>
        <td><a href="reference/right-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>'right' property defines the offset from the right edge of the containing block
          <ul class="assert">
            <li>The 'right' property, for absolute positioning, specifies the offset of the element in relation to the containing block's right edge. The containing block of an absolutely positioned element is formed by the padding box of its nearest (closest) positioned ancestor element.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-offset-percentage-001-9.3.2.#propdef-right" class="primary">
        <td><strong>
            <a href="right-offset-percentage-001.xht">right-offset-percentage-001</a></strong></td>
        <td><a href="reference/right-offset-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right offset using percentage
          <ul class="assert">
            <li>Percentage offset values for the 'right' property are based off the width of the containing block.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.3.2.#propdef-top">
      <!-- 69 tests -->
      <tr id="top-004-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-004.xht">top-004</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using pixels with a value of negative zero, -0px
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-005-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-005.xht">top-005</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using pixels with a value of zero, 0px
          <ul class="assert">
            <li>The 'top' property sets a zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-006-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-006.xht">top-006</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using pixels with a value of positive zero, +0px
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-007-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-007.xht">top-007</a></strong></td>
        <td><a href="reference/top-007-ref.xht">=</a> </td>
        <td></td>
        <td>Top using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-008-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-008.xht">top-008</a></strong></td>
        <td><a href="reference/top-007-ref.xht">=</a> </td>
        <td></td>
        <td>Top using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-016-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-016.xht">top-016</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using points with a value of negative zero, -0pt
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-017-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-017.xht">top-017</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using points with a value of zero, 0pt
          <ul class="assert">
            <li>The 'top' property sets a zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-018-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-018.xht">top-018</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using points with a value of positive zero, +0pt
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-019-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-019.xht">top-019</a></strong></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-020-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-020.xht">top-020</a></strong></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-028-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-028.xht">top-028</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using picas with a value of negative zero, -0pc
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-029-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-029.xht">top-029</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using picas with a value of zero, 0pc
          <ul class="assert">
            <li>The 'top' property sets a zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-030-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-030.xht">top-030</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using picas with a value of positive zero, +0pc
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-031-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-031.xht">top-031</a></strong></td>
        <td><a href="reference/top-007-ref.xht">=</a> </td>
        <td></td>
        <td>Top using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-032-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-032.xht">top-032</a></strong></td>
        <td><a href="reference/top-007-ref.xht">=</a> </td>
        <td></td>
        <td>Top using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-040-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-040.xht">top-040</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using centimeters with a value of negative zero, -0cm
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-041-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-041.xht">top-041</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using centimeters with a value of zero, 0cm
          <ul class="assert">
            <li>The 'top' property sets a zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-042-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-042.xht">top-042</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using centimeters with a value of positive zero, +0cm
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-043-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-043.xht">top-043</a></strong></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-044-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-044.xht">top-044</a></strong></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-052-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-052.xht">top-052</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using millimeters with a value of negative zero, -0mm
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-053-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-053.xht">top-053</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using millimeters with a value of zero, 0mm
          <ul class="assert">
            <li>The 'top' property sets a zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-054-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-054.xht">top-054</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using millimeters with a value of positive zero, +0mm
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-055-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-055.xht">top-055</a></strong></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-056-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-056.xht">top-056</a></strong></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-064-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-064.xht">top-064</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using inches with a value of negative zero, -0in
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-065-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-065.xht">top-065</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using inches with a value of zero, 0in
          <ul class="assert">
            <li>The 'top' property sets a zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-066-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-066.xht">top-066</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using inches with a value of positive zero, +0in
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-067-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-067.xht">top-067</a></strong></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using inches with a nominal value, 1in
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-068-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-068.xht">top-068</a></strong></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using inches with a positive nominal value, +1in
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-076-9.3.2.#propdef-top" class="primary ahem">
        <td><strong>
            <a href="top-076.xht">top-076</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'em' units with a value of negative zero, -0em
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-077-9.3.2.#propdef-top" class="primary ahem">
        <td><strong>
            <a href="top-077.xht">top-077</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'em' units with a value of zero, 0em
          <ul class="assert">
            <li>The 'top' property sets a zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-078-9.3.2.#propdef-top" class="primary ahem">
        <td><strong>
            <a href="top-078.xht">top-078</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'em' units with a value of positive zero, +0em
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-079-9.3.2.#propdef-top" class="primary ahem">
        <td><strong>
            <a href="top-079.xht">top-079</a></strong></td>
        <td><a href="reference/top-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-080-9.3.2.#propdef-top" class="primary ahem">
        <td><strong>
            <a href="top-080.xht">top-080</a></strong></td>
        <td><a href="reference/top-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-088-9.3.2.#propdef-top" class="primary ahem">
        <td><strong>
            <a href="top-088.xht">top-088</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'ex' units with a value of negative zero, -0ex
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-089-9.3.2.#propdef-top" class="primary ahem">
        <td><strong>
            <a href="top-089.xht">top-089</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'ex' units with a value of zero, 0ex
          <ul class="assert">
            <li>The 'top' property sets a zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-090-9.3.2.#propdef-top" class="primary ahem">
        <td><strong>
            <a href="top-090.xht">top-090</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'ex' units with a value of positive zero, +0ex
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-091-9.3.2.#propdef-top" class="primary ahem">
        <td><strong>
            <a href="top-091.xht">top-091</a></strong></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-092-9.3.2.#propdef-top" class="primary ahem">
        <td><strong>
            <a href="top-092.xht">top-092</a></strong></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Top using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-100-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-100.xht">top-100</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using percentages with a value of negative zero, -0%
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-101-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-101.xht">top-101</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using percentages with a value of zero, 0%
          <ul class="assert">
            <li>The 'top' property sets a zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-102-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-102.xht">top-102</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top using percentages with a value of positive zero, +0%
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-103-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-103.xht">top-103</a></strong></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'top' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-104-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-104.xht">top-104</a></strong></td>
        <td><a href="reference/top-019-ref.xht">=</a> </td>
        <td></td>
        <td>Top using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'top' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-109-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-109.xht">top-109</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top with a value of negative zero and no units, -0
          <ul class="assert">
            <li>The 'top' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-110-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-110.xht">top-110</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top with a value of zero and no units, 0
          <ul class="assert">
            <li>The 'top' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-111-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-111.xht">top-111</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top with a value of positive zero and no units, +0
          <ul class="assert">
            <li>The 'top' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-112-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-112.xht">top-112</a></strong></td>
        <td><a href="reference/ref-no-vert-space-between.xht">=</a> </td>
        <td></td>
        <td>Top with a value of 'auto'
          <ul class="assert">
            <li>The 'top' property sets a value of 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-113-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-113.xht">top-113</a></strong></td>
        <td><a href="reference/top-113-ref.xht">=</a> </td>
        <td></td>
        <td>Top with a value of 'inherit'
          <ul class="assert">
            <li>The 'top' property sets a value of 'inherit', inheriting the value from the parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-001-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-applies-to-001.xht">top-applies-to-001</a></strong></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-002-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-applies-to-002.xht">top-applies-to-002</a></strong></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-003-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-applies-to-003.xht">top-applies-to-003</a></strong></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-004-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-applies-to-004.xht">top-applies-to-004</a></strong></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-005-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-applies-to-005.xht">top-applies-to-005</a></strong></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-006-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-applies-to-006.xht">top-applies-to-006</a></strong></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-007-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-applies-to-007.xht">top-applies-to-007</a></strong></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-008-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-applies-to-008.xht">top-applies-to-008</a></strong></td>
        <td></td>
        <td></td>
        <td>Top applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-009-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-applies-to-009.xht">top-applies-to-009</a></strong></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-010-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-applies-to-010.xht">top-applies-to-010</a></strong></td>
        <td></td>
        <td></td>
        <td>Top applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-011-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-applies-to-011.xht">top-applies-to-011</a></strong></td>
        <td></td>
        <td></td>
        <td>Top applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-012-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-applies-to-012.xht">top-applies-to-012</a></strong></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-013-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-applies-to-013.xht">top-applies-to-013</a></strong></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-014-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-applies-to-014.xht">top-applies-to-014</a></strong></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-015-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-applies-to-015.xht">top-applies-to-015</a></strong></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-offset-001-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-offset-001.xht">top-offset-001</a></strong></td>
        <td><a href="reference/bottom-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position 'top' property defines the offset from the top edge of the containing block for absolute positioning
          <ul class="assert">
            <li>The 'top' property, for absolute positioning, specifies the offset of the element in relation to the containing block's top edge. The containing block of an absolutely positioned element is formed by the padding box of its nearest (closest) positioned ancestor element.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-offset-002-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-offset-002.xht">top-offset-002</a></strong></td>
        <td><a href="reference/bottom-offset-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position 'top' offset property - absolute length value and relative positioning
          <ul class="assert">
            <li>The 'top' property, when using an absolute length value (not percentage) for relative positioning, specifies the offset of the box itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-offset-003-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-offset-003.xht">top-offset-003</a></strong></td>
        <td><a href="reference/top-offset-003-ref.xht">=</a> </td>
        <td></td>
        <td>Position 'top' property defines the offset from the top edge of the containing block
          <ul class="assert">
            <li>The 'top' property, for absolute positioning, specifies the offset of the element in relation to the containing block's top edge. The containing block of an absolutely positioned element is formed by the padding box of its nearest (closest) positioned ancestor element.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-offset-percentage-001-9.3.2.#propdef-top" class="primary">
        <td><strong>
            <a href="top-offset-percentage-001.xht">top-offset-percentage-001</a></strong></td>
        <td><a href="reference/top-offset-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top offset using percentage
          <ul class="assert">
            <li>Percentage offset values for the 'top' property are based off the height of the containing block.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.4">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.4">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#normal-flow">9.4 Normal flow</a></th></tr>
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.4.#x32">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.4.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.4.1">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#block-formatting">9.4.1 Block formatting contexts</a></th></tr>
      <!-- 15 tests -->
      <tr id="block-formatting-contexts-001-9.4.1" class="primary">
        <td><strong>
            <a href="block-formatting-contexts-001.xht">block-formatting-contexts-001</a></strong></td>
        <td><a href="reference/block-formatting-contexts-001-ref.xht">=</a> </td>
        <td></td>
        <td>Vertical layout of boxes
          <ul class="assert">
            <li>Boxes are vertically laid out one after the other beginning at the top of a containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-formatting-contexts-003-9.4.1" class="primary">
        <td><strong>
            <a href="block-formatting-contexts-003.xht">block-formatting-contexts-003</a></strong></td>
        <td><a href="reference/block-formatting-contexts-003-ref.xht">=</a> </td>
        <td></td>
        <td>Vertical distance with margins
          <ul class="assert">
            <li>The vertical distance between two sibling boxes is determined by the margin property.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-formatting-contexts-004-9.4.1" class="primary ahem image">
        <td><strong>
            <a href="block-formatting-contexts-004.xht">block-formatting-contexts-004</a></strong></td>
        <td><a href="reference/block-formatting-contexts-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Block Formatting Contexts: Margin Collapsing
          <ul class="assert">
            <li>Margins collapse between adjacent block boxes in a block formatting context.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-formatting-contexts-005-9.4.1" class="primary">
        <td><strong>
            <a href="block-formatting-contexts-005.xht">block-formatting-contexts-005</a></strong></td>
        <td><a href="reference/block-formatting-contexts-005-ref.xht">=</a> </td>
        <td></td>
        <td>No padding or margin, left edges touch
          <ul class="assert">
            <li>When there is no padding or margins on elements the left outer edge of the child box will touch the left edge of the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-formatting-contexts-006-9.4.1" class="primary">
        <td><strong>
            <a href="block-formatting-contexts-006.xht">block-formatting-contexts-006</a></strong></td>
        <td><a href="reference/block-formatting-contexts-006-ref.xht">=</a> </td>
        <td></td>
        <td>No padding and margin, right edges touch
          <ul class="assert">
            <li>When there is no padding or margins on elements the right outer edge of the child box will touch the right edge of the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-formatting-contexts-007-9.4.1" class="primary">
        <td><strong>
            <a href="block-formatting-contexts-007.xht">block-formatting-contexts-007</a></strong></td>
        <td><a href="reference/block-formatting-contexts-005-ref.xht">=</a> </td>
        <td></td>
        <td>Floats and box edges
          <ul class="assert">
            <li>When there is no padding or margins on a floated child element the left outer edge of the child box will touch the left edge of the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-formatting-contexts-008-9.4.1" class="primary">
        <td><strong>
            <a href="block-formatting-contexts-008.xht">block-formatting-contexts-008</a></strong></td>
        <td><a href="reference/block-formatting-contexts-008-ref.xht">=</a> </td>
        <td></td>
        <td>New block formatting context with floated elements
          <ul class="assert">
            <li>Floated elements establish new block formatting context.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-formatting-contexts-009-9.4.1" class="primary">
        <td><strong>
            <a href="block-formatting-contexts-009.xht">block-formatting-contexts-009</a></strong></td>
        <td><a href="reference/block-formatting-contexts-008-ref.xht">=</a> </td>
        <td></td>
        <td>New block formatting context with absolute positioned elements
          <ul class="assert">
            <li>Absolutely positioned elements establish a new block formatting context.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-formatting-contexts-010-9.4.1" class="primary">
        <td><strong>
            <a href="block-formatting-contexts-010.xht">block-formatting-contexts-010</a></strong></td>
        <td><a href="reference/block-formatting-contexts-008-ref.xht">=</a> </td>
        <td></td>
        <td>Inline-block elements establish a new block formatting context
          <ul class="assert">
            <li>Elements defined as inline-blocks establish a new block formatting context.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-formatting-contexts-011-9.4.1" class="primary">
        <td><strong>
            <a href="block-formatting-contexts-011.xht">block-formatting-contexts-011</a></strong></td>
        <td><a href="reference/block-formatting-contexts-011-ref.xht">=</a> </td>
        <td></td>
        <td>Table-cell elements establish a new block formatting context
          <ul class="assert">
            <li>Elements defined as table-cell elements establish a new block formatting context.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-formatting-contexts-012-9.4.1" class="primary">
        <td><strong>
            <a href="block-formatting-contexts-012.xht">block-formatting-contexts-012</a></strong></td>
        <td><a href="reference/block-formatting-contexts-008-ref.xht">=</a> </td>
        <td></td>
        <td>Table-caption elements establish a new block formatting context
          <ul class="assert">
            <li>Elements with display table-caption establish a new block formatting context.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-formatting-contexts-013-9.4.1" class="primary">
        <td><strong>
            <a href="block-formatting-contexts-013.xht">block-formatting-contexts-013</a></strong></td>
        <td></td>
        <td></td>
        <td>Overflow set to 'scroll' establishes a new block formatting context
          <ul class="assert">
            <li>A new block formatting context is established when overflow is set to 'scroll'.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-formatting-contexts-014-9.4.1" class="primary">
        <td><strong>
            <a href="block-formatting-contexts-014.xht">block-formatting-contexts-014</a></strong></td>
        <td></td>
        <td></td>
        <td>Overflow set to 'auto' establishes a new block formatting context
          <ul class="assert">
            <li>A new block formatting context is established when overflow is set to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-formatting-contexts-015-9.4.1" class="primary">
        <td><strong>
            <a href="block-formatting-contexts-015.xht">block-formatting-contexts-015</a></strong></td>
        <td><a href="reference/block-formatting-contexts-015-ref.xht">=</a> </td>
        <td></td>
        <td>Overflow set to 'hidden' establishes a new block formatting context
          <ul class="assert">
            <li>A new block formatting context is established when overflow is set to 'hidden'.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-formatting-contexts-016-9.4.1" class="primary">
        <td><strong>
            <a href="block-formatting-contexts-016.xht">block-formatting-contexts-016</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Block formatting contexts and 'overflow' set to 'visible'
          <ul class="assert">
            <li>Overflow set to 'visible' does not establish a new block formatting context.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.4.2">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.4.2">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#inline-formatting">9.4.2 Inline formatting contexts</a></th></tr>
      <!-- 33 tests -->
      <tr id="c42-ibx-pad-000-9.4.2" class="ahem image">
        <td>
            <a href="c42-ibx-pad-000.xht">c42-ibx-pad-000</a></td>
        <td><a href="reference/c42-ibx-pad-000-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Inline Elements
        </td>
      </tr>
      <tr id="empty-inline-001-9.4.2" class="primary">
        <td><strong>
            <a href="empty-inline-001.xht">empty-inline-001</a></strong></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Empty inline elements
          <ul class="assert">
            <li>Empty inline elements create a zero-height line box.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-001-9.4.2" class="primary">
        <td><strong>
            <a href="inline-formatting-context-001.xht">inline-formatting-context-001</a></strong></td>
        <td><a href="reference/inline-formatting-context-001-ref.xht">=</a> </td>
        <td></td>
        <td>Inline formatting context and basic horizontal Layout
          <ul class="assert">
            <li>Inline boxes are laid out horizontally or one after the other starting at the top of the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-002-9.4.2" class="primary">
        <td><strong>
            <a href="inline-formatting-context-002.xht">inline-formatting-context-002</a></strong></td>
        <td><a href="reference/inline-formatting-context-002-ref.xht">=</a> </td>
        <td></td>
        <td>Inline formatting context with a horizontal left margins
          <ul class="assert">
            <li>Horizontal left margins are respected between inline boxes.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-003-9.4.2" class="primary">
        <td><strong>
            <a href="inline-formatting-context-003.xht">inline-formatting-context-003</a></strong></td>
        <td><a href="reference/inline-formatting-context-003-ref.xht">=</a> </td>
        <td></td>
        <td>Inline formatting context with a horizontal right margins
          <ul class="assert">
            <li>Horizontal right margins are respected between inline boxes.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-004-9.4.2" class="primary">
        <td><strong>
            <a href="inline-formatting-context-004.xht">inline-formatting-context-004</a></strong></td>
        <td><a href="reference/inline-formatting-context-002-ref.xht">=</a> </td>
        <td></td>
        <td>Inline formatting context with a left border
          <ul class="assert">
            <li>Left borders are respected between inline boxes.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-005-9.4.2" class="primary">
        <td><strong>
            <a href="inline-formatting-context-005.xht">inline-formatting-context-005</a></strong></td>
        <td><a href="reference/inline-formatting-context-003-ref.xht">=</a> </td>
        <td></td>
        <td>Inline formatting context with a right border
          <ul class="assert">
            <li>Right borders are respected between inline boxes.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-006-9.4.2" class="primary">
        <td><strong>
            <a href="inline-formatting-context-006.xht">inline-formatting-context-006</a></strong></td>
        <td><a href="reference/inline-formatting-context-002-ref.xht">=</a> </td>
        <td></td>
        <td>Inline formatting context with left padding
          <ul class="assert">
            <li>Left padding are respected between inline boxes.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-007-9.4.2" class="primary">
        <td><strong>
            <a href="inline-formatting-context-007.xht">inline-formatting-context-007</a></strong></td>
        <td><a href="reference/inline-formatting-context-003-ref.xht">=</a> </td>
        <td></td>
        <td>Inline formatting context with right padding
          <ul class="assert">
            <li>Right padding are respected between inline boxes.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-008-9.4.2" class="primary ahem">
        <td><strong>
            <a href="inline-formatting-context-008.xht">inline-formatting-context-008</a></strong></td>
        <td><a href="reference/inline-formatting-context-008-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Inline element widths are determined by the containing block
          <ul class="assert">
            <li>Inline element width is determined by the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-009-9.4.2" class="primary ahem">
        <td><strong>
            <a href="inline-formatting-context-009.xht">inline-formatting-context-009</a></strong></td>
        <td><a href="reference/inline-formatting-context-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Inline element widths are determined by the containing block and floated elements
          <ul class="assert">
            <li>Inline element width is determined by the containing block and any floated elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-010-9.4.2" class="primary ahem">
        <td><strong>
            <a href="inline-formatting-context-010.xht">inline-formatting-context-010</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line boxes are tall enough for all boxes
          <ul class="assert">
            <li>A line box is always tall enough to contain all the boxes in the line.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-010b-9.4.2" class="ahem dom image interact">
        <td>
            <a href="inline-formatting-context-010b.xht">inline-formatting-context-010b</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>line-height - line box height calculations
          <ul class="assert">
            <li>A line box is always tall enough for all of the boxes it contains. A line box can be as tall as the tallest inline non-replaced box it contains.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-010c-9.4.2" class="ahem image">
        <td>
            <a href="inline-formatting-context-010c.xht">inline-formatting-context-010c</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>line-height - line box height calculations
          <ul class="assert">
            <li>The line box height is given by the distance between the uppermost box top and the lowermost box bottom. The line box height is not necessarly given by the height of the tallest inline box contained in the line box.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-010d-9.4.2" class="image">
        <td>
            <a href="inline-formatting-context-010d.xht">inline-formatting-context-010d</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>line-height - line box height calculations
          <ul class="assert">
            <li>The line box height is given by the distance between the uppermost box top and the lowermost box bottom. The line box height is not necessarly given by the height of the tallest inline box contained in the line box.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-011-9.4.2" class="primary ahem">
        <td><strong>
            <a href="inline-formatting-context-011.xht">inline-formatting-context-011</a></strong></td>
        <td><a href="reference/inline-formatting-context-011-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align and alignment of inline boxes
          <ul class="assert">
            <li>The 'vertical-align' property determines the vertical alignment of a box within a line box.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-012-9.4.2" class="primary">
        <td><strong>
            <a href="inline-formatting-context-012.xht">inline-formatting-context-012</a></strong></td>
        <td><a href="reference/after-content-display-002-ref.xht">=</a> </td>
        <td></td>
        <td>Inline boxes vertically stack if they do not fit horizontally
          <ul class="assert">
            <li>Inline boxes stack vertically when they do not fit within an element horizontally.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-013-9.4.2" class="primary ahem">
        <td><strong>
            <a href="inline-formatting-context-013.xht">inline-formatting-context-013</a></strong></td>
        <td><a href="reference/inline-formatting-context-013-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Wrapping inline boxes and vertical spacing
          <ul class="assert">
            <li>Line boxes are stacked with no vertical separation and they never overlap.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-014-9.4.2" class="primary ahem">
        <td><strong>
            <a href="inline-formatting-context-014.xht">inline-formatting-context-014</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line boxes span the container
          <ul class="assert">
            <li>Line boxes span the entire width of a container unless constrained by floats.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-015-9.4.2" class="primary">
        <td><strong>
            <a href="inline-formatting-context-015.xht">inline-formatting-context-015</a></strong></td>
        <td><a href="reference/inline-formatting-context-015-ref.xht">=</a> </td>
        <td></td>
        <td>Line boxes next to floats
          <ul class="assert">
            <li>Line boxes adjust for floated elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-016-9.4.2" class="primary">
        <td><strong>
            <a href="inline-formatting-context-016.xht">inline-formatting-context-016</a></strong></td>
        <td></td>
        <td></td>
        <td>Line box distribution with the 'text-align' property
          <ul class="assert">
            <li>When the inline box is wider than the line boxes the 'text-align' property is used to align the line boxes.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-017-9.4.2" class="primary ahem may">
        <td><strong>
            <a href="inline-formatting-context-017.xht">inline-formatting-context-017</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Text-align 'justify' and space and word stretching
          <ul class="assert">
            <li>If 'text-align' is set to 'justify' the user agent may stretch spaces and/or words.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-018-9.4.2" class="primary">
        <td><strong>
            <a href="inline-formatting-context-018.xht">inline-formatting-context-018</a></strong></td>
        <td></td>
        <td></td>
        <td>Text-align 'justify' and 'inline-table' elements
          <ul class="assert">
            <li>If 'text-align' is set to 'justify' the user agent does not stretch spaces and/or words when the 'display' property is set to 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-019-9.4.2" class="primary">
        <td><strong>
            <a href="inline-formatting-context-019.xht">inline-formatting-context-019</a></strong></td>
        <td></td>
        <td></td>
        <td>Text-align 'justify' and 'inline-block' elements
          <ul class="assert">
            <li>If 'text-align' is set to 'justify' the user agent does not stretch spaces and/or words when the 'display' property is set to 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-020-9.4.2" class="primary">
        <td><strong>
            <a href="inline-formatting-context-020.xht">inline-formatting-context-020</a></strong></td>
        <td></td>
        <td></td>
        <td>Inline boxes exceeding the line box
          <ul class="assert">
            <li>Inline boxes are split onto additional lines if the line box does not fit within the width.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-021-9.4.2" class="primary">
        <td><strong>
            <a href="inline-formatting-context-021.xht">inline-formatting-context-021</a></strong></td>
        <td></td>
        <td></td>
        <td>Inline boxes exceeding the line box and overflowing
          <ul class="assert">
            <li>If inline boxes cannot be split (i.e.: white-space: nowrap) then the inline box overflows the line box.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-022-9.4.2" class="primary ahem image">
        <td><strong>
            <a href="inline-formatting-context-022.xht">inline-formatting-context-022</a></strong></td>
        <td><a href="reference/inline-formatting-context-022-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Inline boxes that are split and the margin, border, padding effect
          <ul class="assert">
            <li>Margins, borders and padding have no visual effect when inline boxes are split.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-023-9.4.2" class="primary">
        <td><strong>
            <a href="inline-formatting-context-023.xht">inline-formatting-context-023</a></strong></td>
        <td><a href="reference/inline-formatting-context-023-ref.xht">=</a> </td>
        <td></td>
        <td>Bidirectional text runs can create additional line boxes
          <ul class="assert">
            <li>Additional inline boxes can be created for the bidirectional text.</li>
          </ul>
        </td>
      </tr>
      <tr id="inlines-001-9.4.2" class="">
        <td>
            <a href="inlines-001.xht">inlines-001</a></td>
        <td></td>
        <td></td>
        <td>CSS Inline Box Model: Layering Model
        </td>
      </tr>
      <tr id="inlines-009-9.4.2" class="ahem image">
        <td>
            <a href="inlines-009.xht">inlines-009</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>CSS Inline Box Model: Behaviour near cells (specified line height)
        </td>
      </tr>
      <tr id="inlines-010-9.4.2" class="ahem image">
        <td>
            <a href="inlines-010.xht">inlines-010</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>CSS Inline Box Model: Behaviour near cells (normal line height)
        </td>
      </tr>
      <tr id="inlines-011-9.4.2" class="image">
        <td>
            <a href="inlines-011.xht">inlines-011</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>CSS Inline Box Model: Baseline alignment of images
        </td>
      </tr>
      <tr id="inlines-012-9.4.2" class="image">
        <td>
            <a href="inlines-012.xht">inlines-012</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>CSS Inline Box Model: Baseline alignment of images
        </td>
      </tr>
    </tbody>
    <tbody id="s9.4.2.#img-inline-layout">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.4.2.#line-box">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.4.2.#phantom-line-box">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.4.3">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.4.3">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#relative-positioning">9.4.3 Relative positioning</a></th></tr>
      <!-- 29 tests -->
      <tr id="position-relative-002-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-002.xht">position-relative-002</a></strong></td>
        <td></td>
        <td></td>
        <td>Elements following relatively positioned elements
          <ul class="assert">
            <li>Element following relatively positioned element show up in normal flow as if the relatively positioned element were not offset.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-003-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-003.xht">position-relative-003</a></strong></td>
        <td><a href="reference/position-relative-003-ref.xht">=</a> </td>
        <td></td>
        <td>Relative positioning with auto
          <ul class="assert">
            <li>The position of a relatively positioned element with left and right set to auto the values compute to zero.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-004-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-004.xht">position-relative-004</a></strong></td>
        <td><a href="reference/position-relative-004-ref.xht">=</a> </td>
        <td></td>
        <td>Relative positioning dimensions
          <ul class="assert">
            <li>Relative positioning with left or right does not change size of a box.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-005-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-005.xht">position-relative-005</a></strong></td>
        <td><a href="reference/position-relative-005-ref.xht">=</a> </td>
        <td></td>
        <td>Relative positioning with left
          <ul class="assert">
            <li>Relatively positioned element with the left specified offsets the element from the left of the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-006-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-006.xht">position-relative-006</a></strong></td>
        <td><a href="reference/position-relative-005-ref.xht">=</a> </td>
        <td></td>
        <td>Relative positioning with right
          <ul class="assert">
            <li>Relatively positioned element with the right specified offsets the element from the right of the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-007-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-007.xht">position-relative-007</a></strong></td>
        <td><a href="reference/position-relative-005-ref.xht">=</a> </td>
        <td></td>
        <td>Relative positioning with 'left' set and 'right' 'auto'
          <ul class="assert">
            <li>Relatively positioned element with 'left' set to 'auto' and 'right' set to a value appears at expected offset.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-008-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-008.xht">position-relative-008</a></strong></td>
        <td></td>
        <td></td>
        <td>Relative positioning with 'right' set and 'left' 'auto'
          <ul class="assert">
            <li>If 'right' offset of a relatively positioned box is specified as 'auto', then its computed value is minus the value of 'left' offset. A relatively positioned box with 'left' set to a value moves the box to the left by the value of 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-009-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-009.xht">position-relative-009</a></strong></td>
        <td><a href="reference/position-relative-005-ref.xht">=</a> </td>
        <td></td>
        <td>Over-constrained situation with position 'left' property
          <ul class="assert">
            <li>If the 'direction' property of the containing block is 'ltr', the value of 'left' wins and 'right' becomes negative 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-010-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-010.xht">position-relative-010</a></strong></td>
        <td><a href="reference/position-relative-005-ref.xht">=</a> </td>
        <td></td>
        <td>Over-constrained situation with position 'right' property
          <ul class="assert">
            <li>If the 'direction' property of the containing block is 'rtl', the value of 'right' wins and 'left' becomes negative 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-013-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-013.xht">position-relative-013</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Relative positioning with top and bottom do not change element dimensions
          <ul class="assert">
            <li>Relatively positioned element dimensions are not changed with top/bottom applied. If 'top' is 'auto' and if 'bottom' is '100px', then top's used value becomes the negative of bottom. If both 'top' and 'bottom' are specified (like for #div3 in this test), then 'bottom' is ignored and the used value of 'bottom' becomes minus the value of 'top').</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-014-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-014.xht">position-relative-014</a></strong></td>
        <td><a href="reference/position-relative-014-ref.xht">=</a> </td>
        <td></td>
        <td>Relative positioning with top
          <ul class="assert">
            <li>Relatively positioned element dimensions are not changed with top applied.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-015-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-015.xht">position-relative-015</a></strong></td>
        <td><a href="reference/position-relative-014-ref.xht">=</a> </td>
        <td></td>
        <td>Relative positioning with bottom
          <ul class="assert">
            <li>Relatively positioned element dimensions are not changed with bottom applied.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-016-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-016.xht">position-relative-016</a></strong></td>
        <td><a href="reference/position-relative-016-ref.xht">=</a> </td>
        <td></td>
        <td>Relative positioning and computed top/bottom values
          <ul class="assert">
            <li>Used value of top equals negative bottom when top is auto and bottom is given. (Computed value of top remains auto.)</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-017-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-017.xht">position-relative-017</a></strong></td>
        <td><a href="reference/position-relative-014-ref.xht">=</a> </td>
        <td></td>
        <td>Relative positioning and computed 'top'/'bottom' set to 'auto'
          <ul class="assert">
            <li>Computed values are zero when both 'top' and 'bottom' are set to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-018-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-018.xht">position-relative-018</a></strong></td>
        <td><a href="reference/position-relative-018-ref.xht">=</a> </td>
        <td></td>
        <td>Relative positioning and computed values when 'bottom' is set to 'auto'
          <ul class="assert">
            <li>Computed value of 'bottom' set to 'auto' is equal to negative 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-019-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-019.xht">position-relative-019</a></strong></td>
        <td><a href="reference/position-relative-014-ref.xht">=</a> </td>
        <td></td>
        <td>Relative positioning 'bottom' ignored if 'top' and 'bottom' are both not 'auto'
          <ul class="assert">
            <li>The 'bottom' value is ignored if neither 'top' or 'bottom' is 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-020-9.4.3" class="primary interact">
        <td><strong>
            <a href="position-relative-020.xht">position-relative-020</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Relative positioning and overflow: auto
          <ul class="assert">
            <li>If relative positioning causes overflow the user agent needs to provide a scrolling mechanism to all of the content at its offset position.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-021-9.4.3" class="primary interact">
        <td><strong>
            <a href="position-relative-021.xht">position-relative-021</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Relative positioning and overflow: scroll
          <ul class="assert">
            <li>If relative positioning causes overflow the user agent needs to provide a scrolling mechanism to all of the content at its offset position.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-022-9.4.3" class="primary interact">
        <td><strong>
            <a href="position-relative-022.xht">position-relative-022</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Relative positioning and overflow: auto
          <ul class="assert">
            <li>If relative positioning causes overflow to an containing ancestor, then the user agent needs to provide a scrolling mechanism to all of the content at its offset position. In this test, div#taller-and-wider-rel-pos generates a 1.75in wide by 1.75in tall box.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-027-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-027.xht">position-relative-027</a></strong></td>
        <td><a href="reference/position-relative-027-ref.xht">=</a> </td>
        <td></td>
        <td>Relatively positioned elements with auto positioning with anonymous boxes before and after
          <ul class="assert">
            <li>Relatively positioned element with auto positioning appear as though they were positioned in flow.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-037-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-037.xht">position-relative-037</a></strong></td>
        <td><a href="reference/position-relative-037-ref.xht">=</a> </td>
        <td></td>
        <td>Relative positioning with over-constained situation and direction left-to-right
          <ul class="assert">
            <li>Relative positioning with left and right values and over-constrained situations when direction is left-to-right.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-038-9.4.3" class="primary">
        <td><strong>
            <a href="position-relative-038.xht">position-relative-038</a></strong></td>
        <td><a href="reference/position-relative-038-ref.xht">=</a> </td>
        <td></td>
        <td>Relative positioning with over-constained situation and direction right-to-left
          <ul class="assert">
            <li>Relative positioning with left and right values and over-constrained situations when direction is right-to-left.</li>
          </ul>
        </td>
      </tr>
      <tr id="relpos-calcs-001-9.4.3" class="primary">
        <td><strong>
            <a href="relpos-calcs-001.xht">relpos-calcs-001</a></strong></td>
        <td><a href="reference/relpos-calcs-001-ref.xht">=</a> </td>
        <td></td>
        <td>Relative Positioning - auto top = -bottom
          <ul class="assert">
            <li>For a relatively positioned element, if 'top' is 'auto', its used value is minus the value of 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="relpos-calcs-002-9.4.3" class="primary">
        <td><strong>
            <a href="relpos-calcs-002.xht">relpos-calcs-002</a></strong></td>
        <td><a href="reference/relpos-calcs-001-ref.xht">=</a> </td>
        <td></td>
        <td>Relative Positioning - auto bottom = -top
          <ul class="assert">
            <li>For a relatively positioned element, if 'bottom' is 'auto', its used value is minus the value of 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="relpos-calcs-003-9.4.3" class="primary">
        <td><strong>
            <a href="relpos-calcs-003.xht">relpos-calcs-003</a></strong></td>
        <td><a href="reference/relpos-calcs-001-ref.xht">=</a> </td>
        <td></td>
        <td>Relative Positioning - Computing auto left = -right
          <ul class="assert">
            <li>For a relatively positioned element, if 'left' is 'auto', its used value is minus the value of 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="relpos-calcs-004-9.4.3" class="primary">
        <td><strong>
            <a href="relpos-calcs-004.xht">relpos-calcs-004</a></strong></td>
        <td><a href="reference/relpos-calcs-001-ref.xht">=</a> </td>
        <td></td>
        <td>Relative Positioning - auto right = -left
          <ul class="assert">
            <li>For a relatively positioned element, if 'right' is 'auto', its used value is minus the value of 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="relpos-calcs-005-9.4.3" class="primary">
        <td><strong>
            <a href="relpos-calcs-005.xht">relpos-calcs-005</a></strong></td>
        <td><a href="reference/relpos-calcs-001-ref.xht">=</a> </td>
        <td></td>
        <td>Relative Positioning - overconstrained left = -right (LTR)
          <ul class="assert">
            <li>For a relatively positioned element in an LTR containing block, if neither 'left' nor 'right' is 'auto', used value of 'right' is minus the value of 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="relpos-calcs-006-9.4.3" class="primary">
        <td><strong>
            <a href="relpos-calcs-006.xht">relpos-calcs-006</a></strong></td>
        <td><a href="reference/relpos-calcs-001-ref.xht">=</a> </td>
        <td></td>
        <td>Relative Positioning - overconstrained left = -right (RTL)
          <ul class="assert">
            <li>For a relatively positioned element in an RTL containing block, if neither 'left' nor 'right' is 'auto', used value of 'left' is minus the value of 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="relpos-calcs-007-9.4.3" class="primary">
        <td><strong>
            <a href="relpos-calcs-007.xht">relpos-calcs-007</a></strong></td>
        <td><a href="reference/relpos-calcs-001-ref.xht">=</a> </td>
        <td></td>
        <td>Relative Positioning - overconstrained top = -bottom
          <ul class="assert">
            <li>For a relatively positioned element, if neither 'top' nor 'bottom' is 'auto', used value of 'bottom' is minus the value of 'top'.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.4.3.#x34">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.5">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.5">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#floats">9.5 Floats</a></th></tr>
      <!-- 164 tests -->
      <tr id="adjacent-floats-001-9.5" class="primary">
        <td><strong>
            <a href="adjacent-floats-001.xht">adjacent-floats-001</a></strong></td>
        <td><a href="reference/adjacent-floats-001-ref.xht">=</a> </td>
        <td></td>
        <td>Multiple floated boxes adjacent to each other
          <ul class="assert">
            <li>Floated boxes are allowed to be next to each other.</li>
          </ul>
        </td>
      </tr>
      <tr id="c414-flt-fit-000-9.5" class="">
        <td>
            <a href="c414-flt-fit-000.xht">c414-flt-fit-000</a></td>
        <td><a href="reference/c414-flt-fit-000-ref.xht">=</a> </td>
        <td></td>
        <td>Stacking Non-Replaced Left Floats
        </td>
      </tr>
      <tr id="c414-flt-fit-001-9.5" class="image">
        <td>
            <a href="c414-flt-fit-001.xht">c414-flt-fit-001</a></td>
        <td><a href="reference/c414-flt-fit-001-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Stacking Replaced Left Floats
        </td>
      </tr>
      <tr id="c414-flt-fit-002-9.5" class="">
        <td>
            <a href="c414-flt-fit-002.xht">c414-flt-fit-002</a></td>
        <td><a href="reference/c414-flt-fit-002-ref.xht">=</a> </td>
        <td></td>
        <td>Stacking Mixed Floats Part I
        </td>
      </tr>
      <tr id="c414-flt-fit-003-9.5" class="">
        <td>
            <a href="c414-flt-fit-003.xht">c414-flt-fit-003</a></td>
        <td><a href="reference/c414-flt-fit-003-ref.xht">=</a> </td>
        <td></td>
        <td>Stacking Mixed Floats Part II
        </td>
      </tr>
      <tr id="c414-flt-fit-004-9.5" class="">
        <td>
            <a href="c414-flt-fit-004.xht">c414-flt-fit-004</a></td>
        <td><a href="reference/c414-flt-fit-004-ref.xht">=</a> </td>
        <td></td>
        <td>Stacking Mixed Floats Part III
        </td>
      </tr>
      <tr id="c414-flt-fit-005-9.5" class="">
        <td>
            <a href="c414-flt-fit-005.xht">c414-flt-fit-005</a></td>
        <td><a href="reference/c414-flt-fit-005-ref.xht">=</a> </td>
        <td></td>
        <td>Non-Replaced Float Not Fitting Beside Opposite Float
        </td>
      </tr>
      <tr id="c414-flt-fit-006-9.5" class="image">
        <td>
            <a href="c414-flt-fit-006.xht">c414-flt-fit-006</a></td>
        <td><a href="reference/c414-flt-fit-006-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Replaced Float Not Fitting Beside Opposite Float
        </td>
      </tr>
      <tr id="c414-flt-wrap-000-9.5" class="">
        <td>
            <a href="c414-flt-wrap-000.xht">c414-flt-wrap-000</a></td>
        <td></td>
        <td></td>
        <td>Text Not Fitting Beside Non-Replaced Float
          <ul class="assert">
            <li>If a shortened line box is too small to contain any further content, then it is shifted downward until either it fits or there are no more floats present.</li>
          </ul>
        </td>
      </tr>
      <tr id="c414-flt-wrap-001-9.5" class="image">
        <td>
            <a href="c414-flt-wrap-001.xht">c414-flt-wrap-001</a></td>
        <td><a href="reference/c414-flt-wrap-001-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Text Not Fitting Beside Replaced Float
        </td>
      </tr>
      <tr id="c5525-fltblck-000-9.5" class="ahem image">
        <td>
            <a href="c5525-fltblck-000.xht">c5525-fltblck-000</a></td>
        <td><a href="reference/c5525-fltblck-000-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>float
        </td>
      </tr>
      <tr id="c5525-fltblck-001-9.5" class="">
        <td>
            <a href="c5525-fltblck-001.xht">c5525-fltblck-001</a></td>
        <td></td>
        <td></td>
        <td>float
        </td>
      </tr>
      <tr id="c5525-fltcont-000-9.5" class="image">
        <td>
            <a href="c5525-fltcont-000.xht">c5525-fltcont-000</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>float
        </td>
      </tr>
      <tr id="c5525-fltinln-000-9.5" class="ahem image">
        <td>
            <a href="c5525-fltinln-000.xht">c5525-fltinln-000</a></td>
        <td><a href="reference/c5525-fltinln-000-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>float
        </td>
      </tr>
      <tr id="c5525-fltmrgn-000-9.5" class="ahem image">
        <td>
            <a href="c5525-fltmrgn-000.xht">c5525-fltmrgn-000</a></td>
        <td><a href="reference/c5525-fltmrgn-000-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>float
        </td>
      </tr>
      <tr id="c5525-fltmult-000-9.5" class="image">
        <td>
            <a href="c5525-fltmult-000.xht">c5525-fltmult-000</a></td>
        <td><a href="reference/c5525-fltmult-000-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>float
        </td>
      </tr>
      <tr id="c5525-fltwidth-000-9.5" class="image">
        <td>
            <a href="c5525-fltwidth-000.xht">c5525-fltwidth-000</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>float
        </td>
      </tr>
      <tr id="c5525-fltwidth-001-9.5" class="image">
        <td>
            <a href="c5525-fltwidth-001.xht">c5525-fltwidth-001</a></td>
        <td><a href="reference/c5525-fltwidth-001-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>float
        </td>
      </tr>
      <tr id="c5525-fltwidth-002-9.5" class="image">
        <td>
            <a href="c5525-fltwidth-002.xht">c5525-fltwidth-002</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>float
        </td>
      </tr>
      <tr id="c5525-fltwidth-003-9.5" class="image">
        <td>
            <a href="c5525-fltwidth-003.xht">c5525-fltwidth-003</a></td>
        <td><a href="reference/c5525-fltwidth-003-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>float
        </td>
      </tr>
      <tr id="c5525-fltwrap-000-9.5" class="">
        <td>
            <a href="c5525-fltwrap-000.xht">c5525-fltwrap-000</a></td>
        <td></td>
        <td></td>
        <td>float
        </td>
      </tr>
      <tr id="c5526-fltclr-000-9.5" class="ahem image">
        <td>
            <a href="c5526-fltclr-000.xht">c5526-fltclr-000</a></td>
        <td><a href="reference/c5526-fltclr-000-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>clear
        </td>
      </tr>
      <tr id="c5526-flthw-000-9.5" class="image">
        <td>
            <a href="c5526-flthw-000.xht">c5526-flthw-000</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>clear
        </td>
      </tr>
      <tr id="float-005-9.5" class="primary ahem">
        <td><strong>
            <a href="float-005.xht">float-005</a></strong></td>
        <td><a href="reference/float-005-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>float - non-positioned block box created after a float
          <ul class="assert">
            <li>A non-positioned block box created after a float box should flow vertically as if the float did not exist. The line boxes created next to the float should be shortened to make room for that preceding floated box.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-006-9.5" class="primary">
        <td><strong>
            <a href="float-006.xht">float-006</a></strong></td>
        <td><a href="reference/float-006-ref.xht">=</a> </td>
        <td></td>
        <td>floats - zero height empty float
          <ul class="assert">
            <li>A zero-height (margin-box) empty float without border and without padding will not require the line box to be shortened; in such case, the zero-height (margin-box) empty float will slide in or will fit in at the top of the line box.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-001-9.5" class="primary">
        <td><strong>
            <a href="floats-001.xht">floats-001</a></strong></td>
        <td><a href="reference/floats-001-ref.xht">=</a> </td>
        <td></td>
        <td>Floats, shifting left until it touches container edge
          <ul class="assert">
            <li>A left floated box shifts left until its outer edge touches the containing block edge.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-002-9.5" class="primary">
        <td><strong>
            <a href="floats-002.xht">floats-002</a></strong></td>
        <td><a href="reference/floats-002-ref.xht">=</a> </td>
        <td></td>
        <td>Floats, shifting right until it touches container edge
          <ul class="assert">
            <li>A right floated box shifts right until its outer edge touches the containing block edge.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-003-9.5" class="primary">
        <td><strong>
            <a href="floats-003.xht">floats-003</a></strong></td>
        <td><a href="reference/adjacent-floats-001-ref.xht">=</a> </td>
        <td></td>
        <td>Floats, shifting left until touching other floats
          <ul class="assert">
            <li>A left floated box shifts left until it touches another float.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-004-9.5" class="primary">
        <td><strong>
            <a href="floats-004.xht">floats-004</a></strong></td>
        <td><a href="reference/floats-004-ref.xht">=</a> </td>
        <td></td>
        <td>Floats, shifting right until touching other floats
          <ul class="assert">
            <li>A right floated box shifts right until it touches another float.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-005-9.5" class="primary image">
        <td><strong>
            <a href="floats-005.xht">floats-005</a></strong></td>
        <td><a href="reference/floats-005-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Floats, shifting down below all other floated elements
          <ul class="assert">
            <li>Floated boxes shift down until it fits.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-006-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-006.xht">floats-006</a></strong></td>
        <td><a href="reference/floats-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left floats interacting with inline content
          <ul class="assert">
            <li>Inline boxes are reflowed to the first available line on the other side of a float.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-007-9.5" class="primary">
        <td><strong>
            <a href="floats-007.xht">floats-007</a></strong></td>
        <td><a href="reference/floats-007-ref.xht">=</a> </td>
        <td></td>
        <td>Floated elements shifting down below non-floated elements
          <ul class="assert">
            <li>Left floated boxes shift down until next to another float and there is room to fit.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-008-9.5" class="primary">
        <td><strong>
            <a href="floats-008.xht">floats-008</a></strong></td>
        <td><a href="reference/clear-float-004-ref.xht">=</a> </td>
        <td></td>
        <td>Floats and block box flow
          <ul class="assert">
            <li>Block boxes flow vertically as if floats don't exist.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-009-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-009.xht">floats-009</a></strong></td>
        <td><a href="reference/floats-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Right floats interacting with right-to-left inline content
          <ul class="assert">
            <li>Inline boxes are reflowed to the first available line on the other side of a float for right-to-left.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-014-9.5" class="primary">
        <td><strong>
            <a href="floats-014.xht">floats-014</a></strong></td>
        <td><a href="reference/floats-014-ref.xht">=</a> </td>
        <td></td>
        <td>Left floated element margins do not collapse
          <ul class="assert">
            <li>Floating boxes never collapse with margins of adjacent floats or other boxes.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-015-9.5" class="primary">
        <td><strong>
            <a href="floats-015.xht">floats-015</a></strong></td>
        <td><a href="reference/floats-014-ref.xht">=</a> </td>
        <td></td>
        <td>Right floated elements margins do not collapse
          <ul class="assert">
            <li>Right floating boxes never collapse with margins of adjacent boxes or other floats.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-016-9.5" class="primary">
        <td><strong>
            <a href="floats-016.xht">floats-016</a></strong></td>
        <td></td>
        <td></td>
        <td>Floated elements stacked with blocks and inline elements
          <ul class="assert">
            <li>Floated elements are rendered in front of non-positioned in-flow blocks but behind in-flow inline boxes when a normal flow box is next to a floated element with negative margins.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-019-9.5" class="primary">
        <td><strong>
            <a href="floats-019.xht">floats-019</a></strong></td>
        <td><a href="reference/floats-019-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to absolutely positioned elements
          <ul class="assert">
            <li>Float cannot be applied to absolutely positioned element.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-020-9.5" class="primary">
        <td><strong>
            <a href="floats-020.xht">floats-020</a></strong></td>
        <td></td>
        <td></td>
        <td>Left floated elements and text wrapping
          <ul class="assert">
            <li>Block box is generated and floated to left and content flows on right side starting at the top.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-021-9.5" class="primary">
        <td><strong>
            <a href="floats-021.xht">floats-021</a></strong></td>
        <td></td>
        <td></td>
        <td>Right floated elements and text wrapping
          <ul class="assert">
            <li>Block box is generated and floated to right and content flows on left side starting at the top.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-022-9.5" class="primary">
        <td><strong>
            <a href="floats-022.xht">floats-022</a></strong></td>
        <td><a href="reference/floats-022-ref.xht">=</a> </td>
        <td></td>
        <td>Elements do not float when 'float' is set to 'none'
          <ul class="assert">
            <li>An element with 'float: none' behaves as if it were never set to begin with.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-023-9.5" class="primary">
        <td><strong>
            <a href="floats-023.xht">floats-023</a></strong></td>
        <td><a href="reference/floats-023-ref.xht">=</a> </td>
        <td></td>
        <td>Floated elements and container edges
          <ul class="assert">
            <li>Left floated boxes cannot go past the container's left edge.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-024-9.5" class="primary">
        <td><strong>
            <a href="floats-024.xht">floats-024</a></strong></td>
        <td><a href="reference/floats-024-ref.xht">=</a> </td>
        <td></td>
        <td>Left float with earlier floated siblings
          <ul class="assert">
            <li>Left floated box is to right of earlier floated box or below the earlier floated element's bottom edge.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-025-9.5" class="primary">
        <td><strong>
            <a href="floats-025.xht">floats-025</a></strong></td>
        <td><a href="reference/floats-025-ref.xht">=</a> </td>
        <td></td>
        <td>Right floating elements and container edge
          <ul class="assert">
            <li>Right floated boxes cannot go past the container's right edge.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-026-9.5" class="primary">
        <td><strong>
            <a href="floats-026.xht">floats-026</a></strong></td>
        <td><a href="reference/floats-026-ref.xht">=</a> </td>
        <td></td>
        <td>Margin affects left floated elements
          <ul class="assert">
            <li>Right outer edge of left-floating box cannot be to the right of the left outer edge of any right-floating box that is to the right of it.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-027-9.5" class="primary">
        <td><strong>
            <a href="floats-027.xht">floats-027</a></strong></td>
        <td><a href="reference/floats-027-ref.xht">=</a> </td>
        <td></td>
        <td>Margin affects right floated elements
          <ul class="assert">
            <li>Right outer edge of left-floating box cannot be to the right of the left outer edge of any right-floating box that is to the right of it.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-028-9.5" class="primary">
        <td><strong>
            <a href="floats-028.xht">floats-028</a></strong></td>
        <td><a href="reference/floats-028-ref.xht">=</a> </td>
        <td></td>
        <td>Floats and containment
          <ul class="assert">
            <li>Floating box's outer top cannot be higher than the top of its containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-029-9.5" class="primary">
        <td><strong>
            <a href="floats-029.xht">floats-029</a></strong></td>
        <td><a href="reference/floats-029-ref.xht">=</a> </td>
        <td></td>
        <td>Content flowing around floated elements
          <ul class="assert">
            <li>Floats shift the current line and surrounding content to flow along its side unless clear is specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-036-9.5" class="primary">
        <td><strong>
            <a href="floats-036.xht">floats-036</a></strong></td>
        <td><a href="reference/floats-036-ref.xht">=</a> </td>
        <td></td>
        <td>Floated left and aligned with current line box
          <ul class="assert">
            <li>A floated elements top edge will be aligned with the top of a line box.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-037-9.5" class="primary">
        <td><strong>
            <a href="floats-037.xht">floats-037</a></strong></td>
        <td></td>
        <td></td>
        <td>Floated right element aligns with current line box
          <ul class="assert">
            <li>A line box aligns with the top of a right floated box.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-038-9.5" class="primary">
        <td><strong>
            <a href="floats-038.xht">floats-038</a></strong></td>
        <td><a href="reference/floats-038-ref.xht">=</a> </td>
        <td></td>
        <td>Floats and table margins
          <ul class="assert">
            <li>The border box of a table cannot overlap any floats in the same block formatting context as the elements itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-039-9.5" class="primary image">
        <td><strong>
            <a href="floats-039.xht">floats-039</a></strong></td>
        <td><a href="reference/floats-038-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Floats and block level replaced element margins
          <ul class="assert">
            <li>The border box of a block level replaced element cannot overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-040-9.5" class="primary">
        <td><strong>
            <a href="floats-040.xht">floats-040</a></strong></td>
        <td><a href="reference/floats-038-ref.xht">=</a> </td>
        <td></td>
        <td>Floats inline-block level element margins
          <ul class="assert">
            <li>The border box of a inline-block level element cannot overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-041-9.5" class="primary">
        <td><strong>
            <a href="floats-041.xht">floats-041</a></strong></td>
        <td><a href="reference/floats-041-ref.xht">=</a> </td>
        <td></td>
        <td>Floats and stacking contexts with content
          <ul class="assert">
            <li>The contents of floats are stacked as if floats generated new stacking contexts.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-043-9.5" class="primary">
        <td><strong>
            <a href="floats-043.xht">floats-043</a></strong></td>
        <td><a href="reference/floats-043-ref.xht">=</a> </td>
        <td></td>
        <td>Right float with earlier floated siblings
          <ul class="assert">
            <li>A right floated box is to left of earlier floated boxes or below the earlier floated element's bottom edge.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-101-9.5" class="primary">
        <td><strong>
            <a href="floats-101.xht">floats-101</a></strong></td>
        <td><a href="reference/floats-101-ref.xht">=</a> </td>
        <td></td>
        <td>CSS Floats: Nested floats (no other content)
        </td>
      </tr>
      <tr id="floats-102-9.5" class="primary">
        <td><strong>
            <a href="floats-102.xht">floats-102</a></strong></td>
        <td></td>
        <td></td>
        <td>CSS Floats: Nested floats (some inline content before nested float)
        </td>
      </tr>
      <tr id="floats-103-9.5" class="primary">
        <td><strong>
            <a href="floats-103.xht">floats-103</a></strong></td>
        <td></td>
        <td></td>
        <td>CSS Floats: Nested floats (some inline content after nested float)
        </td>
      </tr>
      <tr id="floats-104-9.5" class="primary">
        <td><strong>
            <a href="floats-104.xht">floats-104</a></strong></td>
        <td></td>
        <td></td>
        <td>CSS Floats: Unexpected Presences, Part 1
        </td>
      </tr>
      <tr id="floats-105-9.5" class="primary">
        <td><strong>
            <a href="floats-105.xht">floats-105</a></strong></td>
        <td></td>
        <td></td>
        <td>CSS Floats: Unexpected Presences, Part 2
        </td>
      </tr>
      <tr id="floats-106-9.5" class="primary">
        <td><strong>
            <a href="floats-106.xht">floats-106</a></strong></td>
        <td></td>
        <td></td>
        <td>CSS Floats: Unexpected Presences, Part 3
        </td>
      </tr>
      <tr id="floats-108-9.5" class="primary interact">
        <td><strong>
            <a href="floats-108.xht">floats-108</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>CSS Floats: Float Sizing (styled floats)
        </td>
      </tr>
      <tr id="floats-109-9.5" class="primary interact">
        <td><strong>
            <a href="floats-109.xht">floats-109</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>CSS Floats: Float Sizing (blocks inside styled floats)
        </td>
      </tr>
      <tr id="floats-110-9.5" class="primary interact">
        <td><strong>
            <a href="floats-110.xht">floats-110</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>CSS Floats: Float Sizing
        </td>
      </tr>
      <tr id="floats-111-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-111.xht">floats-111</a></strong></td>
        <td><a href="reference/floats-111-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Floats: Shrink Wrapped Right Floats With Right Aligned Text
        </td>
      </tr>
      <tr id="floats-112-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-112.xht">floats-112</a></strong></td>
        <td><a href="reference/floats-112-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Floats: Shrink Wrapped Right Floats With Right Aligned Text
        </td>
      </tr>
      <tr id="floats-113-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-113.xht">floats-113</a></strong></td>
        <td><a href="reference/floats-113-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Floats: Shrink Wrapped Right Floats With Right Aligned Text
        </td>
      </tr>
      <tr id="floats-114-9.5" class="primary">
        <td><strong>
            <a href="floats-114.xht">floats-114</a></strong></td>
        <td><a href="reference/floats-114-ref.xht">=</a> </td>
        <td></td>
        <td>CSS Floats: Generated Content
        </td>
      </tr>
      <tr id="floats-115-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-115.xht">floats-115</a></strong></td>
        <td><a href="reference/floats-115-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Floats: Auto Sizing
        </td>
      </tr>
      <tr id="floats-116-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-116.xht">floats-116</a></strong></td>
        <td><a href="reference/floats-116-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Floats: Auto Sizing (with padding)
        </td>
      </tr>
      <tr id="floats-117-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-117.xht">floats-117</a></strong></td>
        <td><a href="reference/floats-116-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Floats: Auto Sizing (with border)
        </td>
      </tr>
      <tr id="floats-118-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-118.xht">floats-118</a></strong></td>
        <td><a href="reference/floats-118-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Floats: Auto Sizing
        </td>
      </tr>
      <tr id="floats-119-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-119.xht">floats-119</a></strong></td>
        <td><a href="reference/floats-119-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Floats: Auto Sizing (with padding)
        </td>
      </tr>
      <tr id="floats-120-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-120.xht">floats-120</a></strong></td>
        <td><a href="reference/floats-119-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Floats: Auto Sizing (with border)
        </td>
      </tr>
      <tr id="floats-121-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-121.xht">floats-121</a></strong></td>
        <td><a href="reference/floats-121-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Floats: Fixed Sizing (with border)
        </td>
      </tr>
      <tr id="floats-122-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-122.xht">floats-122</a></strong></td>
        <td><a href="reference/floats-122-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Floats: Auto Sizing Float Followed By Text
        </td>
      </tr>
      <tr id="floats-123-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-123.xht">floats-123</a></strong></td>
        <td><a href="reference/floats-123-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Floats: Auto Sizing (with relative positioning)
        </td>
      </tr>
      <tr id="floats-124-9.5" class="primary">
        <td><strong>
            <a href="floats-124.xht">floats-124</a></strong></td>
        <td><a href="reference/floats-124-ref.xht">=</a> </td>
        <td></td>
        <td>CSS Floats: Bottom Padding on Inline Children
        </td>
      </tr>
      <tr id="floats-125-9.5" class="primary">
        <td><strong>
            <a href="floats-125.xht">floats-125</a></strong></td>
        <td><a href="reference/floats-125-ref.xht">=</a> </td>
        <td></td>
        <td>CSS Floats: Bottom Padding on Inline Children
        </td>
      </tr>
      <tr id="floats-126-9.5" class="primary interact">
        <td><strong>
            <a href="floats-126.xht">floats-126</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>CSS Floats: Float Sizing (styled floated tables)
        </td>
      </tr>
      <tr id="floats-127-9.5" class="primary interact">
        <td><strong>
            <a href="floats-127.xht">floats-127</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>CSS Floats: Float Sizing (styled floated tables)
        </td>
      </tr>
      <tr id="floats-128-9.5" class="primary interact">
        <td><strong>
            <a href="floats-128.xht">floats-128</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>CSS Floats: Float Sizing (styled blocks within floated tables)
        </td>
      </tr>
      <tr id="floats-129-9.5" class="primary interact">
        <td><strong>
            <a href="floats-129.xht">floats-129</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>CSS Floats: Float Sizing (styled floated tables within tables)
        </td>
      </tr>
      <tr id="floats-130-9.5" class="primary interact">
        <td><strong>
            <a href="floats-130.xht">floats-130</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>CSS Floats: Float Sizing (blocks within styled floated tables within tables)
        </td>
      </tr>
      <tr id="floats-131-9.5" class="primary interact">
        <td><strong>
            <a href="floats-131.xht">floats-131</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>CSS Floats: Float Sizing (styled blocks within floated tables within tables)
        </td>
      </tr>
      <tr id="floats-132-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-132.xht">floats-132</a></strong></td>
        <td><a href="reference/floats-132-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Floats: Wrapping long text
        </td>
      </tr>
      <tr id="floats-133-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-133.xht">floats-133</a></strong></td>
        <td><a href="reference/floats-133-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Floats: Wrapping text and position:static
        </td>
      </tr>
      <tr id="floats-134-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-134.xht">floats-134</a></strong></td>
        <td><a href="reference/floats-133-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Floats: Wrapping text and position:relative
        </td>
      </tr>
      <tr id="floats-135-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-135.xht">floats-135</a></strong></td>
        <td><a href="reference/floats-135-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Floats: Wrapping blocks around floats
        </td>
      </tr>
      <tr id="floats-136-9.5" class="primary ahem">
        <td><strong>
            <a href="floats-136.xht">floats-136</a></strong></td>
        <td><a href="reference/floats-136-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Floats: Wrapping blocks around floats
        </td>
      </tr>
      <tr id="floats-137-9.5" class="primary ahem animated">
        <td><strong>
            <a href="floats-137.xht">floats-137</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="animated" title="Animated test">Animated</abbr></td>
        <td>Wrapping text around multiple floats
        </td>
      </tr>
      <tr id="floats-138-9.5" class="primary">
        <td><strong>
            <a href="floats-138.xht">floats-138</a></strong></td>
        <td><a href="reference/floats-138-ref.xht">=</a> </td>
        <td></td>
        <td>Clearing a float with margins
        </td>
      </tr>
      <tr id="floats-139-9.5" class="primary">
        <td><strong>
            <a href="floats-139.xht">floats-139</a></strong></td>
        <td><a href="reference/floats-139-ref.xht">=</a> </td>
        <td></td>
        <td>Floats: Ultra basic test
        </td>
      </tr>
      <tr id="floats-140-9.5" class="primary">
        <td><strong>
            <a href="floats-140.xht">floats-140</a></strong></td>
        <td></td>
        <td></td>
        <td>Floats: negative margin test
        </td>
      </tr>
      <tr id="floats-141-9.5" class="primary">
        <td><strong>
            <a href="floats-141.xht">floats-141</a></strong></td>
        <td><a href="reference/floats-141-ref.xht">=</a> </td>
        <td></td>
        <td>Floats: No higher than earlier floats
        </td>
      </tr>
      <tr id="floats-142-9.5" class="primary">
        <td><strong>
            <a href="floats-142.xht">floats-142</a></strong></td>
        <td><a href="reference/floats-142-ref.xht">=</a> </td>
        <td></td>
        <td>Floats: negative margin test
        </td>
      </tr>
      <tr id="floats-143-9.5" class="primary">
        <td><strong>
            <a href="floats-143.xht">floats-143</a></strong></td>
        <td><a href="reference/floats-143-ref.xht">=</a> </td>
        <td></td>
        <td>Nested floats: Basic
        </td>
      </tr>
      <tr id="floats-144-9.5" class="primary">
        <td><strong>
            <a href="floats-144.xht">floats-144</a></strong></td>
        <td><a href="reference/floats-144-ref.xht">=</a> </td>
        <td></td>
        <td>Floats inside blocks
        </td>
      </tr>
      <tr id="floats-145-9.5" class="primary">
        <td><strong>
            <a href="floats-145.xht">floats-145</a></strong></td>
        <td><a href="reference/floats-145-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom margins on floats
        </td>
      </tr>
      <tr id="floats-146-9.5" class="primary">
        <td><strong>
            <a href="floats-146.xht">floats-146</a></strong></td>
        <td><a href="reference/floats-146-ref.xht">=</a> </td>
        <td></td>
        <td>Floats: No higher than earlier floats
        </td>
      </tr>
      <tr id="floats-147-9.5" class="primary">
        <td><strong>
            <a href="floats-147.xht">floats-147</a></strong></td>
        <td><a href="reference/floats-147-ref.xht">=</a> </td>
        <td></td>
        <td>Floats: No more to the right than the right edge of the containing block
        </td>
      </tr>
      <tr id="floats-149-9.5" class="primary">
        <td><strong>
            <a href="floats-149.xht">floats-149</a></strong></td>
        <td><a href="reference/floats-149-ref.xht">=</a> </td>
        <td></td>
        <td>Empty inlines being displaced by floats
        </td>
      </tr>
      <tr id="floats-150-9.5" class="primary">
        <td><strong>
            <a href="floats-150.xht">floats-150</a></strong></td>
        <td><a href="reference/floats-150-ref.xht">=</a> </td>
        <td></td>
        <td>Positioning of floats in tables: auto-width floats with negative outer width
        </td>
      </tr>
      <tr id="floats-151-9.5" class="primary">
        <td><strong>
            <a href="floats-151.xht">floats-151</a></strong></td>
        <td></td>
        <td></td>
        <td>Positioning of floats in tables: auto-width floats with negative outer width
        </td>
      </tr>
      <tr id="floats-152-9.5" class="primary">
        <td><strong>
            <a href="floats-152.xht">floats-152</a></strong></td>
        <td><a href="reference/floats-150-ref.xht">=</a> </td>
        <td></td>
        <td>Positioning of floats in tables: zero-width floats with negative outer width
        </td>
      </tr>
      <tr id="floats-153-9.5" class="primary">
        <td><strong>
            <a href="floats-153.xht">floats-153</a></strong></td>
        <td><a href="reference/floats-153-ref.xht">=</a> </td>
        <td></td>
        <td>Positioning of floats in tables: zero-width floats with negative outer width
        </td>
      </tr>
      <tr id="floats-154-9.5" class="primary">
        <td><strong>
            <a href="floats-154.xht">floats-154</a></strong></td>
        <td><a href="reference/floats-154-ref.xht">=</a> </td>
        <td></td>
        <td>Stacking contexts of relatively positioned content inside floats
        </td>
      </tr>
      <tr id="floats-bfc-001-9.5" class="primary">
        <td><strong>
            <a href="floats-bfc-001.xht">floats-bfc-001</a></strong></td>
        <td><a href="reference/floats-bfc-001-ref.xht">=</a> </td>
        <td></td>
        <td>Floats with overflow:hidden next to them
        </td>
      </tr>
      <tr id="floats-bfc-002-9.5" class="primary">
        <td><strong>
            <a href="floats-bfc-002.xht">floats-bfc-002</a></strong></td>
        <td><a href="reference/floats-bfc-001-ref.xht">=</a> </td>
        <td></td>
        <td>Floats with overflow:hidden next to them
        </td>
      </tr>
      <tr id="floats-rule3-outside-left-001-9.5" class="primary">
        <td><strong>
            <a href="floats-rule3-outside-left-001.xht">floats-rule3-outside-left-001</a></strong></td>
        <td><a href="reference/floats-rule3-outside-left-001-ref.xht">=</a> </td>
        <td></td>
        <td>float placement around other float in BFC but outside containing block
          <ul class="assert">
            <li>Test for float placement around other float in BFC but outside containing block</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-rule3-outside-left-002-9.5" class="primary">
        <td><strong>
            <a href="floats-rule3-outside-left-002.xht">floats-rule3-outside-left-002</a></strong></td>
        <td><a href="reference/floats-rule3-outside-left-002-ref.xht">=</a> </td>
        <td></td>
        <td>float placement around other float in BFC but outside containing block
          <ul class="assert">
            <li>Test for float placement around other float in BFC but outside containing block</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-rule3-outside-right-001-9.5" class="primary">
        <td><strong>
            <a href="floats-rule3-outside-right-001.xht">floats-rule3-outside-right-001</a></strong></td>
        <td><a href="reference/floats-rule3-outside-right-001-ref.xht">=</a> </td>
        <td></td>
        <td>float placement around other float in BFC but outside containing block
          <ul class="assert">
            <li>Test for float placement around other float in BFC but outside containing block</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-rule3-outside-right-002-9.5" class="primary">
        <td><strong>
            <a href="floats-rule3-outside-right-002.xht">floats-rule3-outside-right-002</a></strong></td>
        <td><a href="reference/floats-rule3-outside-right-002-ref.xht">=</a> </td>
        <td></td>
        <td>float placement around other float in BFC but outside containing block
          <ul class="assert">
            <li>Test for float placement around other float in BFC but outside containing block</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-rule7-outside-left-001-9.5" class="primary">
        <td><strong>
            <a href="floats-rule7-outside-left-001.xht">floats-rule7-outside-left-001</a></strong></td>
        <td><a href="reference/floats-rule7-outside-left-001-ref.xht">=</a> </td>
        <td></td>
        <td>float placement around other float in BFC but outside containing block
          <ul class="assert">
            <li>Test for float placement around other float in BFC but outside containing block</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-rule7-outside-right-001-9.5" class="primary">
        <td><strong>
            <a href="floats-rule7-outside-right-001.xht">floats-rule7-outside-right-001</a></strong></td>
        <td><a href="reference/floats-rule7-outside-right-001-ref.xht">=</a> </td>
        <td></td>
        <td>float placement around other float in BFC but outside containing block
          <ul class="assert">
            <li>Test for float placement around other float in BFC but outside containing block</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-001-left-overflow-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-001-left-overflow.xht">floats-wrap-bfc-001-left-overflow</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-001-left-overflow-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-001-left-table-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-001-left-table.xht">floats-wrap-bfc-001-left-table</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-001-left-table-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-001-right-overflow-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-001-right-overflow.xht">floats-wrap-bfc-001-right-overflow</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-001-right-overflow-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-001-right-table-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-001-right-table.xht">floats-wrap-bfc-001-right-table</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-001-right-table-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-002-left-overflow-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-002-left-overflow.xht">floats-wrap-bfc-002-left-overflow</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-002-left-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-002-left-table-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-002-left-table.xht">floats-wrap-bfc-002-left-table</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-002-left-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-002-right-overflow-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-002-right-overflow.xht">floats-wrap-bfc-002-right-overflow</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-002-right-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-002-right-table-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-002-right-table.xht">floats-wrap-bfc-002-right-table</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-002-right-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-003-left-overflow-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-003-left-overflow.xht">floats-wrap-bfc-003-left-overflow</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-003-left-overflow-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-003-left-table-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-003-left-table.xht">floats-wrap-bfc-003-left-table</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-003-left-table-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-003-right-overflow-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-003-right-overflow.xht">floats-wrap-bfc-003-right-overflow</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-003-right-overflow-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-003-right-table-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-003-right-table.xht">floats-wrap-bfc-003-right-table</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-003-right-table-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-004-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-004.xht">floats-wrap-bfc-004</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-004-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-005-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-005.xht">floats-wrap-bfc-005</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-005-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-006-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-006.xht">floats-wrap-bfc-006</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-006-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-006b-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-006b.xht">floats-wrap-bfc-006b</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-006b-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-006c-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-006c.xht">floats-wrap-bfc-006c</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-006c-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-007-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-007.xht">floats-wrap-bfc-007</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-007-ref.xht">=</a> </td>
        <td></td>
        <td>Test for flow around floats
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-bfc-outside-001-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-bfc-outside-001.xht">floats-wrap-bfc-outside-001</a></strong></td>
        <td><a href="reference/floats-wrap-bfc-outside-001-ref.xht">=</a> </td>
        <td></td>
        <td>float
        </td>
      </tr>
      <tr id="floats-wrap-top-below-bfc-001l-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-top-below-bfc-001l.xht">floats-wrap-top-below-bfc-001l</a></strong></td>
        <td><a href="reference/floats-wrap-top-below-001l-ref.xht">=</a> <a href="reference/floats-wrap-top-below-001l-notref.xht">&#x2260;</a> </td>
        <td></td>
        <td>Test for wrapping around floats whose top is below the top of what must wrap around them
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-top-below-bfc-001r-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-top-below-bfc-001r.xht">floats-wrap-top-below-bfc-001r</a></strong></td>
        <td><a href="reference/floats-wrap-top-below-001r-ref.xht">=</a> <a href="reference/floats-wrap-top-below-001r-notref.xht">&#x2260;</a> </td>
        <td></td>
        <td>Test for wrapping around floats whose top is below the top of what must wrap around them
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-top-below-bfc-002l-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-top-below-bfc-002l.xht">floats-wrap-top-below-bfc-002l</a></strong></td>
        <td><a href="reference/floats-wrap-top-below-002l-ref.xht">=</a> </td>
        <td></td>
        <td>Test for wrapping around floats whose top is below the top of what must wrap around them
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-top-below-bfc-002r-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-top-below-bfc-002r.xht">floats-wrap-top-below-bfc-002r</a></strong></td>
        <td><a href="reference/floats-wrap-top-below-002r-ref.xht">=</a> </td>
        <td></td>
        <td>Test for wrapping around floats whose top is below the top of what must wrap around them
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-top-below-bfc-003l-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-top-below-bfc-003l.xht">floats-wrap-top-below-bfc-003l</a></strong></td>
        <td><a href="reference/floats-wrap-top-below-003l-ref.xht">=</a> </td>
        <td></td>
        <td>Test for wrapping around floats whose top is below the top of what must wrap around them
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-top-below-bfc-003r-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-top-below-bfc-003r.xht">floats-wrap-top-below-bfc-003r</a></strong></td>
        <td><a href="reference/floats-wrap-top-below-003r-ref.xht">=</a> </td>
        <td></td>
        <td>Test for wrapping around floats whose top is below the top of what must wrap around them
          <ul class="assert">
            <li>The border box of a table, a block-level replaced element, or an element in the normal flow that establishes a new block formatting context (such as an element with 'overflow' other than 'visible') must not overlap any floats in the same block formatting context as the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-top-below-inline-001l-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-top-below-inline-001l.xht">floats-wrap-top-below-inline-001l</a></strong></td>
        <td><a href="reference/floats-wrap-top-below-001l-ref.xht">=</a> <a href="reference/floats-wrap-top-below-001l-notref.xht">&#x2260;</a> </td>
        <td></td>
        <td>Test for wrapping around floats whose top is below the top of what must wrap around them
          <ul class="assert">
            <li>However, line boxes created next to the float are shortened to make room for the margin box of the float.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-top-below-inline-001r-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-top-below-inline-001r.xht">floats-wrap-top-below-inline-001r</a></strong></td>
        <td><a href="reference/floats-wrap-top-below-001r-ref.xht">=</a> <a href="reference/floats-wrap-top-below-001r-notref.xht">&#x2260;</a> </td>
        <td></td>
        <td>Test for wrapping around floats whose top is below the top of what must wrap around them
          <ul class="assert">
            <li>However, line boxes created next to the float are shortened to make room for the margin box of the float.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-top-below-inline-002l-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-top-below-inline-002l.xht">floats-wrap-top-below-inline-002l</a></strong></td>
        <td><a href="reference/floats-wrap-top-below-002l-ref.xht">=</a> </td>
        <td></td>
        <td>Test for wrapping around floats whose top is below the top of what must wrap around them
          <ul class="assert">
            <li>However, line boxes created next to the float are shortened to make room for the margin box of the float.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-top-below-inline-002r-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-top-below-inline-002r.xht">floats-wrap-top-below-inline-002r</a></strong></td>
        <td><a href="reference/floats-wrap-top-below-002r-ref.xht">=</a> </td>
        <td></td>
        <td>Test for wrapping around floats whose top is below the top of what must wrap around them
          <ul class="assert">
            <li>However, line boxes created next to the float are shortened to make room for the margin box of the float.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-top-below-inline-003l-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-top-below-inline-003l.xht">floats-wrap-top-below-inline-003l</a></strong></td>
        <td><a href="reference/floats-wrap-top-below-003l-ref.xht">=</a> </td>
        <td></td>
        <td>Test for wrapping around floats whose top is below the top of what must wrap around them
          <ul class="assert">
            <li>However, line boxes created next to the float are shortened to make room for the margin box of the float.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-wrap-top-below-inline-003r-9.5" class="primary">
        <td><strong>
            <a href="floats-wrap-top-below-inline-003r.xht">floats-wrap-top-below-inline-003r</a></strong></td>
        <td><a href="reference/floats-wrap-top-below-003r-ref.xht">=</a> </td>
        <td></td>
        <td>Test for wrapping around floats whose top is below the top of what must wrap around them
          <ul class="assert">
            <li>However, line boxes created next to the float are shortened to make room for the margin box of the float.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-zero-height-wrap-001-9.5" class="primary">
        <td><strong>
            <a href="floats-zero-height-wrap-001.xht">floats-zero-height-wrap-001</a></strong></td>
        <td><a href="reference/floats-zero-height-wrap-001-ref.xht">=</a> </td>
        <td></td>
        <td>wrapping around zero-height floats
          <ul class="assert">
            <li>wrapping around zero-height floats</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-zero-height-wrap-002-9.5" class="primary">
        <td><strong>
            <a href="floats-zero-height-wrap-002.xht">floats-zero-height-wrap-002</a></strong></td>
        <td><a href="reference/floats-zero-height-wrap-001-ref.xht">=</a> </td>
        <td></td>
        <td>wrapping around zero-height floats
          <ul class="assert">
            <li>wrapping around zero-height floats</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-008-9.5" class="">
        <td>
            <a href="list-style-position-008.xht">list-style-position-008</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (outside principal box) - floated-left child
          <ul class="assert">
            <li>A floated element (as a child of the principal box) should not affect the horizontal position of the marker box (positioned outside principal box) in relation to the principal box's content</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-009-9.5" class="">
        <td>
            <a href="list-style-position-009.xht">list-style-position-009</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (outside principal box) - floated-right child
          <ul class="assert">
            <li>A floated element (as a child of the principal box) should not affect the horizontal position of the marker box (positioned outside principal box) in relation to the principal box's content</li>
          </ul>
        </td>
      </tr>
      <tr id="margin-collapse-clear-005-9.5" class="may">
        <td>
            <a href="margin-collapse-clear-005.xht">margin-collapse-clear-005</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="margin-collapse-clear-006-9.5" class="">
        <td>
            <a href="margin-collapse-clear-006.xht">margin-collapse-clear-006</a></td>
        <td></td>
        <td></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="margin-collapse-clear-007-9.5" class="">
        <td>
            <a href="margin-collapse-clear-007.xht">margin-collapse-clear-007</a></td>
        <td></td>
        <td></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="margin-collapse-clear-008-9.5" class="">
        <td>
            <a href="margin-collapse-clear-008.xht">margin-collapse-clear-008</a></td>
        <td><a href="reference/margin-collapse-clear-002-ref.xht">=</a> </td>
        <td></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="margin-collapse-clear-009-9.5" class="">
        <td>
            <a href="margin-collapse-clear-009.xht">margin-collapse-clear-009</a></td>
        <td><a href="reference/margin-collapse-clear-003-ref.xht">=</a> </td>
        <td></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="margin-collapse-clear-010-9.5" class="">
        <td>
            <a href="margin-collapse-clear-010.xht">margin-collapse-clear-010</a></td>
        <td></td>
        <td></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="margin-collapse-clear-011-9.5" class="may">
        <td>
            <a href="margin-collapse-clear-011.xht">margin-collapse-clear-011</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="max-height-106-9.5" class="ahem">
        <td>
            <a href="max-height-106.xht">max-height-106</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>max-height - float and overflow
          <ul class="assert">
            <li></li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-max-width-001-9.5" class="ahem">
        <td>
            <a href="max-height-max-width-001.xht">max-height-max-width-001</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>max-height and max-width - float and overflow
          <ul class="assert">
            <li>Space taken up by the horizontal and vertical scrollbars should be taken out of (subtracted from the dimensions of) the containing block formed by the element with the scrollbars. In this test, assuming that the width of vertical scrollbar is 19px and assuming that the height of horizontal scrollbar is 19px, then the dimensions of the painted green area should be 181px by 181px. The height of horizontal scrollbar and the width of vertical scrollbar are entirely user-settable in most graphical user agents.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-106-9.5" class="primary ahem">
        <td><strong>
            <a href="max-width-106.xht">max-width-106</a></strong></td>
        <td><a href="reference/max-width-105-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>max-width - float and overflow
          <ul class="assert">
            <li>'max-width' specifies a fixed maximum used width. If the used width is greater than max-width, then the computed value of max-width is used as the computed value for width. A floated box should not become wider than its declared max-width.</li>
          </ul>
        </td>
      </tr>
      <tr id="stack-floats-001-9.5" class="ahem">
        <td>
            <a href="stack-floats-001.xht">stack-floats-001</a></td>
        <td><a href="reference/stack-floats-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Stacking order: Floats and Blocks in Inlines
        </td>
      </tr>
      <tr id="stack-floats-002-9.5" class="ahem">
        <td>
            <a href="stack-floats-002.xht">stack-floats-002</a></td>
        <td><a href="reference/stack-floats-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Stacking order: Floats and Blocks in Inlines
        </td>
      </tr>
      <tr id="stack-floats-003-9.5" class="ahem">
        <td>
            <a href="stack-floats-003.xht">stack-floats-003</a></td>
        <td><a href="reference/stack-floats-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Stacking order: Floats and Blocks in Inlines
        </td>
      </tr>
      <tr id="stack-floats-004-9.5" class="ahem">
        <td>
            <a href="stack-floats-004.xht">stack-floats-004</a></td>
        <td><a href="reference/stack-floats-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Stacking order: Floats and Blocks in Inlines
        </td>
      </tr>
    </tbody>
    <tbody id="s9.5.#bfc-next-to-float">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.5.#img-float2p">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.5.#img-floatclear">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.5.#img-floateg">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.5.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.5.1">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#float-position">9.5.1 Positioning the float: the 'float' property</a></th></tr>
      <!-- 50 tests -->
      <tr id="c414-flt-000-9.5.1" class="">
        <td>
            <a href="c414-flt-000.xht">c414-flt-000</a></td>
        <td></td>
        <td></td>
        <td>Non-Replaced Float Alignment to Containing Block Edges
          <ul class="assert">
            <li>A floated box is shifted to the left or right until its outer edge touches the containing block edge.</li>
          </ul>
        </td>
      </tr>
      <tr id="c414-flt-001-9.5.1" class="">
        <td>
            <a href="c414-flt-001.xht">c414-flt-001</a></td>
        <td></td>
        <td></td>
        <td>Non-Replaced Floating Left vs. Right
        </td>
      </tr>
      <tr id="c414-flt-002-9.5.1" class="image">
        <td>
            <a href="c414-flt-002.xht">c414-flt-002</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Replaced Float Alignment to Containing Block Edges
        </td>
      </tr>
      <tr id="c414-flt-003-9.5.1" class="image">
        <td>
            <a href="c414-flt-003.xht">c414-flt-003</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Replaced Floating Left vs. Right
        </td>
      </tr>
      <tr id="c414-flt-ln-000-9.5.1" class="">
        <td>
            <a href="c414-flt-ln-000.xht">c414-flt-ln-000</a></td>
        <td></td>
        <td></td>
        <td>Vertical Position of Floats
        </td>
      </tr>
      <tr id="c414-flt-ln-001-9.5.1" class="image">
        <td>
            <a href="c414-flt-ln-001.xht">c414-flt-ln-001</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Vertical Position of Floats
        </td>
      </tr>
      <tr id="c414-flt-ln-002-9.5.1" class="interact">
        <td>
            <a href="c414-flt-ln-002.xht">c414-flt-ln-002</a></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Vertical Position of Floats
        </td>
      </tr>
      <tr id="c414-flt-ln-003-9.5.1" class="">
        <td>
            <a href="c414-flt-ln-003.xht">c414-flt-ln-003</a></td>
        <td></td>
        <td></td>
        <td>Vertical Position of Floats
        </td>
      </tr>
      <tr id="c5525-flt-l-000-9.5.1" class="image">
        <td>
            <a href="c5525-flt-l-000.xht">c5525-flt-l-000</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Floating Elements
        </td>
      </tr>
      <tr id="c5525-flt-r-000-9.5.1" class="image">
        <td>
            <a href="c5525-flt-r-000.xht">c5525-flt-r-000</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>float
        </td>
      </tr>
      <tr id="c5525-fltcont-000-9.5.1" class="image">
        <td>
            <a href="c5525-fltcont-000.xht">c5525-fltcont-000</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>float
        </td>
      </tr>
      <tr id="c5525-fltmult-000-9.5.1" class="image">
        <td>
            <a href="c5525-fltmult-000.xht">c5525-fltmult-000</a></td>
        <td><a href="reference/c5525-fltmult-000-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>float
        </td>
      </tr>
      <tr id="float-001-9.5.1" class="primary">
        <td><strong>
            <a href="float-001.xht">float-001</a></strong></td>
        <td></td>
        <td></td>
        <td>Float set to 'left'
          <ul class="assert">
            <li>The 'float' property set to 'left' correctly aligns the element to the left and text/objects flow around it.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-002-9.5.1" class="primary">
        <td><strong>
            <a href="float-002.xht">float-002</a></strong></td>
        <td></td>
        <td></td>
        <td>Float set to 'right'
          <ul class="assert">
            <li>The 'float' property set to 'right' correctly aligns the element to the right and text/objects flow around it.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-003-9.5.1" class="primary">
        <td><strong>
            <a href="float-003.xht">float-003</a></strong></td>
        <td><a href="reference/float-003-ref.xht">=</a> </td>
        <td></td>
        <td>Float set to 'none'
          <ul class="assert">
            <li>The 'float' property set to 'none' does not float the element.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-004-9.5.1" class="primary">
        <td><strong>
            <a href="float-004.xht">float-004</a></strong></td>
        <td></td>
        <td></td>
        <td>Float set to 'inherit'
          <ul class="assert">
            <li>The 'float' property set to 'inherit' correctly inherits the value from the parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-001-9.5.1" class="">
        <td>
            <a href="float-applies-to-001.xht">float-applies-to-001</a></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-001a-9.5.1" class="">
        <td>
            <a href="float-applies-to-001a.xht">float-applies-to-001a</a></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>If 'float' has a value other than 'none' and is applied to an element with a specified 'display' value of 'table-row-group', then the box is floated and its computed 'display' value is set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-002-9.5.1" class="">
        <td>
            <a href="float-applies-to-002.xht">float-applies-to-002</a></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-003-9.5.1" class="">
        <td>
            <a href="float-applies-to-003.xht">float-applies-to-003</a></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-004-9.5.1" class="">
        <td>
            <a href="float-applies-to-004.xht">float-applies-to-004</a></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-004a-9.5.1" class="">
        <td>
            <a href="float-applies-to-004a.xht">float-applies-to-004a</a></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>If 'float' has a value other than 'none' and is applied to an element with a specified 'display' value of 'table-row', then the box is floated and its computed 'display' value is set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-005-9.5.1" class="">
        <td>
            <a href="float-applies-to-005.xht">float-applies-to-005</a></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table-column-group' in which case the box is floated and its computed 'display' value is set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-006-9.5.1" class="">
        <td>
            <a href="float-applies-to-006.xht">float-applies-to-006</a></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table-column' in which case the box is floated and its computed 'display' value is set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-007-9.5.1" class="">
        <td>
            <a href="float-applies-to-007.xht">float-applies-to-007</a></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table-cell' in which case the box is floated and its computed 'display' value is set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-008-9.5.1" class="">
        <td>
            <a href="float-applies-to-008.xht">float-applies-to-008</a></td>
        <td><a href="reference/float-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-008a-9.5.1" class="">
        <td>
            <a href="float-applies-to-008a.xht">float-applies-to-008a</a></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to inline
          <ul class="assert">
            <li>If 'float' has a value other than 'none' and is applied to an element with a specified 'display' value of 'inline', then the box is floated and its computed 'display' value is set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-009-9.5.1" class="">
        <td>
            <a href="float-applies-to-009.xht">float-applies-to-009</a></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-010-9.5.1" class="">
        <td>
            <a href="float-applies-to-010.xht">float-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Float applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-011-9.5.1" class="">
        <td>
            <a href="float-applies-to-011.xht">float-applies-to-011</a></td>
        <td></td>
        <td></td>
        <td>Float applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-012-9.5.1" class="">
        <td>
            <a href="float-applies-to-012.xht">float-applies-to-012</a></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-013-9.5.1" class="">
        <td>
            <a href="float-applies-to-013.xht">float-applies-to-013</a></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-014-9.5.1" class="">
        <td>
            <a href="float-applies-to-014.xht">float-applies-to-014</a></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-015-9.5.1" class="">
        <td>
            <a href="float-applies-to-015.xht">float-applies-to-015</a></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-030-9.5.1" class="primary image">
        <td><strong>
            <a href="floats-030.xht">floats-030</a></strong></td>
        <td><a href="reference/floats-030-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Position of floated elements in relation to previous elements
          <ul class="assert">
            <li>Outer top of a floating box cannot be higher than the outer top of any block or floated box generated by an element earlier in the source document.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-031-9.5.1" class="primary image">
        <td><strong>
            <a href="floats-031.xht">floats-031</a></strong></td>
        <td><a href="reference/floats-031-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Position of floated elements in relation to previous inline elements
          <ul class="assert">
            <li>Outer top of floating box cannot be higher than the top of any line-box containing a box generated by an element earlier in the source document.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-placement-vertical-001a-9.5.1" class="primary">
        <td><strong>
            <a href="floats-placement-vertical-001a.xht">floats-placement-vertical-001a</a></strong></td>
        <td><a href="reference/floats-placement-vertical-001-ref.xht">=</a> </td>
        <td></td>
        <td>Test for float placement rules
          <ul class="assert">
            <li>A floating box must be placed as high as possible.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-placement-vertical-001b-9.5.1" class="primary">
        <td><strong>
            <a href="floats-placement-vertical-001b.xht">floats-placement-vertical-001b</a></strong></td>
        <td><a href="reference/floats-placement-vertical-001-ref.xht">=</a> </td>
        <td></td>
        <td>Test for float placement rules
          <ul class="assert">
            <li>A floating box must be placed as high as possible.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-placement-vertical-001c-9.5.1" class="primary">
        <td><strong>
            <a href="floats-placement-vertical-001c.xht">floats-placement-vertical-001c</a></strong></td>
        <td><a href="reference/floats-placement-vertical-001-ref.xht">=</a> </td>
        <td></td>
        <td>Test for float placement rules
          <ul class="assert">
            <li>A floating box must be placed as high as possible.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-placement-vertical-003-9.5.1" class="primary">
        <td><strong>
            <a href="floats-placement-vertical-003.xht">floats-placement-vertical-003</a></strong></td>
        <td><a href="reference/floats-placement-vertical-003-ref.xht">=</a> </td>
        <td></td>
        <td>Test for float placement rules
          <ul class="assert">
            <li>The outer top of a floating box may not be higher than the outer top of any block or floated box generated by an element earlier in the source document.</li>
            <li>A floating box must be placed as high as possible.</li>
          </ul>
        </td>
      </tr>
      <tr id="floats-placement-vertical-004-9.5.1" class="primary">
        <td><strong>
            <a href="floats-placement-vertical-004.xht">floats-placement-vertical-004</a></strong></td>
        <td><a href="reference/floats-placement-vertical-004-ref.xht">=</a> <a href="reference/floats-placement-vertical-004-ref2.xht">=</a> </td>
        <td></td>
        <td>Test for float placement rules
          <ul class="assert">
            <li>A floating box must be placed as high as possible.</li>
          </ul>
        </td>
      </tr>
      <tr id="grid-float-001-9.5.1" class="">
        <td>
            <a href="grid-float-001.xht">grid-float-001</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>'float' has no effect on grid items
        </td>
      </tr>
      <tr id="grid-inline-float-001-9.5.1" class="">
        <td>
            <a href="grid-inline-float-001.xht">grid-inline-float-001</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>'float' has no effect on grid items within an inline grid
        </td>
      </tr>
      <tr id="inlines-013-9.5.1" class="image">
        <td>
            <a href="inlines-013.xht">inlines-013</a></td>
        <td><a href="reference/inlines-013-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Inline box model: space taken by images before floats
        </td>
      </tr>
      <tr id="list-style-position-006-9.5.1" class="">
        <td>
            <a href="list-style-position-006.xht">list-style-position-006</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (inside principal box) - block box with 'float:left' (as child of principal box)
          <ul class="assert">
            <li>Since a marker box is the first inline element in the principal box when 'list-style-position:inside', the following block box (floated to the left) must visually appear before the marker box in the rendered document</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-007-9.5.1" class="">
        <td>
            <a href="list-style-position-007.xht">list-style-position-007</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (inside principal box) - block box with 'float:right' (as child of principal box)
          <ul class="assert">
            <li></li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-014-9.5.1" class="">
        <td>
            <a href="list-style-position-014.xht">list-style-position-014</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (outside principal box) - floated :before pseudo-element list-item ('list-style-position:inside')
          <ul class="assert">
            <li>When the :before element is set as a list-item, it establishes a principal box into which a marker box is placed (when 'list-style-position:inside). Since this :before pseudo element is floated left, the document tree content of the associated element must appear alongside (after) this :before pseudo element. The position of the marker box of the associated element must not be affected, as it must still appear to the outside left edge of it's principal box (since 'list-style-position:outside').</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-015-9.5.1" class="">
        <td>
            <a href="list-style-position-015.xht">list-style-position-015</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (inside principal box) - floated :before pseudo-element list-item ('list-style-position:outside')
          <ul class="assert">
            <li>When the :before element is set as a list-item, it establishes a principal box and a marker box which is positioned outside of that principal box (since 'list-style-position:outside). Since this :before pseudo element is floated left, the principal box (and marker box, since 'list-style-position:inside') of the associated element must appear alongside (after) this :before pseudo element. The position of the marker box of the :before pseudo element must still appear to the outside left edge of it's associated element's principal box (since 'list-style-position:outside').</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-016-9.5.1" class="">
        <td>
            <a href="list-style-position-016.xht">list-style-position-016</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (inside principal box) - floated :before pseudo-element list-item ('list-style-position:inside')
          <ul class="assert">
            <li>When the :before element is set as a list-item, it establishes a principal box into which a marker box is placed (when 'list-style-position:inside). Since the :before pseudo element is floated left, the principal box (and marker box, since 'list-style-position:inside') of the associated element must appear alongside (after) the :before pseudo element.</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-017-9.5.1" class="">
        <td>
            <a href="list-style-position-017.xht">list-style-position-017</a></td>
        <td></td>
        <td></td>
        <td>Marker box position (outside principal box) - floated :before pseudo-element list-item ('list-style-position:outside')
          <ul class="assert">
            <li>When the :before element is set as a list-item, it establishes a principal box into which a marker box is placed (when 'list-style-position:inside). Since the :before pseudo element is floated left, The document tree content of the associated element must appear alongside (after) the :before pseudo element. Since the marker box of the :before pseudo element should be positioned at the same coordinate as the associated element's marker box, either bullet could appear in front of the other (since stacking levels of marker boxes aren't defined in CSS2.1, in this context).</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.5.1.#float-rules">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.5.1.#propdef-float">
      <!-- 15 tests -->
      <tr id="float-applies-to-001-9.5.1.#propdef-float" class="primary">
        <td><strong>
            <a href="float-applies-to-001.xht">float-applies-to-001</a></strong></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-002-9.5.1.#propdef-float" class="primary">
        <td><strong>
            <a href="float-applies-to-002.xht">float-applies-to-002</a></strong></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-003-9.5.1.#propdef-float" class="primary">
        <td><strong>
            <a href="float-applies-to-003.xht">float-applies-to-003</a></strong></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-004-9.5.1.#propdef-float" class="primary">
        <td><strong>
            <a href="float-applies-to-004.xht">float-applies-to-004</a></strong></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-005-9.5.1.#propdef-float" class="primary">
        <td><strong>
            <a href="float-applies-to-005.xht">float-applies-to-005</a></strong></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table-column-group' in which case the box is floated and its computed 'display' value is set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-006-9.5.1.#propdef-float" class="primary">
        <td><strong>
            <a href="float-applies-to-006.xht">float-applies-to-006</a></strong></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table-column' in which case the box is floated and its computed 'display' value is set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-007-9.5.1.#propdef-float" class="primary">
        <td><strong>
            <a href="float-applies-to-007.xht">float-applies-to-007</a></strong></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table-cell' in which case the box is floated and its computed 'display' value is set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-008-9.5.1.#propdef-float" class="primary">
        <td><strong>
            <a href="float-applies-to-008.xht">float-applies-to-008</a></strong></td>
        <td><a href="reference/float-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-009-9.5.1.#propdef-float" class="primary">
        <td><strong>
            <a href="float-applies-to-009.xht">float-applies-to-009</a></strong></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-010-9.5.1.#propdef-float" class="primary">
        <td><strong>
            <a href="float-applies-to-010.xht">float-applies-to-010</a></strong></td>
        <td></td>
        <td></td>
        <td>Float applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-011-9.5.1.#propdef-float" class="primary">
        <td><strong>
            <a href="float-applies-to-011.xht">float-applies-to-011</a></strong></td>
        <td></td>
        <td></td>
        <td>Float applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-012-9.5.1.#propdef-float" class="primary">
        <td><strong>
            <a href="float-applies-to-012.xht">float-applies-to-012</a></strong></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-013-9.5.1.#propdef-float" class="primary">
        <td><strong>
            <a href="float-applies-to-013.xht">float-applies-to-013</a></strong></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-014-9.5.1.#propdef-float" class="primary">
        <td><strong>
            <a href="float-applies-to-014.xht">float-applies-to-014</a></strong></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-015-9.5.1.#propdef-float" class="primary">
        <td><strong>
            <a href="float-applies-to-015.xht">float-applies-to-015</a></strong></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'float' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.5.1.#x37">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.5.2">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.5.2">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#flow-control">9.5.2 Controlling flow next to floats: the 'clear' property</a></th></tr>
      <!-- 60 tests -->
      <tr id="c5526-fltclr-000-9.5.2" class="ahem image">
        <td>
            <a href="c5526-fltclr-000.xht">c5526-fltclr-000</a></td>
        <td><a href="reference/c5526-fltclr-000-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>clear
        </td>
      </tr>
      <tr id="clear-001-9.5.2" class="">
        <td>
            <a href="clear-001.xht">clear-001</a></td>
        <td><a href="reference/clear-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear set to 'left'
          <ul class="assert">
            <li>The 'clear' property set to a value of 'left' positions the current element to clear left-floated elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-002-9.5.2" class="">
        <td>
            <a href="clear-002.xht">clear-002</a></td>
        <td><a href="reference/clear-002-ref.xht">=</a> </td>
        <td></td>
        <td>Clear set to 'right'
          <ul class="assert">
            <li>The 'clear' property set to a value of 'right' positions the current element to clear right-floated elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-003-9.5.2" class="">
        <td>
            <a href="clear-003.xht">clear-003</a></td>
        <td><a href="reference/clear-003-ref.xht">=</a> </td>
        <td></td>
        <td>Clear set to 'both'
          <ul class="assert">
            <li>The 'clear' property set to a value of 'both' positions the current element to clear both left- and right-floated elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-004-9.5.2" class="">
        <td>
            <a href="clear-004.xht">clear-004</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Clear set to 'none'
          <ul class="assert">
            <li>The 'clear' property set to a value of 'none' does not perform any clearing of floated elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-005-9.5.2" class="">
        <td>
            <a href="clear-005.xht">clear-005</a></td>
        <td><a href="reference/clear-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear set to 'inherit'
          <ul class="assert">
            <li>The 'clear' property set to 'inherit', inherits the computed value from the parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-000-9.5.2" class="">
        <td>
            <a href="clear-applies-to-000.xht">clear-applies-to-000</a></td>
        <td><a href="reference/clear-applies-to-000-ref.xht">=</a> </td>
        <td></td>
        <td>Clear on floats after floats with display:none blocks between them
        </td>
      </tr>
      <tr id="clear-applies-to-001-9.5.2" class="">
        <td>
            <a href="clear-applies-to-001.xht">clear-applies-to-001</a></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-002-9.5.2" class="">
        <td>
            <a href="clear-applies-to-002.xht">clear-applies-to-002</a></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-003-9.5.2" class="">
        <td>
            <a href="clear-applies-to-003.xht">clear-applies-to-003</a></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-004-9.5.2" class="">
        <td>
            <a href="clear-applies-to-004.xht">clear-applies-to-004</a></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-005-9.5.2" class="">
        <td>
            <a href="clear-applies-to-005.xht">clear-applies-to-005</a></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-006-9.5.2" class="">
        <td>
            <a href="clear-applies-to-006.xht">clear-applies-to-006</a></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-007-9.5.2" class="">
        <td>
            <a href="clear-applies-to-007.xht">clear-applies-to-007</a></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-008-9.5.2" class="primary">
        <td><strong>
            <a href="clear-applies-to-008.xht">clear-applies-to-008</a></strong></td>
        <td><a href="reference/clear-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Clear on inline elements
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-009-9.5.2" class="">
        <td>
            <a href="clear-applies-to-009.xht">clear-applies-to-009</a></td>
        <td><a href="reference/clear-applies-to-009-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'clear' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-010-9.5.2" class="">
        <td>
            <a href="clear-applies-to-010.xht">clear-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Clear applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'clear' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-011-9.5.2" class="">
        <td>
            <a href="clear-applies-to-011.xht">clear-applies-to-011</a></td>
        <td></td>
        <td></td>
        <td>Clear applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'clear' property applies to elements with a display of 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-012-9.5.2" class="">
        <td>
            <a href="clear-applies-to-012.xht">clear-applies-to-012</a></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-013-9.5.2" class="">
        <td>
            <a href="clear-applies-to-013.xht">clear-applies-to-013</a></td>
        <td><a href="reference/clear-applies-to-009-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'clear' property does apply to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-014-9.5.2" class="">
        <td>
            <a href="clear-applies-to-014.xht">clear-applies-to-014</a></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-015-9.5.2" class="">
        <td>
            <a href="clear-applies-to-015.xht">clear-applies-to-015</a></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'table-caption' because an anonymous table wrapper box will be generated for a misparented table-caption element and such anonymous table wrapper box creates a block formatting context. Clear will not apply to floats outside a block formatting context.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-016-9.5.2" class="primary">
        <td><strong>
            <a href="clear-applies-to-016.xht">clear-applies-to-016</a></strong></td>
        <td><a href="reference/clear-applies-to-009-ref.xht">=</a> </td>
        <td></td>
        <td>'clear' applied to the table wrapper box (has 1 caption at top)
          <ul class="assert">
            <li>The 'clear' property apply to elements with a display of 'table' and is applied to the table wrapper box and not on the table box. In this test, the table wrapper box has a table caption placed before the table box.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-017-9.5.2" class="primary">
        <td><strong>
            <a href="clear-applies-to-017.xht">clear-applies-to-017</a></strong></td>
        <td><a href="reference/clear-applies-to-009-ref.xht">=</a> </td>
        <td></td>
        <td>'clear' applied to the table wrapper box (has 1 caption at bottom)
          <ul class="assert">
            <li>The 'clear' property apply to elements with a display of 'table' and is applied to the table wrapper box and not on the table box. In this test, the table wrapper box has a table caption placed after the table box.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-clearance-calculation-001-9.5.2" class="primary ahem image">
        <td><strong>
            <a href="clear-clearance-calculation-001.xht">clear-clearance-calculation-001</a></strong></td>
        <td><a href="reference/clear-clearance-calculation-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Clearance calculations - clear box non-collapsing margins with larger margings than clearance
          <ul class="assert">
            <li>When a cleared element has more top margin than the height of the floated element the margin is collpased with previous in-flow children. The element is then placed at the point of the resulting collapsed margin.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-clearance-calculation-002-9.5.2" class="primary ahem image">
        <td><strong>
            <a href="clear-clearance-calculation-002.xht">clear-clearance-calculation-002</a></strong></td>
        <td><a href="reference/clear-clearance-calculation-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Clearance calculations - clear box non-collapsing margins with larger clearance than margins
          <ul class="assert">
            <li>If after margin collapsing the position of the cleared element is above or hypothetically positioned within the layout position of the float. Then the cleared element is positioned directly below the floated element.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-clearance-calculation-003-9.5.2" class="primary">
        <td><strong>
            <a href="clear-clearance-calculation-003.xht">clear-clearance-calculation-003</a></strong></td>
        <td><a href="reference/clear-clearance-calculation-003-ref.xht">=</a> </td>
        <td></td>
        <td>Clearance calculations - clear box collapsing margins
          <ul class="assert">
            <li>When a cleared element has more top margin than the height of the floated element the margin is collpased with previous in-flow children. The element is then placed at the point of the resulting collapsed margin.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-clearance-calculation-004-9.5.2" class="primary">
        <td><strong>
            <a href="clear-clearance-calculation-004.xht">clear-clearance-calculation-004</a></strong></td>
        <td><a href="reference/clear-clearance-calculation-004-ref.xht">=</a> </td>
        <td></td>
        <td>clear and clearance calculation - margin collapsing
          <ul class="assert">
            <li>With clear: left, the top border edge of the last paragraph must be below the floating paragraph, i.e., 50px lower. That means that the margin-bottom of the first paragraph must not collapse with the margin-top of the last paragraph and clearance must be added such that clearance + margin-top of last paragraph = 50px, i.e., clearance = 50px - margin-top of last paragraph = 50px - 75px = - 25px.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-clearance-calculation-005-9.5.2" class="primary">
        <td><strong>
            <a href="clear-clearance-calculation-005.xht">clear-clearance-calculation-005</a></strong></td>
        <td><a href="reference/clear-clearance-calculation-005-ref.xht">=</a> </td>
        <td></td>
        <td>clear and clearance calculation - margin collapsing
          <ul class="assert">
            <li>With clear: none, the first and last paragraphs' margins collapse and the last paragraph's top border edge should be flush with the top of the floating paragraph.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-default-inheritance-001-9.5.2" class="primary">
        <td><strong>
            <a href="clear-default-inheritance-001.xht">clear-default-inheritance-001</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Clear default inheritance
          <ul class="assert">
            <li>The 'clear' property is not inherited by default from the parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-float-001-9.5.2" class="primary">
        <td><strong>
            <a href="clear-float-001.xht">clear-float-001</a></strong></td>
        <td><a href="reference/clear-float-001-ref.xht">=</a> </td>
        <td></td>
        <td>Child elements are not impacted by 'clear'
          <ul class="assert">
            <li>Child elements of the container are not impacted by clear.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-float-002-9.5.2" class="primary">
        <td><strong>
            <a href="clear-float-002.xht">clear-float-002</a></strong></td>
        <td><a href="reference/clear-float-002-ref.xht">=</a> </td>
        <td></td>
        <td>Clearance of floats and top margin affect
          <ul class="assert">
            <li>Clearance is introduced as spacing above the top margin.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-float-003-9.5.2" class="primary">
        <td><strong>
            <a href="clear-float-003.xht">clear-float-003</a></strong></td>
        <td><a href="reference/clear-float-003-ref.xht">=</a> </td>
        <td></td>
        <td>Clear floats handled after margin collapsing
          <ul class="assert">
            <li>Clearance is introduced as spacing above the top margin after margin collapsing occurs.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-float-004-9.5.2" class="primary">
        <td><strong>
            <a href="clear-float-004.xht">clear-float-004</a></strong></td>
        <td><a href="reference/clear-float-004-ref.xht">=</a> </td>
        <td></td>
        <td>Clear set to 'left' with earlier left floated boxes
          <ul class="assert">
            <li>Boxes with 'clear: left' need to clear earlier left floated boxes.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-float-005-9.5.2" class="primary">
        <td><strong>
            <a href="clear-float-005.xht">clear-float-005</a></strong></td>
        <td><a href="reference/clear-float-005-ref.xht">=</a> </td>
        <td></td>
        <td>Clear set to 'right' with earlier right floated boxes
          <ul class="assert">
            <li>Boxes with 'clear: right' need to clear earlier right floated boxes.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-float-006-9.5.2" class="primary">
        <td><strong>
            <a href="clear-float-006.xht">clear-float-006</a></strong></td>
        <td><a href="reference/clear-float-006-ref.xht">=</a> </td>
        <td></td>
        <td>Clear set to 'both' with earlier floated boxes
          <ul class="assert">
            <li>Boxes with 'clear: both' need to clear earlier floated boxes.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-float-007-9.5.2" class="primary">
        <td><strong>
            <a href="clear-float-007.xht">clear-float-007</a></strong></td>
        <td><a href="reference/adjacent-floats-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear set to 'left' with later left floated boxes
          <ul class="assert">
            <li>Boxes with 'clear: left' do not clear later left floated boxes.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-float-008-9.5.2" class="primary">
        <td><strong>
            <a href="clear-float-008.xht">clear-float-008</a></strong></td>
        <td><a href="reference/adjacent-floats-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear set to 'right' with later right floated boxes
          <ul class="assert">
            <li>Boxes with 'clear: right' do not clear later right floated boxes.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-float-009-9.5.2" class="primary">
        <td><strong>
            <a href="clear-float-009.xht">clear-float-009</a></strong></td>
        <td><a href="reference/clear-float-009-ref.xht">=</a> </td>
        <td></td>
        <td>Clear set to 'both' with later floated boxes
          <ul class="assert">
            <li>Boxes with 'clear: both' do not clear later floated boxes.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-initial-001-9.5.2" class="primary">
        <td><strong>
            <a href="clear-initial-001.xht">clear-initial-001</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Clear initial value
          <ul class="assert">
            <li>The 'clear' property has a initial value of 'none'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-inline-001-9.5.2" class="primary">
        <td><strong>
            <a href="clear-inline-001.xht">clear-inline-001</a></strong></td>
        <td><a href="reference/clear-inline-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear on inline elements
          <ul class="assert">
            <li>Clear cannot be applied to an inline box.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-runin-001-9.5.2" class="primary">
        <td><strong>
            <a href="clear-runin-001.xht">clear-runin-001</a></strong></td>
        <td></td>
        <td></td>
        <td>Clear applies to final block box of a run-in
          <ul class="assert">
            <li>Clearance only applies to the final block box of a run-in element.</li>
          </ul>
        </td>
      </tr>
      <tr id="clearance-006-9.5.2" class="primary">
        <td><strong>
            <a href="clearance-006.xht">clearance-006</a></strong></td>
        <td><a href="reference/clearance-006-ref.xht">=</a> </td>
        <td></td>
        <td>Zero Clearance
          <ul class="assert">
            <li>Zero clearance is not the same as no clearance.</li>
          </ul>
        </td>
      </tr>
      <tr id="margin-collapse-033-9.5.2" class="">
        <td>
            <a href="margin-collapse-033.xht">margin-collapse-033</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>margin collapsing - clear
          <ul class="assert">
            <li>Margin-top of following siblings of a block on which 'clear' has been set (to a different value than 'none') must not be substracted when calculating clearance. When an element's own margins collapse, and that element has had clearance applied to it, its top margin collapses with the adjoining margins of following siblings.</li>
          </ul>
        </td>
      </tr>
      <tr id="margin-collapse-034-9.5.2" class="">
        <td>
            <a href="margin-collapse-034.xht">margin-collapse-034</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>margin collapsing - clear
          <ul class="assert">
            <li>Margin-top of following siblings of a block on which 'clear' has been set (to a different value than 'none') must not be substracted when calculating clearance. When an element's own margins collapse, and that element has had clearance applied to it, its top margin collapses with the adjoining margins of following siblings.</li>
          </ul>
        </td>
      </tr>
      <tr id="margin-collapse-035-9.5.2" class="">
        <td>
            <a href="margin-collapse-035.xht">margin-collapse-035</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>margin collapsing - clear
          <ul class="assert">
            <li>Margin-top of following siblings of a block on which 'clear' has been set (to a different value than 'none') must not be substracted when calculating clearance. When an element's own margins collapse, and that element has had clearance applied to it, its top margin collapses with the adjoining margins of following siblings.</li>
          </ul>
        </td>
      </tr>
      <tr id="margin-collapse-clear-000-9.5.2" class="primary">
        <td><strong>
            <a href="margin-collapse-clear-000.xht">margin-collapse-clear-000</a></strong></td>
        <td></td>
        <td></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="margin-collapse-clear-001-9.5.2" class="primary">
        <td><strong>
            <a href="margin-collapse-clear-001.xht">margin-collapse-clear-001</a></strong></td>
        <td></td>
        <td></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="margin-collapse-clear-002-9.5.2" class="primary">
        <td><strong>
            <a href="margin-collapse-clear-002.xht">margin-collapse-clear-002</a></strong></td>
        <td><a href="reference/margin-collapse-clear-002-ref.xht">=</a> </td>
        <td></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="margin-collapse-clear-003-9.5.2" class="primary">
        <td><strong>
            <a href="margin-collapse-clear-003.xht">margin-collapse-clear-003</a></strong></td>
        <td><a href="reference/margin-collapse-clear-003-ref.xht">=</a> </td>
        <td></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="margin-collapse-clear-004-9.5.2" class="primary">
        <td><strong>
            <a href="margin-collapse-clear-004.xht">margin-collapse-clear-004</a></strong></td>
        <td></td>
        <td></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="margin-collapse-clear-005-9.5.2" class="primary may">
        <td><strong>
            <a href="margin-collapse-clear-005.xht">margin-collapse-clear-005</a></strong></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="margin-collapse-clear-006-9.5.2" class="primary">
        <td><strong>
            <a href="margin-collapse-clear-006.xht">margin-collapse-clear-006</a></strong></td>
        <td></td>
        <td></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="margin-collapse-clear-007-9.5.2" class="primary">
        <td><strong>
            <a href="margin-collapse-clear-007.xht">margin-collapse-clear-007</a></strong></td>
        <td></td>
        <td></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="margin-collapse-clear-008-9.5.2" class="primary">
        <td><strong>
            <a href="margin-collapse-clear-008.xht">margin-collapse-clear-008</a></strong></td>
        <td><a href="reference/margin-collapse-clear-002-ref.xht">=</a> </td>
        <td></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="margin-collapse-clear-009-9.5.2" class="primary">
        <td><strong>
            <a href="margin-collapse-clear-009.xht">margin-collapse-clear-009</a></strong></td>
        <td><a href="reference/margin-collapse-clear-003-ref.xht">=</a> </td>
        <td></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="margin-collapse-clear-010-9.5.2" class="primary">
        <td><strong>
            <a href="margin-collapse-clear-010.xht">margin-collapse-clear-010</a></strong></td>
        <td></td>
        <td></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="margin-collapse-clear-011-9.5.2" class="primary may">
        <td><strong>
            <a href="margin-collapse-clear-011.xht">margin-collapse-clear-011</a></strong></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Margin Collapsing with Clearance
        </td>
      </tr>
      <tr id="run-in-clear-001-9.5.2" class="primary">
        <td><strong>
            <a href="run-in-clear-001.xht">run-in-clear-001</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td></td>
        <td>Run in - clear on a run-in should apply to the block it runs into
          <ul class="assert">
            <li>Tests that clear on run-ins applies to their block.</li>
          </ul>
        </td>
      </tr>
      <tr id="run-in-clear-002-9.5.2" class="primary dom">
        <td><strong>
            <a href="run-in-clear-002.xht">run-in-clear-002</a></strong></td>
        <td><a href="reference/run-in-text-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Run in - clear on a run-in should apply to the block it runs into
          <ul class="assert">
            <li>Tests that dynamically set clear on run-ins applies to their block.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.5.2.#clearance">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.5.2.#propdef-clear">
      <!-- 21 tests -->
      <tr id="clear-001-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-001.xht">clear-001</a></strong></td>
        <td><a href="reference/clear-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear set to 'left'
          <ul class="assert">
            <li>The 'clear' property set to a value of 'left' positions the current element to clear left-floated elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-002-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-002.xht">clear-002</a></strong></td>
        <td><a href="reference/clear-002-ref.xht">=</a> </td>
        <td></td>
        <td>Clear set to 'right'
          <ul class="assert">
            <li>The 'clear' property set to a value of 'right' positions the current element to clear right-floated elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-003-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-003.xht">clear-003</a></strong></td>
        <td><a href="reference/clear-003-ref.xht">=</a> </td>
        <td></td>
        <td>Clear set to 'both'
          <ul class="assert">
            <li>The 'clear' property set to a value of 'both' positions the current element to clear both left- and right-floated elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-004-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-004.xht">clear-004</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Clear set to 'none'
          <ul class="assert">
            <li>The 'clear' property set to a value of 'none' does not perform any clearing of floated elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-005-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-005.xht">clear-005</a></strong></td>
        <td><a href="reference/clear-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear set to 'inherit'
          <ul class="assert">
            <li>The 'clear' property set to 'inherit', inherits the computed value from the parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-001-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-applies-to-001.xht">clear-applies-to-001</a></strong></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-002-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-applies-to-002.xht">clear-applies-to-002</a></strong></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-003-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-applies-to-003.xht">clear-applies-to-003</a></strong></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-004-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-applies-to-004.xht">clear-applies-to-004</a></strong></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-005-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-applies-to-005.xht">clear-applies-to-005</a></strong></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-006-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-applies-to-006.xht">clear-applies-to-006</a></strong></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-007-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-applies-to-007.xht">clear-applies-to-007</a></strong></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-009-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-applies-to-009.xht">clear-applies-to-009</a></strong></td>
        <td><a href="reference/clear-applies-to-009-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'clear' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-010-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-applies-to-010.xht">clear-applies-to-010</a></strong></td>
        <td></td>
        <td></td>
        <td>Clear applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'clear' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-011-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-applies-to-011.xht">clear-applies-to-011</a></strong></td>
        <td></td>
        <td></td>
        <td>Clear applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'clear' property applies to elements with a display of 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-012-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-applies-to-012.xht">clear-applies-to-012</a></strong></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-013-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-applies-to-013.xht">clear-applies-to-013</a></strong></td>
        <td><a href="reference/clear-applies-to-009-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'clear' property does apply to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-014-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-applies-to-014.xht">clear-applies-to-014</a></strong></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-applies-to-015-9.5.2.#propdef-clear" class="primary">
        <td><strong>
            <a href="clear-applies-to-015.xht">clear-applies-to-015</a></strong></td>
        <td><a href="reference/clear-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Clear applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'clear' property does not apply to elements with a display of 'table-caption' because an anonymous table wrapper box will be generated for a misparented table-caption element and such anonymous table wrapper box creates a block formatting context. Clear will not apply to floats outside a block formatting context.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-default-inheritance-001-9.5.2.#propdef-clear" class="">
        <td>
            <a href="clear-default-inheritance-001.xht">clear-default-inheritance-001</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Clear default inheritance
          <ul class="assert">
            <li>The 'clear' property is not inherited by default from the parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="clear-initial-001-9.5.2.#propdef-clear" class="">
        <td>
            <a href="clear-initial-001.xht">clear-initial-001</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Clear initial value
          <ul class="assert">
            <li>The 'clear' property has a initial value of 'none'.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.6">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.6">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#absolute-positioning">9.6 Absolute positioning</a></th></tr>
      <!-- 6 tests -->
      <tr id="position-absolute-003-9.6" class="primary">
        <td><strong>
            <a href="position-absolute-003.xht">position-absolute-003</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Absolute position element taken out of flow
          <ul class="assert">
            <li>Absolute positioned elements are taken out of the normal flow when they have explicit offsets.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-absolute-004-9.6" class="primary">
        <td><strong>
            <a href="position-absolute-004.xht">position-absolute-004</a></strong></td>
        <td><a href="reference/position-absolute-004-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned elements establishes a new containing block for normal flow children
          <ul class="assert">
            <li>An absolutely positioned box establishes a new containing block for normal flow children.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-absolute-005-9.6" class="primary">
        <td><strong>
            <a href="position-absolute-005.xht">position-absolute-005</a></strong></td>
        <td></td>
        <td></td>
        <td>Absolutely positioned elements do not establish a new containing block for fixed position descendants
          <ul class="assert">
            <li>An absolutely positioned box does not establish a new containing block for fixed positioned descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-absolute-006-9.6" class="primary">
        <td><strong>
            <a href="position-absolute-006.xht">position-absolute-006</a></strong></td>
        <td><a href="reference/position-absolute-004-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned elements establishes a new containing block for absolutely positioned children
          <ul class="assert">
            <li>An absolutely positioned box establishes a new containing block for absolutely positioned children.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-absolute-007-9.6" class="primary">
        <td><strong>
            <a href="position-absolute-007.xht">position-absolute-007</a></strong></td>
        <td><a href="reference/position-absolute-007-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned elements child behavior
          <ul class="assert">
            <li>The contents of an absolutely positioned element do not flow around any other boxes and can obscure the contents of another box.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-fixed-007-9.6" class="primary">
        <td><strong>
            <a href="position-fixed-007.xht">position-fixed-007</a></strong></td>
        <td><a href="reference/position-fixed-007-ref.xht">=</a> </td>
        <td></td>
        <td>Float is computed to 'none' when element is fixed positioned
          <ul class="assert">
            <li>Float is computed to 'none' when 'position: fixed' is applied.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.6.#absolutely-positioned">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.6.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.6.1">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#fixed-positioning">9.6.1 Fixed positioning</a></th></tr>
      <!-- 1 tests -->
      <tr id="page-container-007-9.6.1" class="primary image paged">
        <td><strong>
            <a href="page-container-007.xht">page-container-007</a></strong></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>Fixed content outside the page area
          <ul class="assert">
            <li>Any portion of an element with 'position: fixed' which is positioned outside the page area is not printed.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.6.1.#img-frame">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.7">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.7">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#dis-pos-flo">9.7 Relationships between 'display', 'position', and 'float'</a></th></tr>
      <!-- 84 tests -->
      <tr id="abspos-027-9.7" class="primary">
        <td><strong>
            <a href="abspos-027.xht">abspos-027</a></strong></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned elements must shrink wrap tables
        </td>
      </tr>
      <tr id="bottom-applies-to-001-9.7" class="">
        <td>
            <a href="bottom-applies-to-001.xht">bottom-applies-to-001</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-002-9.7" class="">
        <td>
            <a href="bottom-applies-to-002.xht">bottom-applies-to-002</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-003-9.7" class="">
        <td>
            <a href="bottom-applies-to-003.xht">bottom-applies-to-003</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-004-9.7" class="">
        <td>
            <a href="bottom-applies-to-004.xht">bottom-applies-to-004</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-005-9.7" class="">
        <td>
            <a href="bottom-applies-to-005.xht">bottom-applies-to-005</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-006-9.7" class="">
        <td>
            <a href="bottom-applies-to-006.xht">bottom-applies-to-006</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-007-9.7" class="">
        <td>
            <a href="bottom-applies-to-007.xht">bottom-applies-to-007</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-008-9.7" class="">
        <td>
            <a href="bottom-applies-to-008.xht">bottom-applies-to-008</a></td>
        <td></td>
        <td></td>
        <td>Bottom applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-009-9.7" class="">
        <td>
            <a href="bottom-applies-to-009.xht">bottom-applies-to-009</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-010-9.7" class="">
        <td>
            <a href="bottom-applies-to-010.xht">bottom-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Bottom applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-011-9.7" class="">
        <td>
            <a href="bottom-applies-to-011.xht">bottom-applies-to-011</a></td>
        <td></td>
        <td></td>
        <td>Bottom applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-012-9.7" class="">
        <td>
            <a href="bottom-applies-to-012.xht">bottom-applies-to-012</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-013-9.7" class="">
        <td>
            <a href="bottom-applies-to-013.xht">bottom-applies-to-013</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-014-9.7" class="">
        <td>
            <a href="bottom-applies-to-014.xht">bottom-applies-to-014</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="bottom-applies-to-015-9.7" class="">
        <td>
            <a href="bottom-applies-to-015.xht">bottom-applies-to-015</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bottom applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'bottom' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-none-001-9.7" class="primary">
        <td><strong>
            <a href="display-none-001.xht">display-none-001</a></strong></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Display set to 'none' does not generate a box even with 'position' set to 'absolute'
          <ul class="assert">
            <li>Elements set to 'display: none' do not render even if element is positioned absolute.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-none-002-9.7" class="primary">
        <td><strong>
            <a href="display-none-002.xht">display-none-002</a></strong></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Display set to 'none' does not generate a box even with 'position' set to 'fixed'
          <ul class="assert">
            <li>Elements set to 'display: none' do not render even if element is positioned fixed.</li>
          </ul>
        </td>
      </tr>
      <tr id="display-none-003-9.7" class="primary">
        <td><strong>
            <a href="display-none-003.xht">display-none-003</a></strong></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Display set to 'none' does not generate a box even when element is floated
          <ul class="assert">
            <li>Elements set to 'display: none' do not render even if element is floated.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-001a-9.7" class="primary">
        <td><strong>
            <a href="float-applies-to-001a.xht">float-applies-to-001a</a></strong></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>If 'float' has a value other than 'none' and is applied to an element with a specified 'display' value of 'table-row-group', then the box is floated and its computed 'display' value is set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-004a-9.7" class="primary">
        <td><strong>
            <a href="float-applies-to-004a.xht">float-applies-to-004a</a></strong></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>If 'float' has a value other than 'none' and is applied to an element with a specified 'display' value of 'table-row', then the box is floated and its computed 'display' value is set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-applies-to-008a-9.7" class="primary">
        <td><strong>
            <a href="float-applies-to-008a.xht">float-applies-to-008a</a></strong></td>
        <td><a href="reference/float-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Float applied to element with 'display' set to inline
          <ul class="assert">
            <li>If 'float' has a value other than 'none' and is applied to an element with a specified 'display' value of 'inline', then the box is floated and its computed 'display' value is set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-001-9.7" class="">
        <td>
            <a href="left-applies-to-001.xht">left-applies-to-001</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-002-9.7" class="">
        <td>
            <a href="left-applies-to-002.xht">left-applies-to-002</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-003-9.7" class="">
        <td>
            <a href="left-applies-to-003.xht">left-applies-to-003</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-004-9.7" class="">
        <td>
            <a href="left-applies-to-004.xht">left-applies-to-004</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-005-9.7" class="">
        <td>
            <a href="left-applies-to-005.xht">left-applies-to-005</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-006-9.7" class="">
        <td>
            <a href="left-applies-to-006.xht">left-applies-to-006</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-007-9.7" class="">
        <td>
            <a href="left-applies-to-007.xht">left-applies-to-007</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-008-9.7" class="ahem">
        <td>
            <a href="left-applies-to-008.xht">left-applies-to-008</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Left applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-009-9.7" class="">
        <td>
            <a href="left-applies-to-009.xht">left-applies-to-009</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-010-9.7" class="">
        <td>
            <a href="left-applies-to-010.xht">left-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Left applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-011-9.7" class="">
        <td>
            <a href="left-applies-to-011.xht">left-applies-to-011</a></td>
        <td></td>
        <td></td>
        <td>Left applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-012-9.7" class="">
        <td>
            <a href="left-applies-to-012.xht">left-applies-to-012</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-013-9.7" class="">
        <td>
            <a href="left-applies-to-013.xht">left-applies-to-013</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-014-9.7" class="">
        <td>
            <a href="left-applies-to-014.xht">left-applies-to-014</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-applies-to-015-9.7" class="">
        <td>
            <a href="left-applies-to-015.xht">left-applies-to-015</a></td>
        <td><a href="reference/left-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Left applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'left' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-absolute-008-9.7" class="primary">
        <td><strong>
            <a href="position-absolute-008.xht">position-absolute-008</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Float is computed to 'none' when element is absolutely positioned
          <ul class="assert">
            <li>Float is computed to 'none' when 'position: absolute' is specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-absolute-008a-9.7" class="primary">
        <td><strong>
            <a href="position-absolute-008a.xht">position-absolute-008a</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Float is computed to 'none' when element is absolutely positioned
          <ul class="assert">
            <li>Float is computed to 'none' when 'position: absolute' is specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-001-9.7" class="">
        <td>
            <a href="position-applies-to-001.xht">position-applies-to-001</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-002-9.7" class="">
        <td>
            <a href="position-applies-to-002.xht">position-applies-to-002</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-003-9.7" class="">
        <td>
            <a href="position-applies-to-003.xht">position-applies-to-003</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-004-9.7" class="">
        <td>
            <a href="position-applies-to-004.xht">position-applies-to-004</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-005-9.7" class="">
        <td>
            <a href="position-applies-to-005.xht">position-applies-to-005</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-006-9.7" class="">
        <td>
            <a href="position-applies-to-006.xht">position-applies-to-006</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-007-9.7" class="">
        <td>
            <a href="position-applies-to-007.xht">position-applies-to-007</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-008-9.7" class="">
        <td>
            <a href="position-applies-to-008.xht">position-applies-to-008</a></td>
        <td></td>
        <td></td>
        <td>Position applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-009-9.7" class="">
        <td>
            <a href="position-applies-to-009.xht">position-applies-to-009</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-010-9.7" class="">
        <td>
            <a href="position-applies-to-010.xht">position-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Position applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-011-9.7" class="">
        <td>
            <a href="position-applies-to-011.xht">position-applies-to-011</a></td>
        <td></td>
        <td></td>
        <td>Position applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-012-9.7" class="">
        <td>
            <a href="position-applies-to-012.xht">position-applies-to-012</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-013-9.7" class="">
        <td>
            <a href="position-applies-to-013.xht">position-applies-to-013</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-014-9.7" class="">
        <td>
            <a href="position-applies-to-014.xht">position-applies-to-014</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-applies-to-015-9.7" class="">
        <td>
            <a href="position-applies-to-015.xht">position-applies-to-015</a></td>
        <td><a href="reference/bottom-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Position applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'position' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-001-9.7" class="">
        <td>
            <a href="right-applies-to-001.xht">right-applies-to-001</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-002-9.7" class="">
        <td>
            <a href="right-applies-to-002.xht">right-applies-to-002</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-003-9.7" class="">
        <td>
            <a href="right-applies-to-003.xht">right-applies-to-003</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-004-9.7" class="">
        <td>
            <a href="right-applies-to-004.xht">right-applies-to-004</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-005-9.7" class="">
        <td>
            <a href="right-applies-to-005.xht">right-applies-to-005</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-006-9.7" class="">
        <td>
            <a href="right-applies-to-006.xht">right-applies-to-006</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-007-9.7" class="">
        <td>
            <a href="right-applies-to-007.xht">right-applies-to-007</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-008-9.7" class="">
        <td>
            <a href="right-applies-to-008.xht">right-applies-to-008</a></td>
        <td></td>
        <td></td>
        <td>Right applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-009-9.7" class="">
        <td>
            <a href="right-applies-to-009.xht">right-applies-to-009</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-010-9.7" class="">
        <td>
            <a href="right-applies-to-010.xht">right-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Right applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-011-9.7" class="">
        <td>
            <a href="right-applies-to-011.xht">right-applies-to-011</a></td>
        <td></td>
        <td></td>
        <td>Right applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-012-9.7" class="">
        <td>
            <a href="right-applies-to-012.xht">right-applies-to-012</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-013-9.7" class="">
        <td>
            <a href="right-applies-to-013.xht">right-applies-to-013</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-014-9.7" class="">
        <td>
            <a href="right-applies-to-014.xht">right-applies-to-014</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-applies-to-015-9.7" class="">
        <td>
            <a href="right-applies-to-015.xht">right-applies-to-015</a></td>
        <td><a href="reference/right-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Right applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'right' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-001-9.7" class="">
        <td>
            <a href="top-applies-to-001.xht">top-applies-to-001</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-002-9.7" class="">
        <td>
            <a href="top-applies-to-002.xht">top-applies-to-002</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-003-9.7" class="">
        <td>
            <a href="top-applies-to-003.xht">top-applies-to-003</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-004-9.7" class="">
        <td>
            <a href="top-applies-to-004.xht">top-applies-to-004</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-005-9.7" class="">
        <td>
            <a href="top-applies-to-005.xht">top-applies-to-005</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-006-9.7" class="">
        <td>
            <a href="top-applies-to-006.xht">top-applies-to-006</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-007-9.7" class="">
        <td>
            <a href="top-applies-to-007.xht">top-applies-to-007</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-008-9.7" class="">
        <td>
            <a href="top-applies-to-008.xht">top-applies-to-008</a></td>
        <td></td>
        <td></td>
        <td>Top applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-009-9.7" class="">
        <td>
            <a href="top-applies-to-009.xht">top-applies-to-009</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-010-9.7" class="">
        <td>
            <a href="top-applies-to-010.xht">top-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Top applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-011-9.7" class="">
        <td>
            <a href="top-applies-to-011.xht">top-applies-to-011</a></td>
        <td></td>
        <td></td>
        <td>Top applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-012-9.7" class="">
        <td>
            <a href="top-applies-to-012.xht">top-applies-to-012</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-013-9.7" class="">
        <td>
            <a href="top-applies-to-013.xht">top-applies-to-013</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-014-9.7" class="">
        <td>
            <a href="top-applies-to-014.xht">top-applies-to-014</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-applies-to-015-9.7" class="">
        <td>
            <a href="top-applies-to-015.xht">top-applies-to-015</a></td>
        <td><a href="reference/top-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Top applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'top' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.8">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.8">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#comparison">9.8 Comparison of normal flow, floats, and absolute positioning</a></th></tr>
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.8.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.8.1">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#comp-normal-flow">9.8.1 Normal flow</a></th></tr>
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.8.1.#img-flow-generic">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.8.2">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.8.2">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#comp-relpos">9.8.2 Relative positioning</a></th></tr>
      <!-- 9 tests -->
      <tr id="position-relative-028-9.8.2" class="primary">
        <td><strong>
            <a href="position-relative-028.xht">position-relative-028</a></strong></td>
        <td><a href="reference/position-relative-028-ref.xht">=</a> </td>
        <td></td>
        <td>Relatively positioned elements with auto positioning with anonymous boxes after
          <ul class="assert">
            <li>Relatively positioned element with auto positioning appear as though they were positioned in flow.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-029-9.8.2" class="primary">
        <td><strong>
            <a href="position-relative-029.xht">position-relative-029</a></strong></td>
        <td><a href="reference/position-relative-028-ref.xht">=</a> </td>
        <td></td>
        <td>Relatively positioned elements with auto positioning with inline box after
          <ul class="assert">
            <li>Relatively positioned element with auto positioning appear as though they were positioned in flow.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-030-9.8.2" class="primary">
        <td><strong>
            <a href="position-relative-030.xht">position-relative-030</a></strong></td>
        <td><a href="reference/position-relative-030-ref.xht">=</a> </td>
        <td></td>
        <td>Relatively positioned elements with auto positioning with anonymous boxes before and after with trailing inline
          <ul class="assert">
            <li>Relatively positioned element with auto positioning appear as though they were positioned in flow.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-031-9.8.2" class="primary">
        <td><strong>
            <a href="position-relative-031.xht">position-relative-031</a></strong></td>
        <td><a href="reference/position-relative-031-ref.xht">=</a> </td>
        <td></td>
        <td>Relatively positioned elements with auto positioning with an inline element before, anonymous boxes, and inline boxes after
          <ul class="assert">
            <li>Relatively positioned element with auto positioning render as though they were positioned in flow.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-032-9.8.2" class="primary">
        <td><strong>
            <a href="position-relative-032.xht">position-relative-032</a></strong></td>
        <td><a href="reference/position-relative-032-ref.xht">=</a> </td>
        <td></td>
        <td>Relatively positioned box has no impact on boxes which follow
          <ul class="assert">
            <li>Offsetting a box with relative positioning has no effect on the boxes which follow.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-033-9.8.2" class="primary ahem may">
        <td><strong>
            <a href="position-relative-033.xht">position-relative-033</a></strong></td>
        <td><a href="reference/position-relative-033-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Relatively positioned box has no impact on boxes which follow and boxes may overlap
          <ul class="assert">
            <li>Offsetting a box with relative positioning has no effect on the boxes which follow and boxes may overlap.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-034-9.8.2" class="primary interact">
        <td><strong>
            <a href="position-relative-034.xht">position-relative-034</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Relatively positioned content inside container with overflow auto
          <ul class="assert">
            <li>A container with overflow set to auto provides a scrolling mechanism for relatively positioned content.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-035-9.8.2" class="primary">
        <td><strong>
            <a href="position-relative-035.xht">position-relative-035</a></strong></td>
        <td><a href="reference/position-relative-035-ref.xht">=</a> </td>
        <td></td>
        <td>Relatively positioned boxes preserve the space created for it in flow
          <ul class="assert">
            <li>Relative positioned content keeps its normal flow size including line breaks and the space originally reserved for it.</li>
          </ul>
        </td>
      </tr>
      <tr id="position-relative-036-9.8.2" class="primary interact">
        <td><strong>
            <a href="position-relative-036.xht">position-relative-036</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Relatively positioned content inside container with overflow scroll
          <ul class="assert">
            <li>A container with overflow set to scroll provides a scrolling mechanism for relatively positioned content.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.8.2.#img-flow-relative">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.8.3">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.8.3">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#comp-float">9.8.3 Floating a box</a></th></tr>
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.8.3.#img-flow-clear">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.8.3.#img-flow-clear2">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.8.3.#img-flow-float">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.8.4">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.8.4">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#comp-abspos">9.8.4 Absolute positioning</a></th></tr>
      <!-- 25 tests -->
      <tr id="abspos-001-9.8.4" class="primary">
        <td><strong>
            <a href="abspos-001.xht">abspos-001</a></strong></td>
        <td><a href="reference/abspos-001-ref.xht">=</a> </td>
        <td></td>
        <td>CSS Absolute Positioning: static position after previous margin
        </td>
      </tr>
      <tr id="abspos-002-9.8.4" class="primary">
        <td><strong>
            <a href="abspos-002.xht">abspos-002</a></strong></td>
        <td><a href="reference/abspos-002-ref.xht">=</a> </td>
        <td></td>
        <td>Positioning with a relpos ancestor containing block
        </td>
      </tr>
      <tr id="abspos-003-9.8.4" class="primary">
        <td><strong>
            <a href="abspos-003.xht">abspos-003</a></strong></td>
        <td></td>
        <td></td>
        <td>Positioning relative to the ICB: short root element
        </td>
      </tr>
      <tr id="abspos-004-9.8.4" class="primary">
        <td><strong>
            <a href="abspos-004.xht">abspos-004</a></strong></td>
        <td></td>
        <td></td>
        <td>Positioning relative to the ICB: long root element
        </td>
      </tr>
      <tr id="abspos-006-9.8.4" class="primary">
        <td><strong>
            <a href="abspos-006.xht">abspos-006</a></strong></td>
        <td></td>
        <td></td>
        <td>Absolute Positioning: Tables with two offsets
        </td>
      </tr>
      <tr id="abspos-007-9.8.4" class="primary">
        <td><strong>
            <a href="abspos-007.xht">abspos-007</a></strong></td>
        <td><a href="reference/abspos-007-ref.xht">=</a> </td>
        <td></td>
        <td>Positioning blocks inside inline contexts with top:auto
        </td>
      </tr>
      <tr id="abspos-009-9.8.4" class="primary">
        <td><strong>
            <a href="abspos-009.xht">abspos-009</a></strong></td>
        <td><a href="reference/abspos-009-ref.xht">=</a> </td>
        <td></td>
        <td>Right alignment with position:right
        </td>
      </tr>
      <tr id="abspos-011-9.8.4" class="primary may">
        <td><strong>
            <a href="abspos-011.xht">abspos-011</a></strong></td>
        <td><a href="reference/abspos-011-ref.xht">=</a> </td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>position: absolute; top: auto; test (assumed initial values)
        </td>
      </tr>
      <tr id="abspos-012-9.8.4" class="primary may">
        <td><strong>
            <a href="abspos-012.xht">abspos-012</a></strong></td>
        <td><a href="reference/abspos-011-ref.xht">=</a> </td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>position: absolute; top: auto; test (assumed initial values)
        </td>
      </tr>
      <tr id="abspos-013-9.8.4" class="primary may">
        <td><strong>
            <a href="abspos-013.xht">abspos-013</a></strong></td>
        <td><a href="reference/abspos-013-ref.xht">=</a> </td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>position: fixed; top: auto; test - body padding
        </td>
      </tr>
      <tr id="abspos-014-9.8.4" class="primary may">
        <td><strong>
            <a href="abspos-014.xht">abspos-014</a></strong></td>
        <td><a href="reference/abspos-013-ref.xht">=</a> </td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>position: fixed; top: auto; test - body padding
        </td>
      </tr>
      <tr id="abspos-015-9.8.4" class="primary may">
        <td><strong>
            <a href="abspos-015.xht">abspos-015</a></strong></td>
        <td><a href="reference/abspos-013-ref.xht">=</a> </td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>position: fixed; top: auto; test - html padding
        </td>
      </tr>
      <tr id="abspos-016-9.8.4" class="primary may">
        <td><strong>
            <a href="abspos-016.xht">abspos-016</a></strong></td>
        <td><a href="reference/abspos-013-ref.xht">=</a> </td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>position: fixed; top: auto; test - html padding
        </td>
      </tr>
      <tr id="abspos-017-9.8.4" class="primary may">
        <td><strong>
            <a href="abspos-017.xht">abspos-017</a></strong></td>
        <td><a href="reference/abspos-013-ref.xht">=</a> </td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>position: fixed; top: auto; test - body margin
        </td>
      </tr>
      <tr id="abspos-018-9.8.4" class="primary may">
        <td><strong>
            <a href="abspos-018.xht">abspos-018</a></strong></td>
        <td><a href="reference/abspos-013-ref.xht">=</a> </td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>position: fixed; top: auto; test - body margin
        </td>
      </tr>
      <tr id="abspos-019-9.8.4" class="primary may">
        <td><strong>
            <a href="abspos-019.xht">abspos-019</a></strong></td>
        <td><a href="reference/abspos-013-ref.xht">=</a> </td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>position: fixed; top: auto; test - html margin
        </td>
      </tr>
      <tr id="abspos-020-9.8.4" class="primary may">
        <td><strong>
            <a href="abspos-020.xht">abspos-020</a></strong></td>
        <td><a href="reference/abspos-013-ref.xht">=</a> </td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>position: fixed; top: auto; test - html margin
        </td>
      </tr>
      <tr id="abspos-inline-001-9.8.4" class="primary interact">
        <td><strong>
            <a href="abspos-inline-001.xht">abspos-inline-001</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Absolutely positioned boxes in inlines: 'auto'
        </td>
      </tr>
      <tr id="abspos-inline-002-9.8.4" class="primary interact">
        <td><strong>
            <a href="abspos-inline-002.xht">abspos-inline-002</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Absolutely positioned boxes in inlines: 'auto' with 'relative'
        </td>
      </tr>
      <tr id="abspos-inline-003-9.8.4" class="primary interact">
        <td><strong>
            <a href="abspos-inline-003.xht">abspos-inline-003</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Absolutely positioned boxes in inlines: positioning at top left
        </td>
      </tr>
      <tr id="abspos-inline-004-9.8.4" class="primary interact">
        <td><strong>
            <a href="abspos-inline-004.xht">abspos-inline-004</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Absolutely positioned boxes in inlines: positioning at top right
        </td>
      </tr>
      <tr id="abspos-inline-005-9.8.4" class="primary interact">
        <td><strong>
            <a href="abspos-inline-005.xht">abspos-inline-005</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Absolutely positioned boxes in inlines: positioning at bottom left
        </td>
      </tr>
      <tr id="abspos-inline-006-9.8.4" class="primary interact">
        <td><strong>
            <a href="abspos-inline-006.xht">abspos-inline-006</a></strong></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Absolutely positioned boxes in inlines: positioning at bottom right
        </td>
      </tr>
      <tr id="page-container-010-9.8.4" class="paged">
        <td>
            <a href="page-container-010.xht">page-container-010</a></td>
        <td></td>
        <td><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>Paged Media Height (percent)
          <ul class="assert">
            <li>For HTML documents in paged media, when the HTML and BODY elements have heights of 100%, a percentage height on a child of BODY is relative to the page area height.</li>
          </ul>
        </td>
      </tr>
      <tr id="page-container-011-9.8.4" class="primary paged">
        <td><strong>
            <a href="page-container-011.xht">page-container-011</a></strong></td>
        <td></td>
        <td><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>Paged Media: Relatively Positioned Pages
          <ul class="assert">
            <li>When a relatively positioned element whose 'height' and 'width' match that of the page area has a corner positioned at a corner of the page area, any positioned children are positioned relative to the page area.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.8.4.#img-changebar">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.8.4.#img-flow-abs-rel">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.8.4.#img-flow-absolute">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.8.4.#img-flow-static">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.9">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.9">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#layers">9.9 Layered presentation</a></th></tr>
      <!-- 6 tests -->
      <tr id="stack-floats-001-9.9" class="primary ahem">
        <td><strong>
            <a href="stack-floats-001.xht">stack-floats-001</a></strong></td>
        <td><a href="reference/stack-floats-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Stacking order: Floats and Blocks in Inlines
        </td>
      </tr>
      <tr id="stack-floats-002-9.9" class="primary ahem">
        <td><strong>
            <a href="stack-floats-002.xht">stack-floats-002</a></strong></td>
        <td><a href="reference/stack-floats-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Stacking order: Floats and Blocks in Inlines
        </td>
      </tr>
      <tr id="stack-floats-003-9.9" class="primary ahem">
        <td><strong>
            <a href="stack-floats-003.xht">stack-floats-003</a></strong></td>
        <td><a href="reference/stack-floats-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Stacking order: Floats and Blocks in Inlines
        </td>
      </tr>
      <tr id="stack-floats-004-9.9" class="primary ahem">
        <td><strong>
            <a href="stack-floats-004.xht">stack-floats-004</a></strong></td>
        <td><a href="reference/stack-floats-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Stacking order: Floats and Blocks in Inlines
        </td>
      </tr>
      <tr id="z-index-stack-001-9.9" class="primary">
        <td><strong>
            <a href="z-index-stack-001.xht">z-index-stack-001</a></strong></td>
        <td></td>
        <td></td>
        <td>Z-index and stacking levels
          <ul class="assert">
            <li>Boxes with greater stack levels are always formatted in front of boxes with lower stack levels.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-stack-002-9.9" class="primary">
        <td><strong>
            <a href="z-index-stack-002.xht">z-index-stack-002</a></strong></td>
        <td></td>
        <td></td>
        <td>Z-index and similar stacking levels
          <ul class="assert">
            <li>Boxes with the same stack level in a stacking context are stacked back-to-front according to document tree order.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.9.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.9.1">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#z-index">9.9.1 Specifying the stack level: the 'z-index' property</a></th></tr>
      <!-- 46 tests -->
      <tr id="z-index-001-9.9.1" class="32bit may">
        <td>
            <a href="z-index-001.xht">z-index-001</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="32bit" title="Requires 32 bit signed integers">32</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index set to minimum value minus 1
          <ul class="assert">
            <li>The property z-index set to a minimum value minus 1 for a 32-bit integer is correctly handled.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-002-9.9.1" class="32bit may">
        <td>
            <a href="z-index-002.xht">z-index-002</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="32bit" title="Requires 32 bit signed integers">32</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index set to minimum value
          <ul class="assert">
            <li>The property z-index set to a minimum value for a 32-bit integer is correctly handled.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-003-9.9.1" class="32bit may">
        <td>
            <a href="z-index-003.xht">z-index-003</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="32bit" title="Requires 32 bit signed integers">32</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index set to minimum value plus 1
          <ul class="assert">
            <li>The property z-index set to a minimum value plus 1 for a 32-bit integer is correctly handled.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-004-9.9.1" class="">
        <td>
            <a href="z-index-004.xht">z-index-004</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Z-index set to zero prefixed with a minus sign
          <ul class="assert">
            <li>The property z-index set to '0' prefixed with a minus sign is read as value '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-005-9.9.1" class="">
        <td>
            <a href="z-index-005.xht">z-index-005</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Z-index set to zero
          <ul class="assert">
            <li>The property z-index with a zero value is read and applied as the value '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-006-9.9.1" class="">
        <td>
            <a href="z-index-006.xht">z-index-006</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Z-index set to zero prefixed with a plus sign
          <ul class="assert">
            <li>The property z-index set to '0' prefixed with a plus sign is read as value '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-007-9.9.1" class="">
        <td>
            <a href="z-index-007.xht">z-index-007</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Z-index set to a nominal value
          <ul class="assert">
            <li>The property z-index set to a nominal value is correctly read and applied.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-008-9.9.1" class="">
        <td>
            <a href="z-index-008.xht">z-index-008</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Z-index set to a nominal value prefixed with a plus sign
          <ul class="assert">
            <li>The property z-index set to nominal value and prefixed with a plus sign is read the same as the value without the plus sign.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-009-9.9.1" class="32bit may">
        <td>
            <a href="z-index-009.xht">z-index-009</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="32bit" title="Requires 32 bit signed integers">32</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index set maximum value minus 1
          <ul class="assert">
            <li>The property z-index set to a maximum value minus 1 for a 32-bit integer is correctly handled.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-010-9.9.1" class="32bit may">
        <td>
            <a href="z-index-010.xht">z-index-010</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="32bit" title="Requires 32 bit signed integers">32</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index set to the maximum value
          <ul class="assert">
            <li>The property z-index set to a maximum value for a 32-bit integer is correctly handled.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-011-9.9.1" class="32bit may">
        <td>
            <a href="z-index-011.xht">z-index-011</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="32bit" title="Requires 32 bit signed integers">32</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index set to maximum value prefixed with a plus sign
          <ul class="assert">
            <li>The property z-index set to a maximum value for a 32-bit integer, prefixed with a plus sign is correctly handled.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-012-9.9.1" class="32bit may">
        <td>
            <a href="z-index-012.xht">z-index-012</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="32bit" title="Requires 32 bit signed integers">32</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index set to maximum value plus 1
          <ul class="assert">
            <li>The property 'z-index' set to a maximum value plus 1 for a 32-bit integer is correctly handled.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-013-9.9.1" class="">
        <td>
            <a href="z-index-013.xht">z-index-013</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Z-index: auto results in the same stack level as parent element
          <ul class="assert">
            <li>The property z-index set to 'auto' results in the same stacking level as its parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-014-9.9.1" class="">
        <td>
            <a href="z-index-014.xht">z-index-014</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Z-index: inherit sets a value the same as parent element's value
          <ul class="assert">
            <li>The property z-index set to 'inherit' sets a value the same as parent element's computed value.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-015-9.9.1" class="primary invalid">
        <td><strong>
            <a href="z-index-015.xht">z-index-015</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>z-index - integer value
          <ul class="assert">
            <li>Besides 'auto' and 'inherit' keyword values, z-index property can only accept an integer value. An integer consists of one or more digits '0' to '9'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-016-9.9.1" class="primary invalid">
        <td><strong>
            <a href="z-index-016.xht">z-index-016</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>z-index - integer value
          <ul class="assert">
            <li>Besides 'auto' and 'inherit' keyword values, z-index property can only accept an integer value. An integer consists of one or more digits '0' to '9'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-017-9.9.1" class="primary invalid">
        <td><strong>
            <a href="z-index-017.xht">z-index-017</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>z-index - integer value
          <ul class="assert">
            <li>Besides 'auto' and 'inherit' keyword values, z-index property can only accept an integer value. An integer consists of one or more digits '0' to '9'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-018-9.9.1" class="primary 32bit">
        <td><strong>
            <a href="z-index-018.xht">z-index-018</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="32bit" title="Requires 32 bit signed integers">32</abbr></td>
        <td>z-index - negative values
          <ul class="assert">
            <li>Integers should range from -2,147,483,648 to 2,147,483,647 according to C Language Specification</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-019-9.9.1" class="primary 32bit">
        <td><strong>
            <a href="z-index-019.xht">z-index-019</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="32bit" title="Requires 32 bit signed integers">32</abbr></td>
        <td>z-index - negative values
          <ul class="assert">
            <li>Integers should range from -2,147,483,648 to 2,147,483,647 according to C Language Specification</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-020-9.9.1" class="primary">
        <td><strong>
            <a href="z-index-020.xht">z-index-020</a></strong></td>
        <td><a href="reference/z-index-020-ref.xht">=</a> </td>
        <td></td>
        <td>z-index
        </td>
      </tr>
      <tr id="z-index-abspos-001-9.9.1" class="primary">
        <td><strong>
            <a href="z-index-abspos-001.xht">z-index-abspos-001</a></strong></td>
        <td><a href="reference/z-index-abspos-001-ref.xht">=</a> </td>
        <td></td>
        <td>CSS: z-index auto, -1 and backgrounds (child)
        </td>
      </tr>
      <tr id="z-index-abspos-002-9.9.1" class="primary">
        <td><strong>
            <a href="z-index-abspos-002.xht">z-index-abspos-002</a></strong></td>
        <td><a href="reference/z-index-abspos-001-ref.xht">=</a> </td>
        <td></td>
        <td>CSS: z-index auto and -1 (siblings)
        </td>
      </tr>
      <tr id="z-index-abspos-003-9.9.1" class="primary">
        <td><strong>
            <a href="z-index-abspos-003.xht">z-index-abspos-003</a></strong></td>
        <td><a href="reference/z-index-abspos-001-ref.xht">=</a> </td>
        <td></td>
        <td>CSS: z-index 0, -1 and backgrounds (child)
        </td>
      </tr>
      <tr id="z-index-abspos-004-9.9.1" class="primary">
        <td><strong>
            <a href="z-index-abspos-004.xht">z-index-abspos-004</a></strong></td>
        <td><a href="reference/z-index-abspos-001-ref.xht">=</a> </td>
        <td></td>
        <td>CSS: z-index auto and 0 (siblings)
        </td>
      </tr>
      <tr id="z-index-abspos-005-9.9.1" class="primary">
        <td><strong>
            <a href="z-index-abspos-005.xht">z-index-abspos-005</a></strong></td>
        <td><a href="reference/z-index-abspos-001-ref.xht">=</a> </td>
        <td></td>
        <td>CSS: z-index auto and 0 (siblings)
        </td>
      </tr>
      <tr id="z-index-abspos-006-9.9.1" class="primary">
        <td><strong>
            <a href="z-index-abspos-006.xht">z-index-abspos-006</a></strong></td>
        <td></td>
        <td></td>
        <td>CSS: z-index and SELECT elements
        </td>
      </tr>
      <tr id="z-index-abspos-007-9.9.1" class="primary">
        <td><strong>
            <a href="z-index-abspos-007.xht">z-index-abspos-007</a></strong></td>
        <td><a href="reference/z-index-abspos-001-ref.xht">=</a> </td>
        <td></td>
        <td>CSS: z-index 1, -1 and backgrounds (child)
        </td>
      </tr>
      <tr id="z-index-abspos-008-9.9.1" class="primary">
        <td><strong>
            <a href="z-index-abspos-008.xht">z-index-abspos-008</a></strong></td>
        <td></td>
        <td></td>
        <td>z-index
        </td>
      </tr>
      <tr id="z-index-abspos-009-9.9.1" class="primary">
        <td><strong>
            <a href="z-index-abspos-009.xht">z-index-abspos-009</a></strong></td>
        <td></td>
        <td></td>
        <td>CSS: z-index and the canvas and background propagation
        </td>
      </tr>
      <tr id="z-index-applies-to-001-9.9.1" class="may">
        <td>
            <a href="z-index-applies-to-001.xht">z-index-applies-to-001</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'z-index' property can apply to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-002-9.9.1" class="may">
        <td>
            <a href="z-index-applies-to-002.xht">z-index-applies-to-002</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'z-index' property can apply to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-003-9.9.1" class="may">
        <td>
            <a href="z-index-applies-to-003.xht">z-index-applies-to-003</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'z-index' property can apply to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-004-9.9.1" class="may">
        <td>
            <a href="z-index-applies-to-004.xht">z-index-applies-to-004</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'z-index' property can apply to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-005-9.9.1" class="may">
        <td>
            <a href="z-index-applies-to-005.xht">z-index-applies-to-005</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'z-index' property can apply to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-006-9.9.1" class="may">
        <td>
            <a href="z-index-applies-to-006.xht">z-index-applies-to-006</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'z-index' property can apply to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-007-9.9.1" class="may">
        <td>
            <a href="z-index-applies-to-007.xht">z-index-applies-to-007</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'z-index' property can apply to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-008-9.9.1" class="ahem">
        <td>
            <a href="z-index-applies-to-008.xht">z-index-applies-to-008</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Z-index applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'z-index' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-009-9.9.1" class="">
        <td>
            <a href="z-index-applies-to-009.xht">z-index-applies-to-009</a></td>
        <td></td>
        <td></td>
        <td>Z-index applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'z-index' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-010-9.9.1" class="">
        <td>
            <a href="z-index-applies-to-010.xht">z-index-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Z-index applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'z-index' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-011-9.9.1" class="">
        <td>
            <a href="z-index-applies-to-011.xht">z-index-applies-to-011</a></td>
        <td></td>
        <td></td>
        <td>Z-index applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'z-index' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-012-9.9.1" class="">
        <td>
            <a href="z-index-applies-to-012.xht">z-index-applies-to-012</a></td>
        <td></td>
        <td></td>
        <td>Z-index applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'z-index' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-013-9.9.1" class="">
        <td>
            <a href="z-index-applies-to-013.xht">z-index-applies-to-013</a></td>
        <td></td>
        <td></td>
        <td>Z-index applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'z-index' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-014-9.9.1" class="">
        <td>
            <a href="z-index-applies-to-014.xht">z-index-applies-to-014</a></td>
        <td></td>
        <td></td>
        <td>Z-index applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'z-index' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-015-9.9.1" class="may">
        <td>
            <a href="z-index-applies-to-015.xht">z-index-applies-to-015</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'z-index' property can apply to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-dynamic-001-9.9.1" class="primary dom">
        <td><strong>
            <a href="z-index-dynamic-001.xht">z-index-dynamic-001</a></strong></td>
        <td></td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Z-index - dynamically setting z-index to bring an element from back to in front of
          <ul class="assert">
            <li>Setting the 'z-index' property of a positioned element can bring it from behind the surface on a lower stack level to a greater stack level passing it in front of another element painted on the surface.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-stack-003-9.9.1" class="primary">
        <td><strong>
            <a href="z-index-stack-003.xht">z-index-stack-003</a></strong></td>
        <td></td>
        <td></td>
        <td>Z-index - stacking levels of positioned elements versus floated elements
          <ul class="assert">
            <li>Positioned elements should be painted over floated elements. A positioned descendant with 'z-index: auto' has a greater stacking level than non-positioned floated elements.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.9.1.#propdef-z-index">
      <!-- 29 tests -->
      <tr id="z-index-001-9.9.1.#propdef-z-index" class="primary 32bit may">
        <td><strong>
            <a href="z-index-001.xht">z-index-001</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="32bit" title="Requires 32 bit signed integers">32</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index set to minimum value minus 1
          <ul class="assert">
            <li>The property z-index set to a minimum value minus 1 for a 32-bit integer is correctly handled.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-002-9.9.1.#propdef-z-index" class="primary 32bit may">
        <td><strong>
            <a href="z-index-002.xht">z-index-002</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="32bit" title="Requires 32 bit signed integers">32</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index set to minimum value
          <ul class="assert">
            <li>The property z-index set to a minimum value for a 32-bit integer is correctly handled.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-003-9.9.1.#propdef-z-index" class="primary 32bit may">
        <td><strong>
            <a href="z-index-003.xht">z-index-003</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="32bit" title="Requires 32 bit signed integers">32</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index set to minimum value plus 1
          <ul class="assert">
            <li>The property z-index set to a minimum value plus 1 for a 32-bit integer is correctly handled.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-004-9.9.1.#propdef-z-index" class="primary">
        <td><strong>
            <a href="z-index-004.xht">z-index-004</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Z-index set to zero prefixed with a minus sign
          <ul class="assert">
            <li>The property z-index set to '0' prefixed with a minus sign is read as value '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-005-9.9.1.#propdef-z-index" class="primary">
        <td><strong>
            <a href="z-index-005.xht">z-index-005</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Z-index set to zero
          <ul class="assert">
            <li>The property z-index with a zero value is read and applied as the value '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-006-9.9.1.#propdef-z-index" class="primary">
        <td><strong>
            <a href="z-index-006.xht">z-index-006</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Z-index set to zero prefixed with a plus sign
          <ul class="assert">
            <li>The property z-index set to '0' prefixed with a plus sign is read as value '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-007-9.9.1.#propdef-z-index" class="primary">
        <td><strong>
            <a href="z-index-007.xht">z-index-007</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Z-index set to a nominal value
          <ul class="assert">
            <li>The property z-index set to a nominal value is correctly read and applied.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-008-9.9.1.#propdef-z-index" class="primary">
        <td><strong>
            <a href="z-index-008.xht">z-index-008</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Z-index set to a nominal value prefixed with a plus sign
          <ul class="assert">
            <li>The property z-index set to nominal value and prefixed with a plus sign is read the same as the value without the plus sign.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-009-9.9.1.#propdef-z-index" class="primary 32bit may">
        <td><strong>
            <a href="z-index-009.xht">z-index-009</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="32bit" title="Requires 32 bit signed integers">32</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index set maximum value minus 1
          <ul class="assert">
            <li>The property z-index set to a maximum value minus 1 for a 32-bit integer is correctly handled.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-010-9.9.1.#propdef-z-index" class="primary 32bit may">
        <td><strong>
            <a href="z-index-010.xht">z-index-010</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="32bit" title="Requires 32 bit signed integers">32</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index set to the maximum value
          <ul class="assert">
            <li>The property z-index set to a maximum value for a 32-bit integer is correctly handled.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-011-9.9.1.#propdef-z-index" class="primary 32bit may">
        <td><strong>
            <a href="z-index-011.xht">z-index-011</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="32bit" title="Requires 32 bit signed integers">32</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index set to maximum value prefixed with a plus sign
          <ul class="assert">
            <li>The property z-index set to a maximum value for a 32-bit integer, prefixed with a plus sign is correctly handled.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-012-9.9.1.#propdef-z-index" class="primary 32bit may">
        <td><strong>
            <a href="z-index-012.xht">z-index-012</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="32bit" title="Requires 32 bit signed integers">32</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index set to maximum value plus 1
          <ul class="assert">
            <li>The property 'z-index' set to a maximum value plus 1 for a 32-bit integer is correctly handled.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-013-9.9.1.#propdef-z-index" class="primary">
        <td><strong>
            <a href="z-index-013.xht">z-index-013</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Z-index: auto results in the same stack level as parent element
          <ul class="assert">
            <li>The property z-index set to 'auto' results in the same stacking level as its parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-014-9.9.1.#propdef-z-index" class="primary">
        <td><strong>
            <a href="z-index-014.xht">z-index-014</a></strong></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Z-index: inherit sets a value the same as parent element's value
          <ul class="assert">
            <li>The property z-index set to 'inherit' sets a value the same as parent element's computed value.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-001-9.9.1.#propdef-z-index" class="primary may">
        <td><strong>
            <a href="z-index-applies-to-001.xht">z-index-applies-to-001</a></strong></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'z-index' property can apply to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-002-9.9.1.#propdef-z-index" class="primary may">
        <td><strong>
            <a href="z-index-applies-to-002.xht">z-index-applies-to-002</a></strong></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'z-index' property can apply to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-003-9.9.1.#propdef-z-index" class="primary may">
        <td><strong>
            <a href="z-index-applies-to-003.xht">z-index-applies-to-003</a></strong></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'z-index' property can apply to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-004-9.9.1.#propdef-z-index" class="primary may">
        <td><strong>
            <a href="z-index-applies-to-004.xht">z-index-applies-to-004</a></strong></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'z-index' property can apply to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-005-9.9.1.#propdef-z-index" class="primary may">
        <td><strong>
            <a href="z-index-applies-to-005.xht">z-index-applies-to-005</a></strong></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'z-index' property can apply to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-006-9.9.1.#propdef-z-index" class="primary may">
        <td><strong>
            <a href="z-index-applies-to-006.xht">z-index-applies-to-006</a></strong></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'z-index' property can apply to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-007-9.9.1.#propdef-z-index" class="primary may">
        <td><strong>
            <a href="z-index-applies-to-007.xht">z-index-applies-to-007</a></strong></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'z-index' property can apply to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-008-9.9.1.#propdef-z-index" class="primary ahem">
        <td><strong>
            <a href="z-index-applies-to-008.xht">z-index-applies-to-008</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Z-index applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'z-index' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-009-9.9.1.#propdef-z-index" class="primary">
        <td><strong>
            <a href="z-index-applies-to-009.xht">z-index-applies-to-009</a></strong></td>
        <td></td>
        <td></td>
        <td>Z-index applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'z-index' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-010-9.9.1.#propdef-z-index" class="primary">
        <td><strong>
            <a href="z-index-applies-to-010.xht">z-index-applies-to-010</a></strong></td>
        <td></td>
        <td></td>
        <td>Z-index applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'z-index' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-011-9.9.1.#propdef-z-index" class="primary">
        <td><strong>
            <a href="z-index-applies-to-011.xht">z-index-applies-to-011</a></strong></td>
        <td></td>
        <td></td>
        <td>Z-index applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'z-index' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-012-9.9.1.#propdef-z-index" class="primary">
        <td><strong>
            <a href="z-index-applies-to-012.xht">z-index-applies-to-012</a></strong></td>
        <td></td>
        <td></td>
        <td>Z-index applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'z-index' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-013-9.9.1.#propdef-z-index" class="primary">
        <td><strong>
            <a href="z-index-applies-to-013.xht">z-index-applies-to-013</a></strong></td>
        <td></td>
        <td></td>
        <td>Z-index applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'z-index' property applies to elements with a display of 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-014-9.9.1.#propdef-z-index" class="primary">
        <td><strong>
            <a href="z-index-applies-to-014.xht">z-index-applies-to-014</a></strong></td>
        <td></td>
        <td></td>
        <td>Z-index applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'z-index' property applies to elements with a display of 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="z-index-applies-to-015-9.9.1.#propdef-z-index" class="primary may">
        <td><strong>
            <a href="z-index-applies-to-015.xht">z-index-applies-to-015</a></strong></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Z-index applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'z-index' property can apply to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.9.1.#stack-level">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.9.1.#x42">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.9.1.#x43">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.10">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s9.10">+</a>
        <a href="http://www.w3.org/TR/CSS21/visuren.html#direction">9.10 Text direction: the 'direction' and 'unicode-bidi' properties</a></th></tr>
      <!-- 119 tests -->
      <tr id="bidi-001-9.10" class="">
        <td>
            <a href="bidi-001.xht">bidi-001</a></td>
        <td><a href="reference/bidi-001-ref.xht">=</a> </td>
        <td></td>
        <td>RLO/PDF bidi reordering across closing inline element boundary
          <ul class="assert">
            <li>Tests that RLO + closing inline element boundary + PDF reorders text, splitting inline and rendering borders and padding appropriately.</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-002-9.10" class="">
        <td>
            <a href="bidi-002.xht">bidi-002</a></td>
        <td><a href="reference/bidi-002-ref.xht">=</a> </td>
        <td></td>
        <td>RLO/PDF bidi reordering across closing inline element boundary + soft line break
          <ul class="assert">
            <li>Tests that RLO + closing inline element boundary + soft line break + PDF reorders text, placing text correctly on each line while also splitting inline and rendering borders and padding appropriately.</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-003-9.10" class="">
        <td>
            <a href="bidi-003.xht">bidi-003</a></td>
        <td><a href="reference/bidi-003-ref.xht">=</a> </td>
        <td></td>
        <td>RLO/PDF bidi reordering across closing inline element boundary + opening inline boundary
          <ul class="assert">
            <li>Tests that RLO + closing inline element boundary + opening inline element boundary + PDF reorders text, splitting inlines and rendering their borders and padding appropriately.</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-004-9.10" class="ahem may21">
        <td>
            <a href="bidi-004.xht">bidi-004</a></td>
        <td><a href="reference/bidi-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="may21" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>The bidi algorithm and inlines in CSS
        </td>
      </tr>
      <tr id="bidi-005-9.10" class="">
        <td>
            <a href="bidi-005.xht">bidi-005</a></td>
        <td></td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and white-space: pre;
        </td>
      </tr>
      <tr id="bidi-005a-9.10" class="">
        <td>
            <a href="bidi-005a.xht">bidi-005a</a></td>
        <td><a href="reference/bidi-005a-ref.xht">=</a> </td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and white-space: pre;
        </td>
      </tr>
      <tr id="bidi-005b-9.10" class="">
        <td>
            <a href="bidi-005b.xht">bidi-005b</a></td>
        <td><a href="reference/bidi-005b-ref.xht">=</a> </td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and white-space: pre;
        </td>
      </tr>
      <tr id="bidi-006-9.10" class="">
        <td>
            <a href="bidi-006.xht">bidi-006</a></td>
        <td></td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and white-space: nowrap;
        </td>
      </tr>
      <tr id="bidi-006a-9.10" class="">
        <td>
            <a href="bidi-006a.xht">bidi-006a</a></td>
        <td><a href="reference/bidi-005a-ref.xht">=</a> </td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and white-space: nowrap;
        </td>
      </tr>
      <tr id="bidi-006b-9.10" class="">
        <td>
            <a href="bidi-006b.xht">bidi-006b</a></td>
        <td><a href="reference/bidi-005b-ref.xht">=</a> </td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and white-space: nowrap;
        </td>
      </tr>
      <tr id="bidi-007-9.10" class="">
        <td>
            <a href="bidi-007.xht">bidi-007</a></td>
        <td></td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and float: left;
        </td>
      </tr>
      <tr id="bidi-007a-9.10" class="">
        <td>
            <a href="bidi-007a.xht">bidi-007a</a></td>
        <td><a href="reference/bidi-007a-ref.xht">=</a> </td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and float: left;
        </td>
      </tr>
      <tr id="bidi-007b-9.10" class="">
        <td>
            <a href="bidi-007b.xht">bidi-007b</a></td>
        <td><a href="reference/bidi-007b-ref.xht">=</a> </td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and float: left;
        </td>
      </tr>
      <tr id="bidi-008-9.10" class="">
        <td>
            <a href="bidi-008.xht">bidi-008</a></td>
        <td></td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and display: table;
        </td>
      </tr>
      <tr id="bidi-008a-9.10" class="">
        <td>
            <a href="bidi-008a.xht">bidi-008a</a></td>
        <td><a href="reference/bidi-008a-ref.xht">=</a> </td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and display: table;
        </td>
      </tr>
      <tr id="bidi-008b-9.10" class="">
        <td>
            <a href="bidi-008b.xht">bidi-008b</a></td>
        <td><a href="reference/bidi-008b-ref.xht">=</a> </td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and display: table;
        </td>
      </tr>
      <tr id="bidi-009-9.10" class="">
        <td>
            <a href="bidi-009.xht">bidi-009</a></td>
        <td></td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and display: table-row;
        </td>
      </tr>
      <tr id="bidi-009a-9.10" class="">
        <td>
            <a href="bidi-009a.xht">bidi-009a</a></td>
        <td><a href="reference/bidi-005a-ref.xht">=</a> </td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and display: table-row;
        </td>
      </tr>
      <tr id="bidi-009b-9.10" class="">
        <td>
            <a href="bidi-009b.xht">bidi-009b</a></td>
        <td><a href="reference/bidi-005b-ref.xht">=</a> </td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and display: table-row;
        </td>
      </tr>
      <tr id="bidi-010-9.10" class="">
        <td>
            <a href="bidi-010.xht">bidi-010</a></td>
        <td></td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and position: absolute
        </td>
      </tr>
      <tr id="bidi-010a-9.10" class="">
        <td>
            <a href="bidi-010a.xht">bidi-010a</a></td>
        <td><a href="reference/bidi-007a-ref.xht">=</a> </td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and position: absolute
        </td>
      </tr>
      <tr id="bidi-010b-9.10" class="">
        <td>
            <a href="bidi-010b.xht">bidi-010b</a></td>
        <td><a href="reference/bidi-007b-ref.xht">=</a> </td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS: embed levels and position: absolute
        </td>
      </tr>
      <tr id="bidi-011-9.10" class="">
        <td>
            <a href="bidi-011.xht">bidi-011</a></td>
        <td><a href="reference/bidi-011-ref.xht">=</a> </td>
        <td></td>
        <td>The bidi algorithm and inlines in CSS wrapping bidi formatting characters
        </td>
      </tr>
      <tr id="bidi-alt-001-9.10" class="">
        <td>
            <a href="bidi-alt-001.xht">bidi-alt-001</a></td>
        <td></td>
        <td></td>
        <td>unicode-bidi: bidi-override in alt text
          <ul class="assert">
            <li>If alt text is not treated as replaced content, then unicode-bidi applies to image alt text.</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-breaking-001-9.10" class="">
        <td>
            <a href="bidi-breaking-001.xht">bidi-breaking-001</a></td>
        <td><a href="reference/bidi-breaking-001-ref.xht">=</a> </td>
        <td></td>
        <td>Bidi paragraph boundaries: Blocks
          <ul class="assert">
            <li>Block boundaries break bidi paragraphs.</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-breaking-002-9.10" class="">
        <td>
            <a href="bidi-breaking-002.xht">bidi-breaking-002</a></td>
        <td><a href="reference/bidi-breaking-002-ref.xht">=</a> </td>
        <td></td>
        <td>Bidi paragraph boundaries: Forced Line Breaks
          <ul class="assert">
            <li>Forced line breaks of class B (but not class WS) break bidi paragraphs.</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-breaking-003-9.10" class="may">
        <td>
            <a href="bidi-breaking-003.xht">bidi-breaking-003</a></td>
        <td><a href="reference/bidi-breaking-003-ref.xht">=</a> </td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Bidi paragraph boundaries: Forced Line Breaks (Unicode)
          <ul class="assert">
            <li>Forced line breaks of class B (but not class WS) break bidi paragraphs.</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-direction-001-9.10" class="">
        <td>
            <a href="bidi-direction-001.xht">bidi-direction-001</a></td>
        <td></td>
        <td></td>
        <td>direction:rtl on body
          <ul class="assert">
            <li>direction:rtl on body should inherit to paragraphs</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-direction-002-9.10" class="">
        <td>
            <a href="bidi-direction-002.xht">bidi-direction-002</a></td>
        <td></td>
        <td></td>
        <td>direction - nested ltr and rtl
          <ul class="assert">
            <li>Direction on paragraph should override direction on body</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-display-block-001-9.10" class="primary">
        <td><strong>
            <a href="bidi-display-block-001.xht">bidi-display-block-001</a></strong></td>
        <td></td>
        <td></td>
        <td>bidi and inline with display:block
          <ul class="assert">
            <li>An inline with display:block should be treated as a paragraph in the bidi algorithm</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-generated-content-001-9.10" class="">
        <td>
            <a href="bidi-generated-content-001.xht">bidi-generated-content-001</a></td>
        <td></td>
        <td></td>
        <td>content: with character forced bidi - rlo
          <ul class="assert">
            <li>A right-to-left override should be applied when u+202E is inserted through the content property</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-generated-content-002-9.10" class="primary">
        <td><strong>
            <a href="bidi-generated-content-002.xht">bidi-generated-content-002</a></strong></td>
        <td></td>
        <td></td>
        <td>content: with character forced bidi - lro
          <ul class="assert">
            <li>A left-to-right override should be correctly applied when inserted through the content property</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-glyph-mirroring-001-9.10" class="">
        <td>
            <a href="bidi-glyph-mirroring-001.xht">bidi-glyph-mirroring-001</a></td>
        <td><a href="reference/bidi-glyph-mirroring-001-ref.xht">=</a> </td>
        <td></td>
        <td>unicode-bidi: bidi-override - glyph mirroring
          <ul class="assert">
            <li>Glyph mirroring of characters with unicode Bidi_Mirrored property should be performed when unicode-bidi: bidi-override is applied</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-glyph-mirroring-002-9.10" class="">
        <td>
            <a href="bidi-glyph-mirroring-002.xht">bidi-glyph-mirroring-002</a></td>
        <td><a href="reference/bidi-glyph-mirroring-002-ref.xht">=</a> </td>
        <td></td>
        <td>unicode-bidi: bidi-override - glyph mirroring
          <ul class="assert">
            <li>Glyph mirroring of characters with unicode Bidi_Mirrored property should be performed direction:rtl is applied</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-inline-001-9.10" class="">
        <td>
            <a href="bidi-inline-001.xht">bidi-inline-001</a></td>
        <td><a href="reference/bidi-inline-001-ref.xht">=</a> </td>
        <td></td>
        <td>unicode-bidi: bidi-override on inline - rtl
          <ul class="assert">
            <li>bidi-override should be applied to inlines with no interruptions to surrounding text</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-inline-002-9.10" class="">
        <td>
            <a href="bidi-inline-002.xht">bidi-inline-002</a></td>
        <td><a href="reference/bidi-inline-001-ref.xht">=</a> </td>
        <td></td>
        <td>unicode-bidi: bidi-override on inline - nested
          <ul class="assert">
            <li>Nested bidi-override should be applied to inlines with no interruptions to surrounding text</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-list-001-9.10" class="primary">
        <td><strong>
            <a href="bidi-list-001.xht">bidi-list-001</a></strong></td>
        <td></td>
        <td></td>
        <td>direction:rtl - unordered list
          <ul class="assert">
            <li>direction:rtl should apply to unordered lists, putting bullets on the right</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-list-002-9.10" class="primary">
        <td><strong>
            <a href="bidi-list-002.xht">bidi-list-002</a></strong></td>
        <td></td>
        <td></td>
        <td>direction:rtl - nested unordered list
          <ul class="assert">
            <li>direction:rtl should apply to nested unordered lists, putting bullets on the right and offset leftwards</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-list-003-9.10" class="primary">
        <td><strong>
            <a href="bidi-list-003.xht">bidi-list-003</a></strong></td>
        <td></td>
        <td></td>
        <td>direction:rtl - ordered list
          <ul class="assert">
            <li>direction:rtl should apply to nested ordered lists, putting bullets on the right and offset leftwards</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-list-004-9.10" class="">
        <td>
            <a href="bidi-list-004.xht">bidi-list-004</a></td>
        <td></td>
        <td></td>
        <td>text-align: justify and direction:rtl - unordered list
          <ul class="assert">
            <li>text-align: justify should apply to unordered lists in rtl context without affecting their rtlness</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-list-005-9.10" class="">
        <td>
            <a href="bidi-list-005.xht">bidi-list-005</a></td>
        <td></td>
        <td></td>
        <td>text-align: left and direction:rtl - unordered list
          <ul class="assert">
            <li>text-align:left should be applied to unordered list in rtl context without affecting its rtlness</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-list-006-9.10" class="">
        <td>
            <a href="bidi-list-006.xht">bidi-list-006</a></td>
        <td></td>
        <td></td>
        <td>text-align: right and direction:rtl - unordered list
          <ul class="assert">
            <li>text-align:right should be applied to unordered list in rtl context without affecting its rtlness</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-list-007-9.10" class="">
        <td>
            <a href="bidi-list-007.xht">bidi-list-007</a></td>
        <td></td>
        <td></td>
        <td>text-align: center and direction:rtl - unordered list
          <ul class="assert">
            <li>text-align: center should apply to unordered lists in rtl context without affecting their rtlness</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-override-001-9.10" class="">
        <td>
            <a href="bidi-override-001.xht">bidi-override-001</a></td>
        <td></td>
        <td></td>
        <td>unicode-bidi: bidi-override on table
          <ul class="assert">
            <li>bidi-override should not be applied to table cell content when specified on table</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-override-002-9.10" class="">
        <td>
            <a href="bidi-override-002.xht">bidi-override-002</a></td>
        <td></td>
        <td></td>
        <td>unicode-bidi: bidi-override on table cell
          <ul class="assert">
            <li>bidi-override should be applied to table-cell content when specified on the cell</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-override-003-9.10" class="">
        <td>
            <a href="bidi-override-003.xht">bidi-override-003</a></td>
        <td></td>
        <td></td>
        <td>unicode-bidi: bidi-override on list
          <ul class="assert">
            <li>bidi-override should not be applied to list item when specified on ul</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-override-004-9.10" class="">
        <td>
            <a href="bidi-override-004.xht">bidi-override-004</a></td>
        <td></td>
        <td></td>
        <td>unicode-bidi: bidi-override on list item
          <ul class="assert">
            <li>bidi-override should be applied when specified on list item</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-override-005-9.10" class="">
        <td>
            <a href="bidi-override-005.xht">bidi-override-005</a></td>
        <td></td>
        <td></td>
        <td>unicode-bidi: bidi-override on nested div
          <ul class="assert">
            <li>bidi-override should be applied to inline-level descendants but not block-level descendants</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-position-fixed-001-9.10" class="">
        <td>
            <a href="bidi-position-fixed-001.xht">bidi-position-fixed-001</a></td>
        <td></td>
        <td></td>
        <td>position:fixed in rtl context
          <ul class="assert">
            <li>Default horizontal position of position:fixed block should be right in rtl context, and ancestor direction should still be applied inside the block taken out of normal flow</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-table-001-9.10" class="">
        <td>
            <a href="bidi-table-001.xht">bidi-table-001</a></td>
        <td></td>
        <td></td>
        <td>direction: rtl on table
          <ul class="assert">
            <li>direction:rtl on table should reverse order of table cells</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-table-002-9.10" class="">
        <td>
            <a href="bidi-table-002.xht">bidi-table-002</a></td>
        <td></td>
        <td></td>
        <td>direction: on nested tables
          <ul class="assert">
            <li>direction: should affect order of table cells</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-unicode-bidi-001-9.10" class="">
        <td>
            <a href="bidi-unicode-bidi-001.xht">bidi-unicode-bidi-001</a></td>
        <td></td>
        <td></td>
        <td>unicode-bidi: bidi-override - rtl
          <ul class="assert">
            <li>unicode-bidi: bidi-override should order characters strictly according to value of direction property</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-unicode-bidi-003-9.10" class="">
        <td>
            <a href="bidi-unicode-bidi-003.xht">bidi-unicode-bidi-003</a></td>
        <td></td>
        <td></td>
        <td>unicode-bidi: embed - nested ltr and rtl
          <ul class="assert">
            <li>unicode-bidi: embed should open a new bidi embedding level for inline-level element</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-001-9.10" class="">
        <td>
            <a href="direction-001.xht">direction-001</a></td>
        <td><a href="reference/direction-001-ref.xht">=</a> </td>
        <td></td>
        <td>Direction set to 'ltr'
          <ul class="assert">
            <li>The 'direction' property set to 'ltr' sets the direction of an element to left-to-right.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-002-9.10" class="">
        <td>
            <a href="direction-002.xht">direction-002</a></td>
        <td><a href="reference/direction-002-ref.xht">=</a> </td>
        <td></td>
        <td>Direction set to 'rtl'
          <ul class="assert">
            <li>The 'direction' property set to 'rtl' sets the direction of an element to right-to-left.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-003-9.10" class="">
        <td>
            <a href="direction-003.xht">direction-003</a></td>
        <td><a href="reference/direction-002-ref.xht">=</a> </td>
        <td></td>
        <td>Direction set to 'inherit' sets a value that is inherited from parent element
          <ul class="assert">
            <li>The 'direction' property set to 'inherit' sets a direction value to the same as the parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-001-9.10" class="ahem">
        <td>
            <a href="direction-applies-to-001.xht">direction-applies-to-001</a></td>
        <td><a href="reference/direction-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'direction' property does not apply to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-002-9.10" class="ahem">
        <td>
            <a href="direction-applies-to-002.xht">direction-applies-to-002</a></td>
        <td><a href="reference/direction-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'direction' property does not apply to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-003-9.10" class="ahem">
        <td>
            <a href="direction-applies-to-003.xht">direction-applies-to-003</a></td>
        <td><a href="reference/direction-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'direction' property does not apply to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-004-9.10" class="ahem">
        <td>
            <a href="direction-applies-to-004.xht">direction-applies-to-004</a></td>
        <td><a href="reference/direction-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'direction' property does not apply to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-005-9.10" class="ahem">
        <td>
            <a href="direction-applies-to-005.xht">direction-applies-to-005</a></td>
        <td><a href="reference/direction-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'direction' property does not apply to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-006-9.10" class="ahem">
        <td>
            <a href="direction-applies-to-006.xht">direction-applies-to-006</a></td>
        <td><a href="reference/direction-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'direction' property does not apply to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-007-9.10" class="ahem">
        <td>
            <a href="direction-applies-to-007.xht">direction-applies-to-007</a></td>
        <td><a href="reference/direction-applies-to-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'direction' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-008-9.10" class="">
        <td>
            <a href="direction-applies-to-008.xht">direction-applies-to-008</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Direction applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'direction' property applies to elements with a display of inline as it can set the direction of embeddings and overrides.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-009-9.10" class="ahem">
        <td>
            <a href="direction-applies-to-009.xht">direction-applies-to-009</a></td>
        <td><a href="reference/direction-applies-to-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'direction' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-010-9.10" class="ahem">
        <td>
            <a href="direction-applies-to-010.xht">direction-applies-to-010</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'direction' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-011-9.10" class="ahem">
        <td>
            <a href="direction-applies-to-011.xht">direction-applies-to-011</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'direction' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-012-9.10" class="ahem">
        <td>
            <a href="direction-applies-to-012.xht">direction-applies-to-012</a></td>
        <td><a href="reference/direction-applies-to-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'direction' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-013-9.10" class="ahem">
        <td>
            <a href="direction-applies-to-013.xht">direction-applies-to-013</a></td>
        <td><a href="reference/direction-applies-to-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'direction' property can apply to elements with a display of 'table' as it specifies the direction of table column layout.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-014-9.10" class="ahem">
        <td>
            <a href="direction-applies-to-014.xht">direction-applies-to-014</a></td>
        <td><a href="reference/direction-applies-to-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'direction' property can apply to elements with a display of 'inline-table' as it specifies the direction of table column layout.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-015-9.10" class="ahem">
        <td>
            <a href="direction-applies-to-015.xht">direction-applies-to-015</a></td>
        <td><a href="reference/direction-applies-to-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'direction' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-001-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-001.xht">direction-unicode-bidi-001</a></strong></td>
        <td></td>
        <td></td>
        <td>default context, direction rtl, unicode-bidi embed
          <ul class="assert">
            <li>In the default context, if direction:rtl and unicode-bidi:embed are applied to an inline element containing mixed direction text, the text in that element will be displayed correctly.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-002-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-002.xht">direction-unicode-bidi-002</a></strong></td>
        <td></td>
        <td></td>
        <td>default context, direction rtl, unicode-bidi none
          <ul class="assert">
            <li>In the default context, if direction:rtl alone is applied to an inline element containing mixed direction text, the different directional runs in that element will not be in the correct order.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-003-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-003.xht">direction-unicode-bidi-003</a></strong></td>
        <td></td>
        <td></td>
        <td>ltr context, direction rtl, unicode-bidi embed
          <ul class="assert">
            <li>In a LTR context, if direction:rtl and unicode-bidi:embed are applied to an inline element containing mixed direction text, the text in that element will be displayed correctly.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-004-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-004.xht">direction-unicode-bidi-004</a></strong></td>
        <td></td>
        <td></td>
        <td>ltr context, direction rtl, unicode-bidi none
          <ul class="assert">
            <li>In a LTR context, if direction:rtl alone is applied to an inline element containing mixed direction text, the different directional runs in that element will not be in the correct order.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-005-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-005.xht">direction-unicode-bidi-005</a></strong></td>
        <td></td>
        <td></td>
        <td>rtl context, direction ltr, unicode-bidi embed
          <ul class="assert">
            <li>In a RTL context, if direction:ltr and unicode-bidi:embed are applied to a LTR inline element containing mixed direction text, the text in that element will be displayed correctly.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-006-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-006.xht">direction-unicode-bidi-006</a></strong></td>
        <td></td>
        <td></td>
        <td>rtl context, direction ltr, unicode-bidi none
          <ul class="assert">
            <li>In a RTL context, if direction:ltr alone is applied to a LTR inline element containing mixed direction text, the different directional runs in that element will not be in the correct order.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-007-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-007.xht">direction-unicode-bidi-007</a></strong></td>
        <td></td>
        <td></td>
        <td>direction of a ltr tspan
          <ul class="assert">
            <li>In a RTL context, if direction:ltr and unicode-bidi:embed are applied to an inline element containing mixed direction text, the the inline element will interact with surrounding ltr text as a LTR directional run.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-008-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-008.xht">direction-unicode-bidi-008</a></strong></td>
        <td></td>
        <td></td>
        <td>direction of a rtl tspan
          <ul class="assert">
            <li>In a LTR context, if direction:rtl and unicode-bidi:embed are applied to an inline element containing mixed direction text, the the inline element will interact with surrounding rtl text as a RTL directional run.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-009-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-009.xht">direction-unicode-bidi-009</a></strong></td>
        <td></td>
        <td></td>
        <td>on element, direction ltr, unicode-bidi none
          <ul class="assert">
            <li>direction:ltr alone on a block element will cause the text to be left-aligned, directional runs to be arranged LTR (but the words should look correct within each run), and punctuation should be treated as LTR.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-010-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-010.xht">direction-unicode-bidi-010</a></strong></td>
        <td></td>
        <td></td>
        <td>on element, direction rtl, unicode-bidi none
          <ul class="assert">
            <li>direction:rtl alone on a block element will cause the text to be right-aligned, directional runs to be arranged RTL (but the words should look correct within each run), and punctuation should be treated as RTL.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-011-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-011.xht">direction-unicode-bidi-011</a></strong></td>
        <td></td>
        <td></td>
        <td>inherited, direction ltr, unicode-bidi none
          <ul class="assert">
            <li>direction:ltr on a container element will be inherited by an embedded block element.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-012-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-012.xht">direction-unicode-bidi-012</a></strong></td>
        <td></td>
        <td></td>
        <td>inherited, direction rtl, unicode-bidi none
          <ul class="assert">
            <li>direction:rtl on a container element will be inherited by an embedded block element.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-013-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-013.xht">direction-unicode-bidi-013</a></strong></td>
        <td></td>
        <td></td>
        <td>default context, direction none, unicode-bidi override
          <ul class="assert">
            <li>In the default context, if unicode-bidi:bidi-override and no direction are applied to an inline element containing mixed direction text, the characters in that element will be displayed in backing-store order from left to right.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-014-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-014.xht">direction-unicode-bidi-014</a></strong></td>
        <td></td>
        <td></td>
        <td>default context, direction ltr, unicode-bidi override
          <ul class="assert">
            <li>In the default context, if direction:ltr and unicode-bidi:bidi-override are applied to an inline element containing mixed direction text, the characters in that element will be displayed in backing-store order from left to right.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-015-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-015.xht">direction-unicode-bidi-015</a></strong></td>
        <td></td>
        <td></td>
        <td>default context, direction rtl, unicode-bidi override
          <ul class="assert">
            <li>In the default context, if unicode-bidi:bidi-override and direction:rtl are applied to an inline element containing mixed direction text, the characters in that element will be displayed in reverse backing-store order from left to right.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-016-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-016.xht">direction-unicode-bidi-016</a></strong></td>
        <td></td>
        <td></td>
        <td>ltr context, direction none, unicode-bidi override
          <ul class="assert">
            <li>In a LTR context, if unicode-bidi:bidi-override and no direction are applied to an inline element containing mixed direction text, the characters in that element will be displayed in backing-store order from left to right.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-017-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-017.xht">direction-unicode-bidi-017</a></strong></td>
        <td></td>
        <td></td>
        <td>ltr context, direction ltr, unicode-bidi override
          <ul class="assert">
            <li>In a LTR context, if direction:ltr and unicode-bidi:bidi-override are applied to an inline element containing mixed direction text, the characters in that element will be displayed in backing-store order from left to right.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-018-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-018.xht">direction-unicode-bidi-018</a></strong></td>
        <td></td>
        <td></td>
        <td>ltr context, direction rtl, unicode-bidi override
          <ul class="assert">
            <li>In a LTR context, if unicode-bidi:bidi-override and direction:rtl are applied to an inline element containing mixed direction text, the characters in that element will be displayed in reverse backing-store order from left to right.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-019-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-019.xht">direction-unicode-bidi-019</a></strong></td>
        <td></td>
        <td></td>
        <td>rtl context, direction none, unicode-bidi override
          <ul class="assert">
            <li>In a RTL context, if unicode-bidi:bidi-override and no direction are applied to a LTR inline element containing mixed direction text, the characters in that element will be displayed in backing-store order from right to left.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-020-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-020.xht">direction-unicode-bidi-020</a></strong></td>
        <td></td>
        <td></td>
        <td>rtl context, direction ltr, unicode-bidi override
          <ul class="assert">
            <li>In a RTL context, if direction:ltr and unicode-bidi:bidi-override are applied to a LTR inline element containing mixed direction text, the characters in that element will be displayed in reverse backing-store order from right to left.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-021-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-021.xht">direction-unicode-bidi-021</a></strong></td>
        <td></td>
        <td></td>
        <td>rtl context, direction rtl, unicode-bidi override
          <ul class="assert">
            <li>In a RTL context, if unicode-bidi:bidi-override and direction:rtl are applied to a LTR inline element containing mixed direction text, the characters in that element will be displayed in backing-store order from right to left.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-022-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-022.xht">direction-unicode-bidi-022</a></strong></td>
        <td></td>
        <td></td>
        <td>on element, direction ltr, unicode-bidi override
          <ul class="assert">
            <li>direction:ltr and unicode-bidi:bidi-override on a block element will cause the text to be left-aligned, and all text to be displayed in backing-store order from left to right.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-023-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-023.xht">direction-unicode-bidi-023</a></strong></td>
        <td></td>
        <td></td>
        <td>on element, direction rtl, unicode-bidi override
          <ul class="assert">
            <li>direction:rtl and unicode-bidi:bidi-override on a block element will cause the text to be right-aligned, and all text to be displayed in backing-store order from right to left.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-024-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-024.xht">direction-unicode-bidi-024</a></strong></td>
        <td></td>
        <td></td>
        <td>inherited, direction ltr, unicode-bidi override
          <ul class="assert">
            <li>When direction:ltr and unicode-bidi:bidi-override is set on a block element, the override will not be inherited by a child block element, but the direction will.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-025-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-025.xht">direction-unicode-bidi-025</a></strong></td>
        <td></td>
        <td></td>
        <td>inherited, direction rtl, unicode-bidi override
          <ul class="assert">
            <li>When direction:rtl and unicode-bidi:bidi-override is set on a block element, the override will not be inherited by a child block element, but the direction will.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-026-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-026.xht">direction-unicode-bidi-026</a></strong></td>
        <td></td>
        <td></td>
        <td>right to left block
          <ul class="assert">
            <li>When direction:ltr and unicode-bidi:bidi-override is set on a block element containing block and inline elements, only the direction of the inline text will be overridden.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-027-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-027.xht">direction-unicode-bidi-027</a></strong></td>
        <td></td>
        <td></td>
        <td>left to right block
          <ul class="assert">
            <li>When direction:rtl and unicode-bidi:bidi-override is set on a block element containing block and inline elements, only the direction of the inline text will be overridden.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-unicode-bidi-028-9.10" class="primary">
        <td><strong>
            <a href="direction-unicode-bidi-028.xht">direction-unicode-bidi-028</a></strong></td>
        <td></td>
        <td></td>
        <td>inner block converted to inline
          <ul class="assert">
            <li>When direction:rtl and unicode-bidi:bidi-override is set on a block element containing block and inline elements, and CSS is used to change the block element to an inline element, the direction of all the text will be overridden.</li>
          </ul>
        </td>
      </tr>
      <tr id="list-style-position-025-9.10" class="">
        <td>
            <a href="list-style-position-025.xht">list-style-position-025</a></td>
        <td></td>
        <td></td>
        <td>list-style-position in rtl context
          <ul class="assert">
            <li>list-style-position:inside in rtl context should let text flow below the bullet on the right side</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-001-9.10" class="">
        <td>
            <a href="unicode-bidi-001.xht">unicode-bidi-001</a></td>
        <td><a href="reference/direction-002-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi set to 'normal'
          <ul class="assert">
            <li>The property 'unicode-bidi' set to 'normal' doesn't modify the directionality of text.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-002-9.10" class="">
        <td>
            <a href="unicode-bidi-002.xht">unicode-bidi-002</a></td>
        <td><a href="reference/unicode-bidi-002-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi set to 'embed'
          <ul class="assert">
            <li>The property 'unicode-bidi' set to 'embed' opens a new level of embedding in the Unicode bi-directional algorithm.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-003-9.10" class="">
        <td>
            <a href="unicode-bidi-003.xht">unicode-bidi-003</a></td>
        <td><a href="reference/direction-002-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi set to 'bidi-override'
          <ul class="assert">
            <li>The property 'unicode-bidi' set to 'bidi-override' overrides the directionality of text.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-004-9.10" class="">
        <td>
            <a href="unicode-bidi-004.xht">unicode-bidi-004</a></td>
        <td><a href="reference/direction-002-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi set to 'inherit'
          <ul class="assert">
            <li>The property 'unicode-bidi' set to 'inherit' sets a value the same as parent element's value.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-001-9.10" class="">
        <td>
            <a href="unicode-bidi-applies-to-001.xht">unicode-bidi-applies-to-001</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'unicode-bidi' property does not apply to elements with a display of 'table-row-group'. 'unicode-bidi' property only applies to inline elements or block containers' immediate inline-level descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-002-9.10" class="">
        <td>
            <a href="unicode-bidi-applies-to-002.xht">unicode-bidi-applies-to-002</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'unicode-bidi' property does not apply to elements with a display of 'table-header-group'. 'unicode-bidi' property only applies to inline elements or block containers' immediate inline-level descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-003-9.10" class="">
        <td>
            <a href="unicode-bidi-applies-to-003.xht">unicode-bidi-applies-to-003</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'unicode-bidi' property does not apply to elements with a display of 'table-footer-group'. 'unicode-bidi' property only applies to inline elements or block containers' immediate inline-level descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-004-9.10" class="">
        <td>
            <a href="unicode-bidi-applies-to-004.xht">unicode-bidi-applies-to-004</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'unicode-bidi' property does not apply to elements with a display of 'table-row'. 'unicode-bidi' property only applies to inline elements or block containers' immediate inline-level descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-005-9.10" class="">
        <td>
            <a href="unicode-bidi-applies-to-005.xht">unicode-bidi-applies-to-005</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'unicode-bidi' property does not apply to elements with a display of 'table-column-group'. 'unicode-bidi' property only applies to inline elements or block containers' immediate inline-level descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-006-9.10" class="">
        <td>
            <a href="unicode-bidi-applies-to-006.xht">unicode-bidi-applies-to-006</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'unicode-bidi' property does not apply to elements with a display of 'table-column'. 'unicode-bidi' property only applies to inline elements or block containers' immediate inline-level descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-007-9.10" class="">
        <td>
            <a href="unicode-bidi-applies-to-007.xht">unicode-bidi-applies-to-007</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'unicode-bidi' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-008-9.10" class="">
        <td>
            <a href="unicode-bidi-applies-to-008.xht">unicode-bidi-applies-to-008</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'unicode-bidi' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-009-9.10" class="">
        <td>
            <a href="unicode-bidi-applies-to-009.xht">unicode-bidi-applies-to-009</a></td>
        <td><a href="reference/unicode-bidi-applies-to-009-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'unicode-bidi' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-010-9.10" class="">
        <td>
            <a href="unicode-bidi-applies-to-010.xht">unicode-bidi-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'unicode-bidi' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-011-9.10" class="">
        <td>
            <a href="unicode-bidi-applies-to-011.xht">unicode-bidi-applies-to-011</a></td>
        <td></td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'unicode-bidi' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-012-9.10" class="">
        <td>
            <a href="unicode-bidi-applies-to-012.xht">unicode-bidi-applies-to-012</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'unicode-bidi' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-013-9.10" class="">
        <td>
            <a href="unicode-bidi-applies-to-013.xht">unicode-bidi-applies-to-013</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'unicode-bidi' property does not apply to elements with a display of 'table'. 'unicode-bidi' property only applies to inline elements or block containers' immediate inline-level descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-014-9.10" class="">
        <td>
            <a href="unicode-bidi-applies-to-014.xht">unicode-bidi-applies-to-014</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'unicode-bidi' property does not apply to elements with a display of 'inline-table'. 'unicode-bidi' property only applies to inline elements or block containers' immediate inline-level descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-015-9.10" class="">
        <td>
            <a href="unicode-bidi-applies-to-015.xht">unicode-bidi-applies-to-015</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'unicode-bidi' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.10.#propdef-direction">
      <!-- 31 tests -->
      <tr id="bidi-direction-001-9.10.#propdef-direction" class="primary">
        <td><strong>
            <a href="bidi-direction-001.xht">bidi-direction-001</a></strong></td>
        <td></td>
        <td></td>
        <td>direction:rtl on body
          <ul class="assert">
            <li>direction:rtl on body should inherit to paragraphs</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-direction-002-9.10.#propdef-direction" class="primary">
        <td><strong>
            <a href="bidi-direction-002.xht">bidi-direction-002</a></strong></td>
        <td></td>
        <td></td>
        <td>direction - nested ltr and rtl
          <ul class="assert">
            <li>Direction on paragraph should override direction on body</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-first-letter-003-9.10.#propdef-direction" class="">
        <td>
            <a href="bidi-first-letter-003.xht">bidi-first-letter-003</a></td>
        <td></td>
        <td></td>
        <td>:first-letter and direction:rtl - inherent ltr text
          <ul class="assert">
            <li>:first-letter applied to inherent LTR text in RTL context should adhere to text direction, not paragraph direction</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-overflow-scroll-001-9.10.#propdef-direction" class="primary">
        <td><strong>
            <a href="bidi-overflow-scroll-001.xht">bidi-overflow-scroll-001</a></strong></td>
        <td></td>
        <td></td>
        <td>overflow:scroll in rtl context
          <ul class="assert">
            <li>Scrolling UI created by overflow should be positioned on the left in rtl context</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-001-9.10.#propdef-direction" class="">
        <td>
            <a href="direction-001.xht">direction-001</a></td>
        <td><a href="reference/direction-001-ref.xht">=</a> </td>
        <td></td>
        <td>Direction set to 'ltr'
          <ul class="assert">
            <li>The 'direction' property set to 'ltr' sets the direction of an element to left-to-right.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-002-9.10.#propdef-direction" class="">
        <td>
            <a href="direction-002.xht">direction-002</a></td>
        <td><a href="reference/direction-002-ref.xht">=</a> </td>
        <td></td>
        <td>Direction set to 'rtl'
          <ul class="assert">
            <li>The 'direction' property set to 'rtl' sets the direction of an element to right-to-left.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-003-9.10.#propdef-direction" class="">
        <td>
            <a href="direction-003.xht">direction-003</a></td>
        <td><a href="reference/direction-002-ref.xht">=</a> </td>
        <td></td>
        <td>Direction set to 'inherit' sets a value that is inherited from parent element
          <ul class="assert">
            <li>The 'direction' property set to 'inherit' sets a direction value to the same as the parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-001-9.10.#propdef-direction" class="ahem">
        <td>
            <a href="direction-applies-to-001.xht">direction-applies-to-001</a></td>
        <td><a href="reference/direction-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'direction' property does not apply to elements with a display of 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-002-9.10.#propdef-direction" class="ahem">
        <td>
            <a href="direction-applies-to-002.xht">direction-applies-to-002</a></td>
        <td><a href="reference/direction-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'direction' property does not apply to elements with a display of 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-003-9.10.#propdef-direction" class="ahem">
        <td>
            <a href="direction-applies-to-003.xht">direction-applies-to-003</a></td>
        <td><a href="reference/direction-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'direction' property does not apply to elements with a display of 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-004-9.10.#propdef-direction" class="ahem">
        <td>
            <a href="direction-applies-to-004.xht">direction-applies-to-004</a></td>
        <td><a href="reference/direction-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'direction' property does not apply to elements with a display of 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-005-9.10.#propdef-direction" class="ahem">
        <td>
            <a href="direction-applies-to-005.xht">direction-applies-to-005</a></td>
        <td><a href="reference/direction-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'direction' property does not apply to elements with a display of 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-006-9.10.#propdef-direction" class="ahem">
        <td>
            <a href="direction-applies-to-006.xht">direction-applies-to-006</a></td>
        <td><a href="reference/direction-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'direction' property does not apply to elements with a display of 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-007-9.10.#propdef-direction" class="ahem">
        <td>
            <a href="direction-applies-to-007.xht">direction-applies-to-007</a></td>
        <td><a href="reference/direction-applies-to-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'direction' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-008-9.10.#propdef-direction" class="">
        <td>
            <a href="direction-applies-to-008.xht">direction-applies-to-008</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Direction applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'direction' property applies to elements with a display of inline as it can set the direction of embeddings and overrides.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-009-9.10.#propdef-direction" class="ahem">
        <td>
            <a href="direction-applies-to-009.xht">direction-applies-to-009</a></td>
        <td><a href="reference/direction-applies-to-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'direction' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-010-9.10.#propdef-direction" class="ahem">
        <td>
            <a href="direction-applies-to-010.xht">direction-applies-to-010</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'direction' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-011-9.10.#propdef-direction" class="primary ahem">
        <td><strong>
            <a href="direction-applies-to-011.xht">direction-applies-to-011</a></strong></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'direction' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-012-9.10.#propdef-direction" class="ahem">
        <td>
            <a href="direction-applies-to-012.xht">direction-applies-to-012</a></td>
        <td><a href="reference/direction-applies-to-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'direction' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-013-9.10.#propdef-direction" class="ahem">
        <td>
            <a href="direction-applies-to-013.xht">direction-applies-to-013</a></td>
        <td><a href="reference/direction-applies-to-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'direction' property can apply to elements with a display of 'table' as it specifies the direction of table column layout.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-014-9.10.#propdef-direction" class="ahem">
        <td>
            <a href="direction-applies-to-014.xht">direction-applies-to-014</a></td>
        <td><a href="reference/direction-applies-to-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'direction' property can apply to elements with a display of 'inline-table' as it specifies the direction of table column layout.</li>
          </ul>
        </td>
      </tr>
      <tr id="direction-applies-to-015-9.10.#propdef-direction" class="ahem">
        <td>
            <a href="direction-applies-to-015.xht">direction-applies-to-015</a></td>
        <td><a href="reference/direction-applies-to-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Direction applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'direction' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="text-align-bidi-001-9.10.#propdef-direction" class="">
        <td>
            <a href="text-align-bidi-001.xht">text-align-bidi-001</a></td>
        <td></td>
        <td></td>
        <td>Text-align and direction - left and rtl
          <ul class="assert">
            <li>Text-align property should override the default text-align change caused by a switch of direction</li>
          </ul>
        </td>
      </tr>
      <tr id="text-align-bidi-002-9.10.#propdef-direction" class="">
        <td>
            <a href="text-align-bidi-002.xht">text-align-bidi-002</a></td>
        <td></td>
        <td></td>
        <td>Text-align and direction - nested center and rtl
          <ul class="assert">
            <li>Text-align property should override the default text-align change caused by a switch of direction</li>
          </ul>
        </td>
      </tr>
      <tr id="text-align-bidi-003-9.10.#propdef-direction" class="">
        <td>
            <a href="text-align-bidi-003.xht">text-align-bidi-003</a></td>
        <td></td>
        <td></td>
        <td>Text-align and direction - nested rtl, center and ltr
          <ul class="assert">
            <li>Text-align property should override the default text-align change caused by a switch of direction</li>
          </ul>
        </td>
      </tr>
      <tr id="text-align-bidi-004-9.10.#propdef-direction" class="">
        <td>
            <a href="text-align-bidi-004.xht">text-align-bidi-004</a></td>
        <td></td>
        <td></td>
        <td>Text-align and direction - nested center and ltr
          <ul class="assert">
            <li>Text-align property should override the default text-align change caused by a switch of direction</li>
          </ul>
        </td>
      </tr>
      <tr id="text-align-bidi-005-9.10.#propdef-direction" class="">
        <td>
            <a href="text-align-bidi-005.xht">text-align-bidi-005</a></td>
        <td></td>
        <td></td>
        <td>Text-align and direction - nested rtl, right and ltr
          <ul class="assert">
            <li>Text-align property should override the default text-align change caused by a switch of direction</li>
          </ul>
        </td>
      </tr>
      <tr id="text-align-bidi-006-9.10.#propdef-direction" class="">
        <td>
            <a href="text-align-bidi-006.xht">text-align-bidi-006</a></td>
        <td></td>
        <td></td>
        <td>Text-align and direction - nested left and rtl
          <ul class="assert">
            <li>Text-align property should override the default text-align change caused by a switch of direction</li>
          </ul>
        </td>
      </tr>
      <tr id="text-align-bidi-007-9.10.#propdef-direction" class="">
        <td>
            <a href="text-align-bidi-007.xht">text-align-bidi-007</a></td>
        <td></td>
        <td></td>
        <td>direction:rtl and text-align: left
          <ul class="assert">
            <li>Text-align should override default text-align in rtl context</li>
          </ul>
        </td>
      </tr>
      <tr id="text-align-bidi-008-9.10.#propdef-direction" class="">
        <td>
            <a href="text-align-bidi-008.xht">text-align-bidi-008</a></td>
        <td></td>
        <td></td>
        <td>direction:rtl and text-align: justify
          <ul class="assert">
            <li>Text-align should override default text-align in rtl context</li>
          </ul>
        </td>
      </tr>
      <tr id="text-align-bidi-010-9.10.#propdef-direction" class="">
        <td>
            <a href="text-align-bidi-010.xht">text-align-bidi-010</a></td>
        <td></td>
        <td></td>
        <td>text-align: justify - joined text
          <ul class="assert">
            <li>Joined text should be justified by text-align: justify</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.10.#propdef-unicode-bidi">
      <!-- 28 tests -->
      <tr id="bidi-first-letter-004-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="bidi-first-letter-004.xht">bidi-first-letter-004</a></td>
        <td></td>
        <td></td>
        <td>:first-letter and bidi-override - inherent ltr text
          <ul class="assert">
            <li>:first-letter applied to inherent LTR text reordered with bidi-override should pick out the first logical letter</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-first-letter-005-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="bidi-first-letter-005.xht">bidi-first-letter-005</a></td>
        <td></td>
        <td></td>
        <td>:first-letter and bidi-override - inherent rtl text
          <ul class="assert">
            <li>:first-letter applied to inherent RTL text reordered with bidi-override should pick out the first logical letter</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-override-001-9.10.#propdef-unicode-bidi" class="primary">
        <td><strong>
            <a href="bidi-override-001.xht">bidi-override-001</a></strong></td>
        <td></td>
        <td></td>
        <td>unicode-bidi: bidi-override on table
          <ul class="assert">
            <li>bidi-override should not be applied to table cell content when specified on table</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-override-002-9.10.#propdef-unicode-bidi" class="primary">
        <td><strong>
            <a href="bidi-override-002.xht">bidi-override-002</a></strong></td>
        <td></td>
        <td></td>
        <td>unicode-bidi: bidi-override on table cell
          <ul class="assert">
            <li>bidi-override should be applied to table-cell content when specified on the cell</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-override-003-9.10.#propdef-unicode-bidi" class="primary">
        <td><strong>
            <a href="bidi-override-003.xht">bidi-override-003</a></strong></td>
        <td></td>
        <td></td>
        <td>unicode-bidi: bidi-override on list
          <ul class="assert">
            <li>bidi-override should not be applied to list item when specified on ul</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-override-004-9.10.#propdef-unicode-bidi" class="primary">
        <td><strong>
            <a href="bidi-override-004.xht">bidi-override-004</a></strong></td>
        <td></td>
        <td></td>
        <td>unicode-bidi: bidi-override on list item
          <ul class="assert">
            <li>bidi-override should be applied when specified on list item</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-override-005-9.10.#propdef-unicode-bidi" class="primary">
        <td><strong>
            <a href="bidi-override-005.xht">bidi-override-005</a></strong></td>
        <td></td>
        <td></td>
        <td>unicode-bidi: bidi-override on nested div
          <ul class="assert">
            <li>bidi-override should be applied to inline-level descendants but not block-level descendants</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-unicode-bidi-001-9.10.#propdef-unicode-bidi" class="primary">
        <td><strong>
            <a href="bidi-unicode-bidi-001.xht">bidi-unicode-bidi-001</a></strong></td>
        <td></td>
        <td></td>
        <td>unicode-bidi: bidi-override - rtl
          <ul class="assert">
            <li>unicode-bidi: bidi-override should order characters strictly according to value of direction property</li>
          </ul>
        </td>
      </tr>
      <tr id="bidi-unicode-bidi-003-9.10.#propdef-unicode-bidi" class="primary">
        <td><strong>
            <a href="bidi-unicode-bidi-003.xht">bidi-unicode-bidi-003</a></strong></td>
        <td></td>
        <td></td>
        <td>unicode-bidi: embed - nested ltr and rtl
          <ul class="assert">
            <li>unicode-bidi: embed should open a new bidi embedding level for inline-level element</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-001-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-001.xht">unicode-bidi-001</a></td>
        <td><a href="reference/direction-002-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi set to 'normal'
          <ul class="assert">
            <li>The property 'unicode-bidi' set to 'normal' doesn't modify the directionality of text.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-002-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-002.xht">unicode-bidi-002</a></td>
        <td><a href="reference/unicode-bidi-002-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi set to 'embed'
          <ul class="assert">
            <li>The property 'unicode-bidi' set to 'embed' opens a new level of embedding in the Unicode bi-directional algorithm.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-003-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-003.xht">unicode-bidi-003</a></td>
        <td><a href="reference/direction-002-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi set to 'bidi-override'
          <ul class="assert">
            <li>The property 'unicode-bidi' set to 'bidi-override' overrides the directionality of text.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-004-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-004.xht">unicode-bidi-004</a></td>
        <td><a href="reference/direction-002-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi set to 'inherit'
          <ul class="assert">
            <li>The property 'unicode-bidi' set to 'inherit' sets a value the same as parent element's value.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-001-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-applies-to-001.xht">unicode-bidi-applies-to-001</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'unicode-bidi' property does not apply to elements with a display of 'table-row-group'. 'unicode-bidi' property only applies to inline elements or block containers' immediate inline-level descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-002-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-applies-to-002.xht">unicode-bidi-applies-to-002</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'unicode-bidi' property does not apply to elements with a display of 'table-header-group'. 'unicode-bidi' property only applies to inline elements or block containers' immediate inline-level descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-003-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-applies-to-003.xht">unicode-bidi-applies-to-003</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'unicode-bidi' property does not apply to elements with a display of 'table-footer-group'. 'unicode-bidi' property only applies to inline elements or block containers' immediate inline-level descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-004-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-applies-to-004.xht">unicode-bidi-applies-to-004</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'unicode-bidi' property does not apply to elements with a display of 'table-row'. 'unicode-bidi' property only applies to inline elements or block containers' immediate inline-level descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-005-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-applies-to-005.xht">unicode-bidi-applies-to-005</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'unicode-bidi' property does not apply to elements with a display of 'table-column-group'. 'unicode-bidi' property only applies to inline elements or block containers' immediate inline-level descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-006-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-applies-to-006.xht">unicode-bidi-applies-to-006</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'unicode-bidi' property does not apply to elements with a display of 'table-column'. 'unicode-bidi' property only applies to inline elements or block containers' immediate inline-level descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-007-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-applies-to-007.xht">unicode-bidi-applies-to-007</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'unicode-bidi' property applies to elements with a display of 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-008-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-applies-to-008.xht">unicode-bidi-applies-to-008</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to inline
          <ul class="assert">
            <li>The 'unicode-bidi' property applies to elements with a display of inline.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-009-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-applies-to-009.xht">unicode-bidi-applies-to-009</a></td>
        <td><a href="reference/unicode-bidi-applies-to-009-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to block
          <ul class="assert">
            <li>The 'unicode-bidi' property applies to elements with a display of block.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-010-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-applies-to-010.xht">unicode-bidi-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to list-item
          <ul class="assert">
            <li>The 'unicode-bidi' property applies to elements with a display of list-item.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-011-9.10.#propdef-unicode-bidi" class="primary">
        <td><strong>
            <a href="unicode-bidi-applies-to-011.xht">unicode-bidi-applies-to-011</a></strong></td>
        <td></td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to run-in
          <ul class="assert">
            <li>The 'unicode-bidi' property applies to elements with a display of run-in.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-012-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-applies-to-012.xht">unicode-bidi-applies-to-012</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to inline-block
          <ul class="assert">
            <li>The 'unicode-bidi' property applies to elements with a display of inline-block.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-013-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-applies-to-013.xht">unicode-bidi-applies-to-013</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table'
          <ul class="assert">
            <li>The 'unicode-bidi' property does not apply to elements with a display of 'table'. 'unicode-bidi' property only applies to inline elements or block containers' immediate inline-level descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-014-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-applies-to-014.xht">unicode-bidi-applies-to-014</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'unicode-bidi' property does not apply to elements with a display of 'inline-table'. 'unicode-bidi' property only applies to inline elements or block containers' immediate inline-level descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="unicode-bidi-applies-to-015-9.10.#propdef-unicode-bidi" class="">
        <td>
            <a href="unicode-bidi-applies-to-015.xht">unicode-bidi-applies-to-015</a></td>
        <td><a href="reference/direction-applies-to-008-ref.xht">=</a> </td>
        <td></td>
        <td>Unicode-bidi applied to element with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'unicode-bidi' property applies to elements with a display of 'table-caption'.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s9.10.#x45">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s9.10.#x48">
      <!-- 0 tests -->
    </tbody>
  </table>

 </body>
</html>