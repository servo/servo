

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <title>Visual formatting model details - CSS 2.1 Conformance Test Suite</title>
  <style type="text/css">
    @import "http://www.w3.org/StyleSheets/TR/base.css";
    @import "../indices.css";
  </style>
 </head>

 <body>

  <h1>CSS 2.1 Conformance Test Suite</h1>
  <h2>Visual formatting model details (1463 tests)</h2>
  <table width="100%">
    <col id="test-column"></col>
    <col id="refs-column"></col>
    <col id="flags-column"></col>
    <col id="info-column"></col>
    <thead>
      <tr>
        <th>Test</th>
        <th><abbr title="Rendering References">Refs</abbr></th>
        <th>Flags</th>
        <th>Info</th>
      </tr>
    </thead>
    <tbody id="s10">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#q10.0">10 Visual formatting model details</a></th></tr>
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.#annoying-warning">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.1">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#containing-block-details">10.1 Definition of "containing block"</a></th></tr>
      <!-- 58 tests -->
      <tr id="abspos-containing-block-001-10.1" class="">
        <td>
            <a href="abspos-containing-block-001.xht">abspos-containing-block-001</a></td>
        <td><a href="reference/abspos-containing-block-001-ref.xht">=</a> </td>
        <td></td>
        <td>Containing block for fixed positioning
        </td>
      </tr>
      <tr id="abspos-containing-block-002-10.1" class="">
        <td>
            <a href="abspos-containing-block-002.xht">abspos-containing-block-002</a></td>
        <td><a href="reference/abspos-containing-block-001-ref.xht">=</a> </td>
        <td></td>
        <td>Containing block for absolute positioning
        </td>
      </tr>
      <tr id="abspos-containing-block-003-10.1" class="">
        <td>
            <a href="abspos-containing-block-003.xht">abspos-containing-block-003</a></td>
        <td><a href="reference/abspos-containing-block-001-ref.xht">=</a> </td>
        <td></td>
        <td>Containing block for absolute positioning
        </td>
      </tr>
      <tr id="abspos-containing-block-004-10.1" class="">
        <td>
            <a href="abspos-containing-block-004.xht">abspos-containing-block-004</a></td>
        <td><a href="reference/abspos-containing-block-001-ref.xht">=</a> </td>
        <td></td>
        <td>Containing block for absolute positioning
        </td>
      </tr>
      <tr id="abspos-containing-block-005-10.1" class="">
        <td>
            <a href="abspos-containing-block-005.xht">abspos-containing-block-005</a></td>
        <td><a href="reference/abspos-containing-block-001-ref.xht">=</a> </td>
        <td></td>
        <td>Containing block for absolute positioning
        </td>
      </tr>
      <tr id="abspos-containing-block-006-10.1" class="">
        <td>
            <a href="abspos-containing-block-006.xht">abspos-containing-block-006</a></td>
        <td><a href="reference/abspos-containing-block-001-ref.xht">=</a> </td>
        <td></td>
        <td>Containing block for absolute positioning
        </td>
      </tr>
      <tr id="abspos-containing-block-007-10.1" class="">
        <td>
            <a href="abspos-containing-block-007.xht">abspos-containing-block-007</a></td>
        <td><a href="reference/abspos-containing-block-001-ref.xht">=</a> </td>
        <td></td>
        <td>Containing block for absolute positioning
        </td>
      </tr>
      <tr id="abspos-containing-block-008-10.1" class="">
        <td>
            <a href="abspos-containing-block-008.xht">abspos-containing-block-008</a></td>
        <td><a href="reference/abspos-containing-block-001-ref.xht">=</a> </td>
        <td></td>
        <td>Containing block for absolute positioning
        </td>
      </tr>
      <tr id="abspos-containing-block-009-10.1" class="">
        <td>
            <a href="abspos-containing-block-009.xht">abspos-containing-block-009</a></td>
        <td><a href="reference/abspos-containing-block-001-ref.xht">=</a> </td>
        <td></td>
        <td>Containing block for absolute positioning
        </td>
      </tr>
      <tr id="abspos-containing-block-010-10.1" class="">
        <td>
            <a href="abspos-containing-block-010.xht">abspos-containing-block-010</a></td>
        <td><a href="reference/abspos-containing-block-010-ref.xht">=</a> </td>
        <td></td>
        <td>Absolute Positioning: Containing Block of Top Level Absolutely Positioned Block
        </td>
      </tr>
      <tr id="abspos-containing-block-initial-001-10.1" class="dom">
        <td>
            <a href="abspos-containing-block-initial-001.xht">abspos-containing-block-initial-001</a></td>
        <td><a href="reference/abspos-containing-block-initial-001-ref.xht">=</a> </td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr></td>
        <td>Test for containing block for absolutely positioned elements being initial containing block
          <ul class="assert">
            <li>If there is no such ancestor, the containing block is the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-containing-block-initial-004a-10.1" class="">
        <td>
            <a href="abspos-containing-block-initial-004a.xht">abspos-containing-block-initial-004a</a></td>
        <td><a href="reference/abspos-containing-block-initial-004-ref.xht">=</a> </td>
        <td></td>
        <td>Test for containing block for absolutely positioned elements being initial containing block
          <ul class="assert">
            <li>If there is no such ancestor, the containing block is the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-containing-block-initial-004b-10.1" class="">
        <td>
            <a href="abspos-containing-block-initial-004b.xht">abspos-containing-block-initial-004b</a></td>
        <td><a href="reference/abspos-containing-block-initial-004-ref.xht">=</a> </td>
        <td></td>
        <td>Test for containing block for absolutely positioned elements being initial containing block
          <ul class="assert">
            <li>If there is no such ancestor, the containing block is the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-containing-block-initial-004c-10.1" class="">
        <td>
            <a href="abspos-containing-block-initial-004c.xht">abspos-containing-block-initial-004c</a></td>
        <td><a href="reference/abspos-containing-block-initial-004-ref.xht">=</a> </td>
        <td></td>
        <td>Test for containing block for absolutely positioned elements being initial containing block
          <ul class="assert">
            <li>If there is no such ancestor, the containing block is the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-containing-block-initial-004d-10.1" class="">
        <td>
            <a href="abspos-containing-block-initial-004d.xht">abspos-containing-block-initial-004d</a></td>
        <td><a href="reference/abspos-containing-block-initial-004-ref.xht">=</a> </td>
        <td></td>
        <td>Test for containing block for absolutely positioned elements being initial containing block
          <ul class="assert">
            <li>If there is no such ancestor, the containing block is the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-containing-block-initial-004e-10.1" class="">
        <td>
            <a href="abspos-containing-block-initial-004e.xht">abspos-containing-block-initial-004e</a></td>
        <td><a href="reference/abspos-containing-block-initial-004-ref.xht">=</a> </td>
        <td></td>
        <td>Test for containing block for absolutely positioned elements being initial containing block
          <ul class="assert">
            <li>If there is no such ancestor, the containing block is the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-containing-block-initial-004f-10.1" class="">
        <td>
            <a href="abspos-containing-block-initial-004f.xht">abspos-containing-block-initial-004f</a></td>
        <td><a href="reference/abspos-containing-block-initial-004-ref.xht">=</a> </td>
        <td></td>
        <td>Test for containing block for absolutely positioned elements being initial containing block
          <ul class="assert">
            <li>If there is no such ancestor, the containing block is the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-containing-block-initial-005a-10.1" class="">
        <td>
            <a href="abspos-containing-block-initial-005a.xht">abspos-containing-block-initial-005a</a></td>
        <td><a href="reference/abspos-containing-block-initial-005-ref.xht">=</a> </td>
        <td></td>
        <td>Test for containing block for absolutely positioned elements being initial containing block
          <ul class="assert">
            <li>If there is no such ancestor, the containing block is the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-containing-block-initial-005b-10.1" class="">
        <td>
            <a href="abspos-containing-block-initial-005b.xht">abspos-containing-block-initial-005b</a></td>
        <td><a href="reference/abspos-containing-block-initial-005-ref.xht">=</a> </td>
        <td></td>
        <td>Test for containing block for absolutely positioned elements being initial containing block
          <ul class="assert">
            <li>If there is no such ancestor, the containing block is the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-containing-block-initial-005c-10.1" class="">
        <td>
            <a href="abspos-containing-block-initial-005c.xht">abspos-containing-block-initial-005c</a></td>
        <td><a href="reference/abspos-containing-block-initial-005-ref.xht">=</a> </td>
        <td></td>
        <td>Test for containing block for absolutely positioned elements being initial containing block
          <ul class="assert">
            <li>If there is no such ancestor, the containing block is the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-containing-block-initial-005d-10.1" class="">
        <td>
            <a href="abspos-containing-block-initial-005d.xht">abspos-containing-block-initial-005d</a></td>
        <td><a href="reference/abspos-containing-block-initial-005-ref.xht">=</a> </td>
        <td></td>
        <td>Test for containing block for absolutely positioned elements being initial containing block
          <ul class="assert">
            <li>If there is no such ancestor, the containing block is the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-containing-block-initial-007-10.1" class="">
        <td>
            <a href="abspos-containing-block-initial-007.xht">abspos-containing-block-initial-007</a></td>
        <td><a href="reference/abspos-containing-block-initial-007-ref.xht">=</a> </td>
        <td></td>
        <td>Test for containing block for absolutely positioned elements being initial containing block
          <ul class="assert">
            <li>If there is no such ancestor, the containing block is the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-containing-block-initial-009a-10.1" class="">
        <td>
            <a href="abspos-containing-block-initial-009a.xht">abspos-containing-block-initial-009a</a></td>
        <td><a href="reference/abspos-containing-block-initial-009-ref.xht">=</a> </td>
        <td></td>
        <td>Test for containing block for absolutely positioned elements being initial containing block
          <ul class="assert">
            <li>If there is no such ancestor, the containing block is the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-containing-block-initial-009b-10.1" class="">
        <td>
            <a href="abspos-containing-block-initial-009b.xht">abspos-containing-block-initial-009b</a></td>
        <td><a href="reference/abspos-containing-block-initial-009-ref.xht">=</a> </td>
        <td></td>
        <td>Test for containing block for absolutely positioned elements being initial containing block
          <ul class="assert">
            <li>If there is no such ancestor, the containing block is the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-containing-block-initial-009e-10.1" class="">
        <td>
            <a href="abspos-containing-block-initial-009e.xht">abspos-containing-block-initial-009e</a></td>
        <td><a href="reference/abspos-containing-block-initial-009-ref.xht">=</a> </td>
        <td></td>
        <td>Test for containing block for absolutely positioned elements being initial containing block
          <ul class="assert">
            <li>If there is no such ancestor, the containing block is the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-containing-block-initial-009f-10.1" class="">
        <td>
            <a href="abspos-containing-block-initial-009f.xht">abspos-containing-block-initial-009f</a></td>
        <td><a href="reference/abspos-containing-block-initial-009-ref.xht">=</a> </td>
        <td></td>
        <td>Test for containing block for absolutely positioned elements being initial containing block
          <ul class="assert">
            <li>If there is no such ancestor, the containing block is the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="anonymous-boxes-001-10.1" class="">
        <td>
            <a href="anonymous-boxes-001.xht">anonymous-boxes-001</a></td>
        <td><a href="reference/ref-green-box-100x100.xht">=</a> </td>
        <td></td>
        <td>Percent heights inside anonymous blocks
          <ul class="assert">
            <li>Anonymous block boxes are ignored when resolving percentage values that would refer to it: the closest non-anonymous ancestor box is used instead.</li>
          </ul>
        </td>
      </tr>
      <tr id="anonymous-boxes-001a-10.1" class="ahem image">
        <td>
            <a href="anonymous-boxes-001a.xht">anonymous-boxes-001a</a></td>
        <td><a href="reference/anonymous-boxes-001a-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Percent height inside anonymous block
          <ul class="assert">
            <li>Anonymous block boxes are ignored when resolving percentage values that would refer to it: the closest non-anonymous ancestor box is used instead.</li>
          </ul>
        </td>
      </tr>
      <tr id="anonymous-boxes-001b-10.1" class="ahem">
        <td>
            <a href="anonymous-boxes-001b.xht">anonymous-boxes-001b</a></td>
        <td><a href="reference/anonymous-boxes-001b-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Percent height inside anonymous block
          <ul class="assert">
            <li>Anonymous block boxes are ignored when resolving percentage values that would refer to it: the closest non-anonymous ancestor box is used instead.</li>
          </ul>
        </td>
      </tr>
      <tr id="background-root-017-10.1" class="interact">
        <td>
            <a href="background-root-017.xht">background-root-017</a></td>
        <td><a href="reference/background-root-017-ref.xht">=</a> </td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Height of root element
        </td>
      </tr>
      <tr id="containing-block-001-10.1" class="">
        <td>
            <a href="containing-block-001.xht">containing-block-001</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Containing block for relative positioned elements is nearest block-level ancestor
          <ul class="assert">
            <li>If the element's position is 'relative', the containing block is formed by the content edge of the nearest block-level ancestor box.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-002-10.1" class="">
        <td>
            <a href="containing-block-002.xht">containing-block-002</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Containing block for relative positioned elements is nearest table cell ancestor
          <ul class="assert">
            <li>If the element's position is 'relative', the containing block is formed by the content edge of the nearest table cell ancestor box.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-003-10.1" class="">
        <td>
            <a href="containing-block-003.xht">containing-block-003</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Containing block for relative positioned elements is nearest inline-block ancestor
          <ul class="assert">
            <li>If the element's position is 'relative', the containing block is formed by the content edge of the nearest inline-block ancestor box.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-004-10.1" class="">
        <td>
            <a href="containing-block-004.xht">containing-block-004</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Containing block for static positioned elements is nearest block-level ancestor
          <ul class="assert">
            <li>If the element's position is 'static', the containing block is formed by the content edge of the nearest block-level ancestor box.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-005-10.1" class="">
        <td>
            <a href="containing-block-005.xht">containing-block-005</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Containing block for static positioned elements is nearest table cell ancestor
          <ul class="assert">
            <li>If the element's position is 'static', the containing block is formed by the content edge of the nearest table cell ancestor box.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-006-10.1" class="">
        <td>
            <a href="containing-block-006.xht">containing-block-006</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Containing block for static positioned elements is nearest inline-block ancestor
          <ul class="assert">
            <li>If the element's position is 'static', the containing block is formed by the content edge of the nearest inline-block ancestor box.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-007-10.1" class="">
        <td>
            <a href="containing-block-007.xht">containing-block-007</a></td>
        <td><a href="reference/containing-block-007-ref.xht">=</a> </td>
        <td></td>
        <td>Initial containing block for fixed positioned elements
          <ul class="assert">
            <li>The containing block is established by the viewport when an element uses fixed positioning.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-008-10.1" class="">
        <td>
            <a href="containing-block-008.xht">containing-block-008</a></td>
        <td><a href="reference/containing-block-008-ref.xht">=</a> </td>
        <td></td>
        <td>Containing block for absolute positioned elements is nearest positioned (absolute) ancestor
          <ul class="assert">
            <li>If the element has 'position: absolute', the containing block is established by the nearest positioned ancestor.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-009-10.1" class="">
        <td>
            <a href="containing-block-009.xht">containing-block-009</a></td>
        <td><a href="reference/containing-block-009-ref.xht">=</a> </td>
        <td></td>
        <td>Containing block for absolute positioned elements is nearest positioned (relative) ancestor
          <ul class="assert">
            <li>If the element has 'position: absolute', the containing block is established by the nearest positioned ancestor.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-010-10.1" class="">
        <td>
            <a href="containing-block-010.xht">containing-block-010</a></td>
        <td><a href="reference/containing-block-008-ref.xht">=</a> </td>
        <td></td>
        <td>Containing block for absolute positioned elements is nearest positioned (fixed) ancestor
          <ul class="assert">
            <li>If the element has 'position: absolute', the containing block is established by the nearest positioned ancestor.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-011-10.1" class="">
        <td>
            <a href="containing-block-011.xht">containing-block-011</a></td>
        <td></td>
        <td></td>
        <td>Containing Blocks - Inline-level elements position based on left-to-right direction and parent element is relative
          <ul class="assert">
            <li>If the ancestor is inline-level, positioned absolute, and direction is left-to-right, the top/left of the containing block determines the top/left padding edges of the first box generated by the ancestor.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-013-10.1" class="">
        <td>
            <a href="containing-block-013.xht">containing-block-013</a></td>
        <td></td>
        <td></td>
        <td>Containing Blocks - Inline-level elements position based on left-to-right direction and parent element is absolute
          <ul class="assert">
            <li>If the ancestor is inline-level, positioned absolute, and direction is left-to-right, the top/left of the containing block determines the top/left padding edges of the first box generated by the ancestor.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-015-10.1" class="">
        <td>
            <a href="containing-block-015.xht">containing-block-015</a></td>
        <td></td>
        <td></td>
        <td>Containing Blocks - Inline-level elements position based on left-to-right direction and parent element is fixed
          <ul class="assert">
            <li>If the ancestor is inline-level, positioned absolute, and direction is left-to-right, the top/left of the containing block determines the top/left padding edges of the first box generated by the ancestor.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-017-10.1" class="dom interact">
        <td>
            <a href="containing-block-017.xht">containing-block-017</a></td>
        <td></td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Containing Blocks - Block-level elements position based on left-to-right direction and parent element is relative
          <ul class="assert">
            <li>The containing block of an absolutely positioned block-level element is formed by the padding edge of its nearest (closest) positioned ancestor element.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-018-10.1" class="dom interact">
        <td>
            <a href="containing-block-018.xht">containing-block-018</a></td>
        <td></td>
        <td><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Containing Blocks - Block-level elements position based on right-to-left direction and parent element is relative
          <ul class="assert">
            <li>The containing block of an absolutely positioned block-level element is formed by the padding edge of its nearest (closest) positioned ancestor element.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-019-10.1" class="">
        <td>
            <a href="containing-block-019.xht">containing-block-019</a></td>
        <td><a href="reference/containing-block-019-ref.xht">=</a> </td>
        <td></td>
        <td>Containing Blocks - Block-level elements position based on left-to-right direction and parent element is absolute
          <ul class="assert">
            <li>When the nearest (closest within document containment hierarchy) positioned ancestor of an absolutely positioned element is a block-level element, then the containing block of such absolutely positioned element is formed by the padding edge of such nearest positioned ancestor.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-020-10.1" class="">
        <td>
            <a href="containing-block-020.xht">containing-block-020</a></td>
        <td><a href="reference/containing-block-020-ref.xht">=</a> </td>
        <td></td>
        <td>Containing Blocks - Block-level elements position based on right-to-left direction and parent element is absolute
          <ul class="assert">
            <li>When the nearest (closest within document containment hierarchy) positioned ancestor of an absolutely positioned element is a block-level element, then the containing block of such absolutely positioned element is formed by the padding edge of such nearest (closest) positioned ancestor.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-021-10.1" class="">
        <td>
            <a href="containing-block-021.xht">containing-block-021</a></td>
        <td><a href="reference/containing-block-019-ref.xht">=</a> </td>
        <td></td>
        <td>Containing Blocks - Block-level elements position based on left-to-right direction and parent element is fixed
          <ul class="assert">
            <li>When the nearest (closest within document containment hierarchy) positioned ancestor of an absolutely positioned element is a block-level element, then the containing block of such absolutely positioned element is formed by the padding edge of such nearest positioned ancestor.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-022-10.1" class="">
        <td>
            <a href="containing-block-022.xht">containing-block-022</a></td>
        <td><a href="reference/containing-block-020-ref.xht">=</a> </td>
        <td></td>
        <td>Containing Blocks - Block-level elements position based on right-to-left direction and parent element is fixed
          <ul class="assert">
            <li>When the nearest (closest within document containment hierarchy) positioned ancestor of an absolutely positioned element is a block-level element, then the containing block of such absolutely positioned element is formed by the padding edge of such nearest positioned ancestor.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-023-10.1" class="">
        <td>
            <a href="containing-block-023.xht">containing-block-023</a></td>
        <td><a href="reference/containing-block-023-ref.xht">=</a> </td>
        <td></td>
        <td>Containing Blocks - Fall back to Initial containing block
          <ul class="assert">
            <li>When there are no positioned ancestors, then the initial containing block is used.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-024-10.1" class="paged">
        <td>
            <a href="containing-block-024.xht">containing-block-024</a></td>
        <td></td>
        <td><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>Containing block and absolutely positioned element in paged media
          <ul class="assert">
            <li>An absolutely positioned element ignores page breaks in paged media.</li>
          </ul>
        </td>
      </tr>
      <tr id="containing-block-025-10.1" class="may paged">
        <td>
            <a href="containing-block-025.xht">containing-block-025</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>Containing block and absolutely positioned element in paged media positioned off first page
          <ul class="assert">
            <li>An absolutely positioned element positioned beyond the boundaries of the page being laid out can be omitted, rendered on the current page or on a following page.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-percentage-003-10.1" class="">
        <td>
            <a href="min-height-percentage-003.xht">min-height-percentage-003</a></td>
        <td><a href="reference/min-height-percentage-003-ref.xht">=</a> </td>
        <td></td>
        <td>min-height - 100% of the initial containing block's height
          <ul class="assert">
            <li>The initial containing block has the dimensions of the viewport. A percentage height on the root element is relative to the initial containing block. A 'min-height: 100%;' of the document root element should use all of the document root element's height. A percentage for 'min-height' is calculated with respect to the height of the generated box's containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="page-break-inside-000-10.1" class="paged">
        <td>
            <a href="page-break-inside-000.xht">page-break-inside-000</a></td>
        <td></td>
        <td><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>page-break-inside:auto
          <ul class="assert">
            <li>The 'auto' value of the 'page-break-inside' property neither forces nor forbids a page break inside the box.</li>
          </ul>
        </td>
      </tr>
      <tr id="page-container-008-10.1" class="paged">
        <td>
            <a href="page-container-008.xht">page-container-008</a></td>
        <td></td>
        <td><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>Paged Media Canvas Background
          <ul class="assert">
            <li>For documents in the html namespace, a background on 'html' will cover the page area but not the margin area.</li>
          </ul>
        </td>
      </tr>
      <tr id="page-container-009-10.1" class="paged">
        <td>
            <a href="page-container-009.xht">page-container-009</a></td>
        <td></td>
        <td><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>Paged Media Body Background
          <ul class="assert">
            <li>For documents in the html namespace, a background on 'body' will cover the page area.</li>
          </ul>
        </td>
      </tr>
      <tr id="root-canvas-001-10.1" class="">
        <td>
            <a href="root-canvas-001.xht">root-canvas-001</a></td>
        <td><a href="reference/root-canvas-001-ref.xht">=</a> </td>
        <td></td>
        <td>Canvas: Embedded documents
        </td>
      </tr>
      <tr id="table-percent-width-001-10.1" class="">
        <td>
            <a href="table-percent-width-001.xht">table-percent-width-001</a></td>
        <td></td>
        <td></td>
        <td>Testing percent widths of kids of anonymous table cells
          <ul class="assert">
            <li>Percentage width kids of anonymous cells should use anonymous cell as containing block</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.1.#x0">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.1.#x1">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.2">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.2">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#the-width-property">10.2 Content width: the 'width' property</a></th></tr>
      <!-- 113 tests -->
      <tr id="abspos-zero-width-001-10.2" class="image">
        <td>
            <a href="abspos-zero-width-001.xht">abspos-zero-width-001</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolute positioned elements still affect scrolling mechanism
          <ul class="assert">
            <li>Zero width absolute positioned elements still affects scrolling mechanism even though they are out of flow of the content.</li>
          </ul>
        </td>
      </tr>
      <tr id="blocks-011-10.2" class="">
        <td>
            <a href="blocks-011.xht">blocks-011</a></td>
        <td><a href="reference/blocks-011-ref.xht">=</a> </td>
        <td></td>
        <td>CSS Block Box Model: overconstrained horizontal box model and minimum widths
        </td>
      </tr>
      <tr id="blocks-012-10.2" class="">
        <td>
            <a href="blocks-012.xht">blocks-012</a></td>
        <td><a href="reference/blocks-011-ref.xht">=</a> </td>
        <td></td>
        <td>CSS Block Box Model: overconstrained horizontal box model and minimum widths
        </td>
      </tr>
      <tr id="blocks-013-10.2" class="">
        <td>
            <a href="blocks-013.xht">blocks-013</a></td>
        <td><a href="reference/blocks-013-ref.xht">=</a> </td>
        <td></td>
        <td>CSS Block Box Model: overconstrained horizontal box model and minimum widths
        </td>
      </tr>
      <tr id="blocks-014-10.2" class="">
        <td>
            <a href="blocks-014.xht">blocks-014</a></td>
        <td><a href="reference/blocks-014-ref.xht">=</a> </td>
        <td></td>
        <td>CSS Block Box Model: sane horizontal box model and minimum widths
        </td>
      </tr>
      <tr id="blocks-015-10.2" class="">
        <td>
            <a href="blocks-015.xht">blocks-015</a></td>
        <td><a href="reference/blocks-014-ref.xht">=</a> </td>
        <td></td>
        <td>CSS Block Box Model: sane horizontal box model and minimum widths
        </td>
      </tr>
      <tr id="blocks-016-10.2" class="">
        <td>
            <a href="blocks-016.xht">blocks-016</a></td>
        <td><a href="reference/blocks-013-ref.xht">=</a> </td>
        <td></td>
        <td>CSS Block Box Model: sane horizontal box model and minimum widths
        </td>
      </tr>
      <tr id="blocks-020-10.2" class="ahem">
        <td>
            <a href="blocks-020.xht">blocks-020</a></td>
        <td><a href="reference/blocks-020-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Block Box Model: block widths with position:relative
        </td>
      </tr>
      <tr id="blocks-021-10.2" class="ahem">
        <td>
            <a href="blocks-021.xht">blocks-021</a></td>
        <td><a href="reference/blocks-020-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Block Box Model: block widths with position:absolute
        </td>
      </tr>
      <tr id="blocks-022-10.2" class="ahem">
        <td>
            <a href="blocks-022.xht">blocks-022</a></td>
        <td><a href="reference/blocks-020-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>CSS Block Box Model: block widths with position:static
        </td>
      </tr>
      <tr id="blocks-025-10.2" class="">
        <td>
            <a href="blocks-025.xht">blocks-025</a></td>
        <td><a href="reference/blocks-025-ref.xht">=</a> </td>
        <td></td>
        <td>Percentage Dimensions in Shrink Wrap Blocks
        </td>
      </tr>
      <tr id="blocks-026-10.2" class="">
        <td>
            <a href="blocks-026.xht">blocks-026</a></td>
        <td><a href="reference/blocks-026-ref.xht">=</a> </td>
        <td></td>
        <td>Percentage widths on INPUT elements with borders
        </td>
      </tr>
      <tr id="c412-blockw-000-10.2" class="ahem image">
        <td>
            <a href="c412-blockw-000.xht">c412-blockw-000</a></td>
        <td><a href="reference/c412-blockw-000-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Horizontal Formatting
        </td>
      </tr>
      <tr id="c5502-mrgn-r-003-10.2" class="">
        <td>
            <a href="c5502-mrgn-r-003.xht">c5502-mrgn-r-003</a></td>
        <td><a href="reference/c5502-mrgn-r-003-ref.xht">=</a> </td>
        <td></td>
        <td>margin-right
        </td>
      </tr>
      <tr id="c5504-mrgn-l-003-10.2" class="">
        <td>
            <a href="c5504-mrgn-l-003.xht">c5504-mrgn-l-003</a></td>
        <td><a href="reference/c5504-mrgn-l-003-ref.xht">=</a> </td>
        <td></td>
        <td>margin-left
        </td>
      </tr>
      <tr id="c5505-mrgn-003-10.2" class="ahem image">
        <td>
            <a href="c5505-mrgn-003.xht">c5505-mrgn-003</a></td>
        <td><a href="reference/c5505-mrgn-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>margin
        </td>
      </tr>
      <tr id="c5507-padn-r-003-10.2" class="invalid">
        <td>
            <a href="c5507-padn-r-003.xht">c5507-padn-r-003</a></td>
        <td><a href="reference/c5507-padn-r-003-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>padding-right
        </td>
      </tr>
      <tr id="c5523-width-000-10.2" class="image">
        <td>
            <a href="c5523-width-000.xht">c5523-width-000</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>width
        </td>
      </tr>
      <tr id="c5523-width-001-10.2" class="image">
        <td>
            <a href="c5523-width-001.xht">c5523-width-001</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>width
        </td>
      </tr>
      <tr id="c5523-width-002-10.2" class="image">
        <td>
            <a href="c5523-width-002.xht">c5523-width-002</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>width
        </td>
      </tr>
      <tr id="c5525-fltwidth-000-10.2" class="image">
        <td>
            <a href="c5525-fltwidth-000.xht">c5525-fltwidth-000</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>float
        </td>
      </tr>
      <tr id="float-non-replaced-width-008-10.2" class="ahem">
        <td>
            <a href="float-non-replaced-width-008.xht">float-non-replaced-width-008</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of floating, non-replaced elements - max-width
          <ul class="assert">
            <li>If 'width' of a floating, non-replaced element computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If 'width' of a floating, non-replaced element computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-009-10.2" class="ahem">
        <td>
            <a href="float-non-replaced-width-009.xht">float-non-replaced-width-009</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of floating, non-replaced elements - max-width
          <ul class="assert">
            <li>If 'width' of a floating, non-replaced element computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If 'width' of a floating, non-replaced element computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-010-10.2" class="ahem">
        <td>
            <a href="float-non-replaced-width-010.xht">float-non-replaced-width-010</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of floating, non-replaced elements - width
          <ul class="assert">
            <li>If 'width' of a floating, non-replaced element computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' is specified with absolute length, then the computed value is the specified value. If 'width' of a floating, non-replaced element computes to 'auto' but its own child uses specified absolute length, then such specified absolute length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-001-10.2" class="invalid">
        <td>
            <a href="width-001.xht">width-001</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using pixels with a minimum minus one value, -1px
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-002-10.2" class="">
        <td>
            <a href="width-002.xht">width-002</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using pixels with a minimum value, 0px
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-003-10.2" class="">
        <td>
            <a href="width-003.xht">width-003</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Width using pixels with a minimum plus one value, 1px
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-004-10.2" class="">
        <td>
            <a href="width-004.xht">width-004</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using pixels with a negative zero value, -0px
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-005-10.2" class="">
        <td>
            <a href="width-005.xht">width-005</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using pixels with a positive zero value, +0px
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-006-10.2" class="">
        <td>
            <a href="width-006.xht">width-006</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-007-10.2" class="">
        <td>
            <a href="width-007.xht">width-007</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-012-10.2" class="invalid">
        <td>
            <a href="width-012.xht">width-012</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using points with a minimum minus one value, -1pt
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-013-10.2" class="">
        <td>
            <a href="width-013.xht">width-013</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using points with a minimum value, 0pt
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-014-10.2" class="">
        <td>
            <a href="width-014.xht">width-014</a></td>
        <td></td>
        <td></td>
        <td>Width using points with a minimum plus one value, 1pt
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-015-10.2" class="">
        <td>
            <a href="width-015.xht">width-015</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using points with a negative zero value, -0pt
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-016-10.2" class="">
        <td>
            <a href="width-016.xht">width-016</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using points with a positive zero value, +0pt
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-017-10.2" class="">
        <td>
            <a href="width-017.xht">width-017</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-018-10.2" class="">
        <td>
            <a href="width-018.xht">width-018</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-023-10.2" class="invalid">
        <td>
            <a href="width-023.xht">width-023</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using picas with a minimum minus one value, -1pc
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-024-10.2" class="">
        <td>
            <a href="width-024.xht">width-024</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using picas with a minimum value, 0pc
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-025-10.2" class="">
        <td>
            <a href="width-025.xht">width-025</a></td>
        <td><a href="reference/max-width-025-ref.xht">=</a> </td>
        <td></td>
        <td>Width using picas with a minimum plus one value, 1pc
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-026-10.2" class="">
        <td>
            <a href="width-026.xht">width-026</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using picas with a negative zero value, -0pc
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-027-10.2" class="">
        <td>
            <a href="width-027.xht">width-027</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using picas with a positive zero value, +0pc
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-028-10.2" class="">
        <td>
            <a href="width-028.xht">width-028</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-029-10.2" class="">
        <td>
            <a href="width-029.xht">width-029</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-034-10.2" class="invalid">
        <td>
            <a href="width-034.xht">width-034</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using centimeters with a minimum minus one value, -1cm
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-035-10.2" class="">
        <td>
            <a href="width-035.xht">width-035</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using centimeters with a minimum value, 0cm
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-036-10.2" class="">
        <td>
            <a href="width-036.xht">width-036</a></td>
        <td><a href="reference/max-width-036-ref.xht">=</a> </td>
        <td></td>
        <td>Width using centimeters with a minimum plus one value, 1cm
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-037-10.2" class="">
        <td>
            <a href="width-037.xht">width-037</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using centimeters with a negative zero value, -0cm
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-038-10.2" class="">
        <td>
            <a href="width-038.xht">width-038</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using centimeters with a positive zero value, +0cm
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-039-10.2" class="">
        <td>
            <a href="width-039.xht">width-039</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-040-10.2" class="">
        <td>
            <a href="width-040.xht">width-040</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-045-10.2" class="invalid">
        <td>
            <a href="width-045.xht">width-045</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using millimeters with a minimum minus one value, -1mm
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-046-10.2" class="">
        <td>
            <a href="width-046.xht">width-046</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using millimeters with a minimum value, 0mm
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-047-10.2" class="">
        <td>
            <a href="width-047.xht">width-047</a></td>
        <td><a href="reference/max-width-047-ref.xht">=</a> </td>
        <td></td>
        <td>Width using millimeters with a minimum plus one value, 1mm
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-048-10.2" class="">
        <td>
            <a href="width-048.xht">width-048</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using millimeters with a negative zero value, -0mm
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-049-10.2" class="">
        <td>
            <a href="width-049.xht">width-049</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using millimeters with a positive zero value, +0mm
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-050-10.2" class="">
        <td>
            <a href="width-050.xht">width-050</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-051-10.2" class="">
        <td>
            <a href="width-051.xht">width-051</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-056-10.2" class="invalid">
        <td>
            <a href="width-056.xht">width-056</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using inches with a minimum minus one value, -1in
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-057-10.2" class="">
        <td>
            <a href="width-057.xht">width-057</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using inches with a minimum value, 0in
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-058-10.2" class="">
        <td>
            <a href="width-058.xht">width-058</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width using inches with a minimum plus one value, 1in
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-059-10.2" class="">
        <td>
            <a href="width-059.xht">width-059</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using inches with a negative zero value, -0in
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-060-10.2" class="">
        <td>
            <a href="width-060.xht">width-060</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using inches with a positive zero value, +0in
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-061-10.2" class="">
        <td>
            <a href="width-061.xht">width-061</a></td>
        <td><a href="reference/max-width-061-ref.xht">=</a> </td>
        <td></td>
        <td>Width using inches with a nominal value, 3in
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-062-10.2" class="">
        <td>
            <a href="width-062.xht">width-062</a></td>
        <td><a href="reference/max-width-061-ref.xht">=</a> </td>
        <td></td>
        <td>Width using inches with a positive nominal value, +3in
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-067-10.2" class="ahem invalid">
        <td>
            <a href="width-067.xht">width-067</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using 'em' units with a minimum minus one value, -1em
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-068-10.2" class="ahem">
        <td>
            <a href="width-068.xht">width-068</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'em' units with a minimum value, 0em
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-069-10.2" class="ahem">
        <td>
            <a href="width-069.xht">width-069</a></td>
        <td><a href="reference/max-width-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'em' units with a minimum plus one value, 1em
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-070-10.2" class="ahem">
        <td>
            <a href="width-070.xht">width-070</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'em' units with a negative zero value, -0em
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-071-10.2" class="ahem">
        <td>
            <a href="width-071.xht">width-071</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'em' units with a positive zero value, +0em
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-072-10.2" class="ahem">
        <td>
            <a href="width-072.xht">width-072</a></td>
        <td><a href="reference/max-width-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-073-10.2" class="ahem">
        <td>
            <a href="width-073.xht">width-073</a></td>
        <td><a href="reference/max-width-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-078-10.2" class="ahem invalid">
        <td>
            <a href="width-078.xht">width-078</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using 'ex' units with a minimum minus one value, -1ex
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-079-10.2" class="ahem">
        <td>
            <a href="width-079.xht">width-079</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'ex' units with a minimum value, 0ex
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-080-10.2" class="ahem">
        <td>
            <a href="width-080.xht">width-080</a></td>
        <td><a href="reference/max-width-025-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'ex' units with a minimum plus one value, 1ex
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-081-10.2" class="ahem">
        <td>
            <a href="width-081.xht">width-081</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'ex' units with a negative zero value, -0ex
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-082-10.2" class="ahem">
        <td>
            <a href="width-082.xht">width-082</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'ex' units with a positive zero value, +0ex
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-083-10.2" class="ahem">
        <td>
            <a href="width-083.xht">width-083</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-084-10.2" class="ahem">
        <td>
            <a href="width-084.xht">width-084</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-089-10.2" class="invalid">
        <td>
            <a href="width-089.xht">width-089</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using percentages with a minimum minus one value, -1%
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-090-10.2" class="">
        <td>
            <a href="width-090.xht">width-090</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using percentages with a minimum value, 0%
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-091-10.2" class="">
        <td>
            <a href="width-091.xht">width-091</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Width using percentages with a minimum plus one value, 1%
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-092-10.2" class="">
        <td>
            <a href="width-092.xht">width-092</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using percentages with a negative zero value, -0%
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-093-10.2" class="">
        <td>
            <a href="width-093.xht">width-093</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using percentages with a positive zero value, +0%
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-094-10.2" class="">
        <td>
            <a href="width-094.xht">width-094</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-095-10.2" class="">
        <td>
            <a href="width-095.xht">width-095</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-100-10.2" class="">
        <td>
            <a href="width-100.xht">width-100</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width with a negative zero value and no units, -0
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-101-10.2" class="">
        <td>
            <a href="width-101.xht">width-101</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width with a zero value and no units, 0
          <ul class="assert">
            <li>The 'width' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-102-10.2" class="">
        <td>
            <a href="width-102.xht">width-102</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width with a positive zero value and no units, +0
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-103-10.2" class="">
        <td>
            <a href="width-103.xht">width-103</a></td>
        <td><a href="reference/width-103-ref.xht">=</a> </td>
        <td></td>
        <td>Width set to a value of 'auto'
          <ul class="assert">
            <li>The 'width' property applies a value of 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-104-10.2" class="">
        <td>
            <a href="width-104.xht">width-104</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Width set to 'inherit'
          <ul class="assert">
            <li>The 'width' property properly inherits the width value of the parent.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-001-10.2" class="">
        <td>
            <a href="width-applies-to-001.xht">width-applies-to-001</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'width' property does not apply to elements with 'display' set to 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-002-10.2" class="">
        <td>
            <a href="width-applies-to-002.xht">width-applies-to-002</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'width' property does not apply to elements with 'display' set to 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-003-10.2" class="">
        <td>
            <a href="width-applies-to-003.xht">width-applies-to-003</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'width' property does not apply to elements with 'display' set to 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-004-10.2" class="">
        <td>
            <a href="width-applies-to-004.xht">width-applies-to-004</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'width' property does not apply to elements with 'display' set to 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-005-10.2" class="">
        <td>
            <a href="width-applies-to-005.xht">width-applies-to-005</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-006-10.2" class="">
        <td>
            <a href="width-applies-to-006.xht">width-applies-to-006</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-007-10.2" class="">
        <td>
            <a href="width-applies-to-007.xht">width-applies-to-007</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-008-10.2" class="">
        <td>
            <a href="width-applies-to-008.xht">width-applies-to-008</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'inline'
          <ul class="assert">
            <li>The 'width' property does not apply to elements with 'display' set to 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-009-10.2" class="">
        <td>
            <a href="width-applies-to-009.xht">width-applies-to-009</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'block'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-010-10.2" class="">
        <td>
            <a href="width-applies-to-010.xht">width-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'list-item'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'list-item'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-011-10.2" class="">
        <td>
            <a href="width-applies-to-011.xht">width-applies-to-011</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'run-in'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-012-10.2" class="">
        <td>
            <a href="width-applies-to-012.xht">width-applies-to-012</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'inline-block'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-013-10.2" class="">
        <td>
            <a href="width-applies-to-013.xht">width-applies-to-013</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-014-10.2" class="">
        <td>
            <a href="width-applies-to-014.xht">width-applies-to-014</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-015-10.2" class="">
        <td>
            <a href="width-applies-to-015.xht">width-applies-to-015</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-016-10.2" class="">
        <td>
            <a href="width-applies-to-016.xht">width-applies-to-016</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements set to 'display: none'
          <ul class="assert">
            <li>Width can be declared onto 'display: none' elements but since 'display: none' declaration on an element does not generate a CSS box, then it won't have a rendering effect nor a visual formatting repercussion.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-non-replaced-inline-001-10.2" class="">
        <td>
            <a href="width-non-replaced-inline-001.xht">width-non-replaced-inline-001</a></td>
        <td><a href="reference/width-non-replaced-inline-001-ref.xht">=</a> </td>
        <td></td>
        <td>Width of non-replaced inline element should be the same as its content
          <ul class="assert">
            <li>Content width of a non-replaced inline element is that of the rendered content.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-percentage-001-10.2" class="">
        <td>
            <a href="width-percentage-001.xht">width-percentage-001</a></td>
        <td><a href="reference/max-width-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Calculating percentage based width off of the parent container
          <ul class="assert">
            <li>Percentage is calculated with respect to the width of the generated boxes containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-percentage-002-10.2" class="">
        <td>
            <a href="width-percentage-002.xht">width-percentage-002</a></td>
        <td><a href="reference/max-width-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Calculating widths for absolutely positioned elements
          <ul class="assert">
            <li>Absolutely positioned elements whose containing block is based on a block-level element, the percentage is calculated with respect to the width of the padding box of that element.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-replaced-element-001-10.2" class="image may">
        <td>
            <a href="width-replaced-element-001.xht">width-replaced-element-001</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Scaling replaced elements with a width specified can scale the image
          <ul class="assert">
            <li>Replaced elements width may be scaled by the user agent when the value of the property is not 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-undefined-001-10.2" class="ahem">
        <td>
            <a href="width-undefined-001.xht">width-undefined-001</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width of containing block is determined by with of child
          <ul class="assert">
            <li>The containing block's width depends on this element's width because the resulting layout has not been defined in CSS2.1.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.2.#propdef-width">
      <!-- 84 tests -->
      <tr id="width-001-10.2.#propdef-width" class="invalid">
        <td>
            <a href="width-001.xht">width-001</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using pixels with a minimum minus one value, -1px
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-002-10.2.#propdef-width" class="">
        <td>
            <a href="width-002.xht">width-002</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using pixels with a minimum value, 0px
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-003-10.2.#propdef-width" class="">
        <td>
            <a href="width-003.xht">width-003</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Width using pixels with a minimum plus one value, 1px
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-004-10.2.#propdef-width" class="">
        <td>
            <a href="width-004.xht">width-004</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using pixels with a negative zero value, -0px
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-005-10.2.#propdef-width" class="">
        <td>
            <a href="width-005.xht">width-005</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using pixels with a positive zero value, +0px
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-006-10.2.#propdef-width" class="">
        <td>
            <a href="width-006.xht">width-006</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-007-10.2.#propdef-width" class="">
        <td>
            <a href="width-007.xht">width-007</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-012-10.2.#propdef-width" class="invalid">
        <td>
            <a href="width-012.xht">width-012</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using points with a minimum minus one value, -1pt
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-013-10.2.#propdef-width" class="">
        <td>
            <a href="width-013.xht">width-013</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using points with a minimum value, 0pt
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-014-10.2.#propdef-width" class="">
        <td>
            <a href="width-014.xht">width-014</a></td>
        <td></td>
        <td></td>
        <td>Width using points with a minimum plus one value, 1pt
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-015-10.2.#propdef-width" class="">
        <td>
            <a href="width-015.xht">width-015</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using points with a negative zero value, -0pt
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-016-10.2.#propdef-width" class="">
        <td>
            <a href="width-016.xht">width-016</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using points with a positive zero value, +0pt
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-017-10.2.#propdef-width" class="">
        <td>
            <a href="width-017.xht">width-017</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-018-10.2.#propdef-width" class="">
        <td>
            <a href="width-018.xht">width-018</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-023-10.2.#propdef-width" class="invalid">
        <td>
            <a href="width-023.xht">width-023</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using picas with a minimum minus one value, -1pc
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-024-10.2.#propdef-width" class="">
        <td>
            <a href="width-024.xht">width-024</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using picas with a minimum value, 0pc
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-025-10.2.#propdef-width" class="">
        <td>
            <a href="width-025.xht">width-025</a></td>
        <td><a href="reference/max-width-025-ref.xht">=</a> </td>
        <td></td>
        <td>Width using picas with a minimum plus one value, 1pc
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-026-10.2.#propdef-width" class="">
        <td>
            <a href="width-026.xht">width-026</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using picas with a negative zero value, -0pc
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-027-10.2.#propdef-width" class="">
        <td>
            <a href="width-027.xht">width-027</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using picas with a positive zero value, +0pc
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-028-10.2.#propdef-width" class="">
        <td>
            <a href="width-028.xht">width-028</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-029-10.2.#propdef-width" class="">
        <td>
            <a href="width-029.xht">width-029</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-034-10.2.#propdef-width" class="invalid">
        <td>
            <a href="width-034.xht">width-034</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using centimeters with a minimum minus one value, -1cm
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-035-10.2.#propdef-width" class="">
        <td>
            <a href="width-035.xht">width-035</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using centimeters with a minimum value, 0cm
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-036-10.2.#propdef-width" class="">
        <td>
            <a href="width-036.xht">width-036</a></td>
        <td><a href="reference/max-width-036-ref.xht">=</a> </td>
        <td></td>
        <td>Width using centimeters with a minimum plus one value, 1cm
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-037-10.2.#propdef-width" class="">
        <td>
            <a href="width-037.xht">width-037</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using centimeters with a negative zero value, -0cm
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-038-10.2.#propdef-width" class="">
        <td>
            <a href="width-038.xht">width-038</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using centimeters with a positive zero value, +0cm
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-039-10.2.#propdef-width" class="">
        <td>
            <a href="width-039.xht">width-039</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-040-10.2.#propdef-width" class="">
        <td>
            <a href="width-040.xht">width-040</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-045-10.2.#propdef-width" class="invalid">
        <td>
            <a href="width-045.xht">width-045</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using millimeters with a minimum minus one value, -1mm
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-046-10.2.#propdef-width" class="">
        <td>
            <a href="width-046.xht">width-046</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using millimeters with a minimum value, 0mm
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-047-10.2.#propdef-width" class="">
        <td>
            <a href="width-047.xht">width-047</a></td>
        <td><a href="reference/max-width-047-ref.xht">=</a> </td>
        <td></td>
        <td>Width using millimeters with a minimum plus one value, 1mm
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-048-10.2.#propdef-width" class="">
        <td>
            <a href="width-048.xht">width-048</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using millimeters with a negative zero value, -0mm
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-049-10.2.#propdef-width" class="">
        <td>
            <a href="width-049.xht">width-049</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using millimeters with a positive zero value, +0mm
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-050-10.2.#propdef-width" class="">
        <td>
            <a href="width-050.xht">width-050</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-051-10.2.#propdef-width" class="">
        <td>
            <a href="width-051.xht">width-051</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-056-10.2.#propdef-width" class="invalid">
        <td>
            <a href="width-056.xht">width-056</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using inches with a minimum minus one value, -1in
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-057-10.2.#propdef-width" class="">
        <td>
            <a href="width-057.xht">width-057</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using inches with a minimum value, 0in
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-058-10.2.#propdef-width" class="">
        <td>
            <a href="width-058.xht">width-058</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width using inches with a minimum plus one value, 1in
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-059-10.2.#propdef-width" class="">
        <td>
            <a href="width-059.xht">width-059</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using inches with a negative zero value, -0in
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-060-10.2.#propdef-width" class="">
        <td>
            <a href="width-060.xht">width-060</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using inches with a positive zero value, +0in
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-061-10.2.#propdef-width" class="">
        <td>
            <a href="width-061.xht">width-061</a></td>
        <td><a href="reference/max-width-061-ref.xht">=</a> </td>
        <td></td>
        <td>Width using inches with a nominal value, 3in
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-062-10.2.#propdef-width" class="">
        <td>
            <a href="width-062.xht">width-062</a></td>
        <td><a href="reference/max-width-061-ref.xht">=</a> </td>
        <td></td>
        <td>Width using inches with a positive nominal value, +3in
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-067-10.2.#propdef-width" class="ahem invalid">
        <td>
            <a href="width-067.xht">width-067</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using 'em' units with a minimum minus one value, -1em
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-068-10.2.#propdef-width" class="ahem">
        <td>
            <a href="width-068.xht">width-068</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'em' units with a minimum value, 0em
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-069-10.2.#propdef-width" class="ahem">
        <td>
            <a href="width-069.xht">width-069</a></td>
        <td><a href="reference/max-width-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'em' units with a minimum plus one value, 1em
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-070-10.2.#propdef-width" class="ahem">
        <td>
            <a href="width-070.xht">width-070</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'em' units with a negative zero value, -0em
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-071-10.2.#propdef-width" class="ahem">
        <td>
            <a href="width-071.xht">width-071</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'em' units with a positive zero value, +0em
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-072-10.2.#propdef-width" class="ahem">
        <td>
            <a href="width-072.xht">width-072</a></td>
        <td><a href="reference/max-width-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-073-10.2.#propdef-width" class="ahem">
        <td>
            <a href="width-073.xht">width-073</a></td>
        <td><a href="reference/max-width-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-078-10.2.#propdef-width" class="ahem invalid">
        <td>
            <a href="width-078.xht">width-078</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using 'ex' units with a minimum minus one value, -1ex
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-079-10.2.#propdef-width" class="ahem">
        <td>
            <a href="width-079.xht">width-079</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'ex' units with a minimum value, 0ex
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-080-10.2.#propdef-width" class="ahem">
        <td>
            <a href="width-080.xht">width-080</a></td>
        <td><a href="reference/max-width-025-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'ex' units with a minimum plus one value, 1ex
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-081-10.2.#propdef-width" class="ahem">
        <td>
            <a href="width-081.xht">width-081</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'ex' units with a negative zero value, -0ex
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-082-10.2.#propdef-width" class="ahem">
        <td>
            <a href="width-082.xht">width-082</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'ex' units with a positive zero value, +0ex
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-083-10.2.#propdef-width" class="ahem">
        <td>
            <a href="width-083.xht">width-083</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-084-10.2.#propdef-width" class="ahem">
        <td>
            <a href="width-084.xht">width-084</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Width using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-089-10.2.#propdef-width" class="invalid">
        <td>
            <a href="width-089.xht">width-089</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Width using percentages with a minimum minus one value, -1%
          <ul class="assert">
            <li>The 'width' property sets a minimum minus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-090-10.2.#propdef-width" class="">
        <td>
            <a href="width-090.xht">width-090</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using percentages with a minimum value, 0%
          <ul class="assert">
            <li>The 'width' property sets a minimum length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-091-10.2.#propdef-width" class="">
        <td>
            <a href="width-091.xht">width-091</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Width using percentages with a minimum plus one value, 1%
          <ul class="assert">
            <li>The 'width' property sets a minimum plus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-092-10.2.#propdef-width" class="">
        <td>
            <a href="width-092.xht">width-092</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using percentages with a negative zero value, -0%
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-093-10.2.#propdef-width" class="">
        <td>
            <a href="width-093.xht">width-093</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width using percentages with a positive zero value, +0%
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-094-10.2.#propdef-width" class="">
        <td>
            <a href="width-094.xht">width-094</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'width' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-095-10.2.#propdef-width" class="">
        <td>
            <a href="width-095.xht">width-095</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Width using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'width' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-100-10.2.#propdef-width" class="">
        <td>
            <a href="width-100.xht">width-100</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width with a negative zero value and no units, -0
          <ul class="assert">
            <li>The 'width' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-101-10.2.#propdef-width" class="">
        <td>
            <a href="width-101.xht">width-101</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width with a zero value and no units, 0
          <ul class="assert">
            <li>The 'width' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-102-10.2.#propdef-width" class="">
        <td>
            <a href="width-102.xht">width-102</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width with a positive zero value and no units, +0
          <ul class="assert">
            <li>The 'width' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-103-10.2.#propdef-width" class="">
        <td>
            <a href="width-103.xht">width-103</a></td>
        <td><a href="reference/width-103-ref.xht">=</a> </td>
        <td></td>
        <td>Width set to a value of 'auto'
          <ul class="assert">
            <li>The 'width' property applies a value of 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-104-10.2.#propdef-width" class="">
        <td>
            <a href="width-104.xht">width-104</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Width set to 'inherit'
          <ul class="assert">
            <li>The 'width' property properly inherits the width value of the parent.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-001-10.2.#propdef-width" class="">
        <td>
            <a href="width-applies-to-001.xht">width-applies-to-001</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'width' property does not apply to elements with 'display' set to 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-002-10.2.#propdef-width" class="">
        <td>
            <a href="width-applies-to-002.xht">width-applies-to-002</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'width' property does not apply to elements with 'display' set to 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-003-10.2.#propdef-width" class="">
        <td>
            <a href="width-applies-to-003.xht">width-applies-to-003</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'width' property does not apply to elements with 'display' set to 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-004-10.2.#propdef-width" class="">
        <td>
            <a href="width-applies-to-004.xht">width-applies-to-004</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'width' property does not apply to elements with 'display' set to 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-005-10.2.#propdef-width" class="">
        <td>
            <a href="width-applies-to-005.xht">width-applies-to-005</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-006-10.2.#propdef-width" class="">
        <td>
            <a href="width-applies-to-006.xht">width-applies-to-006</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-007-10.2.#propdef-width" class="">
        <td>
            <a href="width-applies-to-007.xht">width-applies-to-007</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-008-10.2.#propdef-width" class="">
        <td>
            <a href="width-applies-to-008.xht">width-applies-to-008</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'inline'
          <ul class="assert">
            <li>The 'width' property does not apply to elements with 'display' set to 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-009-10.2.#propdef-width" class="">
        <td>
            <a href="width-applies-to-009.xht">width-applies-to-009</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'block'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-010-10.2.#propdef-width" class="">
        <td>
            <a href="width-applies-to-010.xht">width-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'list-item'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'list-item'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-011-10.2.#propdef-width" class="">
        <td>
            <a href="width-applies-to-011.xht">width-applies-to-011</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'run-in'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-012-10.2.#propdef-width" class="">
        <td>
            <a href="width-applies-to-012.xht">width-applies-to-012</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'inline-block'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-013-10.2.#propdef-width" class="">
        <td>
            <a href="width-applies-to-013.xht">width-applies-to-013</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-014-10.2.#propdef-width" class="">
        <td>
            <a href="width-applies-to-014.xht">width-applies-to-014</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-015-10.2.#propdef-width" class="">
        <td>
            <a href="width-applies-to-015.xht">width-applies-to-015</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'width' property applies to elements with 'display' set to 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="width-applies-to-016-10.2.#propdef-width" class="">
        <td>
            <a href="width-applies-to-016.xht">width-applies-to-016</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Width applied to elements set to 'display: none'
          <ul class="assert">
            <li>Width can be declared onto 'display: none' elements but since 'display: none' declaration on an element does not generate a CSS box, then it won't have a rendering effect nor a visual formatting repercussion.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.2.#x4">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.2.#x5">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.3">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.3">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#Computing_widths_and_margins">10.3 Calculating widths and margins</a></th></tr>
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.3.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.3.1">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#inline-width">10.3.1 Inline, non-replaced elements</a></th></tr>
      <!-- 2 tests -->
      <tr id="inline-non-replaced-width-001-10.3.1" class="ahem">
        <td>
            <a href="inline-non-replaced-width-001.xht">inline-non-replaced-width-001</a></td>
        <td><a href="reference/inline-non-replaced-width-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Inline non-replaced elements with 'auto' value for 'left', 'right', and 'margin-left'
          <ul class="assert">
            <li>Computed value of 'auto' for 'left', 'right', and 'margin-left' becomes a used value of '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-non-replaced-width-002-10.3.1" class="ahem">
        <td>
            <a href="inline-non-replaced-width-002.xht">inline-non-replaced-width-002</a></td>
        <td><a href="reference/inline-non-replaced-width-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Inline non-replaced elements with 'auto' value for 'left', 'right', and 'margin-right'
          <ul class="assert">
            <li>Computed value of 'auto' for 'left', 'right', and 'margin-right' becomes a used value of '0'.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.3.2">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.3.2">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#inline-replaced-width">10.3.2 Inline, replaced elements</a></th></tr>
      <!-- 51 tests -->
      <tr id="box-sizing-007-10.3.2" class="svg">
        <td>
            <a href="box-sizing-007.xht">box-sizing-007</a></td>
        <td><a href="reference/box-sizing-007-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>box-sizing:border-box and auto sizing of intrinsicly sized replaced elements.
          <ul class="assert">
            <li>Exercises the sizing rules in CSS2.1 10.3.2 and 10.6.2 with box-sizing:border-box for replaced elements with either both intrisic dimentions or an intrinsic ratio, to check that they work correctly in terms of the content width height.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-008-10.3.2" class="svg">
        <td>
            <a href="box-sizing-008.xht">box-sizing-008</a></td>
        <td><a href="reference/box-sizing-008-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>box-sizing:border-box and auto sizing of replaced elements with intrinisic width only.
          <ul class="assert">
            <li>Exercises the sizing rules in CSS2.1 10.3.2 and 10.6.2 with box-sizing:border-box for replaced elements with intrisic width and no intrinsic ratio, to check that they work correctly in terms of the content width height.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-009-10.3.2" class="svg">
        <td>
            <a href="box-sizing-009.xht">box-sizing-009</a></td>
        <td><a href="reference/box-sizing-009-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>box-sizing:border-box and auto sizing of replaced elements with intrinisic height only.
          <ul class="assert">
            <li>Exercises the sizing rules in CSS2.1 10.3.2 and 10.6.2 with box-sizing:border-box for replaced elements with intrisic height and no intrinsic ratio, to check that they work correctly in terms of the content width height.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-010-10.3.2" class="svg">
        <td>
            <a href="box-sizing-010.xht">box-sizing-010</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and height, h &gt; max-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and height with the h &gt; max-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-011-10.3.2" class="svg">
        <td>
            <a href="box-sizing-011.xht">box-sizing-011</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and height, w &gt; max-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and height with the w &gt; max-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-012-10.3.2" class="svg">
        <td>
            <a href="box-sizing-012.xht">box-sizing-012</a></td>
        <td><a href="reference/box-sizing-012-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width, h &gt; max-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width with the h &gt; max-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-013-10.3.2" class="svg">
        <td>
            <a href="box-sizing-013.xht">box-sizing-013</a></td>
        <td><a href="reference/box-sizing-013-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic height, w &gt; max-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic height with the w &gt; max-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-014-10.3.2" class="svg">
        <td>
            <a href="box-sizing-014.xht">box-sizing-014</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and ratio, h &gt; max-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and ratio with the h &gt; max-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-015-10.3.2" class="svg">
        <td>
            <a href="box-sizing-015.xht">box-sizing-015</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic height and ratio, w &gt; max-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic height and ratio with the w &gt; max-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-016-10.3.2" class="svg">
        <td>
            <a href="box-sizing-016.xht">box-sizing-016</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic ratio, h &gt; max-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic ratio with the h &gt; max-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-017-10.3.2" class="svg">
        <td>
            <a href="box-sizing-017.xht">box-sizing-017</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic ratio, w &gt; max-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic ratio with the w &gt; max-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-018-10.3.2" class="svg">
        <td>
            <a href="box-sizing-018.xht">box-sizing-018</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic height and ratio, w &gt; max-wdith and h &gt; max-height and max-width/w &amp;#8804; max-height/h
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic height and ratio with the w &gt; max-width and h &gt; max-height constraint violation and max-width/w &amp;#8804; max-height/h are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-019-10.3.2" class="svg">
        <td>
            <a href="box-sizing-019.xht">box-sizing-019</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and ratio, w &gt; max-wdith and h &gt; max-height and max-width/w &gt; max-height/h
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and ratio with the w &gt; max-width and h &gt; max-height constraint violation and max-width/w &gt; max-height/h are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-020-10.3.2" class="svg">
        <td>
            <a href="box-sizing-020.xht">box-sizing-020</a></td>
        <td><a href="reference/box-sizing-020-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and height, h &lt; min-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and height with the h &lt; min-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-021-10.3.2" class="svg">
        <td>
            <a href="box-sizing-021.xht">box-sizing-021</a></td>
        <td><a href="reference/box-sizing-020-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and height, w &lt; win-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and height with the w &lt; min-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-022-10.3.2" class="svg">
        <td>
            <a href="box-sizing-022.xht">box-sizing-022</a></td>
        <td><a href="reference/box-sizing-022-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width, w &lt; min-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width with the w &lt; min-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-023-10.3.2" class="svg">
        <td>
            <a href="box-sizing-023.xht">box-sizing-023</a></td>
        <td><a href="reference/box-sizing-023-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic height, h &lt; min-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic height with the h &lt; min-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-024-10.3.2" class="svg">
        <td>
            <a href="box-sizing-024.xht">box-sizing-024</a></td>
        <td><a href="reference/box-sizing-020-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and ratio, h &lt; mi:-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and ratio with the h &lt; min-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-025-10.3.2" class="svg">
        <td>
            <a href="box-sizing-025.xht">box-sizing-025</a></td>
        <td><a href="reference/box-sizing-020-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic height and ratio, w &lt; min-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic height and ratio with the w &lt; min-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-width-001-10.3.2" class="image">
        <td>
            <a href="inline-replaced-width-001.xht">inline-replaced-width-001</a></td>
        <td><a href="reference/inline-replaced-width-001-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Inline replaced elements and 'auto' specified for 'margin-left', 'margin-right' and intrinsic width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on inline replaced elements becomes a used value of '0'. The intrinsic width is also used if 'height' and 'width' are 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-width-002-10.3.2" class="nonHTML svg">
        <td>
            <a href="inline-replaced-width-002.xht">inline-replaced-width-002</a></td>
        <td><a href="reference/inline-replaced-width-002-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Inline replaced elements and 'auto' specified for 'margin-left', 'margin-right' and intrinsic height
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on inline replaced elements becomes a used value of '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-width-003-10.3.2" class="nonHTML svg">
        <td>
            <a href="inline-replaced-width-003.xht">inline-replaced-width-003</a></td>
        <td><a href="reference/inline-replaced-width-003-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Inline replaced elements and 'auto' specified for 'margin-left', 'margin-right' and 'height'
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on inline replaced elements becomes a used value of '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-width-004-10.3.2" class="nonHTML svg">
        <td>
            <a href="inline-replaced-width-004.xht">inline-replaced-width-004</a></td>
        <td></td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Inline replaced elements and 'auto' specified for 'margin-left', 'margin-right' and no intrinsic height or width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on inline replaced elements becomes a used value of '0'. The height and width are adjusted by the constraints for block-level, non-replaced elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-width-006-10.3.2" class="image">
        <td>
            <a href="inline-replaced-width-006.xht">inline-replaced-width-006</a></td>
        <td><a href="reference/inline-replaced-width-001-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Inline replaced elements and 'auto' specified for 'margin-left', 'margin-right' and percentage intrinsic width
          <ul class="assert">
            <li>Percentage intrinsic widths are evaluated against the containing block's width.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-width-008-10.3.2" class="nonHTML svg">
        <td>
            <a href="inline-replaced-width-008.xht">inline-replaced-width-008</a></td>
        <td><a href="reference/absolute-replaced-width-003a-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>width of inline replaced element with no intrinsic height, no intrinsic width and no intrinsic ratio
          <ul class="assert">
            <li>If an inline replaced element (like the svg element in this test) has no intrinsic width and no intrinsic height, then the used value of 'width' becomes 300px and the used value of 'height' becomes 150px.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-width-009-10.3.2" class="nonHTML svg">
        <td>
            <a href="inline-replaced-width-009.xht">inline-replaced-width-009</a></td>
        <td><a href="reference/absolute-replaced-width-003c-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>CSS Test: width of inline replaced element with no intrinsic width and no intrinsic ratio
          <ul class="assert">
            <li>If an inline replaced element (like the svg element in this test) has no intrinsic width and no intrinsic ratio, then the used value of 'width' becomes 300px.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-width-011-10.3.2" class="image">
        <td>
            <a href="inline-replaced-width-011.xht">inline-replaced-width-011</a></td>
        <td><a href="reference/inline-replaced-width-011-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Replaced inline elements with % widths
        </td>
      </tr>
      <tr id="inline-replaced-width-012-10.3.2" class="image">
        <td>
            <a href="inline-replaced-width-012.xht">inline-replaced-width-012</a></td>
        <td><a href="reference/inline-replaced-width-012-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Replaced inline elements wrapping around floats (% widths)
        </td>
      </tr>
      <tr id="inline-replaced-width-013-10.3.2" class="image">
        <td>
            <a href="inline-replaced-width-013.xht">inline-replaced-width-013</a></td>
        <td><a href="reference/inline-replaced-width-012-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Replaced inline elements wrapping around floats (pixel widths)
        </td>
      </tr>
      <tr id="inline-replaced-width-014-10.3.2" class="image">
        <td>
            <a href="inline-replaced-width-014.xht">inline-replaced-width-014</a></td>
        <td><a href="reference/inline-replaced-width-014-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Replaced inline elements with % widths
        </td>
      </tr>
      <tr id="inline-replaced-width-015-10.3.2" class="image">
        <td>
            <a href="inline-replaced-width-015.xht">inline-replaced-width-015</a></td>
        <td><a href="reference/inline-replaced-width-014-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Replaced inline elements wrapping around floats (% widths)
        </td>
      </tr>
      <tr id="inline-replaced-width-016-10.3.2" class="image">
        <td>
            <a href="inline-replaced-width-016.xht">inline-replaced-width-016</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>width - inline replaced element and max-height
          <ul class="assert">
            <li>The width of an inline replaced element should be re-calculated based on its constrained height (constrained by computed 'max-height' value) and based its intrinsic ratio when it has an intrinsic ratio.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-width-017-10.3.2" class="image">
        <td>
            <a href="inline-replaced-width-017.xht">inline-replaced-width-017</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>width - inline replaced element and min-height
          <ul class="assert">
            <li>The width of an inline replaced element should be re-calculated based on its constrained height (constrained by computed 'min-height' value) and based its intrinsic ratio when it has an intrinsic ratio.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-svg-100-percent-in-body-10.3.2" class="image svg">
        <td>
            <a href="inline-svg-100-percent-in-body.xht">inline-svg-100-percent-in-body</a></td>
        <td><a href="reference/inline-svg-100-percent-in-body-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>SVG element with a view box with explicit 100% width and height should occupy the entire view port
          <ul class="assert">
            <li>When width and height of 100% are specified on an inline SVG element with a view box in the body element, the aspecto ratio should be preserved and should occupy the entire view port.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-svg-intrinsic-size-100-percent-1-10.3.2" class="svg">
        <td>
            <a href="inline-svg-intrinsic-size-100-percent-1.xht">inline-svg-intrinsic-size-100-percent-1</a></td>
        <td><a href="reference/60x60-green.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Propagating width and height attributes of an inline SVG element
          <ul class="assert">
            <li>The width and the height of 100% on an inline SVG element should be propagated to the CSS properties, and the aspect ratio within the SVG is preserved when the view box is specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-svg-intrinsic-size-100-percent-2-10.3.2" class="svg">
        <td>
            <a href="inline-svg-intrinsic-size-100-percent-2.xht">inline-svg-intrinsic-size-100-percent-2</a></td>
        <td><a href="reference/60x60-green.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Propagating width and height attributes of an inline SVG element
          <ul class="assert">
            <li>The width and the height of 100% on an inline SVG element should be propagated to the CSS properties, and the aspect ratio of SVG image should be ignored when the view box is not specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-110-10.3.2" class="image">
        <td>
            <a href="max-width-110.xht">max-width-110</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>max-width - float and inline replaced element
          <ul class="assert">
            <li>If 'height' and 'width' both have computed values of 'auto' and the element also has an intrinsic width, then such intrinsic width is the used value of 'width'. If 'width' of a floating, non-replaced element computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="replaced-elements-all-auto-10.3.2" class="should">
        <td>
            <a href="replaced-elements-all-auto.xht">replaced-elements-all-auto</a></td>
        <td><a href="reference/replaced-elements-all-auto-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-height-20-10.3.2" class="should">
        <td>
            <a href="replaced-elements-height-20.xht">replaced-elements-height-20</a></td>
        <td><a href="reference/replaced-elements-height-20-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-max-height-20-10.3.2" class="should">
        <td>
            <a href="replaced-elements-max-height-20.xht">replaced-elements-max-height-20</a></td>
        <td><a href="reference/replaced-elements-height-20-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-max-width-40-10.3.2" class="should">
        <td>
            <a href="replaced-elements-max-width-40.xht">replaced-elements-max-width-40</a></td>
        <td><a href="reference/replaced-elements-width-40-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-min-height-20-10.3.2" class="should">
        <td>
            <a href="replaced-elements-min-height-20.xht">replaced-elements-min-height-20</a></td>
        <td><a href="reference/replaced-elements-all-auto-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-min-height-40-10.3.2" class="should">
        <td>
            <a href="replaced-elements-min-height-40.xht">replaced-elements-min-height-40</a></td>
        <td><a href="reference/replaced-elements-min-height-40-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-min-width-40-10.3.2" class="should">
        <td>
            <a href="replaced-elements-min-width-40.xht">replaced-elements-min-width-40</a></td>
        <td><a href="reference/replaced-elements-all-auto-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-min-width-80-10.3.2" class="should">
        <td>
            <a href="replaced-elements-min-width-80.xht">replaced-elements-min-width-80</a></td>
        <td><a href="reference/replaced-elements-min-width-80-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-width-40-10.3.2" class="should">
        <td>
            <a href="replaced-elements-width-40.xht">replaced-elements-width-40</a></td>
        <td><a href="reference/replaced-elements-width-40-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-intrinsic-001-10.3.2" class="svg">
        <td>
            <a href="replaced-intrinsic-001.xht">replaced-intrinsic-001</a></td>
        <td><a href="reference/replaced-intrinsic-001-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Replaced inline elements (using &lt;object&gt;) and SVG intrinsic widths
        </td>
      </tr>
      <tr id="replaced-intrinsic-002-10.3.2" class="svg">
        <td>
            <a href="replaced-intrinsic-002.xht">replaced-intrinsic-002</a></td>
        <td><a href="reference/replaced-intrinsic-002-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Replaced inline elements (using &lt;object&gt;) and SVG intrinsic widths (negative test equivalent of 001)
        </td>
      </tr>
      <tr id="replaced-intrinsic-003-10.3.2" class="image svg">
        <td>
            <a href="replaced-intrinsic-003.xht">replaced-intrinsic-003</a></td>
        <td><a href="reference/replaced-intrinsic-003-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Replaced block elements (using &lt;object&gt;) and SVG intrinsic widths
        </td>
      </tr>
      <tr id="replaced-intrinsic-005-10.3.2" class="svg">
        <td>
            <a href="replaced-intrinsic-005.xht">replaced-intrinsic-005</a></td>
        <td><a href="reference/replaced-intrinsic-005-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Auto Intrinsic Sizes: Intrinsic Width Only and Auto Height
          <ul class="assert">
            <li>A replaced element with an intrinsic height only and a specified width is drawn at the specified width and intrinsic height.</li>
          </ul>
        </td>
      </tr>
      <tr id="replaced-intrinsic-ratio-001-10.3.2" class="may svg">
        <td>
            <a href="replaced-intrinsic-ratio-001.xht">replaced-intrinsic-ratio-001</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Auto Width for Replaced Element with Intrinsic Ratio Only
        </td>
      </tr>
    </tbody>
    <tbody id="s10.3.3">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.3.3">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#blockwidth">10.3.3 Block-level, non-replaced elements in normal flow</a></th></tr>
      <!-- 14 tests -->
      <tr id="block-non-replaced-width-001-10.3.3" class="">
        <td>
            <a href="block-non-replaced-width-001.xht">block-non-replaced-width-001</a></td>
        <td><a href="reference/block-non-replaced-width-001-ref.xht">=</a> </td>
        <td></td>
        <td>Solving for width of block-level non-replaced elements in normal flow
          <ul class="assert">
            <li>The equation; 'margin-left' + 'border-left-width' + 'padding-left' + 'width' + 'padding-right' + 'border-right-width' + 'margin-right' is equal the width of containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-width-002-10.3.3" class="">
        <td>
            <a href="block-non-replaced-width-002.xht">block-non-replaced-width-002</a></td>
        <td></td>
        <td></td>
        <td>Solving for width of block-level non-replaced elements in normal flow when 'width' is 'auto'
          <ul class="assert">
            <li>When width is auto and the combination of border widths, padding widths, scrollbar widths, width, and non 'auto' margin widths are larger than the width of the containing block, the margin widths are treated as 0.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-width-003-10.3.3" class="">
        <td>
            <a href="block-non-replaced-width-003.xht">block-non-replaced-width-003</a></td>
        <td><a href="reference/block-non-replaced-width-001-ref.xht">=</a> </td>
        <td></td>
        <td>Solving over-constrained situation for block-level non-replaced elements in normal flow and direction is left-to-right
          <ul class="assert">
            <li>When direction is left-to-right, the specified value of 'margin-right' is ignored in an over-constrained situation and the 'margin-right' value is calculated so as to make the equality true.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-width-004-10.3.3" class="">
        <td>
            <a href="block-non-replaced-width-004.xht">block-non-replaced-width-004</a></td>
        <td><a href="reference/block-non-replaced-width-004-ref.xht">=</a> </td>
        <td></td>
        <td>Solving over-constrained situation for block-level non-replaced elements in normal flow and direction is right-to-left
          <ul class="assert">
            <li>When direction is right-to-left, the specified value of 'margin-left' is ignored in an over-constrained situation and the 'margin-left' value is calculated so as to make the equality true.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-width-005-10.3.3" class="">
        <td>
            <a href="block-non-replaced-width-005.xht">block-non-replaced-width-005</a></td>
        <td><a href="reference/block-non-replaced-width-005-ref.xht">=</a> </td>
        <td></td>
        <td>Solving width for block-level non-replaced elements in normal flow with single 'auto' value
          <ul class="assert">
            <li>If 'width' is set to 'auto' and no other 'auto' values are set, then the 'width' is the width of the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-width-006-10.3.3" class="">
        <td>
            <a href="block-non-replaced-width-006.xht">block-non-replaced-width-006</a></td>
        <td><a href="reference/block-non-replaced-width-005-ref.xht">=</a> </td>
        <td></td>
        <td>Solving width for block-level non-replaced elements in normal flow with multiple properties with 'auto' values
          <ul class="assert">
            <li>If 'width' is set to 'auto', any other 'auto' values become '0' and the 'width' is computed based on remaining space which includes any negative width.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-width-007-10.3.3" class="ahem">
        <td>
            <a href="block-non-replaced-width-007.xht">block-non-replaced-width-007</a></td>
        <td><a href="reference/block-non-replaced-width-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Box centering with 'margin-left' and 'margin-right' set to auto
          <ul class="assert">
            <li>When 'margin-left' and 'margin-right' are set to 'auto' and the element has a 'width', then the box will be centered within the edges of its containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-width-008-10.3.3" class="">
        <td>
            <a href="block-non-replaced-width-008.xht">block-non-replaced-width-008</a></td>
        <td></td>
        <td></td>
        <td>Solving 'width: auto' of a block-level non-replaced element in normal flow with one other property set to an 'auto' value
          <ul class="assert">
            <li>If 'width' is set to 'auto', any other 'auto' values become '0' and the determination of 'width' proceeds from the following equality: 'margin-left' + 'border-left-width' + 'padding-left' + 'width' + 'padding-right' + 'border-right-width' + 'margin-right' = width of containing block</li>
          </ul>
        </td>
      </tr>
      <tr id="blocks-027-10.3.3" class="">
        <td>
            <a href="blocks-027.xht">blocks-027</a></td>
        <td></td>
        <td></td>
        <td>CSS Block Box Model: overconstrained horizontal box model and minimum widths
        </td>
      </tr>
      <tr id="blocks-028-10.3.3" class="">
        <td>
            <a href="blocks-028.xht">blocks-028</a></td>
        <td></td>
        <td></td>
        <td>CSS Block Box Model: overconstrained horizontal box model and minimum widths
        </td>
      </tr>
      <tr id="box-sizing-001-10.3.3" class="">
        <td>
            <a href="box-sizing-001.xht">box-sizing-001</a></td>
        <td><a href="reference/box-sizing-001-ref.xht">=</a> </td>
        <td></td>
        <td>box-sizing:border-box and CSS2.1 10.3.3
          <ul class="assert">
            <li>When box-sizing is border-box, the content width, rather than the computed value of the width property, is considered when checking whether a block is larger than its containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-002-10.3.3" class="">
        <td>
            <a href="box-sizing-002.xht">box-sizing-002</a></td>
        <td><a href="reference/box-sizing-001-ref.xht">=</a> </td>
        <td></td>
        <td>box-sizing:padding-box and CSS2.1 10.3.3
          <ul class="assert">
            <li>When box-sizing is padding-box, the content width, rather than the computed value of the width property, is considered when checking whether a block is larger than its containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="c412-blockw-000-10.3.3" class="ahem image">
        <td>
            <a href="c412-blockw-000.xht">c412-blockw-000</a></td>
        <td><a href="reference/c412-blockw-000-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Horizontal Formatting
        </td>
      </tr>
      <tr id="c43-rpl-bbx-002-10.3.3" class="ahem image">
        <td>
            <a href="c43-rpl-bbx-002.xht">c43-rpl-bbx-002</a></td>
        <td><a href="reference/c43-rpl-bbx-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Replaced Elements
        </td>
      </tr>
    </tbody>
    <tbody id="s10.3.3.#width-constraints">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.3.4">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.3.4">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#block-replaced-width">10.3.4 Block-level, replaced elements in normal flow</a></th></tr>
      <!-- 9 tests -->
      <tr id="block-replaced-width-001-10.3.4" class="ahem image">
        <td>
            <a href="block-replaced-width-001.xht">block-replaced-width-001</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Block replaced elements and 'auto' specified for 'margin-left', 'margin-right' and intrinsic width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on block replaced elements becomes a used value of '0'. The intrinsic width is also used if 'height' and 'width' are 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-replaced-width-002-10.3.4" class="nonHTML svg">
        <td>
            <a href="block-replaced-width-002.xht">block-replaced-width-002</a></td>
        <td><a href="reference/block-replaced-width-002-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Block replaced elements and 'auto' specified for 'margin-left', 'margin-right' and intrinsic height
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on block replaced elements becomes a used value of '0' if 'width' is set to 'auto'. Then 'width' follows from the resulting equality.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-replaced-width-003-10.3.4" class="nonHTML svg">
        <td>
            <a href="block-replaced-width-003.xht">block-replaced-width-003</a></td>
        <td></td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Block replaced elements and 'auto' specified for 'margin-left', 'margin-right' and 'height'
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on block replaced elements becomes a used value of '0'. The 'width' is (used height) * (intrinsic ratio) if there is no intrinsic width but there is intrinsic height and ratio.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-replaced-width-004-10.3.4" class="nonHTML svg">
        <td>
            <a href="block-replaced-width-004.xht">block-replaced-width-004</a></td>
        <td></td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Block replaced elements and 'auto' specified for 'margin-left', 'margin-right' and no intrinsic height or width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on block replaced elements becomes a used value of '0'. The height and width are adjusted by the constraints for block-level, non-replaced elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-replaced-width-006-10.3.4" class="ahem image">
        <td>
            <a href="block-replaced-width-006.xht">block-replaced-width-006</a></td>
        <td><a href="reference/block-replaced-width-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Block replaced elements and 'auto' specified for 'margin-left', 'margin-right' and percentage intrinsic width
          <ul class="assert">
            <li>Percentage intrinsic widths are evaluated against the containing block's width.</li>
          </ul>
        </td>
      </tr>
      <tr id="c43-center-000-10.3.4" class="ahem image">
        <td>
            <a href="c43-center-000.xht">c43-center-000</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Replaced Elements
        </td>
      </tr>
      <tr id="c43-rpl-bbx-000-10.3.4" class="image">
        <td>
            <a href="c43-rpl-bbx-000.xht">c43-rpl-bbx-000</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Replaced Elements
        </td>
      </tr>
      <tr id="c43-rpl-bbx-001-10.3.4" class="image">
        <td>
            <a href="c43-rpl-bbx-001.xht">c43-rpl-bbx-001</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Replaced Elements
        </td>
      </tr>
      <tr id="replaced-elements-001-10.3.4" class="">
        <td>
            <a href="replaced-elements-001.xht">replaced-elements-001</a></td>
        <td></td>
        <td></td>
        <td>replaced elements - margin
          <ul class="assert">
            <li>Block-level, replaced elements with 'margin-left: auto' and 'margin-right: auto' should be centered within their respective parent block.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.3.5">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.3.5">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#float-width">10.3.5 Floating, non-replaced elements</a></th></tr>
      <!-- 16 tests -->
      <tr id="absolute-non-replaced-width-019-10.3.5" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-019.xht">absolute-non-replaced-width-019</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (left-to-right), float and max-width
          <ul class="assert">
            <li>When direction is left-to-right and 'left' is set to static position and 'width' and 'right' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an floating, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-020-10.3.5" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-020.xht">absolute-non-replaced-width-020</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (left-to-right), float and max-width
          <ul class="assert">
            <li>When direction is left-to-right and 'left' is set to static position and 'width' and 'right' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an floating, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-023-10.3.5" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-023.xht">absolute-non-replaced-width-023</a></td>
        <td><a href="reference/absolute-non-replaced-width-021-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (right-to-left), float and max-width
          <ul class="assert">
            <li>When direction is right-to-left and 'right' is set to static position and 'width' and 'left' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an floating, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-024-10.3.5" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-024.xht">absolute-non-replaced-width-024</a></td>
        <td><a href="reference/absolute-non-replaced-width-021-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (right-to-left), float and max-width
          <ul class="assert">
            <li>When direction is right-to-left and 'right' is set to static position and 'width' and 'left' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an floating, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-001-10.3.5" class="">
        <td>
            <a href="float-non-replaced-width-001.xht">float-non-replaced-width-001</a></td>
        <td><a href="reference/float-non-replaced-width-001-ref.xht">=</a> </td>
        <td></td>
        <td>Floating non-replaced elements with 'auto' left margin
          <ul class="assert">
            <li>If 'margin-left' is computed as 'auto' its used value is '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-002-10.3.5" class="">
        <td>
            <a href="float-non-replaced-width-002.xht">float-non-replaced-width-002</a></td>
        <td><a href="reference/float-non-replaced-width-002-ref.xht">=</a> </td>
        <td></td>
        <td>Floating non-replaced elements with specified left margin
          <ul class="assert">
            <li>If 'margin-left' is not computed as 'auto' its used value is as specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-003-10.3.5" class="">
        <td>
            <a href="float-non-replaced-width-003.xht">float-non-replaced-width-003</a></td>
        <td><a href="reference/float-non-replaced-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Floating non-replaced elements with 'auto' right margin
          <ul class="assert">
            <li>If 'margin-right' is computed as 'auto' its used value is '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-004-10.3.5" class="">
        <td>
            <a href="float-non-replaced-width-004.xht">float-non-replaced-width-004</a></td>
        <td><a href="reference/float-non-replaced-width-002-ref.xht">=</a> </td>
        <td></td>
        <td>Floating non-replaced elements with specified right margin
          <ul class="assert">
            <li>If 'margin-right' is not computed as 'auto' its used value is as specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-005-10.3.5" class="">
        <td>
            <a href="float-non-replaced-width-005.xht">float-non-replaced-width-005</a></td>
        <td><a href="reference/float-non-replaced-width-001-ref.xht">=</a> </td>
        <td></td>
        <td>Floating non-replaced elements with left and right margins as 'auto'
          <ul class="assert">
            <li>If both 'margin-left' and margin-right' are computed as 'auto' their used value is as '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-006-10.3.5" class="ahem">
        <td>
            <a href="float-non-replaced-width-006.xht">float-non-replaced-width-006</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Floating non-replaced elements with 'auto' width
          <ul class="assert">
            <li>If 'width' computes to 'auto' then the used value of 'width' is 'shrink-to-fit'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-007-10.3.5" class="ahem">
        <td>
            <a href="float-non-replaced-width-007.xht">float-non-replaced-width-007</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of floating, non-replaced elements - inline-block and max-width
          <ul class="assert">
            <li>If 'width' of a floating, non-replaced element computes to 'auto' or 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If 'width' of a floating, non-replaced element computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-008-10.3.5" class="ahem">
        <td>
            <a href="float-non-replaced-width-008.xht">float-non-replaced-width-008</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of floating, non-replaced elements - max-width
          <ul class="assert">
            <li>If 'width' of a floating, non-replaced element computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If 'width' of a floating, non-replaced element computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-009-10.3.5" class="ahem">
        <td>
            <a href="float-non-replaced-width-009.xht">float-non-replaced-width-009</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of floating, non-replaced elements - max-width
          <ul class="assert">
            <li>If 'width' of a floating, non-replaced element computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If 'width' of a floating, non-replaced element computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-010-10.3.5" class="ahem">
        <td>
            <a href="float-non-replaced-width-010.xht">float-non-replaced-width-010</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of floating, non-replaced elements - width
          <ul class="assert">
            <li>If 'width' of a floating, non-replaced element computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' is specified with absolute length, then the computed value is the specified value. If 'width' of a floating, non-replaced element computes to 'auto' but its own child uses specified absolute length, then such specified absolute length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-011-10.3.5" class="ahem">
        <td>
            <a href="float-non-replaced-width-011.xht">float-non-replaced-width-011</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of floating, non-replaced elements - inline-block and max-width
          <ul class="assert">
            <li>If 'width' of a floating, non-replaced element computes to 'auto' or 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If 'width' of a floating, non-replaced element computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-012-10.3.5" class="ahem">
        <td>
            <a href="float-non-replaced-width-012.xht">float-non-replaced-width-012</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of floating, non-replaced elements - max-width
          <ul class="assert">
            <li>If 'width' of a floating non-replaced element computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation and such calculated width can be furthermore constrained, reduced by a max-width declaration.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.3.5.#shrink-to-fit-float">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.3.6">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.3.6">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#float-replaced-width">10.3.6 Floating, replaced elements</a></th></tr>
      <!-- 10 tests -->
      <tr id="float-replaced-width-001-10.3.6" class="image">
        <td>
            <a href="float-replaced-width-001.xht">float-replaced-width-001</a></td>
        <td><a href="reference/float-non-replaced-width-001-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Floated replaced elements with 'auto' left margin
          <ul class="assert">
            <li>If 'margin-left' is computed as 'auto' its used value is '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-replaced-width-002-10.3.6" class="image">
        <td>
            <a href="float-replaced-width-002.xht">float-replaced-width-002</a></td>
        <td><a href="reference/float-non-replaced-width-002-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Floated replaced elements with specified left margin
          <ul class="assert">
            <li>If 'margin-left' is not computed as 'auto' its used value is as specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-replaced-width-003-10.3.6" class="image">
        <td>
            <a href="float-replaced-width-003.xht">float-replaced-width-003</a></td>
        <td><a href="reference/float-non-replaced-width-003-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Floated replaced elements with 'auto' right margin
          <ul class="assert">
            <li>If 'margin-right' is computed as 'auto' its used value is '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-replaced-width-004-10.3.6" class="image">
        <td>
            <a href="float-replaced-width-004.xht">float-replaced-width-004</a></td>
        <td><a href="reference/float-non-replaced-width-002-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Floated replaced elements with specified right margin
          <ul class="assert">
            <li>If 'margin-right' is not computed as 'auto' its used value is as specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-replaced-width-005-10.3.6" class="image">
        <td>
            <a href="float-replaced-width-005.xht">float-replaced-width-005</a></td>
        <td><a href="reference/float-non-replaced-width-001-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Floated replaced elements with left and right margins as 'auto'
          <ul class="assert">
            <li>If both 'margin-left' and margin-right' are computed as 'auto' their used value is as '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-replaced-width-006-10.3.6" class="image">
        <td>
            <a href="float-replaced-width-006.xht">float-replaced-width-006</a></td>
        <td><a href="reference/float-replaced-width-006-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Floated replaced elements and 'auto' specified for 'margin-left', 'margin-right' and intrinsic width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on floated replaced elements becomes a used value of '0'. The intrinsic width is also used if 'height' and 'width' are 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-replaced-width-007-10.3.6" class="nonHTML svg">
        <td>
            <a href="float-replaced-width-007.xht">float-replaced-width-007</a></td>
        <td><a href="reference/float-replaced-width-007-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Floated replaced elements and 'auto' specified for 'margin-left', 'margin-right' and intrinsic height
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on floated replaced elements becomes a used value of '0'. The 'width' is (used height) * (intrinsic ratio) if there is no intrinsic width but there is intrinsic height and ratio.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-replaced-width-008-10.3.6" class="nonHTML svg">
        <td>
            <a href="float-replaced-width-008.xht">float-replaced-width-008</a></td>
        <td><a href="reference/float-replaced-width-008-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Floated replaced elements and 'auto' specified for 'margin-left', 'margin-right' and 'height'
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on floated replaced elements becomes a used value of '0'. The 'width' is (used height) * (intrinsic ratio) if there is no intrinsic width but there is intrinsic height and ratio.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-replaced-width-009-10.3.6" class="nonHTML svg">
        <td>
            <a href="float-replaced-width-009.xht">float-replaced-width-009</a></td>
        <td><a href="reference/float-replaced-width-009-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Floated replaced elements and 'auto' specified for 'margin-left', 'margin-right' and no intrinsic height or width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on floated replaced elements becomes a used value of '0'. The height and width are adjusted by the constraints for block-level, non-replaced elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-replaced-width-011-10.3.6" class="image">
        <td>
            <a href="float-replaced-width-011.xht">float-replaced-width-011</a></td>
        <td><a href="reference/float-replaced-width-011-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Floated replaced elements and 'auto' specified for 'margin-left', 'margin-right' and percentage intrinsic width
          <ul class="assert">
            <li>Percentage intrinsic widths are evaluated against the containing block's width.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.3.7">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.3.7">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#abs-non-replaced-width">10.3.7 Absolutely positioned, non-replaced elements</a></th></tr>
      <!-- 141 tests -->
      <tr id="abs-pos-non-replaced-vlr-003-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-003.xht">abs-pos-non-replaced-vlr-003</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top', 'height' and 'bottom' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top', 'height' and 'bottom' are 'auto', then set 'top' to the static position, then the height is based on the content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-005-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-005.xht">abs-pos-non-replaced-vlr-005</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left', 'width' and 'right' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left', 'width' and 'right' are 'auto', then set 'left' to the static position, the width becomes shrink-to-fit and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-007-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-007.xht">abs-pos-non-replaced-vlr-007</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top', 'height' and 'bottom' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top', 'height' and 'bottom' are 'auto', then set 'top' to the static position, then the height is based on the content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-009-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-009.xht">abs-pos-non-replaced-vlr-009</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top', 'height' and 'bottom' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top', 'height' and 'bottom' are 'auto', then set 'bottom' to the static position, the height is based on the content and then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-011-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-011.xht">abs-pos-non-replaced-vlr-011</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left', 'width' and 'right' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left', 'width' and 'right' are 'auto', then set 'right' to the static position, the width becomes shrink-to-fit and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-013-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-013.xht">abs-pos-non-replaced-vlr-013</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-013-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top', 'height' and 'bottom' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top', 'height' and 'bottom' are 'auto', then set 'bottom' to the static position, the height is based on the content and then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-015-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-015.xht">abs-pos-non-replaced-vlr-015</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top', 'height' are 'auto' and bottom is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top', 'height' are 'auto' and bottom is not 'auto', then the height is based on the content and then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-017-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-017.xht">abs-pos-non-replaced-vlr-017</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' and 'width' are 'auto' and 'right' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' and 'width' are 'auto' and 'right' is not 'auto', then the width becomes shrink-to-fit and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-019-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-019.xht">abs-pos-non-replaced-vlr-019</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-013-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top' and 'height' are 'auto' and 'bottom' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top' and 'height' are 'auto' and 'bottom' is not 'auto', then the height is based on the content and then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-021-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-021.xht">abs-pos-non-replaced-vlr-021</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' and 'height' are 'auto and 'bottom' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top' and 'height' are 'auto' and 'bottom' is not 'auto', then the height is based on the content and then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-023-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-023.xht">abs-pos-non-replaced-vlr-023</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' and 'width' are 'auto' and 'right' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' and 'width' are 'auto' and 'right' is not 'auto', then the width becomes shrink-to-fit and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-025-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-025.xht">abs-pos-non-replaced-vlr-025</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-013-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' and 'height' are 'auto' and 'bottom' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top', 'height' are 'auto' and bottom is not 'auto', then the height is based on the content and then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-029-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-029.xht">abs-pos-non-replaced-vlr-029</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' and 'right' are 'auto' and 'width' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' and 'right' are 'auto' and 'width' is not 'auto', then set 'left' to the static position and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-031-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-031.xht">abs-pos-non-replaced-vlr-031</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto', then set 'top' to static position and solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-033-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-033.xht">abs-pos-non-replaced-vlr-033</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' and 'bottom' are 'auto and 'height' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto', then set 'top' to static position and solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-035-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-035.xht">abs-pos-non-replaced-vlr-035</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' and 'right' are 'auto' and 'width' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' and 'right' are 'auto' and 'width' is not 'auto', then set 'right' to the static position and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-037-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-037.xht">abs-pos-non-replaced-vlr-037</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-013-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto', then set 'top' to static position and solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-039-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-039.xht">abs-pos-non-replaced-vlr-039</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto', then the height is based on the content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-041-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-041.xht">abs-pos-non-replaced-vlr-041</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'width' and 'right' are 'auto' and 'left' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'width' and 'right' are 'auto' and 'left' is not 'auto', then the width becomes shrink-to-fit and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-043-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-043.xht">abs-pos-non-replaced-vlr-043</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-013-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto', then the height is based on the content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-045-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-045.xht">abs-pos-non-replaced-vlr-045</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto', then the height is based on the content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-047-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-047.xht">abs-pos-non-replaced-vlr-047</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'width' and 'right' are 'auto' and 'left' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' and 'right' are 'auto' and 'left' is not 'auto', then the width becomes shrink-to-fit and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-049-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-049.xht">abs-pos-non-replaced-vlr-049</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-013-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto', then the height is based on the content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-051-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-051.xht">abs-pos-non-replaced-vlr-051</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top' is 'auto' and 'height' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top' is 'auto' and 'height' and 'bottom' are not 'auto', then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-053-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-053.xht">abs-pos-non-replaced-vlr-053</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' is 'auto', 'width' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' is 'auto', 'width' and 'right' are not 'auto', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-055-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-055.xht">abs-pos-non-replaced-vlr-055</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top' is 'auto' and 'height' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top' is 'auto' and 'height' and 'bottom' are not 'auto', then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-057-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-057.xht">abs-pos-non-replaced-vlr-057</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' is 'auto' and 'height' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top' is 'auto' and 'height' and 'bottom' are not 'auto', then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-059-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-059.xht">abs-pos-non-replaced-vlr-059</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' is 'auto', 'width' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' is 'auto', 'width' and 'right' are not 'auto', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-061-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-061.xht">abs-pos-non-replaced-vlr-061</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' is 'auto' and 'height' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top' is 'auto' and 'height' and 'bottom' are not 'auto', then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-063-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-063.xht">abs-pos-non-replaced-vlr-063</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'height' is 'auto' and 'top' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'height' is 'auto' and 'top' and 'bottom' are not 'auto', then solve for 'height'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-065-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-065.xht">abs-pos-non-replaced-vlr-065</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'width' is 'auto', 'left' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left', 'width' is 'auto', 'left' and 'right' are not 'auto', then solve for 'width'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-067-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-067.xht">abs-pos-non-replaced-vlr-067</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'height' is 'auto' and 'top' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'height' is 'auto' and 'top' and 'bottom' are not 'auto', then solve for 'height'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-069-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-069.xht">abs-pos-non-replaced-vlr-069</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'height' is 'auto' and 'top' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'height' is 'auto' and 'top' and 'bottom' are not 'auto', then solve for 'height'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-071-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-071.xht">abs-pos-non-replaced-vlr-071</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'width' is 'auto', 'left' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' is 'auto', 'left' and 'right' are not 'auto', then solve for 'width'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-073-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-073.xht">abs-pos-non-replaced-vlr-073</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'height' is 'auto' and 'top' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'height' is 'auto' and 'top' and 'bottom' are not 'auto', then solve for 'height'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-075-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-075.xht">abs-pos-non-replaced-vlr-075</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'bottom' is 'auto' and 'top' and 'height' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'bottom' is 'auto' and 'top' and 'height' are not 'auto', then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-077-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-077.xht">abs-pos-non-replaced-vlr-077</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'right' is 'auto', 'left' and 'width' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'right' is 'auto', 'left' and 'width' are not 'auto', then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-079-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-079.xht">abs-pos-non-replaced-vlr-079</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-013-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'bottom' is 'auto' and 'top' and 'height' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'bottom' is 'auto' and 'top' and 'height' are not 'auto', then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-081-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-081.xht">abs-pos-non-replaced-vlr-081</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'bottom' is 'auto' and 'top' and 'height' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'bottom' is 'auto' and 'top' and 'height' are not 'auto', then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-083-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-083.xht">abs-pos-non-replaced-vlr-083</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'right' is 'auto', 'left' and 'width' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'right' is 'auto', 'left' and 'width' are not 'auto', then solve for 'right'</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-085-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-085.xht">abs-pos-non-replaced-vlr-085</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-013-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'bottom' is 'auto' and 'top' and 'height' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'bottom' is 'auto' and 'top' and 'height' are not 'auto', then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-087-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-087.xht">abs-pos-non-replaced-vlr-087</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top', 'height' and 'bottom' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top', 'height' and 'bottom' are not 'auto' and if the values are overconstrained, then ignore 'bottom' and solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-089-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-089.xht">abs-pos-non-replaced-vlr-089</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left', 'width' and 'right' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left', 'width' and 'right' are not 'auto' (overconstrained), then ignore 'right' and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-091-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-091.xht">abs-pos-non-replaced-vlr-091</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top', 'height' and 'bottom' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top', 'height' and 'bottom' are not 'auto' and if the values are overconstrained, then ignore 'bottom' and solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-093-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-093.xht">abs-pos-non-replaced-vlr-093</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top', 'height' and 'bottom' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top', 'height' and 'bottom' are not 'auto' and if the values are overconstrained, then ignore 'top' and solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-095-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-095.xht">abs-pos-non-replaced-vlr-095</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left', 'width' and 'right' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left', 'width' and 'right' are not 'auto' and if the values are overconstrained, then ignore 'left' and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-097-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-097.xht">abs-pos-non-replaced-vlr-097</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-013-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top', 'height' and 'bottom' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top', 'height' and 'bottom' are not 'auto' and if the values are overconstrained, then ignore 'top' and solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-002-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-002.xht">abs-pos-non-replaced-vrl-002</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top', 'height' and 'bottom' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top', 'height' and 'bottom' are 'auto', then set 'top' to the static position, the height is based on the content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-004-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-004.xht">abs-pos-non-replaced-vrl-004</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left', 'width' and 'right' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left', 'width' and 'right' are 'auto', then set 'left' to the static position, the width becomes shrink-to-fit and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-006-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-006.xht">abs-pos-non-replaced-vrl-006</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top', 'height' and 'bottom' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top', 'height' and 'bottom' are 'auto', then set 'top' to the static position, the height is based on the content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-008-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-008.xht">abs-pos-non-replaced-vrl-008</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top', 'height' and 'bottom' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top', 'height' and 'bottom' are 'auto', then set 'bottom' to the static position, the height is based on the content and then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-010-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-010.xht">abs-pos-non-replaced-vrl-010</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left', 'width' and 'right' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left', 'width' and 'right' are 'auto', then set 'right' to the static position, the width becomes shrink-to-fit and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-012-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-012.xht">abs-pos-non-replaced-vrl-012</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-012-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top', 'height' and 'bottom' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top', 'height' and 'bottom' are 'auto', then set 'bottom' to the static position, the height is based on the content and then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-014-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-014.xht">abs-pos-non-replaced-vrl-014</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top', 'height' are 'auto' and bottom is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top', 'height' are 'auto' and 'bottom' is not 'auto', then the height is based on the content and then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-016-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-016.xht">abs-pos-non-replaced-vrl-016</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' and 'width' are 'auto' and 'right' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' and 'width' are 'auto' and 'right' is not 'auto', then the width becomes shrink-to-fit and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-018-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-018.xht">abs-pos-non-replaced-vrl-018</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-012-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top' and 'height' are 'auto' and 'bottom' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top' and 'height' are 'auto' and 'bottom' is not 'auto', then the height is based on the content and then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-020-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-020.xht">abs-pos-non-replaced-vrl-020</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' and 'height' are 'auto and 'bottom' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top' and 'height' are 'auto' and 'bottom' is not 'auto', then the height is based on the content and then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-022-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-022.xht">abs-pos-non-replaced-vrl-022</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' and 'width' are 'auto' and 'right' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' and 'width' are 'auto' and 'right' is not 'auto', then the width becomes shrink-to-fit and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-024-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-024.xht">abs-pos-non-replaced-vrl-024</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-012-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' and 'height' are 'auto' and 'bottom' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top' and 'height' are 'auto' and 'bottom' is not 'auto', then the height is based on the content and then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-026-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-026.xht">abs-pos-non-replaced-vrl-026</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto', then set 'top' to static position and solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-028-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-028.xht">abs-pos-non-replaced-vrl-028</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' and 'right' are 'auto' and 'width' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' and 'right' are 'auto' and 'width' is not 'auto', then set 'left' to the static position and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-030-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-030.xht">abs-pos-non-replaced-vrl-030</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto', then set 'top' to static position and solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-032-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-032.xht">abs-pos-non-replaced-vrl-032</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' and 'bottom' are 'auto and 'height' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto', then set 'top' to static position and solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-034-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-034.xht">abs-pos-non-replaced-vrl-034</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' and 'right' are 'auto' and 'width' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' and 'right' are 'auto' and 'width' is not 'auto', then set 'right' to the static position and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-036-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-036.xht">abs-pos-non-replaced-vrl-036</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-012-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto', then set 'top' to static position and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-038-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-038.xht">abs-pos-non-replaced-vrl-038</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto', then the height is based on the content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-040-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-040.xht">abs-pos-non-replaced-vrl-040</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'width' and 'right' are 'auto' and 'left' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'width' and 'right' are 'auto' and 'left' is not 'auto', then the width becomes shrink-to-fit and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-042-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-042.xht">abs-pos-non-replaced-vrl-042</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-012-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto', then the height is based on the content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-044-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-044.xht">abs-pos-non-replaced-vrl-044</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top', 'height' and 'bottom' are 'auto' and 'top' is not 'auto', then the height is based on the content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-046-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-046.xht">abs-pos-non-replaced-vrl-046</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'width' and 'right' are 'auto' and 'left' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' and 'right' are 'auto' and 'left' is not 'auto', then the width becomes shrink-to-fit and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-048-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-048.xht">abs-pos-non-replaced-vrl-048</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-012-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto', then the height is based on the content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-050-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-050.xht">abs-pos-non-replaced-vrl-050</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top' is 'auto' and 'height' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top' is 'auto' and 'height' and 'bottom' are not 'auto', then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-052-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-052.xht">abs-pos-non-replaced-vrl-052</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' is 'auto', 'width' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' is 'auto', 'width' and 'right' are not 'auto', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-054-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-054.xht">abs-pos-non-replaced-vrl-054</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top' is 'auto' and 'height' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top' is 'auto' and 'height' and 'bottom' are not 'auto', then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-056-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-056.xht">abs-pos-non-replaced-vrl-056</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' is 'auto' and 'height' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top' is 'auto' and 'height' and 'bottom' are not 'auto', then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-058-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-058.xht">abs-pos-non-replaced-vrl-058</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' is 'auto', 'width' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' is 'auto', 'width' and 'right' are not 'auto', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-060-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-060.xht">abs-pos-non-replaced-vrl-060</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' is 'auto' and 'height' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top' is 'auto' and 'height' and 'bottom' are not 'auto', then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-062-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-062.xht">abs-pos-non-replaced-vrl-062</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'height' is 'auto' and 'top' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'height' is 'auto' and 'top' and 'bottom' are not 'auto', then solve for 'height'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-064-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-064.xht">abs-pos-non-replaced-vrl-064</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'width' is 'auto', 'left' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'width' is 'auto', 'left' and 'right' are not 'auto', then solve for 'width'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-066-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-066.xht">abs-pos-non-replaced-vrl-066</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'height' is 'auto' and 'top' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'height' is 'auto' and 'top' and 'bottom' are not 'auto', then solve for 'height'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-068-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-068.xht">abs-pos-non-replaced-vrl-068</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'height' is 'auto' and 'top' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'height' is 'auto' and 'top' and 'bottom' are not 'auto', then solve for 'height'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-070-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-070.xht">abs-pos-non-replaced-vrl-070</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'width' is 'auto', 'left' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' is 'auto', 'left' and 'right' are not 'auto', then solve for 'width'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-072-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-072.xht">abs-pos-non-replaced-vrl-072</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'height' is 'auto' and 'top' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'height' is 'auto' and 'top' and 'bottom' are not 'auto', then solve for 'height'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-074-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-074.xht">abs-pos-non-replaced-vrl-074</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'bottom' is 'auto' and 'top' and 'height' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'bottom' is 'auto' and 'top' and 'height' are not 'auto', then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-076-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-076.xht">abs-pos-non-replaced-vrl-076</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'right' is 'auto', 'left' and 'width' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'right' is 'auto', 'left' and 'width' are not 'auto', then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-078-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-078.xht">abs-pos-non-replaced-vrl-078</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-012-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'bottom' is 'auto' and 'top' and 'height' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'bottom' is 'auto' and 'top' and 'height' are not 'auto', then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-080-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-080.xht">abs-pos-non-replaced-vrl-080</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'bottom' is 'auto' and 'top' and 'height' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'bottom' is 'auto' and 'top' and 'height' are not 'auto', then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-082-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-082.xht">abs-pos-non-replaced-vrl-082</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'right' is 'auto', 'left' and 'width' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'right' is 'auto', 'left' and 'width' are not 'auto', then solve for 'right'</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-084-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-084.xht">abs-pos-non-replaced-vrl-084</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-012-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'bottom' is 'auto' and 'top' and 'height' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'bottom' is 'auto' and 'top' and 'height' are not 'auto', then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-086-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-086.xht">abs-pos-non-replaced-vrl-086</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top', 'height' and 'bottom' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top', 'height' and 'bottom' are not 'auto' and if the values are overconstrained, then ignore 'bottom' and solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-088-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-088.xht">abs-pos-non-replaced-vrl-088</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left', 'width' and 'right' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left', 'width' and 'right' are not 'auto' (overconstrained), then ignore 'right' and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-090-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-090.xht">abs-pos-non-replaced-vrl-090</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top', 'height' and 'bottom' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top', 'height' and 'bottom' are not 'auto' and if the values are overconstrained, then ignore 'bottom' and solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-092-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-092.xht">abs-pos-non-replaced-vrl-092</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top', 'height' and 'bottom' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top', 'height' and 'bottom' are not 'auto' and if the values are overconstrained, then ignore 'top' and solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-094-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-094.xht">abs-pos-non-replaced-vrl-094</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left', 'width' and 'right' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left', 'width' and 'right' are not 'auto' and if the values are overconstrained, then ignore 'left' and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-096-10.3.7" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-096.xht">abs-pos-non-replaced-vrl-096</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-012-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top', 'height' and 'bottom' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top', 'height' and 'bottom' are not 'auto' and if the values are overconstrained, then ignore 'top' and solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-001-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-001.xht">absolute-non-replaced-width-001</a></td>
        <td><a href="reference/absolute-non-replaced-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Solving for 'right' on absolutely positioned non-replaced elements
          <ul class="assert">
            <li>When direction is left-to-right and 'left', 'width' and 'right' are 'auto', the width becomes shrink-to-fit and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-002-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-002.xht">absolute-non-replaced-width-002</a></td>
        <td><a href="reference/absolute-non-replaced-width-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Solving for 'left' on absolutely positioned non-replaced elements
          <ul class="assert">
            <li>When direction is right-to-left and 'left', 'width' and 'right' are 'auto', then set 'right' to the static position, then width becomes shrink-to-fit and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-003-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-003.xht">absolute-non-replaced-width-003</a></td>
        <td><a href="reference/absolute-non-replaced-width-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Absolutely positioned non-replaced elements with 'margin-left' and 'margin-right' set to 'auto'
          <ul class="assert">
            <li>When 'left', 'width' and 'right' are not 'auto', set 'margin-left' and 'margin-right' to equal values.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-004-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-004.xht">absolute-non-replaced-width-004</a></td>
        <td><a href="reference/absolute-non-replaced-width-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Absolutely positioned non-replaced elements when both 'margin-left' and 'margin-right' are set to 'auto' and direction is left-to-right
          <ul class="assert">
            <li>When direction is 'ltr' and 'left', 'width' and 'right' are not 'auto', solve for 'margin-right' and 'margin-left' to equal values. If this would make 'margin-left' and 'margin-right' negative, then set 'margin-left' to zero and solve for 'margin-right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-005-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-005.xht">absolute-non-replaced-width-005</a></td>
        <td><a href="reference/absolute-non-replaced-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Absolutely positioned non-replaced elements when both 'margin-left' and 'margin-right' are set to 'auto' and direction is right-to-left
          <ul class="assert">
            <li>When direction is 'rtl' and 'left', 'width' and 'right' are not 'auto', solve for 'margin-right' and 'margin-left' to equal values. If this would make 'margin-left' and 'margin-right' negative, then set 'margin-right' to zero and solve for 'margin-left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-006-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-006.xht">absolute-non-replaced-width-006</a></td>
        <td><a href="reference/absolute-non-replaced-width-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Absolutely positioned non-replaced element when only 'margin-right' is 'auto' and direction is left-to-right
          <ul class="assert">
            <li>When direction is left-to-right and 'left', 'width', 'margin-left' and 'right' are not 'auto', solve for 'margin-right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-007-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-007.xht">absolute-non-replaced-width-007</a></td>
        <td><a href="reference/absolute-non-replaced-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Absolutely positioned non-replaced element when only 'margin-left' is 'auto' and direction is right-to-left
          <ul class="assert">
            <li>When direction is right-to-left and 'left', 'width', 'margin-right' and 'right' are not 'auto', solve for 'margin-left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-008-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-008.xht">absolute-non-replaced-width-008</a></td>
        <td><a href="reference/absolute-non-replaced-width-008-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Absolutely positioned non-replaced elements with left, width, right and margin-right not auto
          <ul class="assert">
            <li>If 'left', 'width', 'right' and 'margin-right' are all not 'auto' and 'margin-left' is 'auto', then solve the equation for 'margin-left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-009-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-009.xht">absolute-non-replaced-width-009</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Absolutely positioned non-replaced elements with left, width, right and margin-left not auto
          <ul class="assert">
            <li>If 'left', 'width', 'right' and 'margin-left' are all not 'auto' and 'margin-right' is 'auto', then solve the equation for 'margin-right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-010-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-010.xht">absolute-non-replaced-width-010</a></td>
        <td><a href="reference/absolute-non-replaced-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Solved for 'left' when absolutely positioned non-replaced elements has 'left' and 'width' as 'auto'
          <ul class="assert">
            <li>When 'left' and 'width' are 'auto' and 'right' is not 'auto', then the width is shrink-to-fit and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-011-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-011.xht">absolute-non-replaced-width-011</a></td>
        <td><a href="reference/absolute-non-replaced-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Absolutely positioned non-replaced elements when 'left' and 'right' are 'auto', 'width' is not 'auto' and 'direction' is left-to-right
          <ul class="assert">
            <li>When 'direction' is left-to-right and 'left' and 'right' are 'auto' and 'width' is not 'auto', solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-012-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-012.xht">absolute-non-replaced-width-012</a></td>
        <td><a href="reference/absolute-non-replaced-width-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Absolutely positioned non-replaced elements when 'left' and 'right' are 'auto', 'width' is not 'auto' and 'direction' is right-to-left
          <ul class="assert">
            <li>When 'direction' is right-to-left and 'left' and 'right' are 'auto' and 'width' is not 'auto', solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-013-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-013.xht">absolute-non-replaced-width-013</a></td>
        <td><a href="reference/absolute-non-replaced-width-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Solved for 'right' when absolutely positioned non-replaced elements has 'right' and 'width' as 'auto'
          <ul class="assert">
            <li>When 'right' and 'width' are 'auto' and 'left' is not 'auto', then the width is shrink-to-fit and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-014-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-014.xht">absolute-non-replaced-width-014</a></td>
        <td><a href="reference/absolute-non-replaced-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Solved for 'left' when absolutely positioned non-replaced elements has 'right' and 'width' not set to 'auto'
          <ul class="assert">
            <li>When 'left' is 'auto' and 'width' and 'right' are not 'auto', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-015-10.3.7" class="">
        <td>
            <a href="absolute-non-replaced-width-015.xht">absolute-non-replaced-width-015</a></td>
        <td><a href="reference/absolute-non-replaced-width-015-ref.xht">=</a> </td>
        <td></td>
        <td>Solved for 'width' when absolutely positioned non-replaced elements has 'left' and 'right' not set to 'auto'
          <ul class="assert">
            <li>When 'width' is 'auto' and 'left' and 'right' are not 'auto' element solves for 'width'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-016-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-016.xht">absolute-non-replaced-width-016</a></td>
        <td><a href="reference/absolute-non-replaced-width-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Solved for 'right' when absolutely positioned non-replaced elements has 'left' and 'width' not set to 'auto'
          <ul class="assert">
            <li>When 'right' is 'auto' and 'width' and 'left' are not 'auto', then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-017-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-017.xht">absolute-non-replaced-width-017</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (left-to-right), inline-block and max-width
          <ul class="assert">
            <li>When direction is left-to-right and 'left' is set to static position and 'width' and 'right' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-018-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-018.xht">absolute-non-replaced-width-018</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (left-to-right), inline-block and max-width
          <ul class="assert">
            <li>When direction is left-to-right and 'left' is set to static position and 'width' and 'right' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to shrink-to-fit width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-019-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-019.xht">absolute-non-replaced-width-019</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (left-to-right), float and max-width
          <ul class="assert">
            <li>When direction is left-to-right and 'left' is set to static position and 'width' and 'right' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an floating, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-020-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-020.xht">absolute-non-replaced-width-020</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (left-to-right), float and max-width
          <ul class="assert">
            <li>When direction is left-to-right and 'left' is set to static position and 'width' and 'right' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an floating, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-021-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-021.xht">absolute-non-replaced-width-021</a></td>
        <td><a href="reference/absolute-non-replaced-width-021-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (right-to-left), inline-block and max-width
          <ul class="assert">
            <li>When direction is right-to-left and 'right' is set to static position and 'width' and 'left' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-022-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-022.xht">absolute-non-replaced-width-022</a></td>
        <td><a href="reference/absolute-non-replaced-width-021-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (right-to-left), inline-block and max-width
          <ul class="assert">
            <li>When direction is right-to-left and 'right' is set to static position and 'width' and 'left' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-023-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-023.xht">absolute-non-replaced-width-023</a></td>
        <td><a href="reference/absolute-non-replaced-width-021-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (right-to-left), float and max-width
          <ul class="assert">
            <li>When direction is right-to-left and 'right' is set to static position and 'width' and 'left' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an floating, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-024-10.3.7" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-024.xht">absolute-non-replaced-width-024</a></td>
        <td><a href="reference/absolute-non-replaced-width-021-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (right-to-left), float and max-width
          <ul class="assert">
            <li>When direction is right-to-left and 'right' is set to static position and 'width' and 'left' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an floating, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-025-10.3.7" class="">
        <td>
            <a href="absolute-non-replaced-width-025.xht">absolute-non-replaced-width-025</a></td>
        <td><a href="reference/absolute-non-replaced-width-025-ref.xht">=</a> </td>
        <td></td>
        <td>CSS Test: absolutely positioned non-replaced element with 'left' and 'right' not set to 'auto' and 'width' set to 'auto' - max-width, horizontal margins
          <ul class="assert">
            <li>When 'width' is computed according to the equation and rules of section 10.3.7 and when such computed 'width' is greater than 'max-width', then the equation and rules of section 10.3.7 are applied again but this time assuming the computed 'max-width' value. Then all three properties ('width', 'left' and 'right') are not 'auto' and both 'margin-left' and 'margin-right' are 'auto': in which case, the horizontal margins get equal values of available, remaining horizontal space.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-026-10.3.7" class="">
        <td>
            <a href="absolute-non-replaced-width-026.xht">absolute-non-replaced-width-026</a></td>
        <td><a href="reference/absolute-non-replaced-width-026-ref.xht">=</a> </td>
        <td></td>
        <td>absolutely positioned non-replaced element with 'left' and 'right' not set to 'auto' and 'width' set to 'auto' - max-width, horizontal margins
          <ul class="assert">
            <li>When 'width' is computed according to the equation and rules of section 10.3.7 and when such computed 'width' is greater than 'max-width', then the equation and rules of section 10.3.7 are applied again but this time assuming the computed 'max-width' value. Then all three properties ('width', 'left' and 'right') are not 'auto' and 'margin-left' is 'auto': in which case, the 'margin-left' get all of available, remaining horizontal space.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-027-10.3.7" class="">
        <td>
            <a href="absolute-non-replaced-width-027.xht">absolute-non-replaced-width-027</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>absolutely positioned non-replaced element - 'auto' margins, max-width and max-height
          <ul class="assert">
            <li>If 'width' is auto and 'left' and 'right' are not 'auto', then set 'auto' values for 'margin-left' and 'margin-right' to 0 and then solve for 'width'; the tentative width may be later constrained by max-width in which case, the algorithm must be re-entered. If 'height' is 'auto' and 'top' and 'bottom' are not 'auto', then 'auto' values for 'margin-top' and 'margin-bottom' are set to 0 and solve for 'height'; the tentative height may be later constrained by max-height in which case, the algorithm must be re-entered.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-008-10.3.7" class="">
        <td>
            <a href="abspos-008.xht">abspos-008</a></td>
        <td><a href="reference/abspos-008-ref.xht">=</a> </td>
        <td></td>
        <td>Shrink wrapping of absolute positioned blocks
        </td>
      </tr>
      <tr id="abspos-010-10.3.7" class="">
        <td>
            <a href="abspos-010.xht">abspos-010</a></td>
        <td></td>
        <td></td>
        <td>Absolutely positioned tables must shrink wrap
        </td>
      </tr>
      <tr id="abspos-023-10.3.7" class="may">
        <td>
            <a href="abspos-023.xht">abspos-023</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>left:auto for fixed-pos blocks inside abs-pos blocks
        </td>
      </tr>
      <tr id="abspos-024-10.3.7" class="">
        <td>
            <a href="abspos-024.xht">abspos-024</a></td>
        <td><a href="reference/abspos-024-ref.xht">=</a> </td>
        <td></td>
        <td>Static position in rtl context
        </td>
      </tr>
      <tr id="abspos-025-10.3.7" class="image">
        <td>
            <a href="abspos-025.xht">abspos-025</a></td>
        <td><a href="reference/abspos-025-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Positioning replaced elements with four offsets
        </td>
      </tr>
      <tr id="abspos-026-10.3.7" class="">
        <td>
            <a href="abspos-026.xht">abspos-026</a></td>
        <td><a href="reference/abspos-025-ref.xht">=</a> </td>
        <td></td>
        <td>Positioning replaced elements with four offsets
        </td>
      </tr>
      <tr id="abspos-non-replaced-width-margin-000-10.3.7" class="">
        <td>
            <a href="abspos-non-replaced-width-margin-000.xht">abspos-non-replaced-width-margin-000</a></td>
        <td><a href="reference/abspos-non-replaced-width-margin-000-ref.xht">=</a> </td>
        <td></td>
        <td>CSS2.1:10.3.7 Comprehensive - Absolutely Positioned Non-Replaced Horizontal Size+Position Calculations
          <ul class="assert">
            <li>The values of 'left', 'right', 'margin-left', 'margin-right', and 'width' are calculated correctly for absolutely positioned non-replaced elements according to CSS2.1 Section 10.3.7.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-width-001-10.3.7" class="">
        <td>
            <a href="abspos-width-001.xht">abspos-width-001</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Absolute Positioning: width:auto with table width:100%
        </td>
      </tr>
      <tr id="abspos-width-002-10.3.7" class="">
        <td>
            <a href="abspos-width-002.xht">abspos-width-002</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Absolute Positioning: width:auto with block width:100%
        </td>
      </tr>
      <tr id="abspos-width-003-10.3.7" class="">
        <td>
            <a href="abspos-width-003.xht">abspos-width-003</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Absolute Positioning: width:auto with block width:50%
        </td>
      </tr>
      <tr id="abspos-width-004-10.3.7" class="">
        <td>
            <a href="abspos-width-004.xht">abspos-width-004</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Absolute Positioning: width: 2em with block width:100%
        </td>
      </tr>
      <tr id="abspos-width-005-10.3.7" class="">
        <td>
            <a href="abspos-width-005.xht">abspos-width-005</a></td>
        <td><a href="reference/abspos-width-005-ref.xht">=</a> </td>
        <td></td>
        <td>Absolute Positioning: max-width
        </td>
      </tr>
      <tr id="bidi-position-fixed-001-10.3.7" class="">
        <td>
            <a href="bidi-position-fixed-001.xht">bidi-position-fixed-001</a></td>
        <td></td>
        <td></td>
        <td>position:fixed in rtl context
          <ul class="assert">
            <li>Default horizontal position of position:fixed block should be right in rtl context, and ancestor direction should still be applied inside the block taken out of normal flow</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-003-10.3.7" class="">
        <td>
            <a href="box-sizing-003.xht">box-sizing-003</a></td>
        <td><a href="reference/box-sizing-001-ref.xht">=</a> </td>
        <td></td>
        <td>box-sizing:border-box and CSS2.1 10.3.7
          <ul class="assert">
            <li>When box-sizing is border-box, the content width, rather than the computed value of the width property, should be used in the the constraint that determines the used values of sizing and positioning properties of absolutely positioned elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-004-10.3.7" class="">
        <td>
            <a href="box-sizing-004.xht">box-sizing-004</a></td>
        <td><a href="reference/box-sizing-001-ref.xht">=</a> </td>
        <td></td>
        <td>box-sizing:padding-box and CSS2.1 10.3.7
          <ul class="assert">
            <li>When box-sizing is padding-box, the content width, rather than the computed value of the width property, should be used in the the constraint that determines the used values of sizing and positioning properties of absolutely positioned elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-offset-position-fixed-001-10.3.7" class="">
        <td>
            <a href="left-offset-position-fixed-001.xht">left-offset-position-fixed-001</a></td>
        <td><a href="reference/left-offset-position-fixed-001-ref.xht">=</a> </td>
        <td></td>
        <td>left:auto offset of position:fixed box in a position:relative containing block
          <ul class="assert">
            <li>The 'left' box offset property, for fixed positioning, when set to 'auto' specifies the offset of the box from its 'static-position containing block'. Here, in this test, the 'static-position containing block' is #shifted-column and the containing block for #red is established by the viewport.</li>
          </ul>
        </td>
      </tr>
      <tr id="left-offset-position-fixed-001-10.3.7" class="">
        <td>
            <a href="left-offset-position-fixed-001.xht">left-offset-position-fixed-001</a></td>
        <td><a href="reference/left-offset-position-fixed-001-ref.xht">=</a> </td>
        <td></td>
        <td>left:auto offset of position:fixed box in a position:relative containing block
          <ul class="assert">
            <li>The 'left' box offset property, for fixed positioning, when set to 'auto' specifies the offset of the box from its 'static-position containing block'. Here, in this test, the 'static-position containing block' is #shifted-column and the containing block for #red is established by the viewport.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-offset-position-fixed-001-10.3.7" class="">
        <td>
            <a href="right-offset-position-fixed-001.xht">right-offset-position-fixed-001</a></td>
        <td><a href="reference/right-offset-position-fixed-001-ref.xht">=</a> </td>
        <td></td>
        <td>right:auto offset of position:fixed box in an RTL position:relative containing block
          <ul class="assert">
            <li>The 'right' box offset property, for fixed positioning, when set to 'auto' specifies the offset of the box from its 'static-position containing block'. Here, in this test, the 'static-position containing block' is #shifted-column and the containing block for #red is established by the viewport.</li>
          </ul>
        </td>
      </tr>
      <tr id="right-offset-position-fixed-001-10.3.7" class="">
        <td>
            <a href="right-offset-position-fixed-001.xht">right-offset-position-fixed-001</a></td>
        <td><a href="reference/right-offset-position-fixed-001-ref.xht">=</a> </td>
        <td></td>
        <td>right:auto offset of position:fixed box in an RTL position:relative containing block
          <ul class="assert">
            <li>The 'right' box offset property, for fixed positioning, when set to 'auto' specifies the offset of the box from its 'static-position containing block'. Here, in this test, the 'static-position containing block' is #shifted-column and the containing block for #red is established by the viewport.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.3.7.#static-position">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.3.8">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.3.8">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#abs-replaced-width">10.3.8 Absolutely positioned, replaced elements</a></th></tr>
      <!-- 47 tests -->
      <tr id="absolute-replaced-width-001-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-001.xht">absolute-replaced-width-001</a></td>
        <td><a href="reference/absolute-replaced-width-001-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'auto' specified for 'margin-left', 'margin-right' and intrinsic width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'. If both 'left' and 'right' have the value 'auto' and if the 'direction' property of the element establishing the static-position containing block is 'ltr', then set 'left' to the static position. The intrinsic width is also used if 'height' and 'width' are 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-002-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-002.xht">absolute-replaced-width-002</a></td>
        <td><a href="reference/absolute-replaced-width-002-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element and 'auto' specified for 'margin-left', 'margin-right' and intrinsic height
          <ul class="assert">
            <li>If an absolutely positioned inline replaced element (like the svg element in this test) has no intrinsic width and no intrinsic ratio, then the used value of 'width' becomes 300px. Then, if both left and right values are 'auto' and the 'direction' property of the element establishing the static-position containing block is 'ltr', then set 'left' to the static position. If 'left' or 'right' are 'auto' (like in this test), then replace any 'auto' on 'margin-left' or 'margin-right' with '0'. If at this point there is an 'auto' left (like in this test: right is 'auto'), solve the equation for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-003-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-003.xht">absolute-replaced-width-003</a></td>
        <td><a href="reference/absolute-replaced-width-003-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with 'auto' specified for 'margin-left', 'margin-right', with no intrinsic width and no intrinsic ratio
          <ul class="assert">
            <li>If an absolutely positioned inline replaced element (like the svg element in this test) has no intrinsic width and no intrinsic ratio, then the used value of 'width' becomes 300px. Then, if both left and right values are 'auto' and the 'direction' property of the element establishing the static-position containing block is 'ltr', then set 'left' to the static position. If 'left' or 'right' are 'auto' (like in this test), then replace any 'auto' on 'margin-left' or 'margin-right' with '0'. If at this point there is an 'auto' left (like in this test: right is 'auto'), solve the equation for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-003a-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-003a.xht">absolute-replaced-width-003a</a></td>
        <td><a href="reference/absolute-replaced-width-003a-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element, 'auto' specified for 'margin-left', 'margin-right', no intrinsic height and no intrinsic width
          <ul class="assert">
            <li>If an absolutely positioned inline replaced element (like the svg element in this test) has no intrinsic width and no intrinsic height, then the used value of 'width' becomes 300px and the used value of 'height' becomes 150px. Then, if both left and right values are 'auto' and the 'direction' property of the element establishing the static-position containing block is 'ltr', then set 'left' to the static position. If 'left' or 'right' are 'auto' (like in this test), then replace any 'auto' on 'margin-left' or 'margin-right' with '0'. If at this point there is an 'auto' left (like in this test: right is 'auto'), solve the equation for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-003b-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-003b.xht">absolute-replaced-width-003b</a></td>
        <td><a href="reference/absolute-replaced-width-003b-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element, 'auto' specified for 'margin-left', 'margin-right', no intrinsic height and no intrinsic ratio
          <ul class="assert">
            <li>If an absolutely positioned inline replaced element (like the svg element in this test) has no intrinsic height and no intrinsic ratio, then the used value of 'height' becomes 150px. Then, if both left and right values are 'auto' and the 'direction' property of the element establishing the static-position containing block is 'ltr', then set 'left' to the static position. If 'left' or 'right' are 'auto' (like in this test), then replace any 'auto' on 'margin-left' or 'margin-right' with '0'. If at this point there is an 'auto' left (like in this test: right is 'auto'), solve the equation for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-003c-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-003c.xht">absolute-replaced-width-003c</a></td>
        <td><a href="reference/absolute-replaced-width-003c-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element, 'auto' specified for 'margin-left', 'margin-right', no intrinsic width and no intrinsic ratio
          <ul class="assert">
            <li>If an absolutely positioned inline replaced element (like the svg element in this test) has no intrinsic width and no intrinsic ratio, then the used value of 'width' becomes 300px. Then, if both left and right values are 'auto' and the 'direction' property of the element establishing the static-position containing block is 'ltr', then set 'left' to the static position. If 'left' or 'right' are 'auto' (like in this test), then replace any 'auto' on 'margin-left' or 'margin-right' with '0'. If at this point there is an 'auto' left (like in this test: right is 'auto'), solve the equation for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-004-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-004.xht">absolute-replaced-width-004</a></td>
        <td><a href="reference/absolute-replaced-width-004-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element and 'auto' specified for 'margin-left', 'margin-right' and no intrinsic height or width
          <ul class="assert">
            <li>If an absolutely positioned inline replaced element (like the svg element in this test) has no intrinsic width and no intrinsic height, then the used value of 'width' becomes 300px and the used value of 'height' becomes 150px. Then, if both left and right values are 'auto' and the 'direction' property of the element establishing the static-position containing block is 'ltr', then set 'left' to the static position. If 'left' or 'right' are 'auto' (like in this test), then replace any 'auto' on 'margin-left' or 'margin-right' with '0'. If at this point there is an 'auto' left (like in this test: right is 'auto'), solve the equation for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-006-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-006.xht">absolute-replaced-width-006</a></td>
        <td><a href="reference/absolute-replaced-width-006-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element and 'auto' specified for 'margin-left', 'margin-right' and width set to a percentage
          <ul class="assert">
            <li>The width of an absolutely positioned inline replaced element set to a percentage is evaluated against its containing block's width.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-008-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-008.xht">absolute-replaced-width-008</a></td>
        <td><a href="reference/absolute-replaced-width-001-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, 'auto' specified for 'margin-left', 'margin-right', 'left', 'right' and intrinsic width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolute replaced elements becomes a used value of '0'. The intrinsic width is also used if 'height' and 'width' are 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-009-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-009.xht">absolute-replaced-width-009</a></td>
        <td><a href="reference/absolute-replaced-width-002-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolute replaced elements with 'direction' as left-to-right, 'auto' specified for 'margin-left', 'margin-right', 'left', 'right' and intrinsic height
          <ul class="assert">
            <li>If an absolutely positioned inline replaced element (like the svg element in this test) has no intrinsic width and no intrinsic ratio, then the used value of 'width' becomes 300px. Then, if both left and right values are 'auto' and the 'direction' property of the element establishing the static-position containing block is 'ltr', then set 'left' to the static position. If 'left' or 'right' are 'auto' (like in this test), then replace any 'auto' on 'margin-left' or 'margin-right' with '0'. If at this point there is an 'auto' left (like in this test: right is 'auto'), solve the equation for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-010-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-010.xht">absolute-replaced-width-010</a></td>
        <td><a href="reference/absolute-replaced-width-003-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolute replaced elements with 'direction' as left-to-right, 'auto' specified for 'margin-left', 'margin-right', 'left', 'right' and 'height'
          <ul class="assert">
            <li>If an absolutely positioned inline replaced element (like the svg element in this test) has no intrinsic width and no intrinsic ratio, then the used value of 'width' becomes 300px. Then, if both left and right values are 'auto' and the 'direction' property of the element establishing the static-position containing block is 'ltr', then set 'left' to the static position. If 'left' or 'right' are 'auto' (like in this test), then replace any 'auto' on 'margin-left' or 'margin-right' with '0'. If at this point there is an 'auto' left (like in this test: right is 'auto'), solve the equation for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-011-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-011.xht">absolute-replaced-width-011</a></td>
        <td><a href="reference/absolute-replaced-width-004-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, 'auto' specified for 'margin-left', 'margin-right', 'left', 'right' and no intrinsic height or width
          <ul class="assert">
            <li>If an absolutely positioned inline replaced element (like the svg element in this test) has no intrinsic width and no intrinsic height, then the used value of 'width' becomes 300px and the used value of 'height' becomes 150px. Then, if both left and right values are 'auto' and the 'direction' property of the element establishing the static-position containing block is 'ltr', then set 'left' to the static position. If 'left' or 'right' are 'auto' (like in this test), then replace any 'auto' on 'margin-left' or 'margin-right' with '0'. If at this point there is an 'auto' left (like in this test: right is 'auto'), solve the equation for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-013-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-013.xht">absolute-replaced-width-013</a></td>
        <td><a href="reference/absolute-replaced-width-006-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, 'auto' specified for 'margin-left', 'margin-right', 'left', 'right' and percentage intrinsic width
          <ul class="assert">
            <li>Percentage intrinsic widths are evaluated against the containing block's width.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-015-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-015.xht">absolute-replaced-width-015</a></td>
        <td><a href="reference/absolute-replaced-width-015-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned replaced element with 'direction' as right-to-left, 'auto' specified for 'margin-left', 'margin-right', 'left', 'right' and intrinsic width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'. If both 'left' and 'right' have the value 'auto' and if the 'direction' property of the element establishing the static-position containing block is 'rtl', then set 'right' to the static position. The intrinsic width is also used if 'height' and 'width' are 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-020-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-020.xht">absolute-replaced-width-020</a></td>
        <td><a href="reference/absolute-replaced-width-020-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as right-to-left, 'auto' specified for 'margin-left', 'margin-right', 'left', 'right' and width set to a percentage
          <ul class="assert">
            <li>The width of an absolutely positioned inline replaced element set to a percentage is evaluated against the containing block's width. If both 'left' and 'right' have the value 'auto' and if the 'direction' property of the element establishing the static-position containing block is 'rtl', then set 'right' to the static position.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-022-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-022.xht">absolute-replaced-width-022</a></td>
        <td><a href="reference/absolute-replaced-width-022-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, 'auto' specified for 'margin-left', 'margin-right', 'right' and intrinsic width
          <ul class="assert">
            <li>The intrinsic width is used if 'height' and 'width' are 'auto'. Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'. If at this point there is an 'auto' left (like right as in this test), solve the equation for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-023-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-023.xht">absolute-replaced-width-023</a></td>
        <td><a href="reference/absolute-replaced-width-023-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned replaced element with 'direction' as left-to-right, 'auto' specified for 'margin-left', 'margin-right', 'right' and intrinsic height
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned replaced element becomes a used value of '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-024-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-024.xht">absolute-replaced-width-024</a></td>
        <td><a href="reference/absolute-replaced-width-024-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, 'auto' specified for 'margin-left', 'margin-right', 'right' and 'height'
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-025-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-025.xht">absolute-replaced-width-025</a></td>
        <td><a href="reference/absolute-replaced-width-025-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, 'auto' specified for 'margin-left', 'margin-right', 'right' and no intrinsic height or width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-027-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-027.xht">absolute-replaced-width-027</a></td>
        <td><a href="reference/absolute-replaced-width-027-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned replaced element with 'direction' as left-to-right, 'auto' specified for 'margin-left', 'margin-right', 'right' and percentage width
          <ul class="assert">
            <li>The width of an absolutely positioned inline replaced element set to a percentage is evaluated against its containing block's width.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-029-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-029.xht">absolute-replaced-width-029</a></td>
        <td><a href="reference/absolute-replaced-width-022-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as right-to-left, 'auto' specified for 'margin-left', 'margin-right', 'right' and intrinsic width
          <ul class="assert">
            <li>The intrinsic width is used if 'height' and 'width' are 'auto'. Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'. If at this point there is an 'auto' left (like right as in this test), solve the equation for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-030-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-030.xht">absolute-replaced-width-030</a></td>
        <td><a href="reference/absolute-replaced-width-023-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned replaced element with 'direction' as right-to-left, 'auto' specified for 'margin-left', 'margin-right', 'right' and intrinsic height
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned replaced element becomes a used value of '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-031-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-031.xht">absolute-replaced-width-031</a></td>
        <td><a href="reference/absolute-replaced-width-024-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as right-to-left, 'auto' specified for 'margin-left', 'margin-right', 'right' and 'height'
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-032-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-032.xht">absolute-replaced-width-032</a></td>
        <td><a href="reference/absolute-replaced-width-025-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as right-to-left, 'auto' specified for 'margin-left', 'margin-right', 'right' and no intrinsic height or width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced elements becomes a used value of '0'. The height and width are adjusted by the constraints for block-level, non-replaced elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-034-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-034.xht">absolute-replaced-width-034</a></td>
        <td><a href="reference/absolute-replaced-width-020-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as right-to-left, 'auto' specified for 'margin-left', 'margin-right', 'right' and percentage intrinsic width
          <ul class="assert">
            <li>Percentage widths are evaluated against the containing block's width.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-036-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-036.xht">absolute-replaced-width-036</a></td>
        <td><a href="reference/absolute-replaced-width-036-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, 'auto' specified for 'margin-left', 'margin-right' and intrinsic width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'. The intrinsic width is also used if 'height' and 'width' are 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-037-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-037.xht">absolute-replaced-width-037</a></td>
        <td><a href="reference/absolute-replaced-width-037-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, 'auto' specified for 'margin-left', 'margin-right' and intrinsic height
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-038-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-038.xht">absolute-replaced-width-038</a></td>
        <td><a href="reference/absolute-replaced-width-038-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolute replaced elements with 'direction' as left-to-right, 'auto' specified for 'margin-left', 'margin-right' and 'height'
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-039-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-039.xht">absolute-replaced-width-039</a></td>
        <td><a href="reference/absolute-replaced-width-039-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, 'auto' specified for 'margin-left', 'margin-right' and no intrinsic height or width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'. The height and width are adjusted by the constraints for block-level, non-replaced elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-041-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-041.xht">absolute-replaced-width-041</a></td>
        <td><a href="reference/absolute-replaced-width-041-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, 'auto' specified for 'margin-left', 'margin-right' and percentage intrinsic width
          <ul class="assert">
            <li>Percentage widths are evaluated against the containing block's width.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-043-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-043.xht">absolute-replaced-width-043</a></td>
        <td><a href="reference/absolute-replaced-width-036-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as right-to-left, 'auto' specified for 'margin-left', 'margin-right' and intrinsic width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'. The intrinsic width is also used if 'height' and 'width' are 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-048-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-048.xht">absolute-replaced-width-048</a></td>
        <td><a href="reference/absolute-replaced-width-041-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as right-to-left, 'auto' specified for 'margin-left', 'margin-right' and percentage intrinsic width
          <ul class="assert">
            <li>Percentage widths are evaluated against the containing block's width.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-050-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-050.xht">absolute-replaced-width-050</a></td>
        <td><a href="reference/absolute-replaced-width-036-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, 'auto' specified for 'margin-right' and intrinsic width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'. The intrinsic width is also used if 'height' and 'width' are 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-051-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-051.xht">absolute-replaced-width-051</a></td>
        <td><a href="reference/absolute-replaced-width-037-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, 'auto' specified for 'margin-right' and intrinsic height
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-052-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-052.xht">absolute-replaced-width-052</a></td>
        <td><a href="reference/absolute-replaced-width-038-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, 'auto' specified for 'margin-right' and 'height'
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-053-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-053.xht">absolute-replaced-width-053</a></td>
        <td><a href="reference/absolute-replaced-width-039-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, 'auto' specified for 'margin-right' and no intrinsic height or width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'. The height and width are adjusted by the constraints for block-level, non-replaced elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-055-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-055.xht">absolute-replaced-width-055</a></td>
        <td><a href="reference/absolute-replaced-width-041-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, 'auto' specified for 'margin-right' and percentage intrinsic width
          <ul class="assert">
            <li>Percentage widths are evaluated against the containing block's width.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-057-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-057.xht">absolute-replaced-width-057</a></td>
        <td><a href="reference/absolute-replaced-width-036-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as right-to-left, 'auto' specified for 'margin-right' and intrinsic width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'. The intrinsic width is also used if 'height' and 'width' are 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-062-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-062.xht">absolute-replaced-width-062</a></td>
        <td><a href="reference/absolute-replaced-width-041-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as right-to-left, 'auto' specified for 'margin-right' and percentage width
          <ul class="assert">
            <li>Percentage widths are evaluated against the containing block's width.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-064-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-064.xht">absolute-replaced-width-064</a></td>
        <td><a href="reference/absolute-replaced-width-036-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, intrinsic width and over-constrained situation
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'. The intrinsic width is also used if 'height' and 'width' are 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-065-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-065.xht">absolute-replaced-width-065</a></td>
        <td><a href="reference/absolute-replaced-width-037-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, intrinsic height and over-constrained situation
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-066-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-066.xht">absolute-replaced-width-066</a></td>
        <td><a href="reference/absolute-replaced-width-038-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, 'height' and over-constrained situation
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-067-10.3.8" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-width-067.xht">absolute-replaced-width-067</a></td>
        <td><a href="reference/absolute-replaced-width-039-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, no intrinsic height or width and over-constrained situation
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'. The height and width are adjusted by the constraints for block-level, non-replaced elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-069-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-069.xht">absolute-replaced-width-069</a></td>
        <td><a href="reference/absolute-replaced-width-041-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as left-to-right, percentage intrinsic width and over-constrained situation
          <ul class="assert">
            <li>Percentage widths are evaluated against the containing block's width.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-071-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-071.xht">absolute-replaced-width-071</a></td>
        <td><a href="reference/absolute-replaced-width-036-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as right-to-left, intrinsic width and over-constrained situation
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on absolutely positioned inline replaced element becomes a used value of '0'. The intrinsic width is also used if 'height' and 'width' are 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-width-076-10.3.8" class="image">
        <td>
            <a href="absolute-replaced-width-076.xht">absolute-replaced-width-076</a></td>
        <td><a href="reference/absolute-replaced-width-041-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'direction' as right-to-left, percentage intrinsic width and over-constrained situation
          <ul class="assert">
            <li>Percentage widths are evaluated against the containing block's width.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-replaced-width-margin-000-10.3.8" class="">
        <td>
            <a href="abspos-replaced-width-margin-000.xht">abspos-replaced-width-margin-000</a></td>
        <td><a href="reference/abspos-replaced-width-margin-000-ref.xht">=</a> </td>
        <td></td>
        <td>CSS2.1:10.3.8 Comprehensive - Absolutely Positioned Replaced Horizontal Size+Position Calculations
          <ul class="assert">
            <li>The values of 'left', 'right', 'margin-left', 'margin-right', and 'width' are calculated correctly for absolutely positioned replaced elements according to CSS2.1 Section 10.3.7.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.3.9">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.3.9">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#inlineblock-width">10.3.9 'Inline-block', non-replaced elements in normal flow</a></th></tr>
      <!-- 19 tests -->
      <tr id="absolute-non-replaced-width-017-10.3.9" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-017.xht">absolute-non-replaced-width-017</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (left-to-right), inline-block and max-width
          <ul class="assert">
            <li>When direction is left-to-right and 'left' is set to static position and 'width' and 'right' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-018-10.3.9" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-018.xht">absolute-non-replaced-width-018</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (left-to-right), inline-block and max-width
          <ul class="assert">
            <li>When direction is left-to-right and 'left' is set to static position and 'width' and 'right' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to shrink-to-fit width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-021-10.3.9" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-021.xht">absolute-non-replaced-width-021</a></td>
        <td><a href="reference/absolute-non-replaced-width-021-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (right-to-left), inline-block and max-width
          <ul class="assert">
            <li>When direction is right-to-left and 'right' is set to static position and 'width' and 'left' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-022-10.3.9" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-022.xht">absolute-non-replaced-width-022</a></td>
        <td><a href="reference/absolute-non-replaced-width-021-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (right-to-left), inline-block and max-width
          <ul class="assert">
            <li>When direction is right-to-left and 'right' is set to static position and 'width' and 'left' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-007-10.3.9" class="ahem">
        <td>
            <a href="float-non-replaced-width-007.xht">float-non-replaced-width-007</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of floating, non-replaced elements - inline-block and max-width
          <ul class="assert">
            <li>If 'width' of a floating, non-replaced element computes to 'auto' or 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If 'width' of a floating, non-replaced element computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-011-10.3.9" class="ahem">
        <td>
            <a href="float-non-replaced-width-011.xht">float-non-replaced-width-011</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of floating, non-replaced elements - inline-block and max-width
          <ul class="assert">
            <li>If 'width' of a floating, non-replaced element computes to 'auto' or 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If 'width' of a floating, non-replaced element computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-001-10.3.9" class="">
        <td>
            <a href="inline-block-001.xht">inline-block-001</a></td>
        <td></td>
        <td></td>
        <td>inline-block: ping test
        </td>
      </tr>
      <tr id="inline-block-002-10.3.9" class="interact">
        <td>
            <a href="inline-block-002.xht">inline-block-002</a></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>inline-block: width
        </td>
      </tr>
      <tr id="inline-block-003-10.3.9" class="interact">
        <td>
            <a href="inline-block-003.xht">inline-block-003</a></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>inline-block: width
        </td>
      </tr>
      <tr id="inline-block-004-10.3.9" class="interact">
        <td>
            <a href="inline-block-004.xht">inline-block-004</a></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>inline-block: width
        </td>
      </tr>
      <tr id="inline-block-005-10.3.9" class="interact">
        <td>
            <a href="inline-block-005.xht">inline-block-005</a></td>
        <td></td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>inline-block: width
        </td>
      </tr>
      <tr id="inline-block-non-replaced-width-001-10.3.9" class="ahem">
        <td>
            <a href="inline-block-non-replaced-width-001.xht">inline-block-non-replaced-width-001</a></td>
        <td><a href="reference/inline-block-non-replaced-width-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Inline-block non-replaced elements shrink-to-fit
          <ul class="assert">
            <li>If 'width' is 'auto' then 'inline-block' elements shrink-to-fit.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-non-replaced-width-002-10.3.9" class="ahem">
        <td>
            <a href="inline-block-non-replaced-width-002.xht">inline-block-non-replaced-width-002</a></td>
        <td><a href="reference/inline-block-non-replaced-width-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Inline-block non-replaced elements with 'margin-left' and 'margin-right' set to 'auto'
          <ul class="assert">
            <li>When 'margin-left' and 'margin-right' are set to 'auto' the used value becomes '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-non-replaced-width-003-10.3.9" class="ahem">
        <td>
            <a href="inline-block-non-replaced-width-003.xht">inline-block-non-replaced-width-003</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of inline-block non-replaced elements - max-width
          <ul class="assert">
            <li>If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-non-replaced-width-004-10.3.9" class="ahem">
        <td>
            <a href="inline-block-non-replaced-width-004.xht">inline-block-non-replaced-width-004</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of inline-block non-replaced elements - max-width
          <ul class="assert">
            <li>If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-width-001a-10.3.9" class="">
        <td>
            <a href="inline-block-width-001a.xht">inline-block-width-001a</a></td>
        <td><a href="reference/inline-block-width-001-ref.xht">=</a> </td>
        <td></td>
        <td>Test for 'width: auto' on inline-block
        </td>
      </tr>
      <tr id="inline-block-width-001b-10.3.9" class="">
        <td>
            <a href="inline-block-width-001b.xht">inline-block-width-001b</a></td>
        <td><a href="reference/inline-block-width-001-ref.xht">=</a> </td>
        <td></td>
        <td>Test for 'width: auto' on inline-block
        </td>
      </tr>
      <tr id="inline-block-width-002a-10.3.9" class="">
        <td>
            <a href="inline-block-width-002a.xht">inline-block-width-002a</a></td>
        <td><a href="reference/inline-block-width-002-ref.xht">=</a> </td>
        <td></td>
        <td>Test for 'width: auto' on inline-block
        </td>
      </tr>
      <tr id="inline-block-width-002b-10.3.9" class="">
        <td>
            <a href="inline-block-width-002b.xht">inline-block-width-002b</a></td>
        <td><a href="reference/inline-block-width-002-ref.xht">=</a> </td>
        <td></td>
        <td>Test for 'width: &lt;length&gt;' on inline-block
        </td>
      </tr>
    </tbody>
    <tbody id="s10.3.10">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.3.10">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#inlineblock-replaced-width">10.3.10 'Inline-block', replaced elements in normal flow</a></th></tr>
      <!-- 7 tests -->
      <tr id="inline-block-replaced-width-001-10.3.10" class="image">
        <td>
            <a href="inline-block-replaced-width-001.xht">inline-block-replaced-width-001</a></td>
        <td><a href="reference/inline-block-replaced-width-001-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Inline-block replaced elements and 'auto' specified for 'margin-left', 'margin-right' and intrinsic width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on inline-block replaced elements becomes a used value of '0'. The intrinsic width is also used if 'height' and 'width' are 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-replaced-width-002-10.3.10" class="nonHTML svg">
        <td>
            <a href="inline-block-replaced-width-002.xht">inline-block-replaced-width-002</a></td>
        <td><a href="reference/inline-block-replaced-width-002-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Inline-block replaced elements and 'auto' specified for 'margin-left', 'margin-right' and intrinsic height
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on inline-block replaced elements becomes a used value of '0'. If 'width' has a computed value of 'auto' and the inline-block replaced element has no intrinsic ratio and no intrinsic width (which is the case in this test), then the used value of 'width' becomes 300px.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-replaced-width-003-10.3.10" class="nonHTML svg">
        <td>
            <a href="inline-block-replaced-width-003.xht">inline-block-replaced-width-003</a></td>
        <td><a href="reference/inline-block-replaced-width-003-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Inline-block replaced elements and 'auto' specified for 'margin-left', 'margin-right' and 'height'
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on inline-block replaced elements becomes a used value of '0'. If 'width' has a computed value of 'auto' and the inline-block replaced element has no intrinsic ratio and no intrinsic width (which is the case in this test), then the used value of 'width' becomes 300px.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-replaced-width-004-10.3.10" class="nonHTML svg">
        <td>
            <a href="inline-block-replaced-width-004.xht">inline-block-replaced-width-004</a></td>
        <td></td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Inline-block replaced elements and 'auto' specified for 'margin-left', 'margin-right' and no intrinsic height or width
          <ul class="assert">
            <li>Computed value of 'auto' for 'margin-left' or margin-right' on inline-block replaced elements becomes a used value of '0'. The height and width are adjusted by the constraints for block-level, non-replaced elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-replaced-width-006-10.3.10" class="image">
        <td>
            <a href="inline-block-replaced-width-006.xht">inline-block-replaced-width-006</a></td>
        <td><a href="reference/inline-block-replaced-width-006-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Inline-block replaced elements and 'auto' specified for 'margin-left', 'margin-right' and percentage intrinsic width
          <ul class="assert">
            <li>Percentage intrinsic widths are evaluated against the containing block's width.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-replaced-width-007-10.3.10" class="nonHTML svg">
        <td>
            <a href="inline-block-replaced-width-007.xht">inline-block-replaced-width-007</a></td>
        <td><a href="reference/absolute-replaced-width-003a-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>width of inline-block replaced element with no intrinsic height, no intrinsic width and no intrinsic ratio
          <ul class="assert">
            <li>If an inline-block replaced element (like the svg element in this test) has no intrinsic width and no intrinsic height, then the used value of 'width' becomes 300px and the used value of 'height' becomes 150px.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-replaced-width-008-10.3.10" class="nonHTML svg">
        <td>
            <a href="inline-block-replaced-width-008.xht">inline-block-replaced-width-008</a></td>
        <td><a href="reference/absolute-replaced-width-003c-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>CSS Test: width of inline-block replaced element with no intrinsic width and no intrinsic ratio
          <ul class="assert">
            <li>If an inline-block replaced element (like the svg element in this test) has no intrinsic width and no intrinsic ratio, then the used value of 'width' becomes 300px.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.4">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.4">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#min-max-widths">10.4 Minimum and maximum widths: 'min-width' and 'max-width'</a></th></tr>
      <!-- 227 tests -->
      <tr id="absolute-non-replaced-width-017-10.4" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-017.xht">absolute-non-replaced-width-017</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (left-to-right), inline-block and max-width
          <ul class="assert">
            <li>When direction is left-to-right and 'left' is set to static position and 'width' and 'right' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-018-10.4" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-018.xht">absolute-non-replaced-width-018</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (left-to-right), inline-block and max-width
          <ul class="assert">
            <li>When direction is left-to-right and 'left' is set to static position and 'width' and 'right' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to shrink-to-fit width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-019-10.4" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-019.xht">absolute-non-replaced-width-019</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (left-to-right), float and max-width
          <ul class="assert">
            <li>When direction is left-to-right and 'left' is set to static position and 'width' and 'right' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an floating, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-020-10.4" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-020.xht">absolute-non-replaced-width-020</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (left-to-right), float and max-width
          <ul class="assert">
            <li>When direction is left-to-right and 'left' is set to static position and 'width' and 'right' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an floating, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-021-10.4" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-021.xht">absolute-non-replaced-width-021</a></td>
        <td><a href="reference/absolute-non-replaced-width-021-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (right-to-left), inline-block and max-width
          <ul class="assert">
            <li>When direction is right-to-left and 'right' is set to static position and 'width' and 'left' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-022-10.4" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-022.xht">absolute-non-replaced-width-022</a></td>
        <td><a href="reference/absolute-non-replaced-width-021-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (right-to-left), inline-block and max-width
          <ul class="assert">
            <li>When direction is right-to-left and 'right' is set to static position and 'width' and 'left' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-023-10.4" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-023.xht">absolute-non-replaced-width-023</a></td>
        <td><a href="reference/absolute-non-replaced-width-021-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (right-to-left), float and max-width
          <ul class="assert">
            <li>When direction is right-to-left and 'right' is set to static position and 'width' and 'left' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an floating, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-024-10.4" class="ahem">
        <td>
            <a href="absolute-non-replaced-width-024.xht">absolute-non-replaced-width-024</a></td>
        <td><a href="reference/absolute-non-replaced-width-021-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of absolutely positioned, non-replaced elements - direction (right-to-left), float and max-width
          <ul class="assert">
            <li>When direction is right-to-left and 'right' is set to static position and 'width' and 'left' are 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an floating, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is also given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If width of an absolutely positioned, non-replaced element resorts to 'shrink-to-fit' width calculation but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-025-10.4" class="">
        <td>
            <a href="absolute-non-replaced-width-025.xht">absolute-non-replaced-width-025</a></td>
        <td><a href="reference/absolute-non-replaced-width-025-ref.xht">=</a> </td>
        <td></td>
        <td>CSS Test: absolutely positioned non-replaced element with 'left' and 'right' not set to 'auto' and 'width' set to 'auto' - max-width, horizontal margins
          <ul class="assert">
            <li>When 'width' is computed according to the equation and rules of section 10.3.7 and when such computed 'width' is greater than 'max-width', then the equation and rules of section 10.3.7 are applied again but this time assuming the computed 'max-width' value. Then all three properties ('width', 'left' and 'right') are not 'auto' and both 'margin-left' and 'margin-right' are 'auto': in which case, the horizontal margins get equal values of available, remaining horizontal space.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-026-10.4" class="">
        <td>
            <a href="absolute-non-replaced-width-026.xht">absolute-non-replaced-width-026</a></td>
        <td><a href="reference/absolute-non-replaced-width-026-ref.xht">=</a> </td>
        <td></td>
        <td>absolutely positioned non-replaced element with 'left' and 'right' not set to 'auto' and 'width' set to 'auto' - max-width, horizontal margins
          <ul class="assert">
            <li>When 'width' is computed according to the equation and rules of section 10.3.7 and when such computed 'width' is greater than 'max-width', then the equation and rules of section 10.3.7 are applied again but this time assuming the computed 'max-width' value. Then all three properties ('width', 'left' and 'right') are not 'auto' and 'margin-left' is 'auto': in which case, the 'margin-left' get all of available, remaining horizontal space.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-010-10.4" class="svg">
        <td>
            <a href="box-sizing-010.xht">box-sizing-010</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and height, h &gt; max-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and height with the h &gt; max-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-011-10.4" class="svg">
        <td>
            <a href="box-sizing-011.xht">box-sizing-011</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and height, w &gt; max-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and height with the w &gt; max-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-012-10.4" class="svg">
        <td>
            <a href="box-sizing-012.xht">box-sizing-012</a></td>
        <td><a href="reference/box-sizing-012-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width, h &gt; max-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width with the h &gt; max-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-013-10.4" class="svg">
        <td>
            <a href="box-sizing-013.xht">box-sizing-013</a></td>
        <td><a href="reference/box-sizing-013-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic height, w &gt; max-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic height with the w &gt; max-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-014-10.4" class="svg">
        <td>
            <a href="box-sizing-014.xht">box-sizing-014</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and ratio, h &gt; max-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and ratio with the h &gt; max-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-015-10.4" class="svg">
        <td>
            <a href="box-sizing-015.xht">box-sizing-015</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic height and ratio, w &gt; max-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic height and ratio with the w &gt; max-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-016-10.4" class="svg">
        <td>
            <a href="box-sizing-016.xht">box-sizing-016</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic ratio, h &gt; max-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic ratio with the h &gt; max-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-017-10.4" class="svg">
        <td>
            <a href="box-sizing-017.xht">box-sizing-017</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic ratio, w &gt; max-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic ratio with the w &gt; max-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-018-10.4" class="svg">
        <td>
            <a href="box-sizing-018.xht">box-sizing-018</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic height and ratio, w &gt; max-wdith and h &gt; max-height and max-width/w &amp;#8804; max-height/h
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic height and ratio with the w &gt; max-width and h &gt; max-height constraint violation and max-width/w &amp;#8804; max-height/h are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-019-10.4" class="svg">
        <td>
            <a href="box-sizing-019.xht">box-sizing-019</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and ratio, w &gt; max-wdith and h &gt; max-height and max-width/w &gt; max-height/h
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and ratio with the w &gt; max-width and h &gt; max-height constraint violation and max-width/w &gt; max-height/h are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-020-10.4" class="svg">
        <td>
            <a href="box-sizing-020.xht">box-sizing-020</a></td>
        <td><a href="reference/box-sizing-020-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and height, h &lt; min-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and height with the h &lt; min-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-021-10.4" class="svg">
        <td>
            <a href="box-sizing-021.xht">box-sizing-021</a></td>
        <td><a href="reference/box-sizing-020-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and height, w &lt; win-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and height with the w &lt; min-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-022-10.4" class="svg">
        <td>
            <a href="box-sizing-022.xht">box-sizing-022</a></td>
        <td><a href="reference/box-sizing-022-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width, w &lt; min-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width with the w &lt; min-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-023-10.4" class="svg">
        <td>
            <a href="box-sizing-023.xht">box-sizing-023</a></td>
        <td><a href="reference/box-sizing-023-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic height, h &lt; min-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic height with the h &lt; min-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-024-10.4" class="svg">
        <td>
            <a href="box-sizing-024.xht">box-sizing-024</a></td>
        <td><a href="reference/box-sizing-020-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and ratio, h &lt; mi:-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and ratio with the h &lt; min-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-025-10.4" class="svg">
        <td>
            <a href="box-sizing-025.xht">box-sizing-025</a></td>
        <td><a href="reference/box-sizing-020-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic height and ratio, w &lt; min-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic height and ratio with the w &lt; min-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="c5524-height-002-10.4" class="image">
        <td>
            <a href="c5524-height-002.xht">c5524-height-002</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>height
        </td>
      </tr>
      <tr id="float-non-replaced-width-007-10.4" class="ahem">
        <td>
            <a href="float-non-replaced-width-007.xht">float-non-replaced-width-007</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of floating, non-replaced elements - inline-block and max-width
          <ul class="assert">
            <li>If 'width' of a floating, non-replaced element computes to 'auto' or 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If 'width' of a floating, non-replaced element computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-008-10.4" class="ahem">
        <td>
            <a href="float-non-replaced-width-008.xht">float-non-replaced-width-008</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of floating, non-replaced elements - max-width
          <ul class="assert">
            <li>If 'width' of a floating, non-replaced element computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If 'width' of a floating, non-replaced element computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-009-10.4" class="ahem">
        <td>
            <a href="float-non-replaced-width-009.xht">float-non-replaced-width-009</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of floating, non-replaced elements - max-width
          <ul class="assert">
            <li>If 'width' of a floating, non-replaced element computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of a floating, non-replaced element is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If 'width' of a floating, non-replaced element computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-010-10.4" class="ahem">
        <td>
            <a href="float-non-replaced-width-010.xht">float-non-replaced-width-010</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of floating, non-replaced elements - width
          <ul class="assert">
            <li>If 'width' of a floating, non-replaced element computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' is specified with absolute length, then the computed value is the specified value. If 'width' of a floating, non-replaced element computes to 'auto' but its own child uses specified absolute length, then such specified absolute length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-011-10.4" class="ahem">
        <td>
            <a href="float-non-replaced-width-011.xht">float-non-replaced-width-011</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of floating, non-replaced elements - inline-block and max-width
          <ul class="assert">
            <li>If 'width' of a floating, non-replaced element computes to 'auto' or 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If 'width' of a floating, non-replaced element computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-non-replaced-width-012-10.4" class="ahem">
        <td>
            <a href="float-non-replaced-width-012.xht">float-non-replaced-width-012</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of floating, non-replaced elements - max-width
          <ul class="assert">
            <li>If 'width' of a floating non-replaced element computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation and such calculated width can be furthermore constrained, reduced by a max-width declaration.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-non-replaced-width-003-10.4" class="ahem">
        <td>
            <a href="inline-block-non-replaced-width-003.xht">inline-block-non-replaced-width-003</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of inline-block non-replaced elements - max-width
          <ul class="assert">
            <li>If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-non-replaced-width-004-10.4" class="ahem">
        <td>
            <a href="inline-block-non-replaced-width-004.xht">inline-block-non-replaced-width-004</a></td>
        <td><a href="reference/absolute-non-replaced-width-017-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'shrink-to-fit' width of inline-block non-replaced elements - max-width
          <ul class="assert">
            <li>If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto', then the used value of 'width' is given by 'shrink-to-fit' width calculation. If 'width' of an inline-block, non-replaced element in normal flow is given by 'shrink-to-fit' width calculation, then such calculated width can be furthermore constrained, reduced by a max-width declaration. If 'width' of an inline-block, non-replaced element in normal flow computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-height-010-10.4" class="image">
        <td>
            <a href="inline-replaced-height-010.xht">inline-replaced-height-010</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>height - inline replaced element and max-width
          <ul class="assert">
            <li>The height of an inline replaced element should be re-calculated based on its constrained width (constrained by computed 'max-width' value) and based its intrinsic ratio when it has an intrinsic ratio.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-height-011-10.4" class="image">
        <td>
            <a href="inline-replaced-height-011.xht">inline-replaced-height-011</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>height - inline replaced element and min-width
          <ul class="assert">
            <li>The height of an inline replaced element should be re-calculated based on its constrained width (constrained by computed 'min-width' value) and based its intrinsic ratio when it has an intrinsic ratio.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-max-width-001-10.4" class="ahem">
        <td>
            <a href="max-height-max-width-001.xht">max-height-max-width-001</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>max-height and max-width - float and overflow
          <ul class="assert">
            <li>Space taken up by the horizontal and vertical scrollbars should be taken out of (subtracted from the dimensions of) the containing block formed by the element with the scrollbars. In this test, assuming that the width of vertical scrollbar is 19px and assuming that the height of horizontal scrollbar is 19px, then the dimensions of the painted green area should be 181px by 181px. The height of horizontal scrollbar and the width of vertical scrollbar are entirely user-settable in most graphical user agents.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-001-10.4" class="invalid">
        <td>
            <a href="max-width-001.xht">max-width-001</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using pixels with a minimum minus one value, -1px
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-002-10.4" class="">
        <td>
            <a href="max-width-002.xht">max-width-002</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using pixels with a minimum value, 0px
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-003-10.4" class="">
        <td>
            <a href="max-width-003.xht">max-width-003</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using pixels with a minimum plus one value, 1px
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-004-10.4" class="">
        <td>
            <a href="max-width-004.xht">max-width-004</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using pixels with a negative zero value, -0px
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-005-10.4" class="">
        <td>
            <a href="max-width-005.xht">max-width-005</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using pixels with a positive zero value, +0px
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-006-10.4" class="">
        <td>
            <a href="max-width-006.xht">max-width-006</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-007-10.4" class="">
        <td>
            <a href="max-width-007.xht">max-width-007</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-012-10.4" class="invalid">
        <td>
            <a href="max-width-012.xht">max-width-012</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using points with a minimum minus one value, -1pt
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-013-10.4" class="">
        <td>
            <a href="max-width-013.xht">max-width-013</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using points with a minimum value, 0pt
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-014-10.4" class="">
        <td>
            <a href="max-width-014.xht">max-width-014</a></td>
        <td></td>
        <td></td>
        <td>Max-width using points with a minimum plus one value, 1pt
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-015-10.4" class="">
        <td>
            <a href="max-width-015.xht">max-width-015</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using points with a negative zero value, -0pt
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-016-10.4" class="">
        <td>
            <a href="max-width-016.xht">max-width-016</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using points with a positive zero value, +0pt
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-017-10.4" class="">
        <td>
            <a href="max-width-017.xht">max-width-017</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-018-10.4" class="">
        <td>
            <a href="max-width-018.xht">max-width-018</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-023-10.4" class="invalid">
        <td>
            <a href="max-width-023.xht">max-width-023</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using picas with a minimum minus one value, -1pc
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-024-10.4" class="">
        <td>
            <a href="max-width-024.xht">max-width-024</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using picas with a minimum value, 0pc
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-025-10.4" class="">
        <td>
            <a href="max-width-025.xht">max-width-025</a></td>
        <td><a href="reference/max-width-025-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using picas with a minimum plus one value, 1pc
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-026-10.4" class="">
        <td>
            <a href="max-width-026.xht">max-width-026</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using picas with a negative zero value, -0pc
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-027-10.4" class="">
        <td>
            <a href="max-width-027.xht">max-width-027</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using picas with a positive zero value, +0pc
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-028-10.4" class="">
        <td>
            <a href="max-width-028.xht">max-width-028</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-029-10.4" class="">
        <td>
            <a href="max-width-029.xht">max-width-029</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-034-10.4" class="invalid">
        <td>
            <a href="max-width-034.xht">max-width-034</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using centimeters with a minimum minus one value, -1cm
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-035-10.4" class="">
        <td>
            <a href="max-width-035.xht">max-width-035</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using centimeters with a minimum value, 0cm
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-036-10.4" class="">
        <td>
            <a href="max-width-036.xht">max-width-036</a></td>
        <td><a href="reference/max-width-036-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using centimeters with a minimum plus one value, 1cm
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-037-10.4" class="">
        <td>
            <a href="max-width-037.xht">max-width-037</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using centimeters with a negative zero value, -0cm
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-038-10.4" class="">
        <td>
            <a href="max-width-038.xht">max-width-038</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using centimeters with a positive zero value, +0cm
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-039-10.4" class="">
        <td>
            <a href="max-width-039.xht">max-width-039</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-040-10.4" class="">
        <td>
            <a href="max-width-040.xht">max-width-040</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-045-10.4" class="invalid">
        <td>
            <a href="max-width-045.xht">max-width-045</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using millimeters with a minimum minus one value, -1mm
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-046-10.4" class="">
        <td>
            <a href="max-width-046.xht">max-width-046</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using millimeters with a minimum value, 0mm
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-047-10.4" class="">
        <td>
            <a href="max-width-047.xht">max-width-047</a></td>
        <td><a href="reference/max-width-047-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using millimeters with a minimum plus one value, 1mm
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-048-10.4" class="">
        <td>
            <a href="max-width-048.xht">max-width-048</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using millimeters with a negative zero value, -0mm
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-049-10.4" class="">
        <td>
            <a href="max-width-049.xht">max-width-049</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using millimeters with a positive zero value, +0mm
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-050-10.4" class="">
        <td>
            <a href="max-width-050.xht">max-width-050</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-051-10.4" class="">
        <td>
            <a href="max-width-051.xht">max-width-051</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-056-10.4" class="invalid">
        <td>
            <a href="max-width-056.xht">max-width-056</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using inches with a minimum minus one value, -1in
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-057-10.4" class="">
        <td>
            <a href="max-width-057.xht">max-width-057</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using inches with a minimum value, 0in
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-058-10.4" class="">
        <td>
            <a href="max-width-058.xht">max-width-058</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width using inches with a minimum plus one value, 1in
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-059-10.4" class="">
        <td>
            <a href="max-width-059.xht">max-width-059</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using inches with a negative zero value, -0in
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-060-10.4" class="">
        <td>
            <a href="max-width-060.xht">max-width-060</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using inches with a positive zero value, +0in
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-061-10.4" class="">
        <td>
            <a href="max-width-061.xht">max-width-061</a></td>
        <td><a href="reference/max-width-061-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using inches with a nominal value, 3in
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-062-10.4" class="">
        <td>
            <a href="max-width-062.xht">max-width-062</a></td>
        <td><a href="reference/max-width-061-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using inches with a positive nominal value, +3in
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-067-10.4" class="ahem invalid">
        <td>
            <a href="max-width-067.xht">max-width-067</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using 'em' units with a minimum minus one value, -1em
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-068-10.4" class="ahem">
        <td>
            <a href="max-width-068.xht">max-width-068</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'em' units with a minimum value, 0em
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-069-10.4" class="ahem">
        <td>
            <a href="max-width-069.xht">max-width-069</a></td>
        <td><a href="reference/max-width-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'em' units with a minimum plus one value, 1em
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-070-10.4" class="ahem">
        <td>
            <a href="max-width-070.xht">max-width-070</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'em' units with a negative zero value, -0em
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-071-10.4" class="ahem">
        <td>
            <a href="max-width-071.xht">max-width-071</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'em' units with a positive zero value, +0em
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-072-10.4" class="ahem">
        <td>
            <a href="max-width-072.xht">max-width-072</a></td>
        <td><a href="reference/max-width-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-073-10.4" class="ahem">
        <td>
            <a href="max-width-073.xht">max-width-073</a></td>
        <td><a href="reference/max-width-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-078-10.4" class="ahem invalid">
        <td>
            <a href="max-width-078.xht">max-width-078</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using 'ex' units with a minimum minus one value, -1ex
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-079-10.4" class="ahem">
        <td>
            <a href="max-width-079.xht">max-width-079</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'ex' units with a minimum value, 0ex
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-080-10.4" class="ahem">
        <td>
            <a href="max-width-080.xht">max-width-080</a></td>
        <td><a href="reference/max-width-025-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'ex' units with a minimum plus one value, 1ex
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-081-10.4" class="ahem">
        <td>
            <a href="max-width-081.xht">max-width-081</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'ex' units with a negative zero value, -0ex
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-082-10.4" class="ahem">
        <td>
            <a href="max-width-082.xht">max-width-082</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'ex' units with a positive zero value, +0ex
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-083-10.4" class="ahem">
        <td>
            <a href="max-width-083.xht">max-width-083</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-084-10.4" class="ahem">
        <td>
            <a href="max-width-084.xht">max-width-084</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-089-10.4" class="invalid">
        <td>
            <a href="max-width-089.xht">max-width-089</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using percentages with a minimum minus one value, -1%
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-090-10.4" class="">
        <td>
            <a href="max-width-090.xht">max-width-090</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using percentages with a minimum value, 0%
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-091-10.4" class="">
        <td>
            <a href="max-width-091.xht">max-width-091</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using percentages with a minimum plus one value, 1%
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-092-10.4" class="">
        <td>
            <a href="max-width-092.xht">max-width-092</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using percentages with a negative zero value, -0%
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-093-10.4" class="">
        <td>
            <a href="max-width-093.xht">max-width-093</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using percentages with a positive zero value, +0%
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-094-10.4" class="">
        <td>
            <a href="max-width-094.xht">max-width-094</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-095-10.4" class="">
        <td>
            <a href="max-width-095.xht">max-width-095</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-100-10.4" class="">
        <td>
            <a href="max-width-100.xht">max-width-100</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width with a negative zero value and no units, -0
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-101-10.4" class="">
        <td>
            <a href="max-width-101.xht">max-width-101</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width with a zero value and no units, 0
          <ul class="assert">
            <li>The 'max-width' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-102-10.4" class="">
        <td>
            <a href="max-width-102.xht">max-width-102</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width with a positive zero value and no units, +0
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-103-10.4" class="">
        <td>
            <a href="max-width-103.xht">max-width-103</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width set to a value of 'none'
          <ul class="assert">
            <li>The 'max-width' property applies a value of 'none'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-104-10.4" class="">
        <td>
            <a href="max-width-104.xht">max-width-104</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width set to 'inherit'
          <ul class="assert">
            <li>The 'max-width' property set to 'inherit' properly inherits the max-width value of the parent.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-105-10.4" class="ahem">
        <td>
            <a href="max-width-105.xht">max-width-105</a></td>
        <td><a href="reference/max-width-105-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>max-width - height and overflow
          <ul class="assert">
            <li>'max-width' specifies a fixed maximum used width. If the used width is greater than max-width, then the computed value of max-width is used as the computed value for width.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-106-10.4" class="ahem">
        <td>
            <a href="max-width-106.xht">max-width-106</a></td>
        <td><a href="reference/max-width-105-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>max-width - float and overflow
          <ul class="assert">
            <li>'max-width' specifies a fixed maximum used width. If the used width is greater than max-width, then the computed value of max-width is used as the computed value for width. A floated box should not become wider than its declared max-width.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-107-10.4" class="ahem">
        <td>
            <a href="max-width-107.xht">max-width-107</a></td>
        <td><a href="reference/max-width-107-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>max-width - height and overflow
          <ul class="assert">
            <li>'max-width' specifies a fixed maximum used width. If the used width is greater than max-width, then the computed value of max-width is used as the computed value for width.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-108-10.4" class="ahem">
        <td>
            <a href="max-width-108.xht">max-width-108</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>max-width - float and overflow
          <ul class="assert">
            <li>'max-width' specifies a fixed maximum used width. If the used width is greater than max-width, then the computed value of max-width is used as the computed value for width.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-109-10.4" class="image">
        <td>
            <a href="max-width-109.xht">max-width-109</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Max-width - replaced elements
          <ul class="assert">
            <li>For UAs who choose to scale replaced elements, the height of that element (based on it's intrinsic ratio) should be re-calculated based on it's constraining 'max-width' value</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-110-10.4" class="image">
        <td>
            <a href="max-width-110.xht">max-width-110</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>max-width - float and inline replaced element
          <ul class="assert">
            <li>If 'height' and 'width' both have computed values of 'auto' and the element also has an intrinsic width, then such intrinsic width is the used value of 'width'. If 'width' of a floating, non-replaced element computes to 'auto' but its own child uses a constrained length resulting from a max-width declaration, then such constrained length will define the preferred width in 'shrink-to-fit' width calculation.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-001-10.4" class="">
        <td>
            <a href="max-width-applies-to-001.xht">max-width-applies-to-001</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'max-width' property does not apply to elements with 'display' set to 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-002-10.4" class="">
        <td>
            <a href="max-width-applies-to-002.xht">max-width-applies-to-002</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'max-width' property does not apply to elements with 'display' set to 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-003-10.4" class="">
        <td>
            <a href="max-width-applies-to-003.xht">max-width-applies-to-003</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'max-width' property does not apply to elements with 'display' set to 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-004-10.4" class="">
        <td>
            <a href="max-width-applies-to-004.xht">max-width-applies-to-004</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'max-width' property does not apply to elements with 'display' set to 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-005-10.4" class="">
        <td>
            <a href="max-width-applies-to-005.xht">max-width-applies-to-005</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-006-10.4" class="">
        <td>
            <a href="max-width-applies-to-006.xht">max-width-applies-to-006</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-007-10.4" class="">
        <td>
            <a href="max-width-applies-to-007.xht">max-width-applies-to-007</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-008-10.4" class="ahem">
        <td>
            <a href="max-width-applies-to-008.xht">max-width-applies-to-008</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width applied to elements with 'display' set to 'inline'
          <ul class="assert">
            <li>The 'max-width' property does not apply to elements with 'display' set to 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-009-10.4" class="">
        <td>
            <a href="max-width-applies-to-009.xht">max-width-applies-to-009</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'block'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-010-10.4" class="">
        <td>
            <a href="max-width-applies-to-010.xht">max-width-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'list-item'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'list-item'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-011-10.4" class="">
        <td>
            <a href="max-width-applies-to-011.xht">max-width-applies-to-011</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'run-in'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-012-10.4" class="">
        <td>
            <a href="max-width-applies-to-012.xht">max-width-applies-to-012</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'inline-block'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-013-10.4" class="">
        <td>
            <a href="max-width-applies-to-013.xht">max-width-applies-to-013</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-014-10.4" class="">
        <td>
            <a href="max-width-applies-to-014.xht">max-width-applies-to-014</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-015-10.4" class="">
        <td>
            <a href="max-width-applies-to-015.xht">max-width-applies-to-015</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-016-10.4" class="">
        <td>
            <a href="max-width-applies-to-016.xht">max-width-applies-to-016</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Max-Width applied to none
          <ul class="assert">
            <li>Max-Width can be declared onto 'display: none' elements but since 'display: none' declaration on an element does not generate a CSS box, then it won't have a rendering effect nor a visual formatting repercussion.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-percentage-001-10.4" class="">
        <td>
            <a href="max-width-percentage-001.xht">max-width-percentage-001</a></td>
        <td><a href="reference/max-width-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Using percentages with 'max-width' relative to the containing block
          <ul class="assert">
            <li>The percentage is calculated in relation to the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-percentage-002-10.4" class="">
        <td>
            <a href="max-width-percentage-002.xht">max-width-percentage-002</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Percentage based value for 'max-width' contained by box with a negative 'width'
          <ul class="assert">
            <li>If the containing block's width is negative, the used value is zero.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-percentage-003-10.4" class="">
        <td>
            <a href="max-width-percentage-003.xht">max-width-percentage-003</a></td>
        <td></td>
        <td></td>
        <td>Max-width in constrained situation
          <ul class="assert">
            <li>If the containing block's width depends on this element's width, then the resulting layout is undefined.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-001-10.4" class="invalid">
        <td>
            <a href="min-width-001.xht">min-width-001</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using pixels with a minimum minus one value, -1px
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-002-10.4" class="">
        <td>
            <a href="min-width-002.xht">min-width-002</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using pixels with a minimum value, 0px
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-003-10.4" class="">
        <td>
            <a href="min-width-003.xht">min-width-003</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using pixels with a minimum plus one value, 1px
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-004-10.4" class="">
        <td>
            <a href="min-width-004.xht">min-width-004</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using pixels with a negative zero value, -0px
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-005-10.4" class="">
        <td>
            <a href="min-width-005.xht">min-width-005</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using pixels with a positive zero value, +0px
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-006-10.4" class="">
        <td>
            <a href="min-width-006.xht">min-width-006</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-007-10.4" class="">
        <td>
            <a href="min-width-007.xht">min-width-007</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-012-10.4" class="invalid">
        <td>
            <a href="min-width-012.xht">min-width-012</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using points with a minimum minus one value, -1pt
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-013-10.4" class="">
        <td>
            <a href="min-width-013.xht">min-width-013</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using points with a minimum value, 0pt
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-014-10.4" class="">
        <td>
            <a href="min-width-014.xht">min-width-014</a></td>
        <td></td>
        <td></td>
        <td>Min-width using points with a minimum plus one value, 1pt
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-015-10.4" class="">
        <td>
            <a href="min-width-015.xht">min-width-015</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using points with a negative zero value, -0pt
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-016-10.4" class="">
        <td>
            <a href="min-width-016.xht">min-width-016</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using points with a positive zero value, +0pt
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-017-10.4" class="">
        <td>
            <a href="min-width-017.xht">min-width-017</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-018-10.4" class="">
        <td>
            <a href="min-width-018.xht">min-width-018</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-023-10.4" class="invalid">
        <td>
            <a href="min-width-023.xht">min-width-023</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using picas with a minimum minus one value, -1pc
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-024-10.4" class="">
        <td>
            <a href="min-width-024.xht">min-width-024</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using picas with a minimum value, 0pc
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-025-10.4" class="">
        <td>
            <a href="min-width-025.xht">min-width-025</a></td>
        <td><a href="reference/max-width-025-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using picas with a minimum plus one value, 1pc
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-026-10.4" class="">
        <td>
            <a href="min-width-026.xht">min-width-026</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using picas with a negative zero value, -0pc
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-027-10.4" class="">
        <td>
            <a href="min-width-027.xht">min-width-027</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using picas with a positive zero value, +0pc
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-028-10.4" class="">
        <td>
            <a href="min-width-028.xht">min-width-028</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-029-10.4" class="">
        <td>
            <a href="min-width-029.xht">min-width-029</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-034-10.4" class="invalid">
        <td>
            <a href="min-width-034.xht">min-width-034</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using centimeters with a minimum minus one value, -1cm
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-035-10.4" class="">
        <td>
            <a href="min-width-035.xht">min-width-035</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using centimeters with a minimum value, 0cm
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-036-10.4" class="">
        <td>
            <a href="min-width-036.xht">min-width-036</a></td>
        <td><a href="reference/max-width-036-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using centimeters with a minimum plus one value, 1cm
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-037-10.4" class="">
        <td>
            <a href="min-width-037.xht">min-width-037</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using centimeters with a negative zero value, -0cm
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-038-10.4" class="">
        <td>
            <a href="min-width-038.xht">min-width-038</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using centimeters with a positive zero value, +0cm
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-039-10.4" class="">
        <td>
            <a href="min-width-039.xht">min-width-039</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-040-10.4" class="">
        <td>
            <a href="min-width-040.xht">min-width-040</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-045-10.4" class="invalid">
        <td>
            <a href="min-width-045.xht">min-width-045</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using millimeters with a minimum minus one value, -1mm
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-046-10.4" class="">
        <td>
            <a href="min-width-046.xht">min-width-046</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using millimeters with a minimum value, 0mm
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-047-10.4" class="">
        <td>
            <a href="min-width-047.xht">min-width-047</a></td>
        <td><a href="reference/max-width-047-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using millimeters with a minimum plus one value, 1mm
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-048-10.4" class="">
        <td>
            <a href="min-width-048.xht">min-width-048</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using millimeters with a negative zero value, -0mm
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-049-10.4" class="">
        <td>
            <a href="min-width-049.xht">min-width-049</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using millimeters with a positive zero value, +0mm
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-050-10.4" class="">
        <td>
            <a href="min-width-050.xht">min-width-050</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-051-10.4" class="">
        <td>
            <a href="min-width-051.xht">min-width-051</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-056-10.4" class="invalid">
        <td>
            <a href="min-width-056.xht">min-width-056</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using inches with a minimum minus one value, -1in
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-057-10.4" class="">
        <td>
            <a href="min-width-057.xht">min-width-057</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using inches with a minimum value, 0in
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-058-10.4" class="">
        <td>
            <a href="min-width-058.xht">min-width-058</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Min-width using inches with a minimum plus one value, 1in
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-059-10.4" class="">
        <td>
            <a href="min-width-059.xht">min-width-059</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using inches with a negative zero value, -0in
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-060-10.4" class="">
        <td>
            <a href="min-width-060.xht">min-width-060</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using inches with a positive zero value, +0in
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-061-10.4" class="">
        <td>
            <a href="min-width-061.xht">min-width-061</a></td>
        <td><a href="reference/max-width-061-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using inches with a nominal value, 3in
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-062-10.4" class="">
        <td>
            <a href="min-width-062.xht">min-width-062</a></td>
        <td><a href="reference/max-width-061-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using inches with a positive nominal value, +3in
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-067-10.4" class="ahem invalid">
        <td>
            <a href="min-width-067.xht">min-width-067</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using 'em' units with a minimum minus one value, -1em
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-068-10.4" class="ahem">
        <td>
            <a href="min-width-068.xht">min-width-068</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'em' units with a minimum value, 0em
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-069-10.4" class="ahem">
        <td>
            <a href="min-width-069.xht">min-width-069</a></td>
        <td><a href="reference/max-width-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'em' units with a minimum plus one value, 1em
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-070-10.4" class="ahem">
        <td>
            <a href="min-width-070.xht">min-width-070</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'em' units with a negative zero value, -0em
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-071-10.4" class="ahem">
        <td>
            <a href="min-width-071.xht">min-width-071</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'em' units with a positive zero value, +0em
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-072-10.4" class="ahem">
        <td>
            <a href="min-width-072.xht">min-width-072</a></td>
        <td><a href="reference/max-width-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-073-10.4" class="ahem">
        <td>
            <a href="min-width-073.xht">min-width-073</a></td>
        <td><a href="reference/max-width-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-078-10.4" class="ahem invalid">
        <td>
            <a href="min-width-078.xht">min-width-078</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using 'ex' units with a minimum minus one value, -1ex
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-079-10.4" class="ahem">
        <td>
            <a href="min-width-079.xht">min-width-079</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'ex' units with a minimum value, 0ex
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-080-10.4" class="ahem">
        <td>
            <a href="min-width-080.xht">min-width-080</a></td>
        <td><a href="reference/max-width-025-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'ex' units with a minimum plus one value, 1ex
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-081-10.4" class="ahem">
        <td>
            <a href="min-width-081.xht">min-width-081</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'ex' units with a negative zero value, -0ex
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-082-10.4" class="ahem">
        <td>
            <a href="min-width-082.xht">min-width-082</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'ex' units with a positive zero value, +0ex
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-083-10.4" class="ahem">
        <td>
            <a href="min-width-083.xht">min-width-083</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-084-10.4" class="ahem">
        <td>
            <a href="min-width-084.xht">min-width-084</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-089-10.4" class="invalid">
        <td>
            <a href="min-width-089.xht">min-width-089</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using percentages with a minimum minus one value, -1%
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-090-10.4" class="">
        <td>
            <a href="min-width-090.xht">min-width-090</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using percentages with a minimum value, 0%
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-091-10.4" class="">
        <td>
            <a href="min-width-091.xht">min-width-091</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using percentages with a minimum plus one value, 1%
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-092-10.4" class="">
        <td>
            <a href="min-width-092.xht">min-width-092</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using percentages with a negative zero value, -0%
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-093-10.4" class="">
        <td>
            <a href="min-width-093.xht">min-width-093</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using percentages with a positive zero value, +0%
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-094-10.4" class="">
        <td>
            <a href="min-width-094.xht">min-width-094</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-095-10.4" class="">
        <td>
            <a href="min-width-095.xht">min-width-095</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-100-10.4" class="">
        <td>
            <a href="min-width-100.xht">min-width-100</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width with a negative zero value and no units, -0
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-101-10.4" class="">
        <td>
            <a href="min-width-101.xht">min-width-101</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width with a zero value and no units, 0
          <ul class="assert">
            <li>The 'min-width' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-102-10.4" class="">
        <td>
            <a href="min-width-102.xht">min-width-102</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width with a positive zero value and no units, +0
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-103-10.4" class="">
        <td>
            <a href="min-width-103.xht">min-width-103</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width set to inherit
          <ul class="assert">
            <li>The 'min-width' property properly inherits the min-width value of the parent.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-001-10.4" class="">
        <td>
            <a href="min-width-applies-to-001.xht">min-width-applies-to-001</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'min-width' property does not apply to elements with 'display' set to 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-002-10.4" class="">
        <td>
            <a href="min-width-applies-to-002.xht">min-width-applies-to-002</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'min-width' property does not apply to elements with 'display' set to 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-003-10.4" class="">
        <td>
            <a href="min-width-applies-to-003.xht">min-width-applies-to-003</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'min-width' property does not apply to elements with 'display' set to 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-004-10.4" class="">
        <td>
            <a href="min-width-applies-to-004.xht">min-width-applies-to-004</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'min-width' property does not apply to elements with 'display' set to 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-005-10.4" class="">
        <td>
            <a href="min-width-applies-to-005.xht">min-width-applies-to-005</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-006-10.4" class="">
        <td>
            <a href="min-width-applies-to-006.xht">min-width-applies-to-006</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-007-10.4" class="">
        <td>
            <a href="min-width-applies-to-007.xht">min-width-applies-to-007</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-008-10.4" class="">
        <td>
            <a href="min-width-applies-to-008.xht">min-width-applies-to-008</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'inline'
          <ul class="assert">
            <li>The 'min-width' property does not apply to elements with 'display' set to 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-009-10.4" class="">
        <td>
            <a href="min-width-applies-to-009.xht">min-width-applies-to-009</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'block'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-010-10.4" class="">
        <td>
            <a href="min-width-applies-to-010.xht">min-width-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'list-item'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'list-item'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-011-10.4" class="">
        <td>
            <a href="min-width-applies-to-011.xht">min-width-applies-to-011</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'run-in'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-012-10.4" class="">
        <td>
            <a href="min-width-applies-to-012.xht">min-width-applies-to-012</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'inline-block'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-013-10.4" class="">
        <td>
            <a href="min-width-applies-to-013.xht">min-width-applies-to-013</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-014-10.4" class="">
        <td>
            <a href="min-width-applies-to-014.xht">min-width-applies-to-014</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-015-10.4" class="">
        <td>
            <a href="min-width-applies-to-015.xht">min-width-applies-to-015</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-016-10.4" class="">
        <td>
            <a href="min-width-applies-to-016.xht">min-width-applies-to-016</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Min-Width applied to none
          <ul class="assert">
            <li>Min-Width can be declared onto 'display: none' elements but since 'display: none' declaration on an element does not generate a CSS box, then it won't have a rendering effect nor a visual formatting repercussion.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-percentage-001-10.4" class="">
        <td>
            <a href="min-width-percentage-001.xht">min-width-percentage-001</a></td>
        <td><a href="reference/max-width-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Using percentages with 'min-width' relative to the containing block
          <ul class="assert">
            <li>The percentage is calculated in relation to the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-percentage-002-10.4" class="">
        <td>
            <a href="min-width-percentage-002.xht">min-width-percentage-002</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Percentage based value for 'min-width' contained by box with a negative 'width'
          <ul class="assert">
            <li>If the containing block's width is negative, the used value is zero.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-percentage-003-10.4" class="">
        <td>
            <a href="min-width-percentage-003.xht">min-width-percentage-003</a></td>
        <td></td>
        <td></td>
        <td>Using 'min-width' with 'width' dependent on the containing block
          <ul class="assert">
            <li>If the containing block's width depends on this element's width, then the resulting layout is undefined.</li>
          </ul>
        </td>
      </tr>
      <tr id="replaced-elements-all-auto-10.4" class="should">
        <td>
            <a href="replaced-elements-all-auto.xht">replaced-elements-all-auto</a></td>
        <td><a href="reference/replaced-elements-all-auto-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-height-20-10.4" class="should">
        <td>
            <a href="replaced-elements-height-20.xht">replaced-elements-height-20</a></td>
        <td><a href="reference/replaced-elements-height-20-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-max-height-20-10.4" class="should">
        <td>
            <a href="replaced-elements-max-height-20.xht">replaced-elements-max-height-20</a></td>
        <td><a href="reference/replaced-elements-height-20-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-max-width-40-10.4" class="should">
        <td>
            <a href="replaced-elements-max-width-40.xht">replaced-elements-max-width-40</a></td>
        <td><a href="reference/replaced-elements-width-40-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-min-height-20-10.4" class="should">
        <td>
            <a href="replaced-elements-min-height-20.xht">replaced-elements-min-height-20</a></td>
        <td><a href="reference/replaced-elements-all-auto-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-min-height-40-10.4" class="should">
        <td>
            <a href="replaced-elements-min-height-40.xht">replaced-elements-min-height-40</a></td>
        <td><a href="reference/replaced-elements-min-height-40-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-min-width-40-10.4" class="should">
        <td>
            <a href="replaced-elements-min-width-40.xht">replaced-elements-min-width-40</a></td>
        <td><a href="reference/replaced-elements-all-auto-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-min-width-80-10.4" class="should">
        <td>
            <a href="replaced-elements-min-width-80.xht">replaced-elements-min-width-80</a></td>
        <td><a href="reference/replaced-elements-min-width-80-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-width-40-10.4" class="should">
        <td>
            <a href="replaced-elements-width-40.xht">replaced-elements-width-40</a></td>
        <td><a href="reference/replaced-elements-width-40-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-min-max-001-10.4" class="image">
        <td>
            <a href="replaced-min-max-001.xht">replaced-min-max-001</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Min/Max Height and Width Constraints on Replaced Elements
        </td>
      </tr>
    </tbody>
    <tbody id="s10.4.#propdef-max-width">
      <!-- 83 tests -->
      <tr id="max-width-001-10.4.#propdef-max-width" class="invalid">
        <td>
            <a href="max-width-001.xht">max-width-001</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using pixels with a minimum minus one value, -1px
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-002-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-002.xht">max-width-002</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using pixels with a minimum value, 0px
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-003-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-003.xht">max-width-003</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using pixels with a minimum plus one value, 1px
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-004-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-004.xht">max-width-004</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using pixels with a negative zero value, -0px
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-005-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-005.xht">max-width-005</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using pixels with a positive zero value, +0px
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-006-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-006.xht">max-width-006</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-007-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-007.xht">max-width-007</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-012-10.4.#propdef-max-width" class="invalid">
        <td>
            <a href="max-width-012.xht">max-width-012</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using points with a minimum minus one value, -1pt
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-013-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-013.xht">max-width-013</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using points with a minimum value, 0pt
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-014-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-014.xht">max-width-014</a></td>
        <td></td>
        <td></td>
        <td>Max-width using points with a minimum plus one value, 1pt
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-015-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-015.xht">max-width-015</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using points with a negative zero value, -0pt
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-016-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-016.xht">max-width-016</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using points with a positive zero value, +0pt
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-017-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-017.xht">max-width-017</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-018-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-018.xht">max-width-018</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-023-10.4.#propdef-max-width" class="invalid">
        <td>
            <a href="max-width-023.xht">max-width-023</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using picas with a minimum minus one value, -1pc
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-024-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-024.xht">max-width-024</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using picas with a minimum value, 0pc
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-025-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-025.xht">max-width-025</a></td>
        <td><a href="reference/max-width-025-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using picas with a minimum plus one value, 1pc
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-026-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-026.xht">max-width-026</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using picas with a negative zero value, -0pc
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-027-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-027.xht">max-width-027</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using picas with a positive zero value, +0pc
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-028-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-028.xht">max-width-028</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-029-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-029.xht">max-width-029</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-034-10.4.#propdef-max-width" class="invalid">
        <td>
            <a href="max-width-034.xht">max-width-034</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using centimeters with a minimum minus one value, -1cm
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-035-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-035.xht">max-width-035</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using centimeters with a minimum value, 0cm
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-036-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-036.xht">max-width-036</a></td>
        <td><a href="reference/max-width-036-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using centimeters with a minimum plus one value, 1cm
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-037-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-037.xht">max-width-037</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using centimeters with a negative zero value, -0cm
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-038-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-038.xht">max-width-038</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using centimeters with a positive zero value, +0cm
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-039-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-039.xht">max-width-039</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-040-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-040.xht">max-width-040</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-045-10.4.#propdef-max-width" class="invalid">
        <td>
            <a href="max-width-045.xht">max-width-045</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using millimeters with a minimum minus one value, -1mm
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-046-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-046.xht">max-width-046</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using millimeters with a minimum value, 0mm
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-047-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-047.xht">max-width-047</a></td>
        <td><a href="reference/max-width-047-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using millimeters with a minimum plus one value, 1mm
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-048-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-048.xht">max-width-048</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using millimeters with a negative zero value, -0mm
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-049-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-049.xht">max-width-049</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using millimeters with a positive zero value, +0mm
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-050-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-050.xht">max-width-050</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-051-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-051.xht">max-width-051</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-056-10.4.#propdef-max-width" class="invalid">
        <td>
            <a href="max-width-056.xht">max-width-056</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using inches with a minimum minus one value, -1in
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-057-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-057.xht">max-width-057</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using inches with a minimum value, 0in
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-058-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-058.xht">max-width-058</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width using inches with a minimum plus one value, 1in
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-059-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-059.xht">max-width-059</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using inches with a negative zero value, -0in
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-060-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-060.xht">max-width-060</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using inches with a positive zero value, +0in
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-061-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-061.xht">max-width-061</a></td>
        <td><a href="reference/max-width-061-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using inches with a nominal value, 3in
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-062-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-062.xht">max-width-062</a></td>
        <td><a href="reference/max-width-061-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using inches with a positive nominal value, +3in
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-067-10.4.#propdef-max-width" class="ahem invalid">
        <td>
            <a href="max-width-067.xht">max-width-067</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using 'em' units with a minimum minus one value, -1em
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-068-10.4.#propdef-max-width" class="ahem">
        <td>
            <a href="max-width-068.xht">max-width-068</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'em' units with a minimum value, 0em
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-069-10.4.#propdef-max-width" class="ahem">
        <td>
            <a href="max-width-069.xht">max-width-069</a></td>
        <td><a href="reference/max-width-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'em' units with a minimum plus one value, 1em
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-070-10.4.#propdef-max-width" class="ahem">
        <td>
            <a href="max-width-070.xht">max-width-070</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'em' units with a negative zero value, -0em
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-071-10.4.#propdef-max-width" class="ahem">
        <td>
            <a href="max-width-071.xht">max-width-071</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'em' units with a positive zero value, +0em
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-072-10.4.#propdef-max-width" class="ahem">
        <td>
            <a href="max-width-072.xht">max-width-072</a></td>
        <td><a href="reference/max-width-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-073-10.4.#propdef-max-width" class="ahem">
        <td>
            <a href="max-width-073.xht">max-width-073</a></td>
        <td><a href="reference/max-width-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-078-10.4.#propdef-max-width" class="ahem invalid">
        <td>
            <a href="max-width-078.xht">max-width-078</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using 'ex' units with a minimum minus one value, -1ex
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-079-10.4.#propdef-max-width" class="ahem">
        <td>
            <a href="max-width-079.xht">max-width-079</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'ex' units with a minimum value, 0ex
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-080-10.4.#propdef-max-width" class="ahem">
        <td>
            <a href="max-width-080.xht">max-width-080</a></td>
        <td><a href="reference/max-width-025-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'ex' units with a minimum plus one value, 1ex
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-081-10.4.#propdef-max-width" class="ahem">
        <td>
            <a href="max-width-081.xht">max-width-081</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'ex' units with a negative zero value, -0ex
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-082-10.4.#propdef-max-width" class="ahem">
        <td>
            <a href="max-width-082.xht">max-width-082</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'ex' units with a positive zero value, +0ex
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-083-10.4.#propdef-max-width" class="ahem">
        <td>
            <a href="max-width-083.xht">max-width-083</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-084-10.4.#propdef-max-width" class="ahem">
        <td>
            <a href="max-width-084.xht">max-width-084</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-089-10.4.#propdef-max-width" class="invalid">
        <td>
            <a href="max-width-089.xht">max-width-089</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-width using percentages with a minimum minus one value, -1%
          <ul class="assert">
            <li>The 'max-width' property sets a minimum minus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-090-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-090.xht">max-width-090</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using percentages with a minimum value, 0%
          <ul class="assert">
            <li>The 'max-width' property sets a minimum length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-091-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-091.xht">max-width-091</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using percentages with a minimum plus one value, 1%
          <ul class="assert">
            <li>The 'max-width' property sets a minimum plus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-092-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-092.xht">max-width-092</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using percentages with a negative zero value, -0%
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-093-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-093.xht">max-width-093</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width using percentages with a positive zero value, +0%
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-094-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-094.xht">max-width-094</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'max-width' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-095-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-095.xht">max-width-095</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'max-width' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-100-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-100.xht">max-width-100</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width with a negative zero value and no units, -0
          <ul class="assert">
            <li>The 'max-width' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-101-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-101.xht">max-width-101</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width with a zero value and no units, 0
          <ul class="assert">
            <li>The 'max-width' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-102-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-102.xht">max-width-102</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-width with a positive zero value and no units, +0
          <ul class="assert">
            <li>The 'max-width' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-103-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-103.xht">max-width-103</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width set to a value of 'none'
          <ul class="assert">
            <li>The 'max-width' property applies a value of 'none'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-104-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-104.xht">max-width-104</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-width set to 'inherit'
          <ul class="assert">
            <li>The 'max-width' property set to 'inherit' properly inherits the max-width value of the parent.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-001-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-applies-to-001.xht">max-width-applies-to-001</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'max-width' property does not apply to elements with 'display' set to 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-002-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-applies-to-002.xht">max-width-applies-to-002</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'max-width' property does not apply to elements with 'display' set to 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-003-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-applies-to-003.xht">max-width-applies-to-003</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'max-width' property does not apply to elements with 'display' set to 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-004-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-applies-to-004.xht">max-width-applies-to-004</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'max-width' property does not apply to elements with 'display' set to 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-005-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-applies-to-005.xht">max-width-applies-to-005</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-006-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-applies-to-006.xht">max-width-applies-to-006</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-007-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-applies-to-007.xht">max-width-applies-to-007</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-008-10.4.#propdef-max-width" class="ahem">
        <td>
            <a href="max-width-applies-to-008.xht">max-width-applies-to-008</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-width applied to elements with 'display' set to 'inline'
          <ul class="assert">
            <li>The 'max-width' property does not apply to elements with 'display' set to 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-009-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-applies-to-009.xht">max-width-applies-to-009</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'block'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-010-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-applies-to-010.xht">max-width-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'list-item'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'list-item'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-011-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-applies-to-011.xht">max-width-applies-to-011</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'run-in'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-012-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-applies-to-012.xht">max-width-applies-to-012</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'inline-block'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-013-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-applies-to-013.xht">max-width-applies-to-013</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-014-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-applies-to-014.xht">max-width-applies-to-014</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-width-applies-to-015-10.4.#propdef-max-width" class="">
        <td>
            <a href="max-width-applies-to-015.xht">max-width-applies-to-015</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-width applied to elements with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'max-width' property applies to elements with 'display' set to 'table-caption'.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.4.#propdef-min-width">
      <!-- 82 tests -->
      <tr id="min-width-001-10.4.#propdef-min-width" class="invalid">
        <td>
            <a href="min-width-001.xht">min-width-001</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using pixels with a minimum minus one value, -1px
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-002-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-002.xht">min-width-002</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using pixels with a minimum value, 0px
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-003-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-003.xht">min-width-003</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using pixels with a minimum plus one value, 1px
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-004-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-004.xht">min-width-004</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using pixels with a negative zero value, -0px
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-005-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-005.xht">min-width-005</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using pixels with a positive zero value, +0px
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-006-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-006.xht">min-width-006</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-007-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-007.xht">min-width-007</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-012-10.4.#propdef-min-width" class="invalid">
        <td>
            <a href="min-width-012.xht">min-width-012</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using points with a minimum minus one value, -1pt
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-013-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-013.xht">min-width-013</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using points with a minimum value, 0pt
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-014-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-014.xht">min-width-014</a></td>
        <td></td>
        <td></td>
        <td>Min-width using points with a minimum plus one value, 1pt
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-015-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-015.xht">min-width-015</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using points with a negative zero value, -0pt
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-016-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-016.xht">min-width-016</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using points with a positive zero value, +0pt
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-017-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-017.xht">min-width-017</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-018-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-018.xht">min-width-018</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-023-10.4.#propdef-min-width" class="invalid">
        <td>
            <a href="min-width-023.xht">min-width-023</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using picas with a minimum minus one value, -1pc
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-024-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-024.xht">min-width-024</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using picas with a minimum value, 0pc
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-025-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-025.xht">min-width-025</a></td>
        <td><a href="reference/max-width-025-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using picas with a minimum plus one value, 1pc
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-026-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-026.xht">min-width-026</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using picas with a negative zero value, -0pc
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-027-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-027.xht">min-width-027</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using picas with a positive zero value, +0pc
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-028-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-028.xht">min-width-028</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-029-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-029.xht">min-width-029</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-034-10.4.#propdef-min-width" class="invalid">
        <td>
            <a href="min-width-034.xht">min-width-034</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using centimeters with a minimum minus one value, -1cm
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-035-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-035.xht">min-width-035</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using centimeters with a minimum value, 0cm
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-036-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-036.xht">min-width-036</a></td>
        <td><a href="reference/max-width-036-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using centimeters with a minimum plus one value, 1cm
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-037-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-037.xht">min-width-037</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using centimeters with a negative zero value, -0cm
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-038-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-038.xht">min-width-038</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using centimeters with a positive zero value, +0cm
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-039-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-039.xht">min-width-039</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-040-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-040.xht">min-width-040</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-045-10.4.#propdef-min-width" class="invalid">
        <td>
            <a href="min-width-045.xht">min-width-045</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using millimeters with a minimum minus one value, -1mm
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-046-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-046.xht">min-width-046</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using millimeters with a minimum value, 0mm
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-047-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-047.xht">min-width-047</a></td>
        <td><a href="reference/max-width-047-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using millimeters with a minimum plus one value, 1mm
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-048-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-048.xht">min-width-048</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using millimeters with a negative zero value, -0mm
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-049-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-049.xht">min-width-049</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using millimeters with a positive zero value, +0mm
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-050-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-050.xht">min-width-050</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-051-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-051.xht">min-width-051</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-056-10.4.#propdef-min-width" class="invalid">
        <td>
            <a href="min-width-056.xht">min-width-056</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using inches with a minimum minus one value, -1in
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-057-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-057.xht">min-width-057</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using inches with a minimum value, 0in
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-058-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-058.xht">min-width-058</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Min-width using inches with a minimum plus one value, 1in
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-059-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-059.xht">min-width-059</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using inches with a negative zero value, -0in
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-060-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-060.xht">min-width-060</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using inches with a positive zero value, +0in
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-061-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-061.xht">min-width-061</a></td>
        <td><a href="reference/max-width-061-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using inches with a nominal value, 3in
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-062-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-062.xht">min-width-062</a></td>
        <td><a href="reference/max-width-061-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using inches with a positive nominal value, +3in
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-067-10.4.#propdef-min-width" class="ahem invalid">
        <td>
            <a href="min-width-067.xht">min-width-067</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using 'em' units with a minimum minus one value, -1em
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-068-10.4.#propdef-min-width" class="ahem">
        <td>
            <a href="min-width-068.xht">min-width-068</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'em' units with a minimum value, 0em
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-069-10.4.#propdef-min-width" class="ahem">
        <td>
            <a href="min-width-069.xht">min-width-069</a></td>
        <td><a href="reference/max-width-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'em' units with a minimum plus one value, 1em
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-070-10.4.#propdef-min-width" class="ahem">
        <td>
            <a href="min-width-070.xht">min-width-070</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'em' units with a negative zero value, -0em
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-071-10.4.#propdef-min-width" class="ahem">
        <td>
            <a href="min-width-071.xht">min-width-071</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'em' units with a positive zero value, +0em
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-072-10.4.#propdef-min-width" class="ahem">
        <td>
            <a href="min-width-072.xht">min-width-072</a></td>
        <td><a href="reference/max-width-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-073-10.4.#propdef-min-width" class="ahem">
        <td>
            <a href="min-width-073.xht">min-width-073</a></td>
        <td><a href="reference/max-width-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-078-10.4.#propdef-min-width" class="ahem invalid">
        <td>
            <a href="min-width-078.xht">min-width-078</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using 'ex' units with a minimum minus one value, -1ex
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-079-10.4.#propdef-min-width" class="ahem">
        <td>
            <a href="min-width-079.xht">min-width-079</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'ex' units with a minimum value, 0ex
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-080-10.4.#propdef-min-width" class="ahem">
        <td>
            <a href="min-width-080.xht">min-width-080</a></td>
        <td><a href="reference/max-width-025-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'ex' units with a minimum plus one value, 1ex
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-081-10.4.#propdef-min-width" class="ahem">
        <td>
            <a href="min-width-081.xht">min-width-081</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'ex' units with a negative zero value, -0ex
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-082-10.4.#propdef-min-width" class="ahem">
        <td>
            <a href="min-width-082.xht">min-width-082</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'ex' units with a positive zero value, +0ex
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-083-10.4.#propdef-min-width" class="ahem">
        <td>
            <a href="min-width-083.xht">min-width-083</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-084-10.4.#propdef-min-width" class="ahem">
        <td>
            <a href="min-width-084.xht">min-width-084</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-width using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-089-10.4.#propdef-min-width" class="invalid">
        <td>
            <a href="min-width-089.xht">min-width-089</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-width using percentages with a minimum minus one value, -1%
          <ul class="assert">
            <li>The 'min-width' property sets a minimum minus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-090-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-090.xht">min-width-090</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using percentages with a minimum value, 0%
          <ul class="assert">
            <li>The 'min-width' property sets a minimum length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-091-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-091.xht">min-width-091</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using percentages with a minimum plus one value, 1%
          <ul class="assert">
            <li>The 'min-width' property sets a minimum plus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-092-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-092.xht">min-width-092</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using percentages with a negative zero value, -0%
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-093-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-093.xht">min-width-093</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width using percentages with a positive zero value, +0%
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-094-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-094.xht">min-width-094</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'min-width' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-095-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-095.xht">min-width-095</a></td>
        <td><a href="reference/max-width-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'min-width' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-100-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-100.xht">min-width-100</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width with a negative zero value and no units, -0
          <ul class="assert">
            <li>The 'min-width' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-101-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-101.xht">min-width-101</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width with a zero value and no units, 0
          <ul class="assert">
            <li>The 'min-width' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-102-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-102.xht">min-width-102</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width with a positive zero value and no units, +0
          <ul class="assert">
            <li>The 'min-width' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-103-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-103.xht">min-width-103</a></td>
        <td><a href="reference/max-width-003-ref.xht">=</a> </td>
        <td></td>
        <td>Min-width set to inherit
          <ul class="assert">
            <li>The 'min-width' property properly inherits the min-width value of the parent.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-001-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-applies-to-001.xht">min-width-applies-to-001</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'min-width' property does not apply to elements with 'display' set to 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-002-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-applies-to-002.xht">min-width-applies-to-002</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'min-width' property does not apply to elements with 'display' set to 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-003-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-applies-to-003.xht">min-width-applies-to-003</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'min-width' property does not apply to elements with 'display' set to 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-004-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-applies-to-004.xht">min-width-applies-to-004</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'min-width' property does not apply to elements with 'display' set to 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-005-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-applies-to-005.xht">min-width-applies-to-005</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-006-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-applies-to-006.xht">min-width-applies-to-006</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-007-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-applies-to-007.xht">min-width-applies-to-007</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-008-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-applies-to-008.xht">min-width-applies-to-008</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'inline'
          <ul class="assert">
            <li>The 'min-width' property does not apply to elements with 'display' set to 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-009-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-applies-to-009.xht">min-width-applies-to-009</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'block'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-010-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-applies-to-010.xht">min-width-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'list-item'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'list-item'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-011-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-applies-to-011.xht">min-width-applies-to-011</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'run-in'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-012-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-applies-to-012.xht">min-width-applies-to-012</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'inline-block'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-013-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-applies-to-013.xht">min-width-applies-to-013</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-014-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-applies-to-014.xht">min-width-applies-to-014</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-width-applies-to-015-10.4.#propdef-min-width" class="">
        <td>
            <a href="min-width-applies-to-015.xht">min-width-applies-to-015</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Min-width applied to elements with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'min-width' property applies to elements with 'display' set to 'table-caption'.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.4.#x8">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.4.#x9">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.5">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.5">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#the-height-property">10.5 Content height: the 'height' property</a></th></tr>
      <!-- 110 tests -->
      <tr id="abspos-zero-width-001-10.5" class="image">
        <td>
            <a href="abspos-zero-width-001.xht">abspos-zero-width-001</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolute positioned elements still affect scrolling mechanism
          <ul class="assert">
            <li>Zero width absolute positioned elements still affects scrolling mechanism even though they are out of flow of the content.</li>
          </ul>
        </td>
      </tr>
      <tr id="anonymous-boxes-001-10.5" class="">
        <td>
            <a href="anonymous-boxes-001.xht">anonymous-boxes-001</a></td>
        <td><a href="reference/ref-green-box-100x100.xht">=</a> </td>
        <td></td>
        <td>Percent heights inside anonymous blocks
          <ul class="assert">
            <li>Anonymous block boxes are ignored when resolving percentage values that would refer to it: the closest non-anonymous ancestor box is used instead.</li>
          </ul>
        </td>
      </tr>
      <tr id="anonymous-boxes-001a-10.5" class="ahem image">
        <td>
            <a href="anonymous-boxes-001a.xht">anonymous-boxes-001a</a></td>
        <td><a href="reference/anonymous-boxes-001a-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Percent height inside anonymous block
          <ul class="assert">
            <li>Anonymous block boxes are ignored when resolving percentage values that would refer to it: the closest non-anonymous ancestor box is used instead.</li>
          </ul>
        </td>
      </tr>
      <tr id="anonymous-boxes-001b-10.5" class="ahem">
        <td>
            <a href="anonymous-boxes-001b.xht">anonymous-boxes-001b</a></td>
        <td><a href="reference/anonymous-boxes-001b-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Percent height inside anonymous block
          <ul class="assert">
            <li>Anonymous block boxes are ignored when resolving percentage values that would refer to it: the closest non-anonymous ancestor box is used instead.</li>
          </ul>
        </td>
      </tr>
      <tr id="c5524-height-000-10.5" class="image">
        <td>
            <a href="c5524-height-000.xht">c5524-height-000</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>height
        </td>
      </tr>
      <tr id="c5524-height-001-10.5" class="image">
        <td>
            <a href="c5524-height-001.xht">c5524-height-001</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>height
        </td>
      </tr>
      <tr id="c5524-height-002-10.5" class="image">
        <td>
            <a href="c5524-height-002.xht">c5524-height-002</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>height
        </td>
      </tr>
      <tr id="height-001-10.5" class="invalid">
        <td>
            <a href="height-001.xht">height-001</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using pixels with a minimum minus one value, -1px
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in pixels is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-002-10.5" class="">
        <td>
            <a href="height-002.xht">height-002</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using pixels with a minimum value, 0px
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-003-10.5" class="">
        <td>
            <a href="height-003.xht">height-003</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Height using pixels with a minimum plus one value, 1px
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-004-10.5" class="">
        <td>
            <a href="height-004.xht">height-004</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using pixels with a negative zero value, -0px
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-005-10.5" class="">
        <td>
            <a href="height-005.xht">height-005</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using pixels with a positive zero value, +0px
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-006-10.5" class="">
        <td>
            <a href="height-006.xht">height-006</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-007-10.5" class="">
        <td>
            <a href="height-007.xht">height-007</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-012-10.5" class="invalid">
        <td>
            <a href="height-012.xht">height-012</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using points with a minimum minus one value, -1pt
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in points is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-013-10.5" class="">
        <td>
            <a href="height-013.xht">height-013</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using points with a minimum value, 0pt
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-014-10.5" class="">
        <td>
            <a href="height-014.xht">height-014</a></td>
        <td></td>
        <td></td>
        <td>Height using points with a minimum plus one value, 1pt
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-015-10.5" class="">
        <td>
            <a href="height-015.xht">height-015</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using points with a negative zero value, -0pt
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-016-10.5" class="">
        <td>
            <a href="height-016.xht">height-016</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using points with a positive zero value, +0pt
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-017-10.5" class="">
        <td>
            <a href="height-017.xht">height-017</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-018-10.5" class="">
        <td>
            <a href="height-018.xht">height-018</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-023-10.5" class="invalid">
        <td>
            <a href="height-023.xht">height-023</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using picas with a minimum minus one value, -1pc
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in picas is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-024-10.5" class="">
        <td>
            <a href="height-024.xht">height-024</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using picas with a minimum value, 0pc
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-025-10.5" class="">
        <td>
            <a href="height-025.xht">height-025</a></td>
        <td><a href="reference/height-025-ref.xht">=</a> </td>
        <td></td>
        <td>Height using picas with a minimum plus one value, 1pc
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-026-10.5" class="">
        <td>
            <a href="height-026.xht">height-026</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using picas with a negative zero value, -0pc
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-027-10.5" class="">
        <td>
            <a href="height-027.xht">height-027</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using picas with a positive zero value, +0pc
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-028-10.5" class="">
        <td>
            <a href="height-028.xht">height-028</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-029-10.5" class="">
        <td>
            <a href="height-029.xht">height-029</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-034-10.5" class="invalid">
        <td>
            <a href="height-034.xht">height-034</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using centimeters with a minimum minus one value, -1cm
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in centimeters is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-035-10.5" class="">
        <td>
            <a href="height-035.xht">height-035</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using centimeters with a minimum value, 0cm
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-036-10.5" class="">
        <td>
            <a href="height-036.xht">height-036</a></td>
        <td></td>
        <td></td>
        <td>Height using centimeters with a minimum plus one value, 1cm
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-037-10.5" class="">
        <td>
            <a href="height-037.xht">height-037</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using centimeters with a negative zero value, -0cm
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-038-10.5" class="">
        <td>
            <a href="height-038.xht">height-038</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using centimeters with a positive zero value, +0cm
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-039-10.5" class="">
        <td>
            <a href="height-039.xht">height-039</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-040-10.5" class="">
        <td>
            <a href="height-040.xht">height-040</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-045-10.5" class="invalid">
        <td>
            <a href="height-045.xht">height-045</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using millimeters with a minimum minus one value, -1mm
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in millimeters is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-046-10.5" class="">
        <td>
            <a href="height-046.xht">height-046</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using millimeters with a minimum value, 0mm
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-047-10.5" class="">
        <td>
            <a href="height-047.xht">height-047</a></td>
        <td></td>
        <td></td>
        <td>Height using millimeters with a minimum plus one value, 1mm
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-048-10.5" class="">
        <td>
            <a href="height-048.xht">height-048</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using millimeters with a negative zero value, -0mm
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-049-10.5" class="">
        <td>
            <a href="height-049.xht">height-049</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using millimeters with a positive zero value, +0mm
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-050-10.5" class="">
        <td>
            <a href="height-050.xht">height-050</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-051-10.5" class="">
        <td>
            <a href="height-051.xht">height-051</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-056-10.5" class="invalid">
        <td>
            <a href="height-056.xht">height-056</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using inches with a minimum minus one value, -1in
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in inches is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-057-10.5" class="">
        <td>
            <a href="height-057.xht">height-057</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using inches with a minimum value, 0in
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-058-10.5" class="">
        <td>
            <a href="height-058.xht">height-058</a></td>
        <td><a href="reference/height-058-ref.xht">=</a> </td>
        <td></td>
        <td>Height using inches with a minimum plus one value, 1in
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-059-10.5" class="">
        <td>
            <a href="height-059.xht">height-059</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using inches with a negative zero value, -0in
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-060-10.5" class="">
        <td>
            <a href="height-060.xht">height-060</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using inches with a positive zero value, +0in
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-061-10.5" class="">
        <td>
            <a href="height-061.xht">height-061</a></td>
        <td><a href="reference/height-061-ref.xht">=</a> </td>
        <td></td>
        <td>Height using inches with a nominal value, 3in
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-062-10.5" class="">
        <td>
            <a href="height-062.xht">height-062</a></td>
        <td><a href="reference/height-061-ref.xht">=</a> </td>
        <td></td>
        <td>Height using inches with a positive nominal value, +3in
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-067-10.5" class="ahem invalid">
        <td>
            <a href="height-067.xht">height-067</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using 'em' units with a minimum minus one value, -1em
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in 'em' units is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-068-10.5" class="ahem">
        <td>
            <a href="height-068.xht">height-068</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'em' units with a minimum value, 0em
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-069-10.5" class="ahem">
        <td>
            <a href="height-069.xht">height-069</a></td>
        <td><a href="reference/height-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'em' units with a minimum plus one value, 1em
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-070-10.5" class="ahem">
        <td>
            <a href="height-070.xht">height-070</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'em' units with a negative zero value, -0em
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-071-10.5" class="ahem">
        <td>
            <a href="height-071.xht">height-071</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'em' units with a positive zero value, +0em
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-072-10.5" class="ahem">
        <td>
            <a href="height-072.xht">height-072</a></td>
        <td><a href="reference/height-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'em' units with a nominal value, 5em
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-073-10.5" class="ahem">
        <td>
            <a href="height-073.xht">height-073</a></td>
        <td><a href="reference/height-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'em' units with a positive nominal value, +5em
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-078-10.5" class="ahem invalid">
        <td>
            <a href="height-078.xht">height-078</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using 'ex' units with a minimum minus one value, -1ex
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in 'ex' units is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-079-10.5" class="ahem">
        <td>
            <a href="height-079.xht">height-079</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'ex' units with a minimum value, 0ex
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-080-10.5" class="ahem">
        <td>
            <a href="height-080.xht">height-080</a></td>
        <td><a href="reference/height-080-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'ex' units with a minimum plus one value, 1ex
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-081-10.5" class="ahem">
        <td>
            <a href="height-081.xht">height-081</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'ex' units with a negative zero value, -0ex
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-082-10.5" class="ahem">
        <td>
            <a href="height-082.xht">height-082</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'ex' units with a positive zero value, +0ex
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-083-10.5" class="ahem">
        <td>
            <a href="height-083.xht">height-083</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-084-10.5" class="ahem">
        <td>
            <a href="height-084.xht">height-084</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-089-10.5" class="invalid">
        <td>
            <a href="height-089.xht">height-089</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using percentages with a minimum minus one value, -1%
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in percentages is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-090-10.5" class="">
        <td>
            <a href="height-090.xht">height-090</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using percentages with a minimum value, 0%
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-091-10.5" class="">
        <td>
            <a href="height-091.xht">height-091</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Height using percentages with a minimum plus one value, 1%
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-092-10.5" class="">
        <td>
            <a href="height-092.xht">height-092</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using percentages with a negative zero value, -0%
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-093-10.5" class="">
        <td>
            <a href="height-093.xht">height-093</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using percentages with a positive zero value, +0%
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-094-10.5" class="">
        <td>
            <a href="height-094.xht">height-094</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-095-10.5" class="">
        <td>
            <a href="height-095.xht">height-095</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-100-10.5" class="">
        <td>
            <a href="height-100.xht">height-100</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Height with a negative zero value and no units, -0
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-101-10.5" class="">
        <td>
            <a href="height-101.xht">height-101</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Height with a zero value and no units, 0
          <ul class="assert">
            <li>The 'height' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-102-10.5" class="">
        <td>
            <a href="height-102.xht">height-102</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Height with a positive zero value and no units, +0
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-103-10.5" class="">
        <td>
            <a href="height-103.xht">height-103</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Height set to a value of auto
          <ul class="assert">
            <li>The 'height' property applies a value of auto.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-104-10.5" class="">
        <td>
            <a href="height-104.xht">height-104</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Height set to inherit
          <ul class="assert">
            <li>The 'height' property properly inherits the height value of the parent.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-111-10.5" class="">
        <td>
            <a href="height-111.xht">height-111</a></td>
        <td><a href="reference/height-111-ref.xht">=</a> </td>
        <td></td>
        <td>Nested heights
        </td>
      </tr>
      <tr id="height-112-10.5" class="">
        <td>
            <a href="height-112.xht">height-112</a></td>
        <td><a href="reference/height-112-ref.xht">=</a> </td>
        <td></td>
        <td>Nested heights
        </td>
      </tr>
      <tr id="height-113-10.5" class="">
        <td>
            <a href="height-113.xht">height-113</a></td>
        <td><a href="reference/height-113-ref.xht">=</a> </td>
        <td></td>
        <td>Nested heights with percentages and borders
        </td>
      </tr>
      <tr id="height-114-10.5" class="">
        <td>
            <a href="height-114.xht">height-114</a></td>
        <td><a href="reference/height-114-ref.xht">=</a> </td>
        <td></td>
        <td>Negative heights
        </td>
      </tr>
      <tr id="height-applies-to-001-10.5" class="may">
        <td>
            <a href="height-applies-to-001.xht">height-applies-to-001</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Height applied to elements with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-002-10.5" class="may">
        <td>
            <a href="height-applies-to-002.xht">height-applies-to-002</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Height applied to elements with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-003-10.5" class="may">
        <td>
            <a href="height-applies-to-003.xht">height-applies-to-003</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Height applied to elements with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-004-10.5" class="">
        <td>
            <a href="height-applies-to-004.xht">height-applies-to-004</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-005-10.5" class="">
        <td>
            <a href="height-applies-to-005.xht">height-applies-to-005</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'height' property does not to elements with 'display' set to 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-006-10.5" class="">
        <td>
            <a href="height-applies-to-006.xht">height-applies-to-006</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'height' property does not to elements with 'display' set to 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-007-10.5" class="">
        <td>
            <a href="height-applies-to-007.xht">height-applies-to-007</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-008-10.5" class="">
        <td>
            <a href="height-applies-to-008.xht">height-applies-to-008</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'inline'
          <ul class="assert">
            <li>The 'height' property does not apply to elements with 'display' set to 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-009-10.5" class="">
        <td>
            <a href="height-applies-to-009.xht">height-applies-to-009</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'block'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-010-10.5" class="">
        <td>
            <a href="height-applies-to-010.xht">height-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'list-item'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'list-item'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-010a-10.5" class="">
        <td>
            <a href="height-applies-to-010a.xht">height-applies-to-010a</a></td>
        <td><a href="reference/height-applies-to-010a-ref.xht">=</a> </td>
        <td></td>
        <td>height set to 0 to elements with 'display' set to 'list-item'
          <ul class="assert">
            <li>If height of content exceeds the set height of a block-level non-replaced element in normal flow (like a list-item element such as in this test), then the content should overflow according to the 'overflow' property.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-011-10.5" class="">
        <td>
            <a href="height-applies-to-011.xht">height-applies-to-011</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'run-in'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-012-10.5" class="">
        <td>
            <a href="height-applies-to-012.xht">height-applies-to-012</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'inline-block'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-013-10.5" class="">
        <td>
            <a href="height-applies-to-013.xht">height-applies-to-013</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'table'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-014-10.5" class="">
        <td>
            <a href="height-applies-to-014.xht">height-applies-to-014</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-015-10.5" class="">
        <td>
            <a href="height-applies-to-015.xht">height-applies-to-015</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-016-10.5" class="">
        <td>
            <a href="height-applies-to-016.xht">height-applies-to-016</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements set to 'display: none'
          <ul class="assert">
            <li>Height can be applied to 'display: none' elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-percentage-001-10.5" class="">
        <td>
            <a href="height-percentage-001.xht">height-percentage-001</a></td>
        <td><a href="reference/height-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Percentage height computed to containing block
          <ul class="assert">
            <li>A percentage height is calculated using the height of the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-percentage-002-10.5" class="">
        <td>
            <a href="height-percentage-002.xht">height-percentage-002</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Percentage based 'height' computes to 'auto' when containing block has no specified height
          <ul class="assert">
            <li>A percentage height is computed to 'auto' when the element is not absolutely positioned and there is no 'height' explicitly set on the containing block (or when the containing block's height is set to 'auto').</li>
          </ul>
        </td>
      </tr>
      <tr id="height-percentage-003-10.5" class="">
        <td>
            <a href="height-percentage-003.xht">height-percentage-003</a></td>
        <td><a href="reference/height-percentage-003-ref.xht">=</a> </td>
        <td></td>
        <td>Percentage based 'height' on the root element
          <ul class="assert">
            <li>A percentage 'height' on the root element is relative to the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-percentage-003a-10.5" class="">
        <td>
            <a href="height-percentage-003a.xht">height-percentage-003a</a></td>
        <td><a href="reference/height-percentage-003a-ref.xht">=</a> </td>
        <td></td>
        <td>Height percentage - 100% of the initial containing block's height
          <ul class="assert">
            <li>The initial containing block has the dimensions of the viewport. A percentage height on the root element is relative to the initial containing block. A 'height: 100%' of the document root element should use all of the document root element's height.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-percentage-004-10.5" class="">
        <td>
            <a href="height-percentage-004.xht">height-percentage-004</a></td>
        <td><a href="reference/height-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Resolving container heights when they contain absolutely positioned elements with percentage based heights
          <ul class="assert">
            <li>The 'height' of the containing block of an absolutely positioned element is independent of the size of the element itself.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-percentage-005-10.5" class="image">
        <td>
            <a href="height-percentage-005.xht">height-percentage-005</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>height percentage - inline replaced element inside an auto-height container
          <ul class="assert">
            <li>This test checks that an height percentage is calculated with respect to the height of the generated box's containing block only if and only when such containing block's height is specified explicitly (i.e., it depends on content height; its specified height is not 'auto'). In this test, the div#parent has an 'auto' height; therefore the height percentage specified on div#child is treated as 'auto' and so the image should be rendered (entirely visible) inside that div#child. Note that div#grandparent's initial overflow value is 'visible'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-percentage-003-10.5" class="">
        <td>
            <a href="min-height-percentage-003.xht">min-height-percentage-003</a></td>
        <td><a href="reference/min-height-percentage-003-ref.xht">=</a> </td>
        <td></td>
        <td>min-height - 100% of the initial containing block's height
          <ul class="assert">
            <li>The initial containing block has the dimensions of the viewport. A percentage height on the root element is relative to the initial containing block. A 'min-height: 100%;' of the document root element should use all of the document root element's height. A percentage for 'min-height' is calculated with respect to the height of the generated box's containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="multicol-height-002-10.5" class="">
        <td>
            <a href="multicol-height-002.xht">multicol-height-002</a></td>
        <td><a href="reference/multicol-height-002.xht">=</a> </td>
        <td></td>
        <td>Percentage Computed Height on Multicol Child (Definite Multicol Height)
          <ul class="assert">
            <li>Percentage heights with a multi-column element are relative to the computed height of the multicolumn box, and this works even when the multi-column element is paginated.</li>
          </ul>
        </td>
      </tr>
      <tr id="page-break-inside-000-10.5" class="paged">
        <td>
            <a href="page-break-inside-000.xht">page-break-inside-000</a></td>
        <td></td>
        <td><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>page-break-inside:auto
          <ul class="assert">
            <li>The 'auto' value of the 'page-break-inside' property neither forces nor forbids a page break inside the box.</li>
          </ul>
        </td>
      </tr>
      <tr id="page-container-000-10.5" class="paged">
        <td>
            <a href="page-container-000.xht">page-container-000</a></td>
        <td></td>
        <td><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>Paged Media root container
          <ul class="assert">
            <li>For a single-page document, the containing box for the root element is the page area.</li>
          </ul>
        </td>
      </tr>
      <tr id="page-container-002-10.5" class="paged">
        <td>
            <a href="page-container-002.xht">page-container-002</a></td>
        <td></td>
        <td><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>paged media root percent height
          <ul class="assert">
            <li>A percentage height on the root element is relative to the page area height.</li>
          </ul>
        </td>
      </tr>
      <tr id="page-container-004-10.5" class="may paged">
        <td>
            <a href="page-container-004.xht">page-container-004</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>Paged Media root container (float)
          <ul class="assert">
            <li>The root element when floated abuts the left or right edge of the page area.</li>
          </ul>
        </td>
      </tr>
      <tr id="page-container-010-10.5" class="paged">
        <td>
            <a href="page-container-010.xht">page-container-010</a></td>
        <td></td>
        <td><abbr class="paged" title="Only valid for paged media">Paged</abbr></td>
        <td>Paged Media Height (percent)
          <ul class="assert">
            <li>For HTML documents in paged media, when the HTML and BODY elements have heights of 100%, a percentage height on a child of BODY is relative to the page area height.</li>
          </ul>
        </td>
      </tr>
      <tr id="top-115-10.5" class="">
        <td>
            <a href="top-115.xht">top-115</a></td>
        <td><a href="reference/top-115-ref.xht">=</a> </td>
        <td></td>
        <td>position relative - top offset percentage and auto-height containing block
          <ul class="assert">
            <li>'top: [percentage]' for a relatively positioned box refers to height of its containing block. If the height of the containing block is not specified explicitly (i.e., it depends on content height), and this element is not absolutely positioned, then the percentage height value computes to 'auto'.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.5.#propdef-height">
      <!-- 87 tests -->
      <tr id="height-001-10.5.#propdef-height" class="invalid">
        <td>
            <a href="height-001.xht">height-001</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using pixels with a minimum minus one value, -1px
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in pixels is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-002-10.5.#propdef-height" class="">
        <td>
            <a href="height-002.xht">height-002</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using pixels with a minimum value, 0px
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-003-10.5.#propdef-height" class="">
        <td>
            <a href="height-003.xht">height-003</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Height using pixels with a minimum plus one value, 1px
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-004-10.5.#propdef-height" class="">
        <td>
            <a href="height-004.xht">height-004</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using pixels with a negative zero value, -0px
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-005-10.5.#propdef-height" class="">
        <td>
            <a href="height-005.xht">height-005</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using pixels with a positive zero value, +0px
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-006-10.5.#propdef-height" class="">
        <td>
            <a href="height-006.xht">height-006</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-007-10.5.#propdef-height" class="">
        <td>
            <a href="height-007.xht">height-007</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-012-10.5.#propdef-height" class="invalid">
        <td>
            <a href="height-012.xht">height-012</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using points with a minimum minus one value, -1pt
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in points is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-013-10.5.#propdef-height" class="">
        <td>
            <a href="height-013.xht">height-013</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using points with a minimum value, 0pt
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-014-10.5.#propdef-height" class="">
        <td>
            <a href="height-014.xht">height-014</a></td>
        <td></td>
        <td></td>
        <td>Height using points with a minimum plus one value, 1pt
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-015-10.5.#propdef-height" class="">
        <td>
            <a href="height-015.xht">height-015</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using points with a negative zero value, -0pt
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-016-10.5.#propdef-height" class="">
        <td>
            <a href="height-016.xht">height-016</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using points with a positive zero value, +0pt
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-017-10.5.#propdef-height" class="">
        <td>
            <a href="height-017.xht">height-017</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-018-10.5.#propdef-height" class="">
        <td>
            <a href="height-018.xht">height-018</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-023-10.5.#propdef-height" class="invalid">
        <td>
            <a href="height-023.xht">height-023</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using picas with a minimum minus one value, -1pc
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in picas is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-024-10.5.#propdef-height" class="">
        <td>
            <a href="height-024.xht">height-024</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using picas with a minimum value, 0pc
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-025-10.5.#propdef-height" class="">
        <td>
            <a href="height-025.xht">height-025</a></td>
        <td><a href="reference/height-025-ref.xht">=</a> </td>
        <td></td>
        <td>Height using picas with a minimum plus one value, 1pc
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-026-10.5.#propdef-height" class="">
        <td>
            <a href="height-026.xht">height-026</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using picas with a negative zero value, -0pc
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-027-10.5.#propdef-height" class="">
        <td>
            <a href="height-027.xht">height-027</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using picas with a positive zero value, +0pc
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-028-10.5.#propdef-height" class="">
        <td>
            <a href="height-028.xht">height-028</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-029-10.5.#propdef-height" class="">
        <td>
            <a href="height-029.xht">height-029</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-034-10.5.#propdef-height" class="invalid">
        <td>
            <a href="height-034.xht">height-034</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using centimeters with a minimum minus one value, -1cm
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in centimeters is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-035-10.5.#propdef-height" class="">
        <td>
            <a href="height-035.xht">height-035</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using centimeters with a minimum value, 0cm
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-036-10.5.#propdef-height" class="">
        <td>
            <a href="height-036.xht">height-036</a></td>
        <td></td>
        <td></td>
        <td>Height using centimeters with a minimum plus one value, 1cm
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-037-10.5.#propdef-height" class="">
        <td>
            <a href="height-037.xht">height-037</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using centimeters with a negative zero value, -0cm
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-038-10.5.#propdef-height" class="">
        <td>
            <a href="height-038.xht">height-038</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using centimeters with a positive zero value, +0cm
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-039-10.5.#propdef-height" class="">
        <td>
            <a href="height-039.xht">height-039</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-040-10.5.#propdef-height" class="">
        <td>
            <a href="height-040.xht">height-040</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-045-10.5.#propdef-height" class="invalid">
        <td>
            <a href="height-045.xht">height-045</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using millimeters with a minimum minus one value, -1mm
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in millimeters is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-046-10.5.#propdef-height" class="">
        <td>
            <a href="height-046.xht">height-046</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using millimeters with a minimum value, 0mm
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-047-10.5.#propdef-height" class="">
        <td>
            <a href="height-047.xht">height-047</a></td>
        <td></td>
        <td></td>
        <td>Height using millimeters with a minimum plus one value, 1mm
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-048-10.5.#propdef-height" class="">
        <td>
            <a href="height-048.xht">height-048</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using millimeters with a negative zero value, -0mm
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-049-10.5.#propdef-height" class="">
        <td>
            <a href="height-049.xht">height-049</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using millimeters with a positive zero value, +0mm
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-050-10.5.#propdef-height" class="">
        <td>
            <a href="height-050.xht">height-050</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-051-10.5.#propdef-height" class="">
        <td>
            <a href="height-051.xht">height-051</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-056-10.5.#propdef-height" class="invalid">
        <td>
            <a href="height-056.xht">height-056</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using inches with a minimum minus one value, -1in
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in inches is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-057-10.5.#propdef-height" class="">
        <td>
            <a href="height-057.xht">height-057</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using inches with a minimum value, 0in
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-058-10.5.#propdef-height" class="">
        <td>
            <a href="height-058.xht">height-058</a></td>
        <td><a href="reference/height-058-ref.xht">=</a> </td>
        <td></td>
        <td>Height using inches with a minimum plus one value, 1in
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-059-10.5.#propdef-height" class="">
        <td>
            <a href="height-059.xht">height-059</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using inches with a negative zero value, -0in
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-060-10.5.#propdef-height" class="">
        <td>
            <a href="height-060.xht">height-060</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using inches with a positive zero value, +0in
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-061-10.5.#propdef-height" class="">
        <td>
            <a href="height-061.xht">height-061</a></td>
        <td><a href="reference/height-061-ref.xht">=</a> </td>
        <td></td>
        <td>Height using inches with a nominal value, 3in
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-062-10.5.#propdef-height" class="">
        <td>
            <a href="height-062.xht">height-062</a></td>
        <td><a href="reference/height-061-ref.xht">=</a> </td>
        <td></td>
        <td>Height using inches with a positive nominal value, +3in
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-067-10.5.#propdef-height" class="ahem invalid">
        <td>
            <a href="height-067.xht">height-067</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using 'em' units with a minimum minus one value, -1em
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in 'em' units is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-068-10.5.#propdef-height" class="ahem">
        <td>
            <a href="height-068.xht">height-068</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'em' units with a minimum value, 0em
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-069-10.5.#propdef-height" class="ahem">
        <td>
            <a href="height-069.xht">height-069</a></td>
        <td><a href="reference/height-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'em' units with a minimum plus one value, 1em
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-070-10.5.#propdef-height" class="ahem">
        <td>
            <a href="height-070.xht">height-070</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'em' units with a negative zero value, -0em
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-071-10.5.#propdef-height" class="ahem">
        <td>
            <a href="height-071.xht">height-071</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'em' units with a positive zero value, +0em
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-072-10.5.#propdef-height" class="ahem">
        <td>
            <a href="height-072.xht">height-072</a></td>
        <td><a href="reference/height-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'em' units with a nominal value, 5em
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-073-10.5.#propdef-height" class="ahem">
        <td>
            <a href="height-073.xht">height-073</a></td>
        <td><a href="reference/height-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'em' units with a positive nominal value, +5em
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-078-10.5.#propdef-height" class="ahem invalid">
        <td>
            <a href="height-078.xht">height-078</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using 'ex' units with a minimum minus one value, -1ex
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in 'ex' units is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-079-10.5.#propdef-height" class="ahem">
        <td>
            <a href="height-079.xht">height-079</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'ex' units with a minimum value, 0ex
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-080-10.5.#propdef-height" class="ahem">
        <td>
            <a href="height-080.xht">height-080</a></td>
        <td><a href="reference/height-080-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'ex' units with a minimum plus one value, 1ex
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-081-10.5.#propdef-height" class="ahem">
        <td>
            <a href="height-081.xht">height-081</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'ex' units with a negative zero value, -0ex
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-082-10.5.#propdef-height" class="ahem">
        <td>
            <a href="height-082.xht">height-082</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'ex' units with a positive zero value, +0ex
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-083-10.5.#propdef-height" class="ahem">
        <td>
            <a href="height-083.xht">height-083</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-084-10.5.#propdef-height" class="ahem">
        <td>
            <a href="height-084.xht">height-084</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-089-10.5.#propdef-height" class="invalid">
        <td>
            <a href="height-089.xht">height-089</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Height using percentages with a minimum minus one value, -1%
          <ul class="assert">
            <li>The 'height' property sets a minimum minus one length value in percentages is invalid and resets its value to 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-090-10.5.#propdef-height" class="">
        <td>
            <a href="height-090.xht">height-090</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using percentages with a minimum value, 0%
          <ul class="assert">
            <li>The 'height' property sets a minimum length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-091-10.5.#propdef-height" class="">
        <td>
            <a href="height-091.xht">height-091</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Height using percentages with a minimum plus one value, 1%
          <ul class="assert">
            <li>The 'height' property sets a minimum plus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-092-10.5.#propdef-height" class="">
        <td>
            <a href="height-092.xht">height-092</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using percentages with a negative zero value, -0%
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-093-10.5.#propdef-height" class="">
        <td>
            <a href="height-093.xht">height-093</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Height using percentages with a positive zero value, +0%
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-094-10.5.#propdef-height" class="">
        <td>
            <a href="height-094.xht">height-094</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'height' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-095-10.5.#propdef-height" class="">
        <td>
            <a href="height-095.xht">height-095</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Height using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'height' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-100-10.5.#propdef-height" class="">
        <td>
            <a href="height-100.xht">height-100</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Height with a negative zero value and no units, -0
          <ul class="assert">
            <li>The 'height' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-101-10.5.#propdef-height" class="">
        <td>
            <a href="height-101.xht">height-101</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Height with a zero value and no units, 0
          <ul class="assert">
            <li>The 'height' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-102-10.5.#propdef-height" class="">
        <td>
            <a href="height-102.xht">height-102</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Height with a positive zero value and no units, +0
          <ul class="assert">
            <li>The 'height' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-103-10.5.#propdef-height" class="">
        <td>
            <a href="height-103.xht">height-103</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Height set to a value of auto
          <ul class="assert">
            <li>The 'height' property applies a value of auto.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-104-10.5.#propdef-height" class="">
        <td>
            <a href="height-104.xht">height-104</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Height set to inherit
          <ul class="assert">
            <li>The 'height' property properly inherits the height value of the parent.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-001-10.5.#propdef-height" class="may">
        <td>
            <a href="height-applies-to-001.xht">height-applies-to-001</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Height applied to elements with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-002-10.5.#propdef-height" class="may">
        <td>
            <a href="height-applies-to-002.xht">height-applies-to-002</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Height applied to elements with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-003-10.5.#propdef-height" class="may">
        <td>
            <a href="height-applies-to-003.xht">height-applies-to-003</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Height applied to elements with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-004-10.5.#propdef-height" class="">
        <td>
            <a href="height-applies-to-004.xht">height-applies-to-004</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-005-10.5.#propdef-height" class="">
        <td>
            <a href="height-applies-to-005.xht">height-applies-to-005</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'height' property does not to elements with 'display' set to 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-006-10.5.#propdef-height" class="">
        <td>
            <a href="height-applies-to-006.xht">height-applies-to-006</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'height' property does not to elements with 'display' set to 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-007-10.5.#propdef-height" class="">
        <td>
            <a href="height-applies-to-007.xht">height-applies-to-007</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-008-10.5.#propdef-height" class="">
        <td>
            <a href="height-applies-to-008.xht">height-applies-to-008</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'inline'
          <ul class="assert">
            <li>The 'height' property does not apply to elements with 'display' set to 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-009-10.5.#propdef-height" class="">
        <td>
            <a href="height-applies-to-009.xht">height-applies-to-009</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'block'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-010-10.5.#propdef-height" class="">
        <td>
            <a href="height-applies-to-010.xht">height-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'list-item'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'list-item'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-011-10.5.#propdef-height" class="">
        <td>
            <a href="height-applies-to-011.xht">height-applies-to-011</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'run-in'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-012-10.5.#propdef-height" class="">
        <td>
            <a href="height-applies-to-012.xht">height-applies-to-012</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'inline-block'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-013-10.5.#propdef-height" class="">
        <td>
            <a href="height-applies-to-013.xht">height-applies-to-013</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'table'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-014-10.5.#propdef-height" class="">
        <td>
            <a href="height-applies-to-014.xht">height-applies-to-014</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-015-10.5.#propdef-height" class="">
        <td>
            <a href="height-applies-to-015.xht">height-applies-to-015</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'height' property applies to elements with 'display' set to 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-applies-to-016-10.5.#propdef-height" class="">
        <td>
            <a href="height-applies-to-016.xht">height-applies-to-016</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Height applied to elements set to 'display: none'
          <ul class="assert">
            <li>Height can be applied to 'display: none' elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-percentage-001-10.5.#propdef-height" class="">
        <td>
            <a href="height-percentage-001.xht">height-percentage-001</a></td>
        <td><a href="reference/height-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Percentage height computed to containing block
          <ul class="assert">
            <li>A percentage height is calculated using the height of the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="height-percentage-002-10.5.#propdef-height" class="">
        <td>
            <a href="height-percentage-002.xht">height-percentage-002</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Percentage based 'height' computes to 'auto' when containing block has no specified height
          <ul class="assert">
            <li>A percentage height is computed to 'auto' when the element is not absolutely positioned and there is no 'height' explicitly set on the containing block (or when the containing block's height is set to 'auto').</li>
          </ul>
        </td>
      </tr>
      <tr id="height-percentage-003-10.5.#propdef-height" class="">
        <td>
            <a href="height-percentage-003.xht">height-percentage-003</a></td>
        <td><a href="reference/height-percentage-003-ref.xht">=</a> </td>
        <td></td>
        <td>Percentage based 'height' on the root element
          <ul class="assert">
            <li>A percentage 'height' on the root element is relative to the initial containing block.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.5.#x11">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.5.#x12">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.6">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.6">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#Computing_heights_and_margins">10.6 Calculating heights and margins</a></th></tr>
      <!-- 3 tests -->
      <tr id="background-root-017-10.6" class="interact">
        <td>
            <a href="background-root-017.xht">background-root-017</a></td>
        <td><a href="reference/background-root-017-ref.xht">=</a> </td>
        <td><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Height of root element
        </td>
      </tr>
      <tr id="background-root-020-10.6" class="">
        <td>
            <a href="background-root-020.xht">background-root-020</a></td>
        <td><a href="reference/background-root-020-ref.xht">=</a> </td>
        <td></td>
        <td>Background: Test Seventeen
          <ul class="assert">
            <li>Rules governing visual formating of block level non-replaced elements and calculations of height apply to the document root element just as to any other element. Document root element should not stretch vertically to fit the viewport; document root element should only be as tall as required to enclose its content.</li>
          </ul>
        </td>
      </tr>
      <tr id="root-box-001-10.6" class="">
        <td>
            <a href="root-box-001.xht">root-box-001</a></td>
        <td><a href="reference/root-box-001-ref.xht">=</a> </td>
        <td></td>
        <td>Placing the root element
        </td>
      </tr>
    </tbody>
    <tbody id="s10.6.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.6.1">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#inline-non-replaced">10.6.1 Inline, non-replaced elements</a></th></tr>
      <!-- 3 tests -->
      <tr id="c42-ibx-ht-000-10.6.1" class="ahem">
        <td>
            <a href="c42-ibx-ht-000.xht">c42-ibx-ht-000</a></td>
        <td><a href="reference/c42-ibx-ht-000-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Inline Elements
        </td>
      </tr>
      <tr id="inline-non-replaced-height-002-10.6.1" class="ahem">
        <td>
            <a href="inline-non-replaced-height-002.xht">inline-non-replaced-height-002</a></td>
        <td><a href="reference/inline-non-replaced-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Inline non-replaced elements and padding
          <ul class="assert">
            <li>The padding starts at the top and bottom of the content area not the 'line-height'.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-non-replaced-height-003-10.6.1" class="ahem">
        <td>
            <a href="inline-non-replaced-height-003.xht">inline-non-replaced-height-003</a></td>
        <td><a href="reference/inline-non-replaced-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Inline non-replaced elements and border
          <ul class="assert">
            <li>The border starts at the top and bottom of the content area not the 'line-height'.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.6.1.#multi-font-inline-height">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.6.2">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.6.2">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#inline-replaced-height">10.6.2 Inline replaced elements, block-level replaced elements in normal flow, 'inline-block' replaced elements in normal flow and floating replaced elements</a></th></tr>
      <!-- 71 tests -->
      <tr id="block-replaced-height-001-10.6.2" class="image">
        <td>
            <a href="block-replaced-height-001.xht">block-replaced-height-001</a></td>
        <td><a href="reference/block-replaced-height-001-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Block replaced elements with 'margin-top' and 'margin-bottom' as 'auto'
          <ul class="assert">
            <li>A block replaced elements' used value of 'margin-top' and/or 'margin-bottom' set to 'auto' is '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-replaced-height-002-10.6.2" class="image">
        <td>
            <a href="block-replaced-height-002.xht">block-replaced-height-002</a></td>
        <td><a href="reference/block-replaced-height-002-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Block replaced elements relying on intrinsic height dimensions
          <ul class="assert">
            <li>The 'height' is the intrinsic height when an block replaced element with and intrinsic height has a 'height' and 'width' computed as 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-replaced-height-003-10.6.2" class="image">
        <td>
            <a href="block-replaced-height-003.xht">block-replaced-height-003</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Block replaced elements with intrinsic ratios and 'height' set to 'auto'
          <ul class="assert">
            <li>The 'height' is the used width divided by the ratio when an block replaced element has an intrinsic ratio, 'height' is set to 'auto' and 'width' is specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-replaced-height-004-10.6.2" class="">
        <td>
            <a href="block-replaced-height-004.xht">block-replaced-height-004</a></td>
        <td><a href="reference/block-replaced-height-004-ref.xht">=</a> </td>
        <td></td>
        <td>Block replaced elements without intrinsic ratios and 'height' set to 'auto'
          <ul class="assert">
            <li>For block replaced elements the 'height' is set to the largest rectangle that has a 2:1 ratio that is not greater than 150px and has a 'width' not greater than the device width.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-replaced-height-005-10.6.2" class="">
        <td>
            <a href="block-replaced-height-005.xht">block-replaced-height-005</a></td>
        <td><a href="reference/block-replaced-height-005-ref.xht">=</a> </td>
        <td></td>
        <td>Block replaced elements with percentage based intrinsic height
          <ul class="assert">
            <li>A block replaced elements with a percentage intrinsic height resolves based on the containing block height when percentage is explicitly specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-replaced-height-006-10.6.2" class="nonHTML svg">
        <td>
            <a href="block-replaced-height-006.xht">block-replaced-height-006</a></td>
        <td><a href="reference/block-replaced-height-006-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned block replaced elements with percentage based intrinsic height
          <ul class="assert">
            <li>A block replaced element with percentage intrinsic height resolves based on the containing block when the replaced element is absolutely positioned.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-replaced-height-007-10.6.2" class="">
        <td>
            <a href="block-replaced-height-007.xht">block-replaced-height-007</a></td>
        <td><a href="reference/block-replaced-height-004-ref.xht">=</a> </td>
        <td></td>
        <td>Block replaced elements with percentage based intrinsic height that cannot be resolved
          <ul class="assert">
            <li>A block replaced elements with a percentage height that cannot be resolved has no intrinsic height.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-007-10.6.2" class="svg">
        <td>
            <a href="box-sizing-007.xht">box-sizing-007</a></td>
        <td><a href="reference/box-sizing-007-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>box-sizing:border-box and auto sizing of intrinsicly sized replaced elements.
          <ul class="assert">
            <li>Exercises the sizing rules in CSS2.1 10.3.2 and 10.6.2 with box-sizing:border-box for replaced elements with either both intrisic dimentions or an intrinsic ratio, to check that they work correctly in terms of the content width height.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-008-10.6.2" class="svg">
        <td>
            <a href="box-sizing-008.xht">box-sizing-008</a></td>
        <td><a href="reference/box-sizing-008-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>box-sizing:border-box and auto sizing of replaced elements with intrinisic width only.
          <ul class="assert">
            <li>Exercises the sizing rules in CSS2.1 10.3.2 and 10.6.2 with box-sizing:border-box for replaced elements with intrisic width and no intrinsic ratio, to check that they work correctly in terms of the content width height.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-009-10.6.2" class="svg">
        <td>
            <a href="box-sizing-009.xht">box-sizing-009</a></td>
        <td><a href="reference/box-sizing-009-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>box-sizing:border-box and auto sizing of replaced elements with intrinisic height only.
          <ul class="assert">
            <li>Exercises the sizing rules in CSS2.1 10.3.2 and 10.6.2 with box-sizing:border-box for replaced elements with intrisic height and no intrinsic ratio, to check that they work correctly in terms of the content width height.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-010-10.6.2" class="svg">
        <td>
            <a href="box-sizing-010.xht">box-sizing-010</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and height, h &gt; max-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and height with the h &gt; max-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-011-10.6.2" class="svg">
        <td>
            <a href="box-sizing-011.xht">box-sizing-011</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and height, w &gt; max-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and height with the w &gt; max-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-012-10.6.2" class="svg">
        <td>
            <a href="box-sizing-012.xht">box-sizing-012</a></td>
        <td><a href="reference/box-sizing-012-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width, h &gt; max-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width with the h &gt; max-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-013-10.6.2" class="svg">
        <td>
            <a href="box-sizing-013.xht">box-sizing-013</a></td>
        <td><a href="reference/box-sizing-013-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic height, w &gt; max-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic height with the w &gt; max-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-014-10.6.2" class="svg">
        <td>
            <a href="box-sizing-014.xht">box-sizing-014</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and ratio, h &gt; max-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and ratio with the h &gt; max-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-015-10.6.2" class="svg">
        <td>
            <a href="box-sizing-015.xht">box-sizing-015</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic height and ratio, w &gt; max-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic height and ratio with the w &gt; max-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-016-10.6.2" class="svg">
        <td>
            <a href="box-sizing-016.xht">box-sizing-016</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic ratio, h &gt; max-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic ratio with the h &gt; max-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-017-10.6.2" class="svg">
        <td>
            <a href="box-sizing-017.xht">box-sizing-017</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic ratio, w &gt; max-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic ratio with the w &gt; max-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-018-10.6.2" class="svg">
        <td>
            <a href="box-sizing-018.xht">box-sizing-018</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic height and ratio, w &gt; max-wdith and h &gt; max-height and max-width/w &amp;#8804; max-height/h
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic height and ratio with the w &gt; max-width and h &gt; max-height constraint violation and max-width/w &amp;#8804; max-height/h are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-019-10.6.2" class="svg">
        <td>
            <a href="box-sizing-019.xht">box-sizing-019</a></td>
        <td><a href="reference/box-sizing-010-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and ratio, w &gt; max-wdith and h &gt; max-height and max-width/w &gt; max-height/h
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and ratio with the w &gt; max-width and h &gt; max-height constraint violation and max-width/w &gt; max-height/h are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-020-10.6.2" class="svg">
        <td>
            <a href="box-sizing-020.xht">box-sizing-020</a></td>
        <td><a href="reference/box-sizing-020-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and height, h &lt; min-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and height with the h &lt; min-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-021-10.6.2" class="svg">
        <td>
            <a href="box-sizing-021.xht">box-sizing-021</a></td>
        <td><a href="reference/box-sizing-020-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and height, w &lt; win-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and height with the w &lt; min-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-022-10.6.2" class="svg">
        <td>
            <a href="box-sizing-022.xht">box-sizing-022</a></td>
        <td><a href="reference/box-sizing-022-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width, w &lt; min-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width with the w &lt; min-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-023-10.6.2" class="svg">
        <td>
            <a href="box-sizing-023.xht">box-sizing-023</a></td>
        <td><a href="reference/box-sizing-023-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic height, h &lt; min-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic height with the h &lt; min-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-024-10.6.2" class="svg">
        <td>
            <a href="box-sizing-024.xht">box-sizing-024</a></td>
        <td><a href="reference/box-sizing-020-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic width and ratio, h &lt; mi:-height
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic width and ratio with the h &lt; min-height constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-025-10.6.2" class="svg">
        <td>
            <a href="box-sizing-025.xht">box-sizing-025</a></td>
        <td><a href="reference/box-sizing-020-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>auto sizing rules with box-sizing:border-box, intrinsic height and ratio, w &lt; min-width
          <ul class="assert">
            <li>Test checks that the CSS2.1 rules for auto width and height on replaced elements with intrinsic height and ratio with the w &lt; min-width constraint violation are properly interpreted when box-sizing is border-box.</li>
          </ul>
        </td>
      </tr>
      <tr id="c43-rpl-bbx-000-10.6.2" class="image">
        <td>
            <a href="c43-rpl-bbx-000.xht">c43-rpl-bbx-000</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Replaced Elements
        </td>
      </tr>
      <tr id="c43-rpl-bbx-001-10.6.2" class="image">
        <td>
            <a href="c43-rpl-bbx-001.xht">c43-rpl-bbx-001</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Replaced Elements
        </td>
      </tr>
      <tr id="c43-rpl-bbx-002-10.6.2" class="ahem image">
        <td>
            <a href="c43-rpl-bbx-002.xht">c43-rpl-bbx-002</a></td>
        <td><a href="reference/c43-rpl-bbx-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Replaced Elements
        </td>
      </tr>
      <tr id="c43-rpl-ibx-000-10.6.2" class="ahem image">
        <td>
            <a href="c43-rpl-ibx-000.xht">c43-rpl-ibx-000</a></td>
        <td><a href="reference/c43-rpl-ibx-000-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Replaced Elements
        </td>
      </tr>
      <tr id="float-replaced-height-001-10.6.2" class="image">
        <td>
            <a href="float-replaced-height-001.xht">float-replaced-height-001</a></td>
        <td><a href="reference/float-replaced-height-001-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Floated replaced elements with 'margin-top' and 'margin-bottom' as 'auto'
          <ul class="assert">
            <li>A floated replaced elements' used value of 'margin-top' and/or 'margin-bottom' set to 'auto' is '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-replaced-height-002-10.6.2" class="image">
        <td>
            <a href="float-replaced-height-002.xht">float-replaced-height-002</a></td>
        <td><a href="reference/float-replaced-height-002-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Floated replaced elements relying on intrinsic height dimensions
          <ul class="assert">
            <li>The 'height' is the intrinsic height when an floated replaced element with and intrinsic height has a 'height' and 'width' computed as 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-replaced-height-003-10.6.2" class="image">
        <td>
            <a href="float-replaced-height-003.xht">float-replaced-height-003</a></td>
        <td><a href="reference/float-replaced-height-003-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Floating replaced elements with intrinsic ratios and 'height' set to 'auto'
          <ul class="assert">
            <li>The 'height' is the used width divided by the ratio when an floated replaced element has an intrinsic ratio, 'height' is set to 'auto' and 'width' is specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-replaced-height-004-10.6.2" class="">
        <td>
            <a href="float-replaced-height-004.xht">float-replaced-height-004</a></td>
        <td><a href="reference/float-replaced-height-004-ref.xht">=</a> </td>
        <td></td>
        <td>Floated replaced elements without intrinsic ratios and 'height' set to 'auto'
          <ul class="assert">
            <li>For floated replaced elements the 'height' is set to the largest rectangle that has a 2:1 ratio that is not greater than 150px and has a 'width' not greater than the device width.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-replaced-height-005-10.6.2" class="">
        <td>
            <a href="float-replaced-height-005.xht">float-replaced-height-005</a></td>
        <td><a href="reference/float-replaced-height-005-ref.xht">=</a> </td>
        <td></td>
        <td>Floated replaced elements with percentage based intrinsic height
          <ul class="assert">
            <li>A floated replaced element with percentage intrinsic height resolves based on the containing block height when percentage is explicitly specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-replaced-height-006-10.6.2" class="nonHTML svg">
        <td>
            <a href="float-replaced-height-006.xht">float-replaced-height-006</a></td>
        <td><a href="reference/float-replaced-height-006-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned floated replaced elements with percentage based intrinsic height
          <ul class="assert">
            <li>A floated replaced element with percentage intrinsic height resolves based on the containing block when the replaced element is absolutely positioned.</li>
          </ul>
        </td>
      </tr>
      <tr id="float-replaced-height-007-10.6.2" class="">
        <td>
            <a href="float-replaced-height-007.xht">float-replaced-height-007</a></td>
        <td><a href="reference/float-replaced-height-004-ref.xht">=</a> </td>
        <td></td>
        <td>Floated replaced elements with percentage based intrinsic height that cannot be resolved
          <ul class="assert">
            <li>A floated replaced elements with a percentage height that cannot be resolved has no intrinsic height.</li>
          </ul>
        </td>
      </tr>
      <tr id="floating-replaced-height-008-10.6.2" class="image interact">
        <td>
            <a href="floating-replaced-height-008.xht">floating-replaced-height-008</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Floating replaced elements - specified width, height in percentages and intrinsic ratio
          <ul class="assert">
            <li>When 'height: 1%' (or any other percentage) applies to a floating replaced element and when the height of its containing block is not specified explicitly (i.e., it depends on content height), then such height computes to 'auto'. Then, if such floating replaced element has an intrinsic ratio and its used width is known or resolved, then the used value of 'height' is determined by the equation (used width) / (intrinsic ratio).</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-height-001-10.6.2" class="">
        <td>
            <a href="inline-block-height-001.xht">inline-block-height-001</a></td>
        <td><a href="reference/inline-block-height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Test for height:auto on inline-block
        </td>
      </tr>
      <tr id="inline-block-height-002-10.6.2" class="">
        <td>
            <a href="inline-block-height-002.xht">inline-block-height-002</a></td>
        <td><a href="reference/inline-block-height-002-ref.xht">=</a> </td>
        <td></td>
        <td>Test for height:&lt;length&gt; on inline-block
        </td>
      </tr>
      <tr id="inline-block-replaced-height-001-10.6.2" class="image">
        <td>
            <a href="inline-block-replaced-height-001.xht">inline-block-replaced-height-001</a></td>
        <td><a href="reference/block-replaced-height-001-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Inline-block replaced elements with 'margin-top' and 'margin-bottom' as 'auto'
          <ul class="assert">
            <li>An inline-block replaced elements' used value of 'margin-top' and/or 'margin-bottom' set to 'auto' is '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-replaced-height-002-10.6.2" class="image">
        <td>
            <a href="inline-block-replaced-height-002.xht">inline-block-replaced-height-002</a></td>
        <td><a href="reference/block-replaced-height-002-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Inline-block replaced elements relying on intrinsic height dimensions
          <ul class="assert">
            <li>The used value of 'height' is the intrinsic height when an inline-block replaced element has an intrinsic height and 'width' computed as 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-replaced-height-003-10.6.2" class="image">
        <td>
            <a href="inline-block-replaced-height-003.xht">inline-block-replaced-height-003</a></td>
        <td><a href="reference/inline-block-replaced-height-003-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Inline-block replaced elements with intrinsic ratio and 'height' set to 'auto'
          <ul class="assert">
            <li>The 'height' is the used width divided by the intrinsic ratio when an inline-block replaced element has an intrinsic ratio, 'height' is set to 'auto' and 'width' is specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-replaced-height-004-10.6.2" class="">
        <td>
            <a href="inline-block-replaced-height-004.xht">inline-block-replaced-height-004</a></td>
        <td><a href="reference/block-replaced-height-004-ref.xht">=</a> </td>
        <td></td>
        <td>Inline-block replaced element without intrinsic ratio and 'height' set to 'auto'
          <ul class="assert">
            <li>For inline-block replaced element that has no intrinsic ratio and a 'height' set to 'auto', the 'height' is set to the largest rectangle that has a 2:1 ratio that is not greater than 150px and has a 'width' not greater than the device width.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-replaced-height-005-10.6.2" class="">
        <td>
            <a href="inline-block-replaced-height-005.xht">inline-block-replaced-height-005</a></td>
        <td><a href="reference/block-replaced-height-005-ref.xht">=</a> </td>
        <td></td>
        <td>Inline-block replaced elements with percentage based intrinsic height
          <ul class="assert">
            <li>An inline-block replaced element with percentage intrinsic height resolves based on the containing block height when percentage is explicitly specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-replaced-height-006-10.6.2" class="nonHTML svg">
        <td>
            <a href="inline-block-replaced-height-006.xht">inline-block-replaced-height-006</a></td>
        <td><a href="reference/block-replaced-height-006-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline-block replaced elements with percentage based height
          <ul class="assert">
            <li>An inline-block replaced element with a percentage height resolves based on the containing block when the replaced element is absolutely positioned.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-replaced-height-007-10.6.2" class="">
        <td>
            <a href="inline-block-replaced-height-007.xht">inline-block-replaced-height-007</a></td>
        <td><a href="reference/block-replaced-height-004-ref.xht">=</a> </td>
        <td></td>
        <td>Inline-block replaced element with percentage based height that cannot be resolved
          <ul class="assert">
            <li>An inline-block replaced element with a percentage height that cannot be resolved will have its 'height' value computed to 'auto'. In which case, if such inline-block replaced element's 'height' has a computed value of 'auto' and no intrinsic ratio, then the 'height' is set to the largest rectangle that has a 2:1 ratio that is not greater than 150px and has a 'width' not greater than the device width.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-replaced-height-008-10.6.2" class="image interact">
        <td>
            <a href="inline-block-replaced-height-008.xht">inline-block-replaced-height-008</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>'inline-block' replaced elements in normal flow - specified width, height in percentages and intrinsic ratio
          <ul class="assert">
            <li>When 'height: 1%' (or any other percentage) applies to an 'inline-block' replaced element and when the height of its containing block is not specified explicitly (i.e., it depends on content height), then such height computes to 'auto'. Then, if such inline-block replaced element has an intrinsic ratio and its used width is known or resolved, then the used value of 'height' is determined by the equation (used width) / (intrinsic ratio).</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-replaced-height-009-10.6.2" class="nonHTML svg">
        <td>
            <a href="inline-block-replaced-height-009.xht">inline-block-replaced-height-009</a></td>
        <td><a href="reference/absolute-replaced-width-003b-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>CSS Test: height of inline-block replaced element with no intrinsic height and no intrinsic ratio
          <ul class="assert">
            <li>If an inline-block replaced element (like the svg element in this test) has no intrinsic height and no intrinsic ratio, then the used value of 'height' becomes 150px.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-height-001-10.6.2" class="image">
        <td>
            <a href="inline-replaced-height-001.xht">inline-replaced-height-001</a></td>
        <td><a href="reference/block-replaced-height-001-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Inline replaced elements with 'margin-top' and 'margin-bottom' as 'auto'
          <ul class="assert">
            <li>An inline replaced elements' used value of 'margin-top' and/or 'margin-bottom' set to 'auto' is '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-height-002-10.6.2" class="image">
        <td>
            <a href="inline-replaced-height-002.xht">inline-replaced-height-002</a></td>
        <td><a href="reference/block-replaced-height-002-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Inline replaced elements relying on intrinsic height dimensions
          <ul class="assert">
            <li>The 'height' is the intrinsic height when an inline replaced element with an intrinsic height has a 'height' and 'width' computed as 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-height-003-10.6.2" class="image">
        <td>
            <a href="inline-replaced-height-003.xht">inline-replaced-height-003</a></td>
        <td><a href="reference/inline-block-replaced-height-003-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Inline replaced elements with intrinsic ratios and 'height' set to 'auto'
          <ul class="assert">
            <li>The 'height' is the used width divided by the ratio when an inline replaced element has an intrinsic ratio, 'height' is set to 'auto' and 'width' is not 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-height-004-10.6.2" class="">
        <td>
            <a href="inline-replaced-height-004.xht">inline-replaced-height-004</a></td>
        <td><a href="reference/block-replaced-height-004-ref.xht">=</a> </td>
        <td></td>
        <td>Inline replaced elements without intrinsic ratios and 'height' set to 'auto'
          <ul class="assert">
            <li>For inline replaced elements the 'height' is set to the largest rectangle that has a 2:1 ratio that is not greater than 150px and has a 'width' not greater than the device width.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-height-005-10.6.2" class="">
        <td>
            <a href="inline-replaced-height-005.xht">inline-replaced-height-005</a></td>
        <td><a href="reference/block-replaced-height-005-ref.xht">=</a> </td>
        <td></td>
        <td>Inline replaced elements with percentage based intrinsic height
          <ul class="assert">
            <li>An inline replaced element with percentage intrinsic height resolves based on the containing block height when percentage is explicitly specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-height-006-10.6.2" class="nonHTML svg">
        <td>
            <a href="inline-replaced-height-006.xht">inline-replaced-height-006</a></td>
        <td><a href="reference/block-replaced-height-006-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced elements with percentage based intrinsic height
          <ul class="assert">
            <li>An inline replaced element with percentage intrinsic height resolves based on the containing block when the replaced element is absolutely positioned.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-height-007-10.6.2" class="">
        <td>
            <a href="inline-replaced-height-007.xht">inline-replaced-height-007</a></td>
        <td><a href="reference/block-replaced-height-004-ref.xht">=</a> </td>
        <td></td>
        <td>Inline replaced elements with percentage based intrinsic height that cannot be resolved
          <ul class="assert">
            <li>An inline replaced element with a percentage height that cannot be resolved has no intrinsic height.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-height-008-10.6.2" class="image interact">
        <td>
            <a href="inline-replaced-height-008.xht">inline-replaced-height-008</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>Inline replaced elements in normal flow - specified width, height in percentages and intrinsic ratio
          <ul class="assert">
            <li>When 'height: 1%' (or any other percentage) applies to an inline replaced element and when the height of its containing block is not specified explicitly (i.e., it depends on content height), then such height computes to 'auto'. Then, if such inline replaced element has an intrinsic ratio and its used width is known or resolved, then the used value of 'height' is determined by the equation (used width) / (intrinsic ratio).</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-height-009-10.6.2" class="nonHTML svg">
        <td>
            <a href="inline-replaced-height-009.xht">inline-replaced-height-009</a></td>
        <td><a href="reference/absolute-replaced-width-003b-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>CSS Test: height of inline replaced element with no intrinsic height and no intrinsic ratio
          <ul class="assert">
            <li>If an inline replaced element (like the svg element in this test) has no intrinsic height and no intrinsic ratio, then the used value of 'height' becomes 150px.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-height-010-10.6.2" class="image">
        <td>
            <a href="inline-replaced-height-010.xht">inline-replaced-height-010</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>height - inline replaced element and max-width
          <ul class="assert">
            <li>The height of an inline replaced element should be re-calculated based on its constrained width (constrained by computed 'max-width' value) and based its intrinsic ratio when it has an intrinsic ratio.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-height-011-10.6.2" class="image">
        <td>
            <a href="inline-replaced-height-011.xht">inline-replaced-height-011</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>height - inline replaced element and min-width
          <ul class="assert">
            <li>The height of an inline replaced element should be re-calculated based on its constrained width (constrained by computed 'min-width' value) and based its intrinsic ratio when it has an intrinsic ratio.</li>
          </ul>
        </td>
      </tr>
      <tr id="replaced-elements-all-auto-10.6.2" class="should">
        <td>
            <a href="replaced-elements-all-auto.xht">replaced-elements-all-auto</a></td>
        <td><a href="reference/replaced-elements-all-auto-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-height-20-10.6.2" class="should">
        <td>
            <a href="replaced-elements-height-20.xht">replaced-elements-height-20</a></td>
        <td><a href="reference/replaced-elements-height-20-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-max-height-20-10.6.2" class="should">
        <td>
            <a href="replaced-elements-max-height-20.xht">replaced-elements-max-height-20</a></td>
        <td><a href="reference/replaced-elements-height-20-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-max-width-40-10.6.2" class="should">
        <td>
            <a href="replaced-elements-max-width-40.xht">replaced-elements-max-width-40</a></td>
        <td><a href="reference/replaced-elements-width-40-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-min-height-20-10.6.2" class="should">
        <td>
            <a href="replaced-elements-min-height-20.xht">replaced-elements-min-height-20</a></td>
        <td><a href="reference/replaced-elements-all-auto-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-min-height-40-10.6.2" class="should">
        <td>
            <a href="replaced-elements-min-height-40.xht">replaced-elements-min-height-40</a></td>
        <td><a href="reference/replaced-elements-min-height-40-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-min-width-40-10.6.2" class="should">
        <td>
            <a href="replaced-elements-min-width-40.xht">replaced-elements-min-width-40</a></td>
        <td><a href="reference/replaced-elements-all-auto-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-min-width-80-10.6.2" class="should">
        <td>
            <a href="replaced-elements-min-width-80.xht">replaced-elements-min-width-80</a></td>
        <td><a href="reference/replaced-elements-min-width-80-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-elements-width-40-10.6.2" class="should">
        <td>
            <a href="replaced-elements-width-40.xht">replaced-elements-width-40</a></td>
        <td><a href="reference/replaced-elements-width-40-ref.xht">=</a> </td>
        <td><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>CSS 2.1 replaced element sizing
        </td>
      </tr>
      <tr id="replaced-intrinsic-004-10.6.2" class="svg">
        <td>
            <a href="replaced-intrinsic-004.xht">replaced-intrinsic-004</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Auto Intrinsic Sizes: Intrinsic Height Only and Specified Width
          <ul class="assert">
            <li>An inline replaced element with an intrinsic height only and a specified width is drawn at the specified width and intrinsic height.</li>
          </ul>
        </td>
      </tr>
      <tr id="replaced-intrinsic-ratio-001-10.6.2" class="may svg">
        <td>
            <a href="replaced-intrinsic-ratio-001.xht">replaced-intrinsic-ratio-001</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Auto Width for Replaced Element with Intrinsic Ratio Only
        </td>
      </tr>
    </tbody>
    <tbody id="s10.6.3">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.6.3">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#normal-block">10.6.3 Block-level non-replaced elements in normal flow when 'overflow' computes to 'visible'</a></th></tr>
      <!-- 21 tests -->
      <tr id="block-non-replaced-height-001-10.6.3" class="">
        <td>
            <a href="block-non-replaced-height-001.xht">block-non-replaced-height-001</a></td>
        <td><a href="reference/block-non-replaced-height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Block-level non-replaced elements in normal flow when 'overflow' computes to 'visible' and margins top and bottom are 'auto'
          <ul class="assert">
            <li>The margin top and bottom used values are '0' for block-level non-replaced elements in normal flow when 'overflow' computes to 'visible' and margin top and bottom both are 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-height-002-10.6.3" class="">
        <td>
            <a href="block-non-replaced-height-002.xht">block-non-replaced-height-002</a></td>
        <td></td>
        <td></td>
        <td>Block-level non-replaced elements in normal flow when 'overflow' does not compute to 'visible'
          <ul class="assert">
            <li>The margin top and bottom used values are '0' for block-level non-replaced elements in normal flow when 'overflow' does not compute to 'visible' and margin top and bottom both are 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-height-003-10.6.3" class="">
        <td>
            <a href="block-non-replaced-height-003.xht">block-non-replaced-height-003</a></td>
        <td></td>
        <td></td>
        <td>Block-level non-replaced elements in normal flow when 'overflow' computes to 'visible' and 'height' is 'auto'
          <ul class="assert">
            <li>The 'height' is the 'height' of the child block box when a block-level non-replaced element is in normal flow and 'overflow' computes to 'visible'.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-height-004-10.6.3" class="">
        <td>
            <a href="block-non-replaced-height-004.xht">block-non-replaced-height-004</a></td>
        <td></td>
        <td></td>
        <td>Block-level non-replaced elements in normal flow when 'overflow' does not compute to 'visible' and 'height' is 'auto'
          <ul class="assert">
            <li>The 'height' is the 'height' of the child block box when a block-level non-replaced element is in normal flow and 'overflow' does not compute to 'visible'.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-height-005-10.6.3" class="ahem">
        <td>
            <a href="block-non-replaced-height-005.xht">block-non-replaced-height-005</a></td>
        <td><a href="reference/block-non-replaced-height-005-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Block-level non-replaced elements in normal flow when 'overflow' computes to 'visible' and 'height' is 'auto' adjust based on the line box height
          <ul class="assert">
            <li>The 'height' is the distance from the topmost to the bottommost line box when a block-level non-replaced element is in normal flow and 'overflow' computes to 'visible'.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-height-006-10.6.3" class="ahem">
        <td>
            <a href="block-non-replaced-height-006.xht">block-non-replaced-height-006</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Block-level non-replaced elements in normal flow when 'overflow' does not compute to 'visible' and 'height' is 'auto' adjust based on the line box height
          <ul class="assert">
            <li>The 'height' is the distance from the topmost to the bottommost line box when a block-level non-replaced element is in normal flow and 'overflow' does not compute to 'visible'.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-height-007-10.6.3" class="">
        <td>
            <a href="block-non-replaced-height-007.xht">block-non-replaced-height-007</a></td>
        <td></td>
        <td></td>
        <td>Height determination for block-level non-replaced elements in normal flow when 'overflow' computes to 'visible' and elements' margins collapse
          <ul class="assert">
            <li>The 'height' is the distance between the top border edge of the top most block-level child box that doesn't have margins collapsed through it, and the bottom border edge of the bottommost block-level child that doesn't have margins collapsed through it. When a block-level non-replaced element is in normal flow, 'overflow' computes to 'visible' and the 'height' is 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-height-008-10.6.3" class="">
        <td>
            <a href="block-non-replaced-height-008.xht">block-non-replaced-height-008</a></td>
        <td></td>
        <td></td>
        <td>Height determination for block-level non-replaced elements in normal flow when 'overflow' does not compute to 'visible' and elements' margins collapse
          <ul class="assert">
            <li>The 'height' is the distance between the top border edge of the top most block-level child box that doesn't have margins collapsed, and the bottom border edge of the bottommost block-level child that doesn't have margins collapsed. When a block-level non-replaced element is in normal flow, 'overflow' does not compute to 'visible' but has been propagated to the viewport and the 'height' is 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-height-009-10.6.3" class="">
        <td>
            <a href="block-non-replaced-height-009.xht">block-non-replaced-height-009</a></td>
        <td></td>
        <td></td>
        <td>Height determination for block-level non-replaced elements in normal flow when 'overflow' computes to 'visible' and elements' margins do not collapse
          <ul class="assert">
            <li>When a block-level non-replaced element is in normal flow, 'overflow' computes to 'visible', the 'height' is 'auto' and top and bottom margins do not collapse. The 'height' is the distance from the top of the topmost margin edge of the content to the bottom edge of the bottom (possibly collapsed) margin of its last in-flow child, if the child's bottom margin does not collapse with the element's bottom margin.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-height-010-10.6.3" class="">
        <td>
            <a href="block-non-replaced-height-010.xht">block-non-replaced-height-010</a></td>
        <td></td>
        <td></td>
        <td>Height determination for block-level non-replaced elements in normal flow when 'overflow' does not compute to 'visible' and elements' margins do not collapse
          <ul class="assert">
            <li>When a block-level non-replaced element is in normal flow, 'overflow' does not compute to 'visible', the 'height' is 'auto' and top and bottom margins do not collapse. The 'height' is the sized from the top of the topmost margin edge of the content to the bottom of the bottom most margin edge of the content.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-height-011-10.6.3" class="">
        <td>
            <a href="block-non-replaced-height-011.xht">block-non-replaced-height-011</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Floated children are ignored for 'height' on block-level non-replaced elements in normal flow when 'overflow' computes to 'visible'
          <ul class="assert">
            <li>A floated child element is not considered when sizing the 'height' of a block-level non-replaced element is in normal flow.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-height-012-10.6.3" class="">
        <td>
            <a href="block-non-replaced-height-012.xht">block-non-replaced-height-012</a></td>
        <td></td>
        <td></td>
        <td>Floated children are ignored for 'height' on block-level non-replaced elements in normal flow when 'overflow' does not computes to 'visible'
          <ul class="assert">
            <li>A floated child element is not considered when sizing the 'height' of a block-level non-replaced element is in normal flow.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-height-013-10.6.3" class="">
        <td>
            <a href="block-non-replaced-height-013.xht">block-non-replaced-height-013</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>An absolutely positioned child elements' 'height' is ignored for block-level non-replaced elements in normal flow when 'overflow' computes to 'visible'
          <ul class="assert">
            <li>An absolutely positioned child element is not considered when sizing the 'height' of a block-level non-replaced element is in normal flow.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-height-014-10.6.3" class="">
        <td>
            <a href="block-non-replaced-height-014.xht">block-non-replaced-height-014</a></td>
        <td></td>
        <td></td>
        <td>An absolutely positioned child elements' 'height' is ignored for block-level non-replaced elements in normal flow when 'overflow' does not compute to 'visible'
          <ul class="assert">
            <li>An absolutely positioned child element is not considered when sizing the 'height' of a block-level non-replaced element is in normal flow.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-height-015-10.6.3" class="">
        <td>
            <a href="block-non-replaced-height-015.xht">block-non-replaced-height-015</a></td>
        <td></td>
        <td></td>
        <td>A relative positioned child elements' offset is ignored for 'height' on a block-level non-replaced elements in normal flow when 'overflow' computes to 'visible'
          <ul class="assert">
            <li>A relative positioned child elements' offset is not considered when sizing the 'height' of a block-level non-replaced element is in normal flow.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-non-replaced-height-016-10.6.3" class="">
        <td>
            <a href="block-non-replaced-height-016.xht">block-non-replaced-height-016</a></td>
        <td></td>
        <td></td>
        <td>A relative positioned child elements' offset is ignored for 'height' on a block-level non-replaced elements in normal flow when 'overflow' does not compute to 'visible'
          <ul class="assert">
            <li>A relative positioned child elements' offset is not considered when sizing the 'height' of a block-level non-replaced element is in normal flow.</li>
          </ul>
        </td>
      </tr>
      <tr id="c5525-fltblck-000-10.6.3" class="ahem image">
        <td>
            <a href="c5525-fltblck-000.xht">c5525-fltblck-000</a></td>
        <td><a href="reference/c5525-fltblck-000-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>float
        </td>
      </tr>
      <tr id="c5525-fltblck-001-10.6.3" class="">
        <td>
            <a href="c5525-fltblck-001.xht">c5525-fltblck-001</a></td>
        <td></td>
        <td></td>
        <td>float
        </td>
      </tr>
      <tr id="margin-collapse-clear-012-10.6.3" class="">
        <td>
            <a href="margin-collapse-clear-012.xht">margin-collapse-clear-012</a></td>
        <td><a href="reference/margin-collapse-clear-012-ref.xht">=</a> </td>
        <td></td>
        <td>Margin collapsing with clearance - margins of a 'collapsed through' box with clearance do not collapse with parent block's bottom margin
          <ul class="assert">
            <li>When an element has had clearance applied to it and its own margins collapse, these margins collapse with the adjoining margins of following siblings but the resulting margin does not collapse with the bottom margin of the parent block</li>
          </ul>
        </td>
      </tr>
      <tr id="margin-collapse-clear-013-10.6.3" class="">
        <td>
            <a href="margin-collapse-clear-013.xht">margin-collapse-clear-013</a></td>
        <td><a href="reference/margin-collapse-clear-012-ref.xht">=</a> </td>
        <td></td>
        <td>Margin collapsing with clearance - margins of a 'collapsed through' box with clearance do not collapse with parent block's bottom margin
          <ul class="assert">
            <li>When an element has had clearance applied to it and its own margins collapse, these margins do not collapse with the bottom margin of the parent block</li>
          </ul>
        </td>
      </tr>
      <tr id="margin-collapse-clear-014-10.6.3" class="">
        <td>
            <a href="margin-collapse-clear-014.xht">margin-collapse-clear-014</a></td>
        <td><a href="reference/margin-collapse-clear-014-ref.xht">=</a> </td>
        <td></td>
        <td>Margin collapsing with clearance - clearance may be negative
          <ul class="assert">
            <li>Clearance is created above the top margin of the element with clear set. Clearance can be negative. Clearance stops the collapsing of the element's margins with the preceding siblings' margins and with the parent block's bottom margin.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.6.4">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.6.4">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#abs-non-replaced-height">10.6.4 Absolutely positioned, non-replaced elements</a></th></tr>
      <!-- 157 tests -->
      <tr id="abs-pos-non-replaced-vlr-027-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-027.xht">abs-pos-non-replaced-vlr-027</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto', then set 'top' to static position and solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-103-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-103.xht">abs-pos-non-replaced-vlr-103</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left', 'width' and 'right' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left', 'width' and 'right' are 'auto' and 'writing-mode' is 'vertical-lr', then set 'left' to the static position, the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-105-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-105.xht">abs-pos-non-replaced-vlr-105</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top', 'height', and 'bottom' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top', 'height' and 'bottom' are 'auto', then set 'top' to the static position, the height is based on content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-107-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-107.xht">abs-pos-non-replaced-vlr-107</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left', 'width' and 'right' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left', 'width' and 'right' are 'auto' and 'writing-mode' is 'vertical-lr', then set 'left' to the static position, the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-109-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-109.xht">abs-pos-non-replaced-vlr-109</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left', 'width' and 'right' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left', 'width' and 'right' are 'auto' and 'writing-mode' is 'vertical-lr', then set 'left' to the static position, the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-111-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-111.xht">abs-pos-non-replaced-vlr-111</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left', 'width' and 'right' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left', 'width' and 'right' are 'auto' and 'writing-mode' is 'vertical-lr', then set 'left' to the static position, the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-113-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-113.xht">abs-pos-non-replaced-vlr-113</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top', 'height', and 'bottom' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top', 'height' and 'bottom' are 'auto', then set 'top' to the static position, the height is based on content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-115-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-115.xht">abs-pos-non-replaced-vlr-115</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-013-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left', 'width' and 'right' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left', 'width' and 'right' are 'auto' and 'writing-mode' is 'vertical-lr', then set 'left' to the static position, the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-117-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-117.xht">abs-pos-non-replaced-vlr-117</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left', 'width' and 'right' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left', 'width' and 'right' are 'auto' and 'writing-mode' is 'vertical-lr', then set 'left' to the static position, the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-119-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-119.xht">abs-pos-non-replaced-vlr-119</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'width' and 'right' are 'auto' and 'left' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'width' and 'right' are 'auto' and 'left' is not 'auto' and 'writing-mode' is 'vertical-lr', then the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-121-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-121.xht">abs-pos-non-replaced-vlr-121</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top' and 'height' are 'auto' and 'bottom' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top' and 'height' are 'auto' and 'bottom' is not 'auto', then the height is based on content and then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-123-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-123.xht">abs-pos-non-replaced-vlr-123</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'width' and 'right' are 'auto' and 'left' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'width' and 'right' are 'auto' and 'left' is not 'auto' and 'writing-mode' is 'vertical-rl', then the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-125-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-125.xht">abs-pos-non-replaced-vlr-125</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'width' and 'right' are 'auto' and 'left' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'width' and 'right' are 'auto' and 'left' is not 'auto' and 'writing-mode' is 'vertical-rl', then the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-127-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-127.xht">abs-pos-non-replaced-vlr-127</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'width' and 'right' are 'auto' and 'left' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' and 'right' are 'auto' and 'left' is not 'auto' and 'writing-mode' is 'vertical-lr', then the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-129-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-129.xht">abs-pos-non-replaced-vlr-129</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' and 'height' are 'auto' and 'bottom' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top' and 'height' are 'auto' and 'bottom' is not 'auto', then the height is based on content and then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-131-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-131.xht">abs-pos-non-replaced-vlr-131</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-013-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'width' and 'right' are 'auto' and 'left' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' and 'right' are 'auto' and 'left' is not 'auto' and 'writing-mode' is 'vertical-lr', then the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-133-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-133.xht">abs-pos-non-replaced-vlr-133</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'width' and 'right' are 'auto' and 'left' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' and 'right' are 'auto' and 'left' is not 'auto' and 'writing-mode' is 'vertical-lr', then the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-135-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-135.xht">abs-pos-non-replaced-vlr-135</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' and 'right' are 'auto' and 'width' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' and 'right' are 'auto' and 'width' is not 'auto' and 'writing-mode' is 'vertical-lr', then set 'left' to the static position and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-137-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-137.xht">abs-pos-non-replaced-vlr-137</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto', then set 'top' to the static position and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-139-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-139.xht">abs-pos-non-replaced-vlr-139</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' and 'right' are 'auto' and 'width' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' and 'right' are 'auto' and 'width' is not 'auto' and 'writing-mode' is 'vertical-lr', then set 'left' to the static position and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-141-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-141.xht">abs-pos-non-replaced-vlr-141</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' and 'right' are 'auto' and 'width' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' and 'right' are 'auto' and 'width' is not 'auto' and 'writing-mode' is 'vertical-lr', then set 'left' to the static position and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-143-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-143.xht">abs-pos-non-replaced-vlr-143</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' and 'right' are 'auto' and 'width' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' and 'right' are 'auto' and 'width' is not 'auto' and 'writing-mode' is 'vertical-lr', then set 'left' to the static position and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-145-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-145.xht">abs-pos-non-replaced-vlr-145</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto', then set 'top' to the static position and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-147-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-147.xht">abs-pos-non-replaced-vlr-147</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-013-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' and 'right' are 'auto' and 'width' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' and 'right' are 'auto' and 'width' is not 'auto' and 'writing-mode' is 'vertical-lr', then set 'left' to the static position and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-149-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-149.xht">abs-pos-non-replaced-vlr-149</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' and 'right' are 'auto' and 'width' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' and 'right' are 'auto' and 'width' is not 'auto' and 'writing-mode' is 'vertical-lr', then set 'left' to the static position and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-151-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-151.xht">abs-pos-non-replaced-vlr-151</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' and 'width' are 'auto' and 'right' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' and 'width' are 'auto' and 'right' is not 'auto' and 'writing-mode' is 'vertical-lr', then the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-153-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-153.xht">abs-pos-non-replaced-vlr-153</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto', then the height is based on content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-155-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-155.xht">abs-pos-non-replaced-vlr-155</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-155-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' and 'width' are 'auto' and 'right' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' and 'width' are 'auto' and 'right' is not 'auto' and 'writing-mode' is 'vertical-lr', then the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-157-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-157.xht">abs-pos-non-replaced-vlr-157</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' and 'width' are 'auto' and 'right' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' and 'width' are 'auto' and 'right' is not 'auto' and 'writing-mode' is 'vertical-lr', then the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-159-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-159.xht">abs-pos-non-replaced-vlr-159</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' and 'width' are 'auto' and 'right' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' and 'width' are 'auto' and 'right' is not 'auto' and 'writing-mode' is 'vertical-lr', then the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-161-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-161.xht">abs-pos-non-replaced-vlr-161</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto' and 'writing-mode' is 'vertical-lr', then then the height is based on the content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-163-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-163.xht">abs-pos-non-replaced-vlr-163</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-163-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' and 'width' are 'auto' and 'right' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' and 'width' are 'auto' and 'right' is not 'auto' and 'writing-mode' is 'vertical-lr', then the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-165-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-165.xht">abs-pos-non-replaced-vlr-165</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' and 'width' are 'auto' and 'right' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' and 'width' are 'auto' and 'right' is not 'auto' and 'writing-mode' is 'vertical-lr', then the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-167-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-167.xht">abs-pos-non-replaced-vlr-167</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'right' is 'auto', 'width' and 'left' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'right' is 'auto', 'width' and 'left' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-169-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-169.xht">abs-pos-non-replaced-vlr-169</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top' is 'auto', 'height' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top' is 'auto', 'height' and 'bottom' are not 'auto', then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-171-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-171.xht">abs-pos-non-replaced-vlr-171</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'right' is 'auto' and 'width' and 'left' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'right' is 'auto' and 'width' and 'left' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-173-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-173.xht">abs-pos-non-replaced-vlr-173</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'right' is 'auto' and 'width' and 'left' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'right' is 'auto' and 'width' and 'left' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-175-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-175.xht">abs-pos-non-replaced-vlr-175</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'right' is 'auto' and 'width' and 'left' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'right' is 'auto' and 'width' and 'left' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-177-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-177.xht">abs-pos-non-replaced-vlr-177</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' is 'auto', 'height' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top' is 'auto', 'height' and 'bottom' are not 'auto', then then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-179-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-179.xht">abs-pos-non-replaced-vlr-179</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-013-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'right' is 'auto' and 'width' and 'left' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'right' is 'auto' and 'width' and 'left' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-181-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-181.xht">abs-pos-non-replaced-vlr-181</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'right' is 'auto' and 'width' and 'left' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'right' is 'auto' and 'width' and 'left' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-183-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-183.xht">abs-pos-non-replaced-vlr-183</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'width' is 'auto' and 'left' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'right' is 'auto', 'width' and 'left' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'width'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-185-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-185.xht">abs-pos-non-replaced-vlr-185</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'height' is 'auto', 'top' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'height' is 'auto', 'top' and 'bottom' are not 'auto', then solve for 'height'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-187-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-187.xht">abs-pos-non-replaced-vlr-187</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'width' is 'auto' and 'left' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'width' is 'auto' and 'left' and 'right' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'width'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-189-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-189.xht">abs-pos-non-replaced-vlr-189</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'width' is 'auto' and 'left' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'width' is 'auto' and 'left' and 'right' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'width'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-191-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-191.xht">abs-pos-non-replaced-vlr-191</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'width' is 'auto' and 'left' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' is 'auto' and 'left' and 'right' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'width'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-193-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-193.xht">abs-pos-non-replaced-vlr-193</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'height' is 'auto', 'top' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'height' is 'auto', 'top' and 'bottom' are not 'auto', then then solve for 'height'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-195-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-195.xht">abs-pos-non-replaced-vlr-195</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-013-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'width' is 'auto' and 'left' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' is 'auto' and 'left' and 'right' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'width'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-197-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-197.xht">abs-pos-non-replaced-vlr-197</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'width' is 'auto' and 'left' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' is 'auto' and 'left' and 'right' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'width'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-199-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-199.xht">abs-pos-non-replaced-vlr-199</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' is 'auto' and 'right' and 'width' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' is 'auto' and 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-201-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-201.xht">abs-pos-non-replaced-vlr-201</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'bottom' is 'auto', 'top' and 'height' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'bottom' is 'auto', 'top' and 'height' are not 'auto', then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-203-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-203.xht">abs-pos-non-replaced-vlr-203</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-155-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' is 'auto' and 'right' and 'width' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' is 'auto' and 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-205-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-205.xht">abs-pos-non-replaced-vlr-205</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' is 'auto' and 'right' and 'width' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' is 'auto' and 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-207-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-207.xht">abs-pos-non-replaced-vlr-207</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' is 'auto' and 'right' and 'width' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' is 'auto' and 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-209-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-209.xht">abs-pos-non-replaced-vlr-209</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'bottom' is 'auto', 'top' and 'height' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'bottom' is 'auto', 'top' and 'height' are not 'auto', then then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-211-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-211.xht">abs-pos-non-replaced-vlr-211</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-163-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' is 'auto' and 'right' and 'width' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' is 'auto' and 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-213-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-213.xht">abs-pos-non-replaced-vlr-213</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' is 'auto' and 'right' and 'width' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' is 'auto' and 'left' and 'right' are not 'auto' and 'writing-mode' is 'vertical-lr', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-215-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-215.xht">abs-pos-non-replaced-vlr-215</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left', 'right' and 'width' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left', 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-lr' and if the values are over-constrained, then ignore the value for 'right' and solve for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-217-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-217.xht">abs-pos-non-replaced-vlr-217</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top', 'bottom' and 'height' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top', 'bottom' and 'height' are not 'auto' and if the values are over-constrained, then ignore the value for 'bottom' and solve for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-219-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-219.xht">abs-pos-non-replaced-vlr-219</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-155-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left', 'right' and 'width' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left', 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-lr' and if the values are over-constrained, then ignore the value for 'right' and solve for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-221-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-221.xht">abs-pos-non-replaced-vlr-221</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left', 'right' and 'width' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left', 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-lr' and if the values are over-constrained, then ignore the value for 'right' and solve for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-223-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-223.xht">abs-pos-non-replaced-vlr-223</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left', 'right' and 'width' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left', 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-lr' and if the values are over-constrained, then ignore the value for 'right' and solve for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-225-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-225.xht">abs-pos-non-replaced-vlr-225</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top', 'bottom' and 'height' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top', 'bottom' and 'height' are not 'auto' and if the values are over-constrained, then ignore the value for 'bottom' and solve for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-227-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-227.xht">abs-pos-non-replaced-vlr-227</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-163-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left', 'right' and 'width' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left', 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-lr' and if the values are over-constrained, then ignore the value for 'right' and solve for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vlr-229-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vlr-229.xht">abs-pos-non-replaced-vlr-229</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left', 'right' and 'width' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left', 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-lr' and if the values are over-constrained, then ignore the value for 'right' and solve for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-102-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-102.xht">abs-pos-non-replaced-vrl-102</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left', 'width' and 'right' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left', 'width' and 'right' are 'auto' and 'writing-mode' is 'vertical-rl', then set 'right' to the static position, the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-104-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-104.xht">abs-pos-non-replaced-vrl-104</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top', 'height', and 'bottom' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top', 'height' and 'bottom' are 'auto', then set 'top' to the static position, the height is based on content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-106-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-106.xht">abs-pos-non-replaced-vrl-106</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left', 'width' and 'right' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left', 'width' and 'right' are 'auto' and 'writing-mode' is 'vertical-rl', then set 'right' to the static position, the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-108-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-108.xht">abs-pos-non-replaced-vrl-108</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left', 'width' and 'right' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left', 'width' and 'right' are 'auto' and 'writing-mode' is 'vertical-rl', then set 'right' to the static position, the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-110-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-110.xht">abs-pos-non-replaced-vrl-110</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left', 'width' and 'right' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left', 'width' and 'right' are 'auto' and 'writing-mode' is 'vertical-rl', then set 'right' to the static position, the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-112-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-112.xht">abs-pos-non-replaced-vrl-112</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top', 'height', and 'bottom' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top', 'height' and 'bottom' are 'auto', then set 'top' to the static position, the height is based on content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-114-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-114.xht">abs-pos-non-replaced-vrl-114</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-012-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left', 'width' and 'right' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left', 'width' and 'right' are 'auto' and 'writing-mode' is 'vertical-rl', then set 'right' to the static position, the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-116-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-116.xht">abs-pos-non-replaced-vrl-116</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left', 'width' and 'right' are 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left', 'width' and 'right' are 'auto' and 'writing-mode' is 'vertical-rl', then set 'right' to the static position, the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-118-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-118.xht">abs-pos-non-replaced-vrl-118</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'width' and 'right' are 'auto' and 'left' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'width' and 'right' are 'auto' and 'left' is not 'auto' and 'writing-mode' is 'vertical-rl', then the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-120-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-120.xht">abs-pos-non-replaced-vrl-120</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top' and 'height' are 'auto' and 'bottom' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top' and 'height' are 'auto' and 'bottom' is not 'auto', then the height is based on content and then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-122-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-122.xht">abs-pos-non-replaced-vrl-122</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-122-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'width' and 'right' are 'auto' and 'left' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'width' and 'right' are 'auto' and 'left' is not 'auto' and 'writing-mode' is 'vertical-rl', then the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-124-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-124.xht">abs-pos-non-replaced-vrl-124</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'width' and 'right' are 'auto' and 'left' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'width' and 'right' are 'auto' and 'left' is not 'auto' and 'writing-mode' is 'vertical-rl', then the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-126-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-126.xht">abs-pos-non-replaced-vrl-126</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'width' and 'right' are 'auto' and 'left' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' and 'right' are 'auto' and 'left' is not 'auto' and 'writing-mode' is 'vertical-rl', then the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-128-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-128.xht">abs-pos-non-replaced-vrl-128</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' and 'height' are 'auto' and 'bottom' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top' and 'height' are 'auto' and 'bottom' is not 'auto', then the height is based on content and then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-130-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-130.xht">abs-pos-non-replaced-vrl-130</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-130-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'width' and 'right' are 'auto' and 'left' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' and 'right' are 'auto' and 'left' is not 'auto' and 'writing-mode' is 'vertical-rl', then the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-132-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-132.xht">abs-pos-non-replaced-vrl-132</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'width' and 'right' are 'auto' and 'left' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' and 'right' are 'auto' and 'left' is not 'auto' and 'writing-mode' is 'vertical-rl', then the width is based on the content and then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-134-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-134.xht">abs-pos-non-replaced-vrl-134</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' and 'right' are 'auto' and 'width' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' and 'right' are 'auto' and 'width' is not 'auto' and 'writing-mode' is 'vertical-rl', then set 'right' to the static position and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-136-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-136.xht">abs-pos-non-replaced-vrl-136</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto', then set 'top' to the static position and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-138-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-138.xht">abs-pos-non-replaced-vrl-138</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' and 'right' are 'auto' and 'width' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' and 'right' are 'auto' and 'width' is not 'auto' and 'writing-mode' is 'vertical-rl', then set 'right' to the static position and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-140-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-140.xht">abs-pos-non-replaced-vrl-140</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' and 'right' are 'auto' and 'width' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' and 'right' are 'auto' and 'width' is not 'auto' and 'writing-mode' is 'vertical-rl', then set 'right' to the static position and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-142-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-142.xht">abs-pos-non-replaced-vrl-142</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' and 'right' are 'auto' and 'width' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' and 'right' are 'auto' and 'width' is not 'auto' and 'writing-mode' is 'vertical-rl', then set 'right' to the static position and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-144-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-144.xht">abs-pos-non-replaced-vrl-144</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top' and 'bottom' are 'auto' and 'height' is not 'auto', then set 'top' to the static position and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-146-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-146.xht">abs-pos-non-replaced-vrl-146</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-012-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' and 'right' are 'auto' and 'width' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' and 'right' are 'auto' and 'width' is not 'auto' and 'writing-mode' is 'vertical-rl', then set 'right' to the static position and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-148-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-148.xht">abs-pos-non-replaced-vrl-148</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' and 'right' are 'auto' and 'width' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' and 'right' are 'auto' and 'width' is not 'auto' and 'writing-mode' is 'vertical-rl', then set 'right' to the static position and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-150-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-150.xht">abs-pos-non-replaced-vrl-150</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' and 'width' are 'auto' and 'right' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' and 'width' are 'auto' and 'right' is not 'auto' and 'writing-mode' is 'vertical-rl', then the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-152-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-152.xht">abs-pos-non-replaced-vrl-152</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto', then the height is based on content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-154-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-154.xht">abs-pos-non-replaced-vrl-154</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' and 'width' are 'auto' and 'right' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' and 'width' are 'auto' and 'right' is not 'auto' and 'writing-mode' is 'vertical-rl', then the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-156-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-156.xht">abs-pos-non-replaced-vrl-156</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' and 'width' are 'auto' and 'right' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' and 'width' are 'auto' and 'right' is not 'auto' and 'writing-mode' is 'vertical-rl', then the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-158-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-158.xht">abs-pos-non-replaced-vrl-158</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' and 'width' are 'auto' and 'right' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' and 'width' are 'auto' and 'right' is not 'auto' and 'writing-mode' is 'vertical-rl', then the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-160-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-160.xht">abs-pos-non-replaced-vrl-160</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'height' and 'bottom' are 'auto' and 'top' is not 'auto' and 'writing-mode' is 'vertical-rl', then then the height is based on the content and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-162-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-162.xht">abs-pos-non-replaced-vrl-162</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-012-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' and 'width' are 'auto' and 'right' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' and 'width' are 'auto' and 'right' is not 'auto' and 'writing-mode' is 'vertical-rl', then the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-164-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-164.xht">abs-pos-non-replaced-vrl-164</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' and 'width' are 'auto' and 'right' is not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' and 'width' are 'auto' and 'right' is not 'auto' and 'writing-mode' is 'vertical-rl', then the width is based on the content and then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-166-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-166.xht">abs-pos-non-replaced-vrl-166</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'right' is 'auto', 'width' and 'left' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'right' is 'auto', 'width' and 'left' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'right'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-168-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-168.xht">abs-pos-non-replaced-vrl-168</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top' is 'auto', 'height' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top' is 'auto', 'height' and 'bottom' are not 'auto', then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-170-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-170.xht">abs-pos-non-replaced-vrl-170</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-122-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'right' is 'auto' and 'width' and 'left' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'right' is 'auto' and 'width' and 'left' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-172-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-172.xht">abs-pos-non-replaced-vrl-172</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'right' is 'auto' and 'width' and 'left' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'right' is 'auto' and 'width' and 'left' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-174-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-174.xht">abs-pos-non-replaced-vrl-174</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'right' is 'auto' and 'width' and 'left' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'right' is 'auto' and 'width' and 'left' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-176-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-176.xht">abs-pos-non-replaced-vrl-176</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top' is 'auto', 'height' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top' is 'auto', 'height' and 'bottom' are not 'auto', then then solve for 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-178-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-178.xht">abs-pos-non-replaced-vrl-178</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-130-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'right' is 'auto' and 'width' and 'left' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'right' is 'auto' and 'width' and 'left' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-180-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-180.xht">abs-pos-non-replaced-vrl-180</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'right' is 'auto' and 'width' and 'left' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'right' is 'auto' and 'width' and 'left' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-182-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-182.xht">abs-pos-non-replaced-vrl-182</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'width' is 'auto' and 'left' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'right' is 'auto', 'width' and 'left' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'width'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-184-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-184.xht">abs-pos-non-replaced-vrl-184</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'height' is 'auto', 'top' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'height' is 'auto', 'top' and 'bottom' are not 'auto', then solve for 'height'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-186-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-186.xht">abs-pos-non-replaced-vrl-186</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-122-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'width' is 'auto' and 'left' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'width' is 'auto' and 'left' and 'right' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'width'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-188-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-188.xht">abs-pos-non-replaced-vrl-188</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'width' is 'auto' and 'left' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'width' is 'auto' and 'left' and 'right' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'width'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-190-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-190.xht">abs-pos-non-replaced-vrl-190</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'width' is 'auto' and 'left' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' is 'auto' and 'left' and 'right' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'width'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-192-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-192.xht">abs-pos-non-replaced-vrl-192</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'height' is 'auto', 'top' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'height' is 'auto', 'top' and 'bottom' are not 'auto', then then solve for 'height'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-194-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-194.xht">abs-pos-non-replaced-vrl-194</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-130-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'width' is 'auto' and 'left' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' is 'auto' and 'left' and 'right' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'width'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-196-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-196.xht">abs-pos-non-replaced-vrl-196</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'width' is 'auto' and 'left' and 'right' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' is 'auto' and 'left' and 'right' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'width'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-198-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-198.xht">abs-pos-non-replaced-vrl-198</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' is 'auto' and 'right' and 'width' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' is 'auto' and 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-200-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-200.xht">abs-pos-non-replaced-vrl-200</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'bottom' is 'auto', 'top' and 'height' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'bottom' is 'auto', 'top' and 'height' are not 'auto', then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-202-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-202.xht">abs-pos-non-replaced-vrl-202</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' is 'auto' and 'right' and 'width' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' is 'auto' and 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-204-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-204.xht">abs-pos-non-replaced-vrl-204</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left' is 'auto' and 'right' and 'width' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left' is 'auto' and 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-206-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-206.xht">abs-pos-non-replaced-vrl-206</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' is 'auto' and 'right' and 'width' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' is 'auto' and 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-208-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-208.xht">abs-pos-non-replaced-vrl-208</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'bottom' is 'auto', 'top' and 'height' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'bottom' is 'auto', 'top' and 'height' are not 'auto', then then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-210-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-210.xht">abs-pos-non-replaced-vrl-210</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-012-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' is 'auto' and 'right' and 'width' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left' is 'auto' and 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-212-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-212.xht">abs-pos-non-replaced-vrl-212</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left' is 'auto' and 'right' and 'width' are not 'auto'
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'width' is 'auto' and 'left' and 'right' are not 'auto' and 'writing-mode' is 'vertical-rl', then solve for 'left'.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-214-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-214.xht">abs-pos-non-replaced-vrl-214</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left', 'right' and 'width' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left', 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-rl' and if the values are over-constrained, then ignore the value for 'left' and solve for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-216-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-216.xht">abs-pos-non-replaced-vrl-216</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'top', 'bottom' and 'height' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'top', 'bottom' and 'height' are not 'auto' and if the values are over-constrained, then ignore the value for 'bottom' and solve for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-218-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-218.xht">abs-pos-non-replaced-vrl-218</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-122-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left', 'right' and 'width' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left', 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-rl' and if the values are over-constrained, then ignore the value for 'left' and solve for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-220-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-220.xht">abs-pos-non-replaced-vrl-220</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: ltr' and 'left', 'right' and 'width' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'ltr' and 'left', 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-rl' and if the values are over-constrained, then ignore the value for 'left' and solve for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-222-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-222.xht">abs-pos-non-replaced-vrl-222</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left', 'right' and 'width' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left', 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-rl' and if the values are over-constrained, then ignore the value for 'left' and solve for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-224-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-224.xht">abs-pos-non-replaced-vrl-224</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'top', 'bottom' and 'height' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'top', 'bottom' and 'height' are not 'auto' and if the values are over-constrained, then ignore the value for 'bottom' and solve for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-226-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-226.xht">abs-pos-non-replaced-vrl-226</a></td>
        <td><a href="reference/abs-pos-non-replaced-vrl-130-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left', 'right' and 'width' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left', 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-rl' and if the values are over-constrained, then ignore the value for 'left' and solve for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="abs-pos-non-replaced-vrl-228-10.6.4" class="ahem image">
        <td>
            <a href="abs-pos-non-replaced-vrl-228.xht">abs-pos-non-replaced-vrl-228</a></td>
        <td><a href="reference/abs-pos-non-replaced-vlr-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>absolutely positioned non-replaced element - 'direction: rtl' and 'left', 'right' and 'width' are not 'auto' (overconstrained)
          <ul class="assert">
            <li>When 'direction' is 'rtl' and 'left', 'right' and 'width' are not 'auto' and 'writing-mode' is 'vertical-rl' and if the values are over-constrained, then ignore the value for 'left' and solve for that value.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-height-001-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-height-001.xht">absolute-non-replaced-height-001</a></td>
        <td></td>
        <td></td>
        <td>Absolutely positioned, non-replaced elements, static position of fixed element
          <ul class="assert">
            <li>The calculation of static position for a fixed positioned element when top, right, bottom, and left are all 'auto' is based off the containing block not the initial containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-height-002-10.6.4" class="ahem">
        <td>
            <a href="absolute-non-replaced-height-002.xht">absolute-non-replaced-height-002</a></td>
        <td><a href="reference/absolute-non-replaced-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Absolutely positioned, non-replaced elements with height based on the content
          <ul class="assert">
            <li>If 'top', 'height', 'bottom', 'margin-top' and 'margin-bottom' are all auto, then set 'top' to the static position, then the height is based on the content, then 'margin-top' and 'margin-bottom' are set to 0 and then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-height-003-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-height-003.xht">absolute-non-replaced-height-003</a></td>
        <td><a href="reference/absolute-non-replaced-height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned, non-replaced elements, vertical centering
          <ul class="assert">
            <li>An absolutely positioned non-replaced element's padding box (which is the area painted by background-color of the element) will be vertically centered within its containing block only if both 'margin-top' and 'margin-bottom' have equal values and if 'top' and 'bottom' have equal values. An absolutely positioned non-replaced element's margin box will be vertically centered within its containing block only if 'top' and 'bottom' have equal values.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-height-004-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-height-004.xht">absolute-non-replaced-height-004</a></td>
        <td><a href="reference/absolute-non-replaced-height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned, non-replaced elements, 'margin-top' set to 'auto'
          <ul class="assert">
            <li>When 'top', 'bottom', 'height' and 'margin-bottom' of an absolutely positioned, non-replaced element are all not 'auto' while its 'margin-top' is 'auto', then 'margin-top' becomes the remainder of the height of its containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-height-005-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-height-005.xht">absolute-non-replaced-height-005</a></td>
        <td><a href="reference/absolute-non-replaced-height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned, non-replaced elements, 'margin-bottom' set to 'auto'
          <ul class="assert">
            <li>When 'top', 'bottom' and 'height' are all are not 'auto', 'margin-top' is not 'auto' and 'margin-bottom' is 'auto'. Then 'margin-bottom' becomes the remainder of the height of the containing box.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-height-006-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-height-006.xht">absolute-non-replaced-height-006</a></td>
        <td><a href="reference/absolute-non-replaced-height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned, non-replaced elements, over-constrained
          <ul class="assert">
            <li>The 'bottom' value is ignored and the equation solves for the bottom value, when the values for 'top', 'bottom', 'height', 'margin-top', 'margin-bottom' add up to more than the containing blocks height.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-height-007-10.6.4" class="ahem">
        <td>
            <a href="absolute-non-replaced-height-007.xht">absolute-non-replaced-height-007</a></td>
        <td><a href="reference/absolute-non-replaced-height-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Absolutely positioned, non-replaced elements, shrink-to-fit solve for top
          <ul class="assert">
            <li>Verify that height is based on the overall height of the content, 'margin-top' and 'margin-bottom' when set to 'auto' are solved to '0' and solve for 'top', when 'top' and 'height' are both 'auto' and 'bottom' is not 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-height-008-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-height-008.xht">absolute-non-replaced-height-008</a></td>
        <td><a href="reference/absolute-non-replaced-height-008-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned, non-replaced elements, 'top' set to static position
          <ul class="assert">
            <li>When 'top' is set to the static position and any 'auto' values for top and bottom margin are set to '0', when 'top' and 'bottom' are 'auto' and 'height' is not 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-height-009-10.6.4" class="ahem">
        <td>
            <a href="absolute-non-replaced-height-009.xht">absolute-non-replaced-height-009</a></td>
        <td><a href="reference/absolute-non-replaced-height-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Absolutely positioned, non-replaced elements, height is based on the content
          <ul class="assert">
            <li>The 'height' is based on the content height, 'auto' values for 'margin-top' and 'margin-bottom' are set to '0' when 'height' and 'bottom' are 'auto' and 'top' is not 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-height-010-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-height-010.xht">absolute-non-replaced-height-010</a></td>
        <td><a href="reference/absolute-non-replaced-height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned, non-replaced elements, 'margin-top' and 'margin-bottom' set to '0'
          <ul class="assert">
            <li>The 'auto' values for 'margin-top' and 'margin-bottom' are set to '0', when 'top' is 'auto' and 'height' and 'bottom' are not 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-height-011-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-height-011.xht">absolute-non-replaced-height-011</a></td>
        <td><a href="reference/absolute-non-replaced-height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned, non-replaced elements, 'height' based on 'top' and 'bottom' positions
          <ul class="assert">
            <li>The 'auto' values on 'margin-top', 'margin-bottom' are set to '0' and the 'height' is the remaining space between the 'top' and 'bottom' positions, when 'height' is 'auto' and 'top' and 'bottom' are both not 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-height-012-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-height-012.xht">absolute-non-replaced-height-012</a></td>
        <td><a href="reference/absolute-non-replaced-height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned, non-replaced elements, solve for 'bottom'
          <ul class="assert">
            <li>When 'margin-top' and 'margin-bottom' are set to '0' the 'bottom' value resolves to the remaining space within the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-max-height-001-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-max-height-001.xht">absolute-non-replaced-max-height-001</a></td>
        <td></td>
        <td></td>
        <td>Max-height on absolutely positioned, non-replaced elements, static position of fixed element
          <ul class="assert">
            <li>The calculation of static position is based on initial containing block when there is a fixed positioned element.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-max-height-002-10.6.4" class="ahem">
        <td>
            <a href="absolute-non-replaced-max-height-002.xht">absolute-non-replaced-max-height-002</a></td>
        <td><a href="reference/absolute-non-replaced-max-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height on absolutely positioned, non-replaced elements
          <ul class="assert">
            <li>When 'top', 'height', and 'bottom' of an absolutely positioned element are 'auto', then set 'top' to the static position and make 'height' based on the content; such height may be constrained by a given 'max-height' value.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-max-height-003-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-max-height-003.xht">absolute-non-replaced-max-height-003</a></td>
        <td><a href="reference/absolute-non-replaced-max-height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height on absolutely positioned, non-replaced elements, vertical centering
          <ul class="assert">
            <li>An absolutely positioned non-replaced element's padding box (which is the area painted by background-color of the element) will be vertically centered within its containing block only if both 'margin-top' and 'margin-bottom' have equal values and if 'top' and 'bottom' have equal values. An absolutely positioned non-replaced element's margin box will be vertically centered within its containing block only if 'top' and 'bottom' have equal values.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-max-height-004-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-max-height-004.xht">absolute-non-replaced-max-height-004</a></td>
        <td><a href="reference/absolute-non-replaced-height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height on absolutely positioned, non-replaced elements, 'margin-top' set to 'auto'
          <ul class="assert">
            <li>When 'top', 'bottom' and 'height' are all are not 'auto', 'margin-top' is 'auto' and 'margin-bottom' is not 'auto'. Then 'margin-top' becomes the remainder of the height of the containing box.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-max-height-005-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-max-height-005.xht">absolute-non-replaced-max-height-005</a></td>
        <td><a href="reference/absolute-non-replaced-height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height on absolutely positioned, non-replaced elements, 'margin-bottom' set to 'auto'
          <ul class="assert">
            <li>When 'top', 'bottom' and 'height' are all are not 'auto', 'margin-top' is not 'auto' and 'margin-bottom' is 'auto'. Then 'margin-bottom' becomes the remainder of the height of the containing box.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-max-height-006-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-max-height-006.xht">absolute-non-replaced-max-height-006</a></td>
        <td><a href="reference/absolute-non-replaced-height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height on absolutely positioned, non-replaced elements, over-constrained
          <ul class="assert">
            <li>The 'bottom' value is ignored and the equation solves for the bottom value, when the values for 'top', 'bottom', 'height', 'margin-top', 'margin-bottom' add up to more than the containing blocks height.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-max-height-007-10.6.4" class="ahem">
        <td>
            <a href="absolute-non-replaced-max-height-007.xht">absolute-non-replaced-max-height-007</a></td>
        <td><a href="reference/absolute-non-replaced-max-height-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height on absolutely positioned, non-replaced elements, shrink-to-fit solve for top
          <ul class="assert">
            <li>The height is based on the overall height of the content, 'margin-top', 'auto' is set to '0' and solve for 'top', when 'top' and 'height' are both 'auto' and 'bottom' is not 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-max-height-008-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-max-height-008.xht">absolute-non-replaced-max-height-008</a></td>
        <td><a href="reference/absolute-non-replaced-max-height-008-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height on absolutely positioned, non-replaced elements, 'top' set to static position
          <ul class="assert">
            <li>When 'top' is set to the static position and any 'auto' values for top and bottom margin are set to '0', when 'top' and 'bottom' are 'auto' and 'height' is not 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-max-height-009-10.6.4" class="ahem">
        <td>
            <a href="absolute-non-replaced-max-height-009.xht">absolute-non-replaced-max-height-009</a></td>
        <td><a href="reference/absolute-non-replaced-max-height-009-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height on absolutely positioned, non-replaced elements, height is shrink-to-fit
          <ul class="assert">
            <li>The 'height' is based on the content height, 'auto' values for 'margin-top' and 'margin-bottom' are set to '0' when 'height' and 'bottom' are 'auto' and 'top' is not 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-max-height-010-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-max-height-010.xht">absolute-non-replaced-max-height-010</a></td>
        <td><a href="reference/absolute-non-replaced-height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height on absolutely positioned, non-replaced elements, 'margin-top' and 'margin-bottom' set to '0'
          <ul class="assert">
            <li>When 'top' and 'height' are 'auto' and 'bottom' is not 'auto', then the height is based on the content (and such height can be constrained by a max-height declaration) and then set 'auto' values for 'margin-top' and 'margin-bottom' to 0, and solve for 'top'</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-max-height-011-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-max-height-011.xht">absolute-non-replaced-max-height-011</a></td>
        <td><a href="reference/absolute-non-replaced-max-height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height on absolutely positioned, non-replaced elements, 'height' based on 'top' and 'bottom' positions
          <ul class="assert">
            <li>The 'auto' values on 'margin-top', 'margin-bottom' are set to '0' and the 'height' is the remaining space between the 'top' and 'bottom' positions, when 'height' is 'auto' and 'top' and 'bottom' are both not 'auto'. If such height is constrained by max-height, then we must re-process the values as following. If none of 'top', height, bottom are 'auto' and if both 'margin-top' and 'margin-bottom' are 'auto', solve the equation under the extra constraint that the two margins get equal values.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-max-height-012-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-max-height-012.xht">absolute-non-replaced-max-height-012</a></td>
        <td><a href="reference/absolute-non-replaced-height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height on absolutely positioned, non-replaced elements, solve for 'bottom'
          <ul class="assert">
            <li>When 'margin-top' and 'margin-bottom' are set to '0' the 'bottom' value resolves to the remaining space within the containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-non-replaced-width-027-10.6.4" class="">
        <td>
            <a href="absolute-non-replaced-width-027.xht">absolute-non-replaced-width-027</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>absolutely positioned non-replaced element - 'auto' margins, max-width and max-height
          <ul class="assert">
            <li>If 'width' is auto and 'left' and 'right' are not 'auto', then set 'auto' values for 'margin-left' and 'margin-right' to 0 and then solve for 'width'; the tentative width may be later constrained by max-width in which case, the algorithm must be re-entered. If 'height' is 'auto' and 'top' and 'bottom' are not 'auto', then 'auto' values for 'margin-top' and 'margin-bottom' are set to 0 and solve for 'height'; the tentative height may be later constrained by max-height in which case, the algorithm must be re-entered.</li>
          </ul>
        </td>
      </tr>
      <tr id="abspos-028-10.6.4" class="">
        <td>
            <a href="abspos-028.xht">abspos-028</a></td>
        <td><a href="reference/abspos-028-ref.xht">=</a> </td>
        <td></td>
        <td>Abspos static position and clear
          <ul class="assert">
            <li>The static position is calculated as if clear had been none.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-005-10.6.4" class="">
        <td>
            <a href="box-sizing-005.xht">box-sizing-005</a></td>
        <td><a href="reference/box-sizing-001-ref.xht">=</a> </td>
        <td></td>
        <td>box-sizing:border-box and CSS2.1 10.6.4
          <ul class="assert">
            <li>When box-sizing is border-box, the content height, rather than the computed value of the height property, should be used in the the constraint that determines the used values of sizing and positioning properties of absolutely positioned elements.</li>
          </ul>
        </td>
      </tr>
      <tr id="box-sizing-006-10.6.4" class="">
        <td>
            <a href="box-sizing-006.xht">box-sizing-006</a></td>
        <td><a href="reference/box-sizing-001-ref.xht">=</a> </td>
        <td></td>
        <td>box-sizing:padding-box and CSS2.1 10.6.4
          <ul class="assert">
            <li>When box-sizing is padding-box, the content height, rather than the computed value of the height property, should be used in the the constraint that determines the used values of sizing and positioning properties of absolutely positioned elements.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.6.5">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.6.5">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#abs-replaced-height">10.6.5 Absolutely positioned, replaced elements</a></th></tr>
      <!-- 34 tests -->
      <tr id="absolute-replaced-height-001-10.6.5" class="image">
        <td>
            <a href="absolute-replaced-height-001.xht">absolute-replaced-height-001</a></td>
        <td><a href="reference/absolute-replaced-height-001-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolute replaced elements with 'margin-top' and 'margin-bottom' as 'auto'
          <ul class="assert">
            <li>If the height, top, bottom and vertical margins of an absolute positioned inline replaced element are all 'auto', then its use value is determined for inline replaced element, its 'top' is given by its static position and both 'margin-top' and 'margin-bottom' used values are '0'. In this test, the 'height' and 'width' of the inline replaced element are 'auto' and the element also has an intrinsic height, so the intrinsic height and the intrinsic width become the used values.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-002-10.6.5" class="image">
        <td>
            <a href="absolute-replaced-height-002.xht">absolute-replaced-height-002</a></td>
        <td><a href="reference/absolute-replaced-height-002-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced elements relying on intrinsic height dimensions
          <ul class="assert">
            <li>The 'height' is the intrinsic height when an absolutely positioned inline replaced element with an intrinsic height has a 'height' and 'width' computed as 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-003-10.6.5" class="image">
        <td>
            <a href="absolute-replaced-height-003.xht">absolute-replaced-height-003</a></td>
        <td><a href="reference/absolute-non-replaced-height-007-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with intrinsic ratio and 'height' set to 'auto'
          <ul class="assert">
            <li>The 'height' is the used width divided by the intrinsic ratio when an absolutely positioned inline replaced element has an intrinsic ratio, 'height' is set to 'auto' and 'width' is specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-004-10.6.5" class="">
        <td>
            <a href="absolute-replaced-height-004.xht">absolute-replaced-height-004</a></td>
        <td><a href="reference/absolute-replaced-height-004-ref.xht">=</a> </td>
        <td></td>
        <td>Absolute replaced inline-block elements without intrinsic ratio and 'height' set to 'auto'
          <ul class="assert">
            <li>For an absolutely positioned inline-block replaced element, if its 'height' and 'width' have a computed value of 'auto' and the element has no intrinsic ratio, the 'height' is set to the largest rectangle that has a 2:1 ratio that is not greater than 150px and has a 'width' not greater than the device width.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-005-10.6.5" class="">
        <td>
            <a href="absolute-replaced-height-005.xht">absolute-replaced-height-005</a></td>
        <td><a href="reference/absolute-replaced-height-005-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned inline-block replaced element with its height set to a percentage
          <ul class="assert">
            <li>An absolutely positioned inline-block replaced element with its height set to a percentage is resolvable if and when its containing block height is explicitly specified and computable.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-006-10.6.5" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-height-006.xht">absolute-replaced-height-006</a></td>
        <td><a href="reference/absolute-replaced-height-006-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with percentage based intrinsic height
          <ul class="assert">
            <li>An absolutely positioned replaced element with percentage intrinsic height resolves based on the containing block when the replaced element is absolutely positioned.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-007-10.6.5" class="">
        <td>
            <a href="absolute-replaced-height-007.xht">absolute-replaced-height-007</a></td>
        <td><a href="reference/absolute-replaced-height-007-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned inline-block replaced elements with percentage based intrinsic height that cannot be resolved
          <ul class="assert">
            <li>An absolutely positioned inline-block replaced element with a percentage height that cannot be resolved has no intrinsic height.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-008-10.6.5" class="image">
        <td>
            <a href="absolute-replaced-height-008.xht">absolute-replaced-height-008</a></td>
        <td><a href="reference/absolute-replaced-height-008-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'margin-top', 'margin-bottom' and 'bottom' as 'auto'
          <ul class="assert">
            <li>An absolutely positioned inline replaced element's used value of 'bottom', 'margin-top' and/or 'margin-bottom' set to 'auto' is '0'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-009-10.6.5" class="image">
        <td>
            <a href="absolute-replaced-height-009.xht">absolute-replaced-height-009</a></td>
        <td><a href="reference/absolute-replaced-height-008-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolute positioned inline replaced elements relying on intrinsic height dimensions and 'bottom' set to 'auto'
          <ul class="assert">
            <li>The 'height' is the intrinsic height when an absolutely positioned replaced element with an intrinsic height has 'height', 'width' and 'bottom' computed as 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-010-10.6.5" class="image">
        <td>
            <a href="absolute-replaced-height-010.xht">absolute-replaced-height-010</a></td>
        <td><a href="reference/absolute-replaced-height-010-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with intrinsic ratio, 'height' and 'bottom' set to 'auto'
          <ul class="assert">
            <li>The 'height' is the used width divided by the intrinsic ratio when an absolutely positioned inline replaced element has an intrinsic ratio, 'height' and 'bottom' are set to 'auto' and 'width' is specified.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-011-10.6.5" class="">
        <td>
            <a href="absolute-replaced-height-011.xht">absolute-replaced-height-011</a></td>
        <td><a href="reference/absolute-replaced-height-011-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned inline-block replaced element without intrinsic ratio, 'height' and 'bottom' set to 'auto'
          <ul class="assert">
            <li>For an absolutely positioned inline-block replaced element, the 'height' is set to the largest rectangle that has a 2:1 ratio that is not greater than 150px and has a 'width' not greater than the device width.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-012-10.6.5" class="">
        <td>
            <a href="absolute-replaced-height-012.xht">absolute-replaced-height-012</a></td>
        <td><a href="reference/absolute-replaced-height-012-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned inline-block replaced element with its height set to a percentage and 'bottom' set to 'auto'
          <ul class="assert">
            <li>An absolutely positioned inline-block replaced element with its height set to a percentage is resolvable if and when its containing block height is explicitly specified and computable.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-013-10.6.5" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-height-013.xht">absolute-replaced-height-013</a></td>
        <td><a href="reference/absolute-replaced-height-013-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with percentage based intrinsic height and 'bottom' set to 'auto'
          <ul class="assert">
            <li>An absolutely positioned replaced element with percentage intrinsic height resolves based on the containing block when the replaced element is absolutely positioned.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-014-10.6.5" class="">
        <td>
            <a href="absolute-replaced-height-014.xht">absolute-replaced-height-014</a></td>
        <td><a href="reference/absolute-replaced-height-014-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned inline-block replaced elements with percentage based intrinsic height that cannot be resolved and 'top' specified
          <ul class="assert">
            <li>An absolutely positioned inline-block replaced element with a percentage height that cannot be resolved has no intrinsic height.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-016-10.6.5" class="image">
        <td>
            <a href="absolute-replaced-height-016.xht">absolute-replaced-height-016</a></td>
        <td><a href="reference/absolute-replaced-height-008-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element relying on intrinsic height dimensions and 'top', 'bottom' are not 'auto'
          <ul class="assert">
            <li>The 'height' is the intrinsic height when an absolutely positioned inline replaced element has an intrinsic height and its height is specified as 'auto', 'width' is specified 'auto' and 'top', 'bottom' are not 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-017-10.6.5" class="image">
        <td>
            <a href="absolute-replaced-height-017.xht">absolute-replaced-height-017</a></td>
        <td><a href="reference/absolute-replaced-height-010-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with intrinsic ratio, 'height' set to 'auto' and 'top', 'bottom' are not 'auto'
          <ul class="assert">
            <li>The 'height' is the used width divided by the intrinsic ratio when an absolutely positioned inline replaced element has an intrinsic ratio, 'height' is set to 'auto', 'width' is specified and 'top', 'bottom' are not 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-018-10.6.5" class="">
        <td>
            <a href="absolute-replaced-height-018.xht">absolute-replaced-height-018</a></td>
        <td><a href="reference/absolute-replaced-height-011-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned inline-block replaced element without intrinsic ratio, 'height' set to 'auto' and 'top', 'bottom' are not 'auto'
          <ul class="assert">
            <li>For an absolutely positioned inline-block replaced element, the 'height' is set to the largest rectangle that has a 2:1 ratio that is not greater than 150px and has a 'width' not greater than the device width.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-019-10.6.5" class="">
        <td>
            <a href="absolute-replaced-height-019.xht">absolute-replaced-height-019</a></td>
        <td><a href="reference/absolute-replaced-height-012-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned inline-block replaced element with its height set to a percentage and 'top', 'bottom' are not 'auto'
          <ul class="assert">
            <li>An absolutely positioned inline-block replaced element with its height set to a percentage is resolvable if and when its containing block height is explicitly specified and computable.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-020-10.6.5" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-height-020.xht">absolute-replaced-height-020</a></td>
        <td><a href="reference/absolute-replaced-height-013-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with percentage based intrinsic height set to 'auto' and 'top', 'bottom' are not 'auto'
          <ul class="assert">
            <li>An absolutely positioned replaced element with percentage intrinsic height resolves based on the containing block when the replaced element is absolutely positioned.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-021-10.6.5" class="">
        <td>
            <a href="absolute-replaced-height-021.xht">absolute-replaced-height-021</a></td>
        <td><a href="reference/absolute-replaced-height-014-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned inline-block replaced element with percentage based intrinsic height that cannot be resolved where 'top' and 'bottom' are not 'auto'
          <ul class="assert">
            <li>An absolutely positioned inline-block replaced element with a percentage height that cannot be resolved has no intrinsic height.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-022-10.6.5" class="image">
        <td>
            <a href="absolute-replaced-height-022.xht">absolute-replaced-height-022</a></td>
        <td><a href="reference/absolute-replaced-height-008-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with 'margin-bottom' as 'auto' and 'top', 'bottom', 'margin-top' are not 'auto'
          <ul class="assert">
            <li>An absolutely positioned inline replaced element with only one value as 'auto' solves for that value (margin-bottom).</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-023-10.6.5" class="image">
        <td>
            <a href="absolute-replaced-height-023.xht">absolute-replaced-height-023</a></td>
        <td><a href="reference/absolute-replaced-height-008-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element relying on intrinsic height dimensions and 'top', 'bottom', 'margin-top' are not 'auto'
          <ul class="assert">
            <li>The 'height' is the intrinsic height when an absolutely positioned inline replaced element with an intrinsic height has a 'height', 'width' computed as 'auto' and 'top', 'bottom' are not 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-024-10.6.5" class="image">
        <td>
            <a href="absolute-replaced-height-024.xht">absolute-replaced-height-024</a></td>
        <td><a href="reference/absolute-replaced-height-010-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with intrinsic ratio, 'height' set to 'auto' and 'top', 'bottom', 'margin-top' are not 'auto'
          <ul class="assert">
            <li>The 'height' is the used width divided by the intrinsic ratio when an absolutely positioned inline replaced element has an intrinsic ratio, 'height' is set to 'auto', 'width' is specified and 'top', 'bottom' are not 'auto'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-025-10.6.5" class="">
        <td>
            <a href="absolute-replaced-height-025.xht">absolute-replaced-height-025</a></td>
        <td><a href="reference/absolute-replaced-height-011-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned inline-block replaced elements without intrinsic ratio, 'height' set to 'auto' and 'top', 'bottom', 'margin-top' are not 'auto'
          <ul class="assert">
            <li>For an absolutely positioned replaced element the 'height' is set to the largest rectangle that has a 2:1 ratio that is not greater than 150px and has a 'width' not greater than the device width.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-026-10.6.5" class="">
        <td>
            <a href="absolute-replaced-height-026.xht">absolute-replaced-height-026</a></td>
        <td><a href="reference/absolute-replaced-height-012-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned inline-block replaced element with its height set to a percentage of its containing block's height and 'top', 'bottom', 'margin-top' are not 'auto'
          <ul class="assert">
            <li>An absolutely positioned inline-block replaced element with its height set to a percentage is resolvable if and when its containing block height is explicitly specified and computable.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-027-10.6.5" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-height-027.xht">absolute-replaced-height-027</a></td>
        <td><a href="reference/absolute-replaced-height-013-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with percentage based intrinsic height set to 'auto' and 'top', 'bottom', 'margin-top' are not 'auto'
          <ul class="assert">
            <li>An absolutely positioned replaced element with percentage intrinsic height resolves based on the containing block when the replaced element is absolutely positioned.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-028-10.6.5" class="">
        <td>
            <a href="absolute-replaced-height-028.xht">absolute-replaced-height-028</a></td>
        <td><a href="reference/absolute-replaced-height-014-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned inline-block replaced element with percentage based intrinsic height that cannot be resolved where 'top', 'bottom', 'margin-top' are not 'auto'
          <ul class="assert">
            <li>An absolutely positioned inline-block replaced element with a percentage height that cannot be resolved has no intrinsic height.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-029-10.6.5" class="image">
        <td>
            <a href="absolute-replaced-height-029.xht">absolute-replaced-height-029</a></td>
        <td><a href="reference/absolute-replaced-height-008-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with over-constrained values
          <ul class="assert">
            <li>An absolutely positioned inline replaced element with over-constrained values solves for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-030-10.6.5" class="image">
        <td>
            <a href="absolute-replaced-height-030.xht">absolute-replaced-height-030</a></td>
        <td><a href="reference/absolute-replaced-height-008-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with intrinsic height dimension and over-constrained values
          <ul class="assert">
            <li>The 'height' is the intrinsic height when an absolutely positioned inline replaced element has an intrinsic height; if values are overconstrained, then solve for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-031-10.6.5" class="image">
        <td>
            <a href="absolute-replaced-height-031.xht">absolute-replaced-height-031</a></td>
        <td><a href="reference/absolute-replaced-height-010-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Absolutely positioned inline replaced element with intrinsic ratio, 'height' set to 'auto' and over-constrained values
          <ul class="assert">
            <li>The 'height' is the used width divided by the intrinsic ratio when an absolutely positioned replaced element has an intrinsic ratio, 'height' is set to 'auto', with over-constrained values solves for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-032-10.6.5" class="">
        <td>
            <a href="absolute-replaced-height-032.xht">absolute-replaced-height-032</a></td>
        <td><a href="reference/absolute-replaced-height-011-ref.xht">=</a> </td>
        <td></td>
        <td>Absolute positioned inline-block replaced element without intrinsic ratio, 'height' set to 'auto' and over-constrained values
          <ul class="assert">
            <li>For an absolutely positioned inline-block replaced element, the 'height' is set to the largest rectangle that has a 2:1 ratio that is not greater than 150px and has a 'width' not greater than the device width. And with over-constrained values element solves for 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-033-10.6.5" class="">
        <td>
            <a href="absolute-replaced-height-033.xht">absolute-replaced-height-033</a></td>
        <td><a href="reference/absolute-replaced-height-012-ref.xht">=</a> </td>
        <td></td>
        <td>Absolutely positioned inline-block element with percentage based height set to 'auto' and over-constrained values
          <ul class="assert">
            <li>An absolutely positioned inline-block replaced element with percentage height resolves based on the containing block height when such height can be resolved.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-034-10.6.5" class="nonHTML svg">
        <td>
            <a href="absolute-replaced-height-034.xht">absolute-replaced-height-034</a></td>
        <td><a href="reference/absolute-replaced-height-013-ref.xht">=</a> </td>
        <td><abbr class="svg" title="Requires SVG support">SVG</abbr></td>
        <td>Absolutely positioned inline replaced element with percentage based intrinsic height set to 'auto' and over-constrained values
          <ul class="assert">
            <li>An absolutely positioned replaced element with percentage intrinsic height resolves based on the containing block when the replaced element is absolutely positioned.</li>
          </ul>
        </td>
      </tr>
      <tr id="absolute-replaced-height-035-10.6.5" class="">
        <td>
            <a href="absolute-replaced-height-035.xht">absolute-replaced-height-035</a></td>
        <td><a href="reference/absolute-replaced-height-014-ref.xht">=</a> </td>
        <td></td>
        <td>Absolute replaced elements with percentage based intrinsic height that cannot be resolved and there are over-constrained values
          <ul class="assert">
            <li>An absolutely positioned replaced element with a percentage height that cannot be resolved has no intrinsic height.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.6.6">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.6.6">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#block-root-margin">10.6.6 Complicated cases</a></th></tr>
      <!-- 4 tests -->
      <tr id="c5525-fltcont-000-10.6.6" class="image">
        <td>
            <a href="c5525-fltcont-000.xht">c5525-fltcont-000</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>float
        </td>
      </tr>
      <tr id="float-non-replaced-height-001-10.6.6" class="">
        <td>
            <a href="float-non-replaced-height-001.xht">float-non-replaced-height-001</a></td>
        <td><a href="reference/float-non-replaced-height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Floated non-replaced element with 'margin-top', margin-bottom' set to 'auto' and 'height' relying on the descendants
          <ul class="assert">
            <li>If 'height' is 'auto' on an floated non-replaced element then the 'height' depends on the descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-non-replaced-height-001-10.6.6" class="">
        <td>
            <a href="inline-block-non-replaced-height-001.xht">inline-block-non-replaced-height-001</a></td>
        <td><a href="reference/height-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Inline-block non-replaced element with 'margin-top', margin-bottom' set to 'auto' and 'height' relying on the descendants
          <ul class="assert">
            <li>If 'height' is 'auto' on an inline-block non-replaced element then the 'height' depends on the descendants.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-non-replaced-height-002-10.6.6" class="">
        <td>
            <a href="inline-block-non-replaced-height-002.xht">inline-block-non-replaced-height-002</a></td>
        <td><a href="reference/height-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Inline-block non-replaced elements' margin box is used for the height of the line box
          <ul class="assert">
            <li>Inline-block non-replaced elements use the margin box for sizing the height of the line box.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.6.7">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.6.7">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#root-height">10.6.7 'Auto' heights for block formatting context roots</a></th></tr>
      <!-- 3 tests -->
      <tr id="block-formatting-context-height-001-10.6.7" class="">
        <td>
            <a href="block-formatting-context-height-001.xht">block-formatting-context-height-001</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Block formatting context auto height with floats and bottom margins
          <ul class="assert">
            <li>The auto height of a block formatting context element is computed by accounting for bottom-margins of floated content which would otherwise be below the bottom edge of that element.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-formatting-context-height-002-10.6.7" class="">
        <td>
            <a href="block-formatting-context-height-002.xht">block-formatting-context-height-002</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Block formatting context auto height with floated descendants of the normal flow and bottom margins
          <ul class="assert">
            <li>The auto height of a block formatting context element is computed by accounting for bottom-margins of floated content descendents in the normal flow which would otherwise be below the bottom edge of that element.</li>
          </ul>
        </td>
      </tr>
      <tr id="block-formatting-context-height-003-10.6.7" class="">
        <td>
            <a href="block-formatting-context-height-003.xht">block-formatting-context-height-003</a></td>
        <td><a href="reference/block-formatting-context-height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Block formatting context auto height with floated descendants outside the normal flow and bottom margins
          <ul class="assert">
            <li>The auto height of a block formatting context element does not account for bottom margins of floated content descendents of out of flow blocks.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.7">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.7">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#min-max-heights">10.7 Minimum and maximum heights: 'min-height' and 'max-height'</a></th></tr>
      <!-- 188 tests -->
      <tr id="inline-replaced-width-016-10.7" class="image">
        <td>
            <a href="inline-replaced-width-016.xht">inline-replaced-width-016</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>width - inline replaced element and max-height
          <ul class="assert">
            <li>The width of an inline replaced element should be re-calculated based on its constrained height (constrained by computed 'max-height' value) and based its intrinsic ratio when it has an intrinsic ratio.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-replaced-width-017-10.7" class="image">
        <td>
            <a href="inline-replaced-width-017.xht">inline-replaced-width-017</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>width - inline replaced element and min-height
          <ul class="assert">
            <li>The width of an inline replaced element should be re-calculated based on its constrained height (constrained by computed 'min-height' value) and based its intrinsic ratio when it has an intrinsic ratio.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-001-10.7" class="invalid">
        <td>
            <a href="max-height-001.xht">max-height-001</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using pixels with a minimum minus one value, -1px
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-002-10.7" class="">
        <td>
            <a href="max-height-002.xht">max-height-002</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using pixels with a minimum value, 0px
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-003-10.7" class="">
        <td>
            <a href="max-height-003.xht">max-height-003</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using pixels with a minimum plus one value, 1px
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-004-10.7" class="">
        <td>
            <a href="max-height-004.xht">max-height-004</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using pixels with a negative zero value, -0px
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-005-10.7" class="">
        <td>
            <a href="max-height-005.xht">max-height-005</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using pixels with a positive zero value, +0px
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-006-10.7" class="">
        <td>
            <a href="max-height-006.xht">max-height-006</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-007-10.7" class="">
        <td>
            <a href="max-height-007.xht">max-height-007</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-012-10.7" class="invalid">
        <td>
            <a href="max-height-012.xht">max-height-012</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using points with a minimum minus one value, -1pt
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-013-10.7" class="">
        <td>
            <a href="max-height-013.xht">max-height-013</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using points with a minimum value, 0pt
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-014-10.7" class="">
        <td>
            <a href="max-height-014.xht">max-height-014</a></td>
        <td></td>
        <td></td>
        <td>Max-height using points with a minimum plus one value, 1pt
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-015-10.7" class="">
        <td>
            <a href="max-height-015.xht">max-height-015</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using points with a negative zero value, -0pt
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-016-10.7" class="">
        <td>
            <a href="max-height-016.xht">max-height-016</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using points with a positive zero value, +0pt
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-017-10.7" class="">
        <td>
            <a href="max-height-017.xht">max-height-017</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-018-10.7" class="">
        <td>
            <a href="max-height-018.xht">max-height-018</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-023-10.7" class="invalid">
        <td>
            <a href="max-height-023.xht">max-height-023</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using picas with a minimum minus one value, -1pc
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-024-10.7" class="">
        <td>
            <a href="max-height-024.xht">max-height-024</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using picas with a minimum value, 0pc
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-025-10.7" class="">
        <td>
            <a href="max-height-025.xht">max-height-025</a></td>
        <td><a href="reference/max-height-025-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using picas with a minimum plus one value, 1pc
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-026-10.7" class="">
        <td>
            <a href="max-height-026.xht">max-height-026</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using picas with a negative zero value, -0pc
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-027-10.7" class="">
        <td>
            <a href="max-height-027.xht">max-height-027</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using picas with a positive zero value, +0pc
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-028-10.7" class="">
        <td>
            <a href="max-height-028.xht">max-height-028</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-029-10.7" class="">
        <td>
            <a href="max-height-029.xht">max-height-029</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-034-10.7" class="invalid">
        <td>
            <a href="max-height-034.xht">max-height-034</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using centimeters with a minimum minus one value, -1cm
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-035-10.7" class="">
        <td>
            <a href="max-height-035.xht">max-height-035</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using centimeters with a minimum value, 0cm
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-036-10.7" class="">
        <td>
            <a href="max-height-036.xht">max-height-036</a></td>
        <td><a href="reference/max-height-036-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using centimeters with a minimum plus one value, 1cm
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-037-10.7" class="">
        <td>
            <a href="max-height-037.xht">max-height-037</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using centimeters with a negative zero value, -0cm
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-038-10.7" class="">
        <td>
            <a href="max-height-038.xht">max-height-038</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using centimeters with a positive zero value, +0cm
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-039-10.7" class="">
        <td>
            <a href="max-height-039.xht">max-height-039</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-040-10.7" class="">
        <td>
            <a href="max-height-040.xht">max-height-040</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-045-10.7" class="invalid">
        <td>
            <a href="max-height-045.xht">max-height-045</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using millimeters with a minimum minus one value, -1mm
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-046-10.7" class="">
        <td>
            <a href="max-height-046.xht">max-height-046</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using millimeters with a minimum value, 0mm
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-047-10.7" class="">
        <td>
            <a href="max-height-047.xht">max-height-047</a></td>
        <td><a href="reference/max-height-047-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using millimeters with a minimum plus one value, 1mm
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-048-10.7" class="">
        <td>
            <a href="max-height-048.xht">max-height-048</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using millimeters with a negative zero value, -0mm
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-049-10.7" class="">
        <td>
            <a href="max-height-049.xht">max-height-049</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using millimeters with a positive zero value, +0mm
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-050-10.7" class="">
        <td>
            <a href="max-height-050.xht">max-height-050</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-051-10.7" class="">
        <td>
            <a href="max-height-051.xht">max-height-051</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-056-10.7" class="invalid">
        <td>
            <a href="max-height-056.xht">max-height-056</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using inches with a minimum minus one value, -1in
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-057-10.7" class="">
        <td>
            <a href="max-height-057.xht">max-height-057</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using inches with a minimum value, 0in
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-058-10.7" class="">
        <td>
            <a href="max-height-058.xht">max-height-058</a></td>
        <td><a href="reference/max-height-058-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using inches with a minimum plus one value, 1in
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-059-10.7" class="">
        <td>
            <a href="max-height-059.xht">max-height-059</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using inches with a negative zero value, -0in
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-060-10.7" class="">
        <td>
            <a href="max-height-060.xht">max-height-060</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using inches with a positive zero value, +0in
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-061-10.7" class="">
        <td>
            <a href="max-height-061.xht">max-height-061</a></td>
        <td><a href="reference/height-061-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using inches with a nominal value, 3in
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-062-10.7" class="">
        <td>
            <a href="max-height-062.xht">max-height-062</a></td>
        <td><a href="reference/height-061-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using inches with a positive nominal value, +3in
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-067-10.7" class="ahem invalid">
        <td>
            <a href="max-height-067.xht">max-height-067</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using 'em' units with a minimum minus one value, -1em
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-068-10.7" class="ahem">
        <td>
            <a href="max-height-068.xht">max-height-068</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'em' units with a minimum value, 0em
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-069-10.7" class="ahem">
        <td>
            <a href="max-height-069.xht">max-height-069</a></td>
        <td><a href="reference/max-height-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'em' units with a minimum plus one value, 1em
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-070-10.7" class="ahem">
        <td>
            <a href="max-height-070.xht">max-height-070</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'em' units with a negative zero value, -0em
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-071-10.7" class="ahem">
        <td>
            <a href="max-height-071.xht">max-height-071</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'em' units with a positive zero value, +0em
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-072-10.7" class="ahem">
        <td>
            <a href="max-height-072.xht">max-height-072</a></td>
        <td><a href="reference/height-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'em' units with a nominal value, 5em
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-073-10.7" class="ahem">
        <td>
            <a href="max-height-073.xht">max-height-073</a></td>
        <td><a href="reference/height-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'em' units with a positive nominal value, +5em
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-078-10.7" class="ahem invalid">
        <td>
            <a href="max-height-078.xht">max-height-078</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using 'ex' units with a minimum minus one value, -1ex
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-079-10.7" class="ahem">
        <td>
            <a href="max-height-079.xht">max-height-079</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'ex' units with a minimum value, 0ex
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-080-10.7" class="ahem">
        <td>
            <a href="max-height-080.xht">max-height-080</a></td>
        <td><a href="reference/max-height-025-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'ex' units with a minimum plus one value, 1ex
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-081-10.7" class="ahem">
        <td>
            <a href="max-height-081.xht">max-height-081</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'ex' units with a negative zero value, -0ex
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-082-10.7" class="ahem">
        <td>
            <a href="max-height-082.xht">max-height-082</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'ex' units with a positive zero value, +0ex
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-083-10.7" class="ahem">
        <td>
            <a href="max-height-083.xht">max-height-083</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-084-10.7" class="ahem">
        <td>
            <a href="max-height-084.xht">max-height-084</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-089-10.7" class="invalid">
        <td>
            <a href="max-height-089.xht">max-height-089</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using percentages with a minimum minus one value, -1%
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-090-10.7" class="">
        <td>
            <a href="max-height-090.xht">max-height-090</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using percentages with a minimum value, 0%
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-091-10.7" class="">
        <td>
            <a href="max-height-091.xht">max-height-091</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using percentages with a minimum plus one value, 1%
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-092-10.7" class="">
        <td>
            <a href="max-height-092.xht">max-height-092</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using percentages with a negative zero value, -0%
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-093-10.7" class="">
        <td>
            <a href="max-height-093.xht">max-height-093</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using percentages with a positive zero value, +0%
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-094-10.7" class="">
        <td>
            <a href="max-height-094.xht">max-height-094</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-095-10.7" class="">
        <td>
            <a href="max-height-095.xht">max-height-095</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-100-10.7" class="">
        <td>
            <a href="max-height-100.xht">max-height-100</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-height with a negative zero value and no units, -0
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-101-10.7" class="">
        <td>
            <a href="max-height-101.xht">max-height-101</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height with a zero value and no units, 0
          <ul class="assert">
            <li>The 'max-height' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-102-10.7" class="">
        <td>
            <a href="max-height-102.xht">max-height-102</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-height with a positive zero value and no units, +0
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-103-10.7" class="">
        <td>
            <a href="max-height-103.xht">max-height-103</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-height set to a value of 'none'
          <ul class="assert">
            <li>The 'max-height' property with a value of 'none' means that there is no constraining maximum height being applied to the element.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-104-10.7" class="">
        <td>
            <a href="max-height-104.xht">max-height-104</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height set to inherit
          <ul class="assert">
            <li>The 'max-height' property properly inherits the max-height value of the parent.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-105-10.7" class="">
        <td>
            <a href="max-height-105.xht">max-height-105</a></td>
        <td></td>
        <td></td>
        <td>max-height - oveflow
          <ul class="assert">
            <li>The 'max-height' property can restrain the used value of height when the used value of height is greater than the declared max-height and not when it is less than the declared max-height and not when it does not exceed the declared max-height.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-106-10.7" class="ahem">
        <td>
            <a href="max-height-106.xht">max-height-106</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>max-height - float and overflow
          <ul class="assert">
            <li></li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-107-10.7" class="ahem">
        <td>
            <a href="max-height-107.xht">max-height-107</a></td>
        <td><a href="reference/max-height-107-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>max-height - space for scrollbar
          <ul class="assert">
            <li>Any space taken up by the scrollbars should be taken out of (subtracted from the dimensions of) the containing block formed by the element with the scrollbars.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-108-10.7" class="ahem">
        <td>
            <a href="max-height-108.xht">max-height-108</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>max-height - overflow
          <ul class="assert">
            <li>The max-height property can restrain the used value of height when the used value of height is greater than the declared max-height and not when it is less than the declared max-height and not when it does not exceed the declared max-height.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-109-10.7" class="ahem">
        <td>
            <a href="max-height-109.xht">max-height-109</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>max-height - overflow
          <ul class="assert">
            <li>The 'max-height' property can restrain the used value of height when the used value of height is greater than the declared max-height.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-110-10.7" class="ahem">
        <td>
            <a href="max-height-110.xht">max-height-110</a></td>
        <td><a href="reference/max-height-110-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>max-height - space for scrollbar
          <ul class="assert">
            <li>Any space taken up by the scrollbars should be taken out of (subtracted from the dimensions of) the containing block formed by the element with the scrollbars.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-111-10.7" class="ahem">
        <td>
            <a href="max-height-111.xht">max-height-111</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>max-height - float and overflow
          <ul class="assert">
            <li>The content of the #test-red-overlapped generates an active horizontal scrollbar. The height of such horizontal scrollbar adds itself to the content making it exceed the max-height constraint of 200px. Therefore, such vertical space taken by the horizontal scrollbar must be substracted from the height of the content. An active vertical scrollbar then must be generated to provide access to the equivalent of the height of the horizontal scrollbar.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-001-10.7" class="may">
        <td>
            <a href="max-height-applies-to-001.xht">max-height-applies-to-001</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Max-height applied to elements with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-002-10.7" class="may">
        <td>
            <a href="max-height-applies-to-002.xht">max-height-applies-to-002</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Max-height applied to elements with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-003-10.7" class="may">
        <td>
            <a href="max-height-applies-to-003.xht">max-height-applies-to-003</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Max-height applied to elements with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-004-10.7" class="">
        <td>
            <a href="max-height-applies-to-004.xht">max-height-applies-to-004</a></td>
        <td></td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-005-10.7" class="">
        <td>
            <a href="max-height-applies-to-005.xht">max-height-applies-to-005</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'max-height' property does not to elements with 'display' set to 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-006-10.7" class="">
        <td>
            <a href="max-height-applies-to-006.xht">max-height-applies-to-006</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'max-height' property does not to elements with 'display' set to 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-007-10.7" class="may">
        <td>
            <a href="max-height-applies-to-007.xht">max-height-applies-to-007</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Max-height applied to elements with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-008-10.7" class="ahem">
        <td>
            <a href="max-height-applies-to-008.xht">max-height-applies-to-008</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height applied to elements with 'display' set to 'inline'
          <ul class="assert">
            <li>The 'max-height' property does not apply to elements with 'display' set to 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-009-10.7" class="">
        <td>
            <a href="max-height-applies-to-009.xht">max-height-applies-to-009</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'block'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-010-10.7" class="">
        <td>
            <a href="max-height-applies-to-010.xht">max-height-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'list-item'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'list-item'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-011-10.7" class="">
        <td>
            <a href="max-height-applies-to-011.xht">max-height-applies-to-011</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'run-in'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-012-10.7" class="">
        <td>
            <a href="max-height-applies-to-012.xht">max-height-applies-to-012</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'inline-block'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-013-10.7" class="">
        <td>
            <a href="max-height-applies-to-013.xht">max-height-applies-to-013</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'table'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-014-10.7" class="">
        <td>
            <a href="max-height-applies-to-014.xht">max-height-applies-to-014</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-015-10.7" class="">
        <td>
            <a href="max-height-applies-to-015.xht">max-height-applies-to-015</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-016-10.7" class="">
        <td>
            <a href="max-height-applies-to-016.xht">max-height-applies-to-016</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td></td>
        <td>Max-Height applied to none
          <ul class="assert">
            <li>Max-Height can be declared onto 'display: none' elements but since 'display: none' declaration on an element does not generate a CSS box, then it won't have a rendering effect nor a visual formatting repercussion.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-max-width-001-10.7" class="ahem">
        <td>
            <a href="max-height-max-width-001.xht">max-height-max-width-001</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>max-height and max-width - float and overflow
          <ul class="assert">
            <li>Space taken up by the horizontal and vertical scrollbars should be taken out of (subtracted from the dimensions of) the containing block formed by the element with the scrollbars. In this test, assuming that the width of vertical scrollbar is 19px and assuming that the height of horizontal scrollbar is 19px, then the dimensions of the painted green area should be 181px by 181px. The height of horizontal scrollbar and the width of vertical scrollbar are entirely user-settable in most graphical user agents.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-percentage-001-10.7" class="">
        <td>
            <a href="max-height-percentage-001.xht">max-height-percentage-001</a></td>
        <td><a href="reference/max-height-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height percentage is based on containing block
          <ul class="assert">
            <li>A percentage for 'max-height' is calculated with respect to the 'height' of the generated boxes containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-percentage-002-10.7" class="">
        <td>
            <a href="max-height-percentage-002.xht">max-height-percentage-002</a></td>
        <td><a href="reference/max-height-percentage-002-ref.xht">=</a> </td>
        <td></td>
        <td>Percentage 'max-height' with no 'height' on containing block
          <ul class="assert">
            <li>When the 'height' of the containing block (#div1) of an element (#div2) is not specified (or if such height has the value 'auto') and the element is not absolutely positioned, then a percentage value of 'max-height' on such element is treated as '0' for 'min-height' and 'none' for 'max-height'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-percentage-003-10.7" class="image">
        <td>
            <a href="max-height-percentage-003.xht">max-height-percentage-003</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>max-height percentage - inline replaced element inside an auto-height container
          <ul class="assert">
            <li>This test checks that a max-height percentage is calculated with respect to the height of the generated box's containing block only if and only when such containing block's height is specified explicitly (i.e., it depends on content height; its specified height is not 'auto'). In this test, the div#child has an 'auto' height; therefore the max-height percentage is treated as 'none' and so the image should be rendered (entirely visible) inside that div#child. Note that div#parent's initial overflow value is 'visible'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-001-10.7" class="invalid">
        <td>
            <a href="min-height-001.xht">min-height-001</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using pixels with a minimum minus one value, -1px
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-002-10.7" class="">
        <td>
            <a href="min-height-002.xht">min-height-002</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using pixels with a minimum value, 0px
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-003-10.7" class="">
        <td>
            <a href="min-height-003.xht">min-height-003</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using pixels with a minimum plus one value, 1px
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-004-10.7" class="">
        <td>
            <a href="min-height-004.xht">min-height-004</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using pixels with a negative zero value, -0px
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-005-10.7" class="">
        <td>
            <a href="min-height-005.xht">min-height-005</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using pixels with a positive zero value, +0px
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-006-10.7" class="">
        <td>
            <a href="min-height-006.xht">min-height-006</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-007-10.7" class="">
        <td>
            <a href="min-height-007.xht">min-height-007</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-012-10.7" class="invalid">
        <td>
            <a href="min-height-012.xht">min-height-012</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using points with a minimum minus one value, -1pt
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-013-10.7" class="">
        <td>
            <a href="min-height-013.xht">min-height-013</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using points with a minimum value, 0pt
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-014-10.7" class="">
        <td>
            <a href="min-height-014.xht">min-height-014</a></td>
        <td></td>
        <td></td>
        <td>Min-height using points with a minimum plus one value, 1pt
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-015-10.7" class="">
        <td>
            <a href="min-height-015.xht">min-height-015</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using points with a negative zero value, -0pt
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-016-10.7" class="">
        <td>
            <a href="min-height-016.xht">min-height-016</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using points with a positive zero value, +0pt
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-017-10.7" class="">
        <td>
            <a href="min-height-017.xht">min-height-017</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-018-10.7" class="">
        <td>
            <a href="min-height-018.xht">min-height-018</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-023-10.7" class="invalid">
        <td>
            <a href="min-height-023.xht">min-height-023</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using picas with a minimum minus one value, -1pc
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-024-10.7" class="">
        <td>
            <a href="min-height-024.xht">min-height-024</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using picas with a minimum value, 0pc
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-025-10.7" class="">
        <td>
            <a href="min-height-025.xht">min-height-025</a></td>
        <td><a href="reference/max-height-025-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using picas with a minimum plus one value, 1pc
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-026-10.7" class="">
        <td>
            <a href="min-height-026.xht">min-height-026</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using picas with a negative zero value, -0pc
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-027-10.7" class="">
        <td>
            <a href="min-height-027.xht">min-height-027</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using picas with a positive zero value, +0pc
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-028-10.7" class="">
        <td>
            <a href="min-height-028.xht">min-height-028</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-029-10.7" class="">
        <td>
            <a href="min-height-029.xht">min-height-029</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-034-10.7" class="invalid">
        <td>
            <a href="min-height-034.xht">min-height-034</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using centimeters with a minimum minus one value, -1cm
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-035-10.7" class="">
        <td>
            <a href="min-height-035.xht">min-height-035</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using centimeters with a minimum value, 0cm
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-036-10.7" class="">
        <td>
            <a href="min-height-036.xht">min-height-036</a></td>
        <td><a href="reference/max-height-036-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using centimeters with a minimum plus one value, 1cm
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-037-10.7" class="">
        <td>
            <a href="min-height-037.xht">min-height-037</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using centimeters with a negative zero value, -0cm
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-038-10.7" class="">
        <td>
            <a href="min-height-038.xht">min-height-038</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using centimeters with a positive zero value, +0cm
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-039-10.7" class="">
        <td>
            <a href="min-height-039.xht">min-height-039</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-040-10.7" class="">
        <td>
            <a href="min-height-040.xht">min-height-040</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-045-10.7" class="invalid">
        <td>
            <a href="min-height-045.xht">min-height-045</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using millimeters with a minimum minus one value, -1mm
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-046-10.7" class="">
        <td>
            <a href="min-height-046.xht">min-height-046</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using millimeters with a minimum value, 0mm
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-047-10.7" class="">
        <td>
            <a href="min-height-047.xht">min-height-047</a></td>
        <td><a href="reference/max-height-047-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using millimeters with a minimum plus one value, 1mm
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-048-10.7" class="">
        <td>
            <a href="min-height-048.xht">min-height-048</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using millimeters with a negative zero value, -0mm
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-049-10.7" class="">
        <td>
            <a href="min-height-049.xht">min-height-049</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using millimeters with a positive zero value, +0mm
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-050-10.7" class="">
        <td>
            <a href="min-height-050.xht">min-height-050</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-051-10.7" class="">
        <td>
            <a href="min-height-051.xht">min-height-051</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-056-10.7" class="invalid">
        <td>
            <a href="min-height-056.xht">min-height-056</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using inches with a minimum minus one value, -1in
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-057-10.7" class="">
        <td>
            <a href="min-height-057.xht">min-height-057</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using inches with a minimum value, 0in
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-058-10.7" class="">
        <td>
            <a href="min-height-058.xht">min-height-058</a></td>
        <td><a href="reference/max-height-058-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using inches with a minimum plus one value, 1in
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-059-10.7" class="">
        <td>
            <a href="min-height-059.xht">min-height-059</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using inches with a negative zero value, -0in
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-060-10.7" class="">
        <td>
            <a href="min-height-060.xht">min-height-060</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using inches with a positive zero value, +0in
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-061-10.7" class="">
        <td>
            <a href="min-height-061.xht">min-height-061</a></td>
        <td><a href="reference/height-061-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using inches with a nominal value, 3in
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-062-10.7" class="">
        <td>
            <a href="min-height-062.xht">min-height-062</a></td>
        <td><a href="reference/height-061-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using inches with a positive nominal value, +3in
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-067-10.7" class="ahem invalid">
        <td>
            <a href="min-height-067.xht">min-height-067</a></td>
        <td><a href="reference/min-height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using 'em' units with a minimum minus one value, -1em
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-068-10.7" class="ahem">
        <td>
            <a href="min-height-068.xht">min-height-068</a></td>
        <td><a href="reference/min-height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'em' units with a minimum value, 0em
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-069-10.7" class="ahem">
        <td>
            <a href="min-height-069.xht">min-height-069</a></td>
        <td><a href="reference/height-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'em' units with a minimum plus one value, 1em
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-070-10.7" class="ahem">
        <td>
            <a href="min-height-070.xht">min-height-070</a></td>
        <td><a href="reference/min-height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'em' units with a negative zero value, -0em
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-071-10.7" class="ahem">
        <td>
            <a href="min-height-071.xht">min-height-071</a></td>
        <td><a href="reference/min-height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'em' units with a positive zero value, +0em
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-072-10.7" class="ahem">
        <td>
            <a href="min-height-072.xht">min-height-072</a></td>
        <td><a href="reference/height-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'em' units with a nominal value, 5em
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-073-10.7" class="ahem">
        <td>
            <a href="min-height-073.xht">min-height-073</a></td>
        <td><a href="reference/height-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'em' units with a positive nominal value, +5em
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-078-10.7" class="ahem invalid">
        <td>
            <a href="min-height-078.xht">min-height-078</a></td>
        <td><a href="reference/min-height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using 'ex' units with a minimum minus one value, -1ex
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-079-10.7" class="ahem">
        <td>
            <a href="min-height-079.xht">min-height-079</a></td>
        <td><a href="reference/min-height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'ex' units with a minimum value, 0ex
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-080-10.7" class="ahem">
        <td>
            <a href="min-height-080.xht">min-height-080</a></td>
        <td><a href="reference/height-080-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'ex' units with a minimum plus one value, 1ex
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-081-10.7" class="ahem">
        <td>
            <a href="min-height-081.xht">min-height-081</a></td>
        <td><a href="reference/min-height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'ex' units with a negative zero value, -0ex
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-082-10.7" class="ahem">
        <td>
            <a href="min-height-082.xht">min-height-082</a></td>
        <td><a href="reference/min-height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'ex' units with a positive zero value, +0ex
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-083-10.7" class="ahem">
        <td>
            <a href="min-height-083.xht">min-height-083</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-084-10.7" class="ahem">
        <td>
            <a href="min-height-084.xht">min-height-084</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-089-10.7" class="invalid">
        <td>
            <a href="min-height-089.xht">min-height-089</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using percentages with a minimum minus one value, -1%
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-090-10.7" class="">
        <td>
            <a href="min-height-090.xht">min-height-090</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using percentages with a minimum value, 0%
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-091-10.7" class="">
        <td>
            <a href="min-height-091.xht">min-height-091</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using percentages with a minimum plus one value, 1%
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-092-10.7" class="">
        <td>
            <a href="min-height-092.xht">min-height-092</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using percentages with a negative zero value, -0%
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-093-10.7" class="">
        <td>
            <a href="min-height-093.xht">min-height-093</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using percentages with a positive zero value, +0%
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-094-10.7" class="">
        <td>
            <a href="min-height-094.xht">min-height-094</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-095-10.7" class="">
        <td>
            <a href="min-height-095.xht">min-height-095</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-100-10.7" class="">
        <td>
            <a href="min-height-100.xht">min-height-100</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height with a negative zero value and no units, -0
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-101-10.7" class="">
        <td>
            <a href="min-height-101.xht">min-height-101</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height with a zero value and no units, 0
          <ul class="assert">
            <li>The 'min-height' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-102-10.7" class="">
        <td>
            <a href="min-height-102.xht">min-height-102</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height with a positive zero value and no units, +0
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-103-10.7" class="">
        <td>
            <a href="min-height-103.xht">min-height-103</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height set to 'inherit'
          <ul class="assert">
            <li>The 'min-height' property properly inherits the min-height value of the parent.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-104-10.7" class="ahem">
        <td>
            <a href="min-height-104.xht">min-height-104</a></td>
        <td><a href="reference/max-height-107-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>min-height - space for scrollbar
          <ul class="assert">
            <li>Any space taken up by the scrollbars should be taken out of (subtracted from the dimensions of) the containing block formed by the element with the scrollbars.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-105-10.7" class="ahem">
        <td>
            <a href="min-height-105.xht">min-height-105</a></td>
        <td><a href="reference/max-height-110-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>min-height - space for scrollbar
          <ul class="assert">
            <li>Any space taken up by the scrollbars should be taken out of (subtracted from the dimensions of) the containing block formed by the element with the scrollbars.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-106-10.7" class="ahem">
        <td>
            <a href="min-height-106.xht">min-height-106</a></td>
        <td><a href="reference/max-height-107-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>min-height - float and overflow
          <ul class="assert">
            <li>'min-height' specifies a fixed minimum used height. If the element requires an horizontal scrollbar, then the horizontal scrollbar height should be subtracted from the height of its containing block so that the resulting used height continues to honor the declared min-height.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-111-10.7" class="">
        <td>
            <a href="min-height-111.xht">min-height-111</a></td>
        <td><a href="reference/min-height-111-ref.xht">=</a> </td>
        <td></td>
        <td>Basic min-height test
        </td>
      </tr>
      <tr id="min-height-112-10.7" class="">
        <td>
            <a href="min-height-112.xht">min-height-112</a></td>
        <td><a href="reference/min-height-111-ref.xht">=</a> </td>
        <td></td>
        <td>Basic min-height test (with overflow:hidden)
        </td>
      </tr>
      <tr id="min-height-113-10.7" class="">
        <td>
            <a href="min-height-113.xht">min-height-113</a></td>
        <td></td>
        <td></td>
        <td>Basic min-height test (with overflow:scroll)
        </td>
      </tr>
      <tr id="min-height-applies-to-001-10.7" class="may">
        <td>
            <a href="min-height-applies-to-001.xht">min-height-applies-to-001</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Min-height applied to elements with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-002-10.7" class="may">
        <td>
            <a href="min-height-applies-to-002.xht">min-height-applies-to-002</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Min-height applied to elements with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-003-10.7" class="may">
        <td>
            <a href="min-height-applies-to-003.xht">min-height-applies-to-003</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Min-height applied to elements with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-004-10.7" class="">
        <td>
            <a href="min-height-applies-to-004.xht">min-height-applies-to-004</a></td>
        <td></td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-005-10.7" class="">
        <td>
            <a href="min-height-applies-to-005.xht">min-height-applies-to-005</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'min-height' property does not to elements with 'display' set to 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-006-10.7" class="">
        <td>
            <a href="min-height-applies-to-006.xht">min-height-applies-to-006</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'min-height' property does not to elements with 'display' set to 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-007-10.7" class="may">
        <td>
            <a href="min-height-applies-to-007.xht">min-height-applies-to-007</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Min-height applied to elements with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-008-10.7" class="ahem">
        <td>
            <a href="min-height-applies-to-008.xht">min-height-applies-to-008</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height applied to elements with 'display' set to 'inline'
          <ul class="assert">
            <li>The 'min-height' property does not apply to elements with 'display' set to 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-009-10.7" class="">
        <td>
            <a href="min-height-applies-to-009.xht">min-height-applies-to-009</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'block'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-010-10.7" class="">
        <td>
            <a href="min-height-applies-to-010.xht">min-height-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'list-item'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'list-item'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-011-10.7" class="">
        <td>
            <a href="min-height-applies-to-011.xht">min-height-applies-to-011</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'run-in'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-012-10.7" class="">
        <td>
            <a href="min-height-applies-to-012.xht">min-height-applies-to-012</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'inline-block'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-013-10.7" class="">
        <td>
            <a href="min-height-applies-to-013.xht">min-height-applies-to-013</a></td>
        <td></td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'table'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-014-10.7" class="">
        <td>
            <a href="min-height-applies-to-014.xht">min-height-applies-to-014</a></td>
        <td></td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-015-10.7" class="">
        <td>
            <a href="min-height-applies-to-015.xht">min-height-applies-to-015</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-percentage-001-10.7" class="">
        <td>
            <a href="min-height-percentage-001.xht">min-height-percentage-001</a></td>
        <td><a href="reference/max-height-percentage-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height percentage is based on containing block
          <ul class="assert">
            <li>A percentage for 'min-height' is calculated with respect to the 'height' of the generated boxes containing block.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-percentage-002-10.7" class="">
        <td>
            <a href="min-height-percentage-002.xht">min-height-percentage-002</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Percentage 'min-height' with no 'height' on containing block
          <ul class="assert">
            <li>When the 'height' of the containing block (#div1) of an element (inner div) is not specified (or if its height value is 'auto') and the element is not absolutely positioned, then the percentage value of 'max-height' is treated as '0' for 'min-height' and 'none' for 'max-height'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-percentage-003-10.7" class="">
        <td>
            <a href="min-height-percentage-003.xht">min-height-percentage-003</a></td>
        <td><a href="reference/min-height-percentage-003-ref.xht">=</a> </td>
        <td></td>
        <td>min-height - 100% of the initial containing block's height
          <ul class="assert">
            <li>The initial containing block has the dimensions of the viewport. A percentage height on the root element is relative to the initial containing block. A 'min-height: 100%;' of the document root element should use all of the document root element's height. A percentage for 'min-height' is calculated with respect to the height of the generated box's containing block.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.7.#propdef-max-height">
      <!-- 83 tests -->
      <tr id="max-height-001-10.7.#propdef-max-height" class="invalid">
        <td>
            <a href="max-height-001.xht">max-height-001</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using pixels with a minimum minus one value, -1px
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-002-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-002.xht">max-height-002</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using pixels with a minimum value, 0px
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-003-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-003.xht">max-height-003</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using pixels with a minimum plus one value, 1px
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-004-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-004.xht">max-height-004</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using pixels with a negative zero value, -0px
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-005-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-005.xht">max-height-005</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using pixels with a positive zero value, +0px
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-006-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-006.xht">max-height-006</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-007-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-007.xht">max-height-007</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-012-10.7.#propdef-max-height" class="invalid">
        <td>
            <a href="max-height-012.xht">max-height-012</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using points with a minimum minus one value, -1pt
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-013-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-013.xht">max-height-013</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using points with a minimum value, 0pt
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-014-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-014.xht">max-height-014</a></td>
        <td></td>
        <td></td>
        <td>Max-height using points with a minimum plus one value, 1pt
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-015-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-015.xht">max-height-015</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using points with a negative zero value, -0pt
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-016-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-016.xht">max-height-016</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using points with a positive zero value, +0pt
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-017-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-017.xht">max-height-017</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-018-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-018.xht">max-height-018</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-023-10.7.#propdef-max-height" class="invalid">
        <td>
            <a href="max-height-023.xht">max-height-023</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using picas with a minimum minus one value, -1pc
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-024-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-024.xht">max-height-024</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using picas with a minimum value, 0pc
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-025-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-025.xht">max-height-025</a></td>
        <td><a href="reference/max-height-025-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using picas with a minimum plus one value, 1pc
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-026-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-026.xht">max-height-026</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using picas with a negative zero value, -0pc
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-027-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-027.xht">max-height-027</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using picas with a positive zero value, +0pc
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-028-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-028.xht">max-height-028</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-029-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-029.xht">max-height-029</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-034-10.7.#propdef-max-height" class="invalid">
        <td>
            <a href="max-height-034.xht">max-height-034</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using centimeters with a minimum minus one value, -1cm
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-035-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-035.xht">max-height-035</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using centimeters with a minimum value, 0cm
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-036-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-036.xht">max-height-036</a></td>
        <td><a href="reference/max-height-036-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using centimeters with a minimum plus one value, 1cm
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-037-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-037.xht">max-height-037</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using centimeters with a negative zero value, -0cm
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-038-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-038.xht">max-height-038</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using centimeters with a positive zero value, +0cm
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-039-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-039.xht">max-height-039</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-040-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-040.xht">max-height-040</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-045-10.7.#propdef-max-height" class="invalid">
        <td>
            <a href="max-height-045.xht">max-height-045</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using millimeters with a minimum minus one value, -1mm
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-046-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-046.xht">max-height-046</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using millimeters with a minimum value, 0mm
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-047-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-047.xht">max-height-047</a></td>
        <td><a href="reference/max-height-047-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using millimeters with a minimum plus one value, 1mm
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-048-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-048.xht">max-height-048</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using millimeters with a negative zero value, -0mm
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-049-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-049.xht">max-height-049</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using millimeters with a positive zero value, +0mm
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-050-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-050.xht">max-height-050</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-051-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-051.xht">max-height-051</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-056-10.7.#propdef-max-height" class="invalid">
        <td>
            <a href="max-height-056.xht">max-height-056</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using inches with a minimum minus one value, -1in
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-057-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-057.xht">max-height-057</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using inches with a minimum value, 0in
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-058-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-058.xht">max-height-058</a></td>
        <td><a href="reference/max-height-058-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using inches with a minimum plus one value, 1in
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-059-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-059.xht">max-height-059</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using inches with a negative zero value, -0in
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-060-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-060.xht">max-height-060</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using inches with a positive zero value, +0in
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-061-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-061.xht">max-height-061</a></td>
        <td><a href="reference/height-061-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using inches with a nominal value, 3in
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-062-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-062.xht">max-height-062</a></td>
        <td><a href="reference/height-061-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using inches with a positive nominal value, +3in
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-067-10.7.#propdef-max-height" class="ahem invalid">
        <td>
            <a href="max-height-067.xht">max-height-067</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using 'em' units with a minimum minus one value, -1em
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-068-10.7.#propdef-max-height" class="ahem">
        <td>
            <a href="max-height-068.xht">max-height-068</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'em' units with a minimum value, 0em
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-069-10.7.#propdef-max-height" class="ahem">
        <td>
            <a href="max-height-069.xht">max-height-069</a></td>
        <td><a href="reference/max-height-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'em' units with a minimum plus one value, 1em
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-070-10.7.#propdef-max-height" class="ahem">
        <td>
            <a href="max-height-070.xht">max-height-070</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'em' units with a negative zero value, -0em
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-071-10.7.#propdef-max-height" class="ahem">
        <td>
            <a href="max-height-071.xht">max-height-071</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'em' units with a positive zero value, +0em
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-072-10.7.#propdef-max-height" class="ahem">
        <td>
            <a href="max-height-072.xht">max-height-072</a></td>
        <td><a href="reference/height-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'em' units with a nominal value, 5em
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-073-10.7.#propdef-max-height" class="ahem">
        <td>
            <a href="max-height-073.xht">max-height-073</a></td>
        <td><a href="reference/height-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'em' units with a positive nominal value, +5em
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-078-10.7.#propdef-max-height" class="ahem invalid">
        <td>
            <a href="max-height-078.xht">max-height-078</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using 'ex' units with a minimum minus one value, -1ex
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-079-10.7.#propdef-max-height" class="ahem">
        <td>
            <a href="max-height-079.xht">max-height-079</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'ex' units with a minimum value, 0ex
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-080-10.7.#propdef-max-height" class="ahem">
        <td>
            <a href="max-height-080.xht">max-height-080</a></td>
        <td><a href="reference/max-height-025-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'ex' units with a minimum plus one value, 1ex
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-081-10.7.#propdef-max-height" class="ahem">
        <td>
            <a href="max-height-081.xht">max-height-081</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'ex' units with a negative zero value, -0ex
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-082-10.7.#propdef-max-height" class="ahem">
        <td>
            <a href="max-height-082.xht">max-height-082</a></td>
        <td><a href="reference/height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'ex' units with a positive zero value, +0ex
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-083-10.7.#propdef-max-height" class="ahem">
        <td>
            <a href="max-height-083.xht">max-height-083</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-084-10.7.#propdef-max-height" class="ahem">
        <td>
            <a href="max-height-084.xht">max-height-084</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-089-10.7.#propdef-max-height" class="invalid">
        <td>
            <a href="max-height-089.xht">max-height-089</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Max-height using percentages with a minimum minus one value, -1%
          <ul class="assert">
            <li>The 'max-height' property sets a minimum minus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-090-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-090.xht">max-height-090</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using percentages with a minimum value, 0%
          <ul class="assert">
            <li>The 'max-height' property sets a minimum length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-091-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-091.xht">max-height-091</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using percentages with a minimum plus one value, 1%
          <ul class="assert">
            <li>The 'max-height' property sets a minimum plus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-092-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-092.xht">max-height-092</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using percentages with a negative zero value, -0%
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-093-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-093.xht">max-height-093</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using percentages with a positive zero value, +0%
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-094-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-094.xht">max-height-094</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'max-height' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-095-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-095.xht">max-height-095</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'max-height' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-100-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-100.xht">max-height-100</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-height with a negative zero value and no units, -0
          <ul class="assert">
            <li>The 'max-height' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-101-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-101.xht">max-height-101</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height with a zero value and no units, 0
          <ul class="assert">
            <li>The 'max-height' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-102-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-102.xht">max-height-102</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Max-height with a positive zero value and no units, +0
          <ul class="assert">
            <li>The 'max-height' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-103-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-103.xht">max-height-103</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-height set to a value of 'none'
          <ul class="assert">
            <li>The 'max-height' property with a value of 'none' means that there is no constraining maximum height being applied to the element.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-104-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-104.xht">max-height-104</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Max-height set to inherit
          <ul class="assert">
            <li>The 'max-height' property properly inherits the max-height value of the parent.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-001-10.7.#propdef-max-height" class="may">
        <td>
            <a href="max-height-applies-to-001.xht">max-height-applies-to-001</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Max-height applied to elements with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-002-10.7.#propdef-max-height" class="may">
        <td>
            <a href="max-height-applies-to-002.xht">max-height-applies-to-002</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Max-height applied to elements with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-003-10.7.#propdef-max-height" class="may">
        <td>
            <a href="max-height-applies-to-003.xht">max-height-applies-to-003</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Max-height applied to elements with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-004-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-applies-to-004.xht">max-height-applies-to-004</a></td>
        <td></td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-005-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-applies-to-005.xht">max-height-applies-to-005</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'max-height' property does not to elements with 'display' set to 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-006-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-applies-to-006.xht">max-height-applies-to-006</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'max-height' property does not to elements with 'display' set to 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-007-10.7.#propdef-max-height" class="may">
        <td>
            <a href="max-height-applies-to-007.xht">max-height-applies-to-007</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Max-height applied to elements with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-008-10.7.#propdef-max-height" class="ahem">
        <td>
            <a href="max-height-applies-to-008.xht">max-height-applies-to-008</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Max-height applied to elements with 'display' set to 'inline'
          <ul class="assert">
            <li>The 'max-height' property does not apply to elements with 'display' set to 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-009-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-applies-to-009.xht">max-height-applies-to-009</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'block'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-010-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-applies-to-010.xht">max-height-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'list-item'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'list-item'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-011-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-applies-to-011.xht">max-height-applies-to-011</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'run-in'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-012-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-applies-to-012.xht">max-height-applies-to-012</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'inline-block'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-013-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-applies-to-013.xht">max-height-applies-to-013</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'table'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-014-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-applies-to-014.xht">max-height-applies-to-014</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="max-height-applies-to-015-10.7.#propdef-max-height" class="">
        <td>
            <a href="max-height-applies-to-015.xht">max-height-applies-to-015</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Max-height applied to elements with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'max-height' property applies to elements with 'display' set to 'table-caption'.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.7.#propdef-min-height">
      <!-- 82 tests -->
      <tr id="min-height-001-10.7.#propdef-min-height" class="invalid">
        <td>
            <a href="min-height-001.xht">min-height-001</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using pixels with a minimum minus one value, -1px
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-002-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-002.xht">min-height-002</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using pixels with a minimum value, 0px
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-003-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-003.xht">min-height-003</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using pixels with a minimum plus one value, 1px
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-004-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-004.xht">min-height-004</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using pixels with a negative zero value, -0px
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-005-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-005.xht">min-height-005</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using pixels with a positive zero value, +0px
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-006-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-006.xht">min-height-006</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-007-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-007.xht">min-height-007</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-012-10.7.#propdef-min-height" class="invalid">
        <td>
            <a href="min-height-012.xht">min-height-012</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using points with a minimum minus one value, -1pt
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-013-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-013.xht">min-height-013</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using points with a minimum value, 0pt
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-014-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-014.xht">min-height-014</a></td>
        <td></td>
        <td></td>
        <td>Min-height using points with a minimum plus one value, 1pt
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-015-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-015.xht">min-height-015</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using points with a negative zero value, -0pt
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-016-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-016.xht">min-height-016</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using points with a positive zero value, +0pt
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-017-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-017.xht">min-height-017</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-018-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-018.xht">min-height-018</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-023-10.7.#propdef-min-height" class="invalid">
        <td>
            <a href="min-height-023.xht">min-height-023</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using picas with a minimum minus one value, -1pc
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-024-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-024.xht">min-height-024</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using picas with a minimum value, 0pc
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-025-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-025.xht">min-height-025</a></td>
        <td><a href="reference/max-height-025-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using picas with a minimum plus one value, 1pc
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-026-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-026.xht">min-height-026</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using picas with a negative zero value, -0pc
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-027-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-027.xht">min-height-027</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using picas with a positive zero value, +0pc
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-028-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-028.xht">min-height-028</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-029-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-029.xht">min-height-029</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-034-10.7.#propdef-min-height" class="invalid">
        <td>
            <a href="min-height-034.xht">min-height-034</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using centimeters with a minimum minus one value, -1cm
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-035-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-035.xht">min-height-035</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using centimeters with a minimum value, 0cm
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-036-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-036.xht">min-height-036</a></td>
        <td><a href="reference/max-height-036-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using centimeters with a minimum plus one value, 1cm
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-037-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-037.xht">min-height-037</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using centimeters with a negative zero value, -0cm
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-038-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-038.xht">min-height-038</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using centimeters with a positive zero value, +0cm
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-039-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-039.xht">min-height-039</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-040-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-040.xht">min-height-040</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-045-10.7.#propdef-min-height" class="invalid">
        <td>
            <a href="min-height-045.xht">min-height-045</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using millimeters with a minimum minus one value, -1mm
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-046-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-046.xht">min-height-046</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using millimeters with a minimum value, 0mm
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-047-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-047.xht">min-height-047</a></td>
        <td><a href="reference/max-height-047-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using millimeters with a minimum plus one value, 1mm
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-048-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-048.xht">min-height-048</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using millimeters with a negative zero value, -0mm
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-049-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-049.xht">min-height-049</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using millimeters with a positive zero value, +0mm
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-050-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-050.xht">min-height-050</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-051-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-051.xht">min-height-051</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-056-10.7.#propdef-min-height" class="invalid">
        <td>
            <a href="min-height-056.xht">min-height-056</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using inches with a minimum minus one value, -1in
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-057-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-057.xht">min-height-057</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using inches with a minimum value, 0in
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-058-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-058.xht">min-height-058</a></td>
        <td><a href="reference/max-height-058-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using inches with a minimum plus one value, 1in
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-059-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-059.xht">min-height-059</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using inches with a negative zero value, -0in
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-060-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-060.xht">min-height-060</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using inches with a positive zero value, +0in
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-061-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-061.xht">min-height-061</a></td>
        <td><a href="reference/height-061-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using inches with a nominal value, 3in
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-062-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-062.xht">min-height-062</a></td>
        <td><a href="reference/height-061-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using inches with a positive nominal value, +3in
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-067-10.7.#propdef-min-height" class="ahem invalid">
        <td>
            <a href="min-height-067.xht">min-height-067</a></td>
        <td><a href="reference/min-height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using 'em' units with a minimum minus one value, -1em
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-068-10.7.#propdef-min-height" class="ahem">
        <td>
            <a href="min-height-068.xht">min-height-068</a></td>
        <td><a href="reference/min-height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'em' units with a minimum value, 0em
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-069-10.7.#propdef-min-height" class="ahem">
        <td>
            <a href="min-height-069.xht">min-height-069</a></td>
        <td><a href="reference/height-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'em' units with a minimum plus one value, 1em
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-070-10.7.#propdef-min-height" class="ahem">
        <td>
            <a href="min-height-070.xht">min-height-070</a></td>
        <td><a href="reference/min-height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'em' units with a negative zero value, -0em
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-071-10.7.#propdef-min-height" class="ahem">
        <td>
            <a href="min-height-071.xht">min-height-071</a></td>
        <td><a href="reference/min-height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'em' units with a positive zero value, +0em
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-072-10.7.#propdef-min-height" class="ahem">
        <td>
            <a href="min-height-072.xht">min-height-072</a></td>
        <td><a href="reference/height-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'em' units with a nominal value, 5em
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-073-10.7.#propdef-min-height" class="ahem">
        <td>
            <a href="min-height-073.xht">min-height-073</a></td>
        <td><a href="reference/height-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'em' units with a positive nominal value, +5em
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-078-10.7.#propdef-min-height" class="ahem invalid">
        <td>
            <a href="min-height-078.xht">min-height-078</a></td>
        <td><a href="reference/min-height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using 'ex' units with a minimum minus one value, -1ex
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-079-10.7.#propdef-min-height" class="ahem">
        <td>
            <a href="min-height-079.xht">min-height-079</a></td>
        <td><a href="reference/min-height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'ex' units with a minimum value, 0ex
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-080-10.7.#propdef-min-height" class="ahem">
        <td>
            <a href="min-height-080.xht">min-height-080</a></td>
        <td><a href="reference/height-080-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'ex' units with a minimum plus one value, 1ex
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-081-10.7.#propdef-min-height" class="ahem">
        <td>
            <a href="min-height-081.xht">min-height-081</a></td>
        <td><a href="reference/min-height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'ex' units with a negative zero value, -0ex
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-082-10.7.#propdef-min-height" class="ahem">
        <td>
            <a href="min-height-082.xht">min-height-082</a></td>
        <td><a href="reference/min-height-067-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'ex' units with a positive zero value, +0ex
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-083-10.7.#propdef-min-height" class="ahem">
        <td>
            <a href="min-height-083.xht">min-height-083</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-084-10.7.#propdef-min-height" class="ahem">
        <td>
            <a href="min-height-084.xht">min-height-084</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-089-10.7.#propdef-min-height" class="invalid">
        <td>
            <a href="min-height-089.xht">min-height-089</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>Min-height using percentages with a minimum minus one value, -1%
          <ul class="assert">
            <li>The 'min-height' property sets a minimum minus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-090-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-090.xht">min-height-090</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using percentages with a minimum value, 0%
          <ul class="assert">
            <li>The 'min-height' property sets a minimum length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-091-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-091.xht">min-height-091</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using percentages with a minimum plus one value, 1%
          <ul class="assert">
            <li>The 'min-height' property sets a minimum plus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-092-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-092.xht">min-height-092</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using percentages with a negative zero value, -0%
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-093-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-093.xht">min-height-093</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using percentages with a positive zero value, +0%
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-094-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-094.xht">min-height-094</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'min-height' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-095-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-095.xht">min-height-095</a></td>
        <td><a href="reference/height-006-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'min-height' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-100-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-100.xht">min-height-100</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height with a negative zero value and no units, -0
          <ul class="assert">
            <li>The 'min-height' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-101-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-101.xht">min-height-101</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height with a zero value and no units, 0
          <ul class="assert">
            <li>The 'min-height' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-102-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-102.xht">min-height-102</a></td>
        <td><a href="reference/height-001-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height with a positive zero value and no units, +0
          <ul class="assert">
            <li>The 'min-height' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-103-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-103.xht">min-height-103</a></td>
        <td><a href="reference/height-003-ref.xht">=</a> </td>
        <td></td>
        <td>Min-height set to 'inherit'
          <ul class="assert">
            <li>The 'min-height' property properly inherits the min-height value of the parent.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-001-10.7.#propdef-min-height" class="may">
        <td>
            <a href="min-height-applies-to-001.xht">min-height-applies-to-001</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Min-height applied to elements with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-002-10.7.#propdef-min-height" class="may">
        <td>
            <a href="min-height-applies-to-002.xht">min-height-applies-to-002</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Min-height applied to elements with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-003-10.7.#propdef-min-height" class="may">
        <td>
            <a href="min-height-applies-to-003.xht">min-height-applies-to-003</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Min-height applied to elements with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-004-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-applies-to-004.xht">min-height-applies-to-004</a></td>
        <td></td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-005-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-applies-to-005.xht">min-height-applies-to-005</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'min-height' property does not to elements with 'display' set to 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-006-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-applies-to-006.xht">min-height-applies-to-006</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'min-height' property does not to elements with 'display' set to 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-007-10.7.#propdef-min-height" class="may">
        <td>
            <a href="min-height-applies-to-007.xht">min-height-applies-to-007</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Min-height applied to elements with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-008-10.7.#propdef-min-height" class="ahem">
        <td>
            <a href="min-height-applies-to-008.xht">min-height-applies-to-008</a></td>
        <td><a href="reference/ref-if-there-is-no-red.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Min-height applied to elements with 'display' set to 'inline'
          <ul class="assert">
            <li>The 'min-height' property does not apply to elements with 'display' set to 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-009-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-applies-to-009.xht">min-height-applies-to-009</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'block'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-010-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-applies-to-010.xht">min-height-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'list-item'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'list-item'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-011-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-applies-to-011.xht">min-height-applies-to-011</a></td>
        <td><a href="reference/pass_if_square_96px_black.xht">=</a> </td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'run-in'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-012-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-applies-to-012.xht">min-height-applies-to-012</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'inline-block'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-013-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-applies-to-013.xht">min-height-applies-to-013</a></td>
        <td></td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'table'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-014-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-applies-to-014.xht">min-height-applies-to-014</a></td>
        <td></td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="min-height-applies-to-015-10.7.#propdef-min-height" class="">
        <td>
            <a href="min-height-applies-to-015.xht">min-height-applies-to-015</a></td>
        <td><a href="reference/ref-filled-black-96px-square.xht">=</a> </td>
        <td></td>
        <td>Min-height applied to elements with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'min-height' property applies to elements with 'display' set to 'table-caption'.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.7.#x15">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.7.#x16">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.8">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.8">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#line-height">10.8 Line height calculations: the 'line-height' and 'vertical-align' properties</a></th></tr>
      <!-- 36 tests -->
      <tr id="c43-center-000-10.8" class="ahem image">
        <td>
            <a href="c43-center-000.xht">c43-center-000</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Replaced Elements
        </td>
      </tr>
      <tr id="c44-ln-box-000-10.8" class="ahem image">
        <td>
            <a href="c44-ln-box-000.xht">c44-ln-box-000</a></td>
        <td><a href="reference/c44-ln-box-000-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>The Height of Lines
        </td>
      </tr>
      <tr id="c44-ln-box-001-10.8" class="ahem image">
        <td>
            <a href="c44-ln-box-001.xht">c44-ln-box-001</a></td>
        <td><a href="reference/c44-ln-box-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>The Height of Lines
        </td>
      </tr>
      <tr id="c44-ln-box-002-10.8" class="ahem image">
        <td>
            <a href="c44-ln-box-002.xht">c44-ln-box-002</a></td>
        <td><a href="reference/c44-ln-box-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>The Height of Lines
        </td>
      </tr>
      <tr id="c44-ln-box-003-10.8" class="ahem image">
        <td>
            <a href="c44-ln-box-003.xht">c44-ln-box-003</a></td>
        <td><a href="reference/c44-ln-box-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>The Height of Lines
        </td>
      </tr>
      <tr id="empty-inline-003-10.8" class="">
        <td>
            <a href="empty-inline-003.xht">empty-inline-003</a></td>
        <td><a href="reference/empty-inline-003-ref.xht">=</a> </td>
        <td></td>
        <td>Line height calculations - Empty inline elements influence
          <ul class="assert">
            <li>The line-height of an empty inline element influences the height of a line containing it with some other content</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-010b-10.8" class="ahem dom image interact">
        <td>
            <a href="inline-formatting-context-010b.xht">inline-formatting-context-010b</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="dom" title="Requires Document Object Model support">DOM/JS</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>line-height - line box height calculations
          <ul class="assert">
            <li>A line box is always tall enough for all of the boxes it contains. A line box can be as tall as the tallest inline non-replaced box it contains.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-010c-10.8" class="ahem image">
        <td>
            <a href="inline-formatting-context-010c.xht">inline-formatting-context-010c</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>line-height - line box height calculations
          <ul class="assert">
            <li>The line box height is given by the distance between the uppermost box top and the lowermost box bottom. The line box height is not necessarly given by the height of the tallest inline box contained in the line box.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-formatting-context-010d-10.8" class="image">
        <td>
            <a href="inline-formatting-context-010d.xht">inline-formatting-context-010d</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>line-height - line box height calculations
          <ul class="assert">
            <li>The line box height is given by the distance between the uppermost box top and the lowermost box bottom. The line box height is not necessarly given by the height of the tallest inline box contained in the line box.</li>
          </ul>
        </td>
      </tr>
      <tr id="inlines-001-10.8" class="">
        <td>
            <a href="inlines-001.xht">inlines-001</a></td>
        <td></td>
        <td></td>
        <td>CSS Inline Box Model: Layering Model
        </td>
      </tr>
      <tr id="inlines-009-10.8" class="ahem image">
        <td>
            <a href="inlines-009.xht">inlines-009</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>CSS Inline Box Model: Behaviour near cells (specified line height)
        </td>
      </tr>
      <tr id="inlines-010-10.8" class="ahem image">
        <td>
            <a href="inlines-010.xht">inlines-010</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>CSS Inline Box Model: Behaviour near cells (normal line height)
        </td>
      </tr>
      <tr id="inlines-011-10.8" class="image">
        <td>
            <a href="inlines-011.xht">inlines-011</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>CSS Inline Box Model: Baseline alignment of images
        </td>
      </tr>
      <tr id="inlines-012-10.8" class="image">
        <td>
            <a href="inlines-012.xht">inlines-012</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>CSS Inline Box Model: Baseline alignment of images
        </td>
      </tr>
      <tr id="line-box-height-vlr-003-10.8" class="">
        <td>
            <a href="line-box-height-vlr-003.xht">line-box-height-vlr-003</a></td>
        <td><a href="reference/line-box-height-vlr-003-ref.xht">=</a> </td>
        <td></td>
        <td>line box height and border on non-replaced inline box (mixed)
          <ul class="assert">
            <li>This test checks that a line box height does not increase because an inline non-replaced box has a border. In this test, the '34' inline box and the '56' inline box should be lined up with its inline '12' sibling. The line box height, enclosed by the blue border should not grow to accomodate transparent 'border-left' of inline box and transparent 'border-right' of inline box.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-box-height-vlr-005-10.8" class="">
        <td>
            <a href="line-box-height-vlr-005.xht">line-box-height-vlr-005</a></td>
        <td><a href="reference/line-box-height-vlr-003-ref.xht">=</a> </td>
        <td></td>
        <td>line box height and padding on non-replaced inline box (mixed)
          <ul class="assert">
            <li>This test checks that a line box height does not increase because an inline non-replaced box has a padding. In this test, the '34' inline box and the '56' inline box should be lined up with its inline '12' sibling. The line box height, enclosed by the blue border should not grow to accomodate transparent 'padding-left' of inline box and transparent 'padding-right' of inline box.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-box-height-vlr-007-10.8" class="">
        <td>
            <a href="line-box-height-vlr-007.xht">line-box-height-vlr-007</a></td>
        <td><a href="reference/line-box-height-vlr-007-ref.xht">=</a> </td>
        <td></td>
        <td>line box height and border on non-replaced inline box (sideways)
          <ul class="assert">
            <li>This test checks that a line box height does not increase because an inline non-replaced box has a border. In this test, the '34' inline box and the '56' inline box should be lined up with its inline '12' sibling. The line box height, enclosed by the blue border should not grow to accomodate transparent 'border-left' of inline box and transparent 'border-right' of inline box.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-box-height-vlr-009-10.8" class="">
        <td>
            <a href="line-box-height-vlr-009.xht">line-box-height-vlr-009</a></td>
        <td><a href="reference/line-box-height-vlr-007-ref.xht">=</a> </td>
        <td></td>
        <td>line box height and padding on non-replaced inline box (sideways)
          <ul class="assert">
            <li>This test checks that a line box height does not increase because an inline non-replaced box has a padding. In this test, the '34' inline box and the '56' inline box should be lined up with its inline '12' sibling. The line box height, enclosed by the blue border should not grow to accomodate transparent 'padding-left' of inline box and transparent 'padding-right' of inline box.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-box-height-vlr-011-10.8" class="">
        <td>
            <a href="line-box-height-vlr-011.xht">line-box-height-vlr-011</a></td>
        <td><a href="reference/line-box-height-vlr-011-ref.xht">=</a> </td>
        <td></td>
        <td>line box height and border on non-replaced inline box (upright)
          <ul class="assert">
            <li>This test checks that a line box height does not increase because an inline non-replaced box has a border. In this test, the '34' inline box and the '56' inline box should be lined up with its inline '12' sibling. The line box height, enclosed by the blue border should not grow to accomodate transparent 'border-left' of inline box and transparent 'border-right' of inline box.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-box-height-vlr-013-10.8" class="">
        <td>
            <a href="line-box-height-vlr-013.xht">line-box-height-vlr-013</a></td>
        <td><a href="reference/line-box-height-vlr-011-ref.xht">=</a> </td>
        <td></td>
        <td>line box height and padding on non-replaced inline box (upright)
          <ul class="assert">
            <li>This test checks that a line box height does not increase because an inline non-replaced box has a padding. In this test, the '34' inline box and the '56' inline box should be lined up with its inline '12' sibling. The line box height, enclosed by the blue border should not grow to accomodate transparent 'padding-left' of inline box and transparent 'padding-right' of inline box.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-box-height-vrl-002-10.8" class="">
        <td>
            <a href="line-box-height-vrl-002.xht">line-box-height-vrl-002</a></td>
        <td><a href="reference/line-box-height-vrl-002-ref.xht">=</a> </td>
        <td></td>
        <td>line box height and border on non-replaced inline box (mixed)
          <ul class="assert">
            <li>This test checks that a line box height does not increase because an inline non-replaced box has a border. In this test, the '34' inline box and the '56' inline box should be lined up with its inline '12' sibling. The line box height, enclosed by the blue border should not grow to accomodate transparent 'border-left' of inline box and transparent 'border-right' of inline box.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-box-height-vrl-004-10.8" class="">
        <td>
            <a href="line-box-height-vrl-004.xht">line-box-height-vrl-004</a></td>
        <td><a href="reference/line-box-height-vrl-002-ref.xht">=</a> </td>
        <td></td>
        <td>line box height and padding on non-replaced inline box (mixed)
          <ul class="assert">
            <li>This test checks that a line box height does not increase because an inline non-replaced box has a padding. In this test, the '34' inline box and the '56' inline box should be lined up with its inline '12' sibling. The line box height, enclosed by the blue border should not grow to accomodate transparent 'padding-left' of inline box and transparent 'padding-right' of inline box.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-box-height-vrl-006-10.8" class="">
        <td>
            <a href="line-box-height-vrl-006.xht">line-box-height-vrl-006</a></td>
        <td><a href="reference/line-box-height-vrl-006-ref.xht">=</a> </td>
        <td></td>
        <td>line box height and border on non-replaced inline box (sideways)
          <ul class="assert">
            <li>This test checks that a line box height does not increase because an inline non-replaced box has a border. In this test, the '34' inline box and the '56' inline box should be lined up with its inline '12' sibling. The line box height, enclosed by the blue border should not grow to accomodate transparent 'border-left' of inline box and transparent 'border-right' of inline box.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-box-height-vrl-008-10.8" class="">
        <td>
            <a href="line-box-height-vrl-008.xht">line-box-height-vrl-008</a></td>
        <td><a href="reference/line-box-height-vrl-006-ref.xht">=</a> </td>
        <td></td>
        <td>line box height and padding on non-replaced inline box (sideways)
          <ul class="assert">
            <li>This test checks that a line box height does not increase because an inline non-replaced box has a padding. In this test, the '34' inline box and the '56' inline box should be lined up with its inline '12' sibling. The line box height, enclosed by the blue border should not grow to accomodate transparent 'padding-left' of inline box and transparent 'padding-right' of inline box.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-box-height-vrl-010-10.8" class="">
        <td>
            <a href="line-box-height-vrl-010.xht">line-box-height-vrl-010</a></td>
        <td><a href="reference/line-box-height-vrl-010-ref.xht">=</a> </td>
        <td></td>
        <td>line box height and border on non-replaced inline box (upright)
          <ul class="assert">
            <li>This test checks that a line box height does not increase because an inline non-replaced box has a border. In this test, the '34' inline box and the '56' inline box should be lined up with its inline '12' sibling. The line box height, enclosed by the blue border should not grow to accomodate transparent 'border-left' of inline box and transparent 'border-right' of inline box.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-box-height-vrl-012-10.8" class="">
        <td>
            <a href="line-box-height-vrl-012.xht">line-box-height-vrl-012</a></td>
        <td><a href="reference/line-box-height-vrl-010-ref.xht">=</a> </td>
        <td></td>
        <td>line box height and padding on non-replaced inline box (upright)
          <ul class="assert">
            <li>This test checks that a line box height does not increase because an inline non-replaced box has a padding. In this test, the '34' inline box and the '56' inline box should be lined up with its inline '12' sibling. The line box height, enclosed by the blue border should not grow to accomodate transparent 'padding-left' of inline box and transparent 'padding-right' of inline box.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-121-10.8" class="ahem">
        <td>
            <a href="line-height-121.xht">line-height-121</a></td>
        <td><a href="reference/line-height-121-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>The 'line-height' property
        </td>
      </tr>
      <tr id="line-height-122-10.8" class="image">
        <td>
            <a href="line-height-122.xht">line-height-122</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Images on baselines
        </td>
      </tr>
      <tr id="line-height-123-10.8" class="image">
        <td>
            <a href="line-height-123.xht">line-height-123</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Images on baselines
        </td>
      </tr>
      <tr id="line-height-124-10.8" class="image">
        <td>
            <a href="line-height-124.xht">line-height-124</a></td>
        <td></td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Images on baselines
        </td>
      </tr>
      <tr id="line-height-125-10.8" class="">
        <td>
            <a href="line-height-125.xht">line-height-125</a></td>
        <td><a href="reference/line-height-125-ref.xht">=</a> </td>
        <td></td>
        <td>Inheritance of em units
        </td>
      </tr>
      <tr id="line-height-126-10.8" class="image">
        <td>
            <a href="line-height-126.xht">line-height-126</a></td>
        <td><a href="reference/line-height-126-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>line-height of images
        </td>
      </tr>
      <tr id="line-height-127-10.8" class="ahem image">
        <td>
            <a href="line-height-127.xht">line-height-127</a></td>
        <td><a href="reference/line-height-127-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>line-height of images
        </td>
      </tr>
      <tr id="line-height-128-10.8" class="ahem">
        <td>
            <a href="line-height-128.xht">line-height-128</a></td>
        <td><a href="reference/line-height-128-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Test
        </td>
      </tr>
      <tr id="vertical-align-121-10.8" class="ahem">
        <td>
            <a href="vertical-align-121.xht">vertical-align-121</a></td>
        <td><a href="reference/vertical-align-121-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>vertical-align: top
        </td>
      </tr>
      <tr id="vertical-align-boxes-001-10.8" class="ahem image">
        <td>
            <a href="vertical-align-boxes-001.xht">vertical-align-boxes-001</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Vertical Alignment boxes: replaced elements
          <ul class="assert">
            <li>Vertical alignment aligns the margin box of inline replaced elements.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.8.1">
      <tr><th colspan="4" scope="rowgroup">
        <a href="#s10.8.1">+</a>
        <a href="https://www.w3.org/TR/CSS21/visudet.html#leading">10.8.1 Leading and half-leading</a></th></tr>
      <!-- 226 tests -->
      <tr id="border-padding-bleed-001-10.8.1" class="ahem">
        <td>
            <a href="border-padding-bleed-001.xht">border-padding-bleed-001</a></td>
        <td><a href="reference/border-padding-bleed-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>line-height - border-top and padding-top of inline non-replaced element paint over previous line box
          <ul class="assert">
            <li>Although margins, borders and padding of inline non-replaced elements do not enter into the line box calculation, they are still rendered around inline boxes. This means that if the height specified by 'line-height' (40px in this testcase) is equal to the content height (40px in this testcase) of contained boxes, then background-color of padding-top area and border-top may 'bleed' into the adjoining preceding line box. Since line boxes are rendered in document order, this causes padding-top and border-top of 2nd line box (the span element in this testcase) to be painted over border-bottom and padding-bottom of inline boxes of previous line and, in this testcase, over the 1st line box.</li>
          </ul>
        </td>
      </tr>
      <tr id="border-padding-bleed-002-10.8.1" class="ahem">
        <td>
            <a href="border-padding-bleed-002.xht">border-padding-bleed-002</a></td>
        <td><a href="reference/border-padding-bleed-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>line-height - padding-top of inline non-replaced element paint over previous line box
          <ul class="assert">
            <li>Although margins, borders and padding of inline non-replaced elements do not enter into the line box calculation, they are still rendered around inline boxes. This means that if the height specified by 'line-height' (40px in this testcase) is equal to the content height (40px in this testcase) of contained boxes, then background-color of padding-top area and border-top may 'bleed' into the adjoining preceding line box. Since line boxes are rendered in document order, this causes padding-top of 2nd line box (the span element in this testcase) to be painted over border-bottom and padding-bottom of inline boxes of previous line and, in this testcase, over the 1st line box.</li>
          </ul>
        </td>
      </tr>
      <tr id="border-padding-bleed-003-10.8.1" class="ahem">
        <td>
            <a href="border-padding-bleed-003.xht">border-padding-bleed-003</a></td>
        <td><a href="reference/border-padding-bleed-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>line-height - border-top of inline non-replaced element paint over previous line box
          <ul class="assert">
            <li>Although margins, borders and padding of inline non-replaced elements do not enter into the line box calculation, they are still rendered around inline boxes. This means that if the height specified by 'line-height' (40px in this testcase) is equal to the content height (40px in this testcase) of contained boxes, then background-color of padding-top area and border-top may 'bleed' into the adjoining preceding line box. Since line boxes are rendered in document order, this causes border-top of 2nd line box (the span element in this testcase) to be painted over border-bottom and padding-bottom of inline boxes of previous line and, in this testcase, over the 1st line box.</li>
          </ul>
        </td>
      </tr>
      <tr id="c42-ibx-ht-000-10.8.1" class="ahem">
        <td>
            <a href="c42-ibx-ht-000.xht">c42-ibx-ht-000</a></td>
        <td><a href="reference/c42-ibx-ht-000-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Inline Elements
        </td>
      </tr>
      <tr id="c527-font-001-10.8.1" class="">
        <td>
            <a href="c527-font-001.xht">c527-font-001</a></td>
        <td></td>
        <td></td>
        <td>font
        </td>
      </tr>
      <tr id="c527-font-002-10.8.1" class="">
        <td>
            <a href="c527-font-002.xht">c527-font-002</a></td>
        <td></td>
        <td></td>
        <td>font
        </td>
      </tr>
      <tr id="c527-font-003-10.8.1" class="">
        <td>
            <a href="c527-font-003.xht">c527-font-003</a></td>
        <td></td>
        <td></td>
        <td>font
        </td>
      </tr>
      <tr id="c527-font-004-10.8.1" class="">
        <td>
            <a href="c527-font-004.xht">c527-font-004</a></td>
        <td></td>
        <td></td>
        <td>font
        </td>
      </tr>
      <tr id="c527-font-005-10.8.1" class="">
        <td>
            <a href="c527-font-005.xht">c527-font-005</a></td>
        <td></td>
        <td></td>
        <td>font
        </td>
      </tr>
      <tr id="c527-font-006-10.8.1" class="">
        <td>
            <a href="c527-font-006.xht">c527-font-006</a></td>
        <td></td>
        <td></td>
        <td>font
        </td>
      </tr>
      <tr id="c527-font-007-10.8.1" class="">
        <td>
            <a href="c527-font-007.xht">c527-font-007</a></td>
        <td></td>
        <td></td>
        <td>font
        </td>
      </tr>
      <tr id="c527-font-008-10.8.1" class="">
        <td>
            <a href="c527-font-008.xht">c527-font-008</a></td>
        <td></td>
        <td></td>
        <td>font
        </td>
      </tr>
      <tr id="c527-font-009-10.8.1" class="">
        <td>
            <a href="c527-font-009.xht">c527-font-009</a></td>
        <td></td>
        <td></td>
        <td>font
        </td>
      </tr>
      <tr id="c527-font-10-10.8.1" class="">
        <td>
            <a href="c527-font-10.xht">c527-font-10</a></td>
        <td></td>
        <td></td>
        <td>font
        </td>
      </tr>
      <tr id="c544-valgn-000-10.8.1" class="ahem image">
        <td>
            <a href="c544-valgn-000.xht">c544-valgn-000</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>vertical-align
        </td>
      </tr>
      <tr id="c544-valgn-001-10.8.1" class="ahem image">
        <td>
            <a href="c544-valgn-001.xht">c544-valgn-001</a></td>
        <td><a href="reference/c544-valgn-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>vertical-align
        </td>
      </tr>
      <tr id="c544-valgn-002-10.8.1" class="ahem image interact">
        <td>
            <a href="c544-valgn-002.xht">c544-valgn-002</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>vertical-align
        </td>
      </tr>
      <tr id="c544-valgn-003-10.8.1" class="ahem image interact">
        <td>
            <a href="c544-valgn-003.xht">c544-valgn-003</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>vertical-align
        </td>
      </tr>
      <tr id="c544-valgn-004-10.8.1" class="ahem image interact">
        <td>
            <a href="c544-valgn-004.xht">c544-valgn-004</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr><abbr class="interact" title="Requires user interaction">Interact</abbr></td>
        <td>vertical-align
        </td>
      </tr>
      <tr id="c548-leadin-000-10.8.1" class="ahem">
        <td>
            <a href="c548-leadin-000.xht">c548-leadin-000</a></td>
        <td><a href="reference/c548-leadin-000-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>line-height
        </td>
      </tr>
      <tr id="c548-ln-ht-000-10.8.1" class="ahem">
        <td>
            <a href="c548-ln-ht-000.xht">c548-ln-ht-000</a></td>
        <td><a href="reference/c548-ln-ht-000-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>line-height
        </td>
      </tr>
      <tr id="c548-ln-ht-001-10.8.1" class="ahem image">
        <td>
            <a href="c548-ln-ht-001.xht">c548-ln-ht-001</a></td>
        <td><a href="reference/c548-ln-ht-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>line-height
        </td>
      </tr>
      <tr id="c548-ln-ht-002-10.8.1" class="ahem image invalid">
        <td>
            <a href="c548-ln-ht-002.xht">c548-ln-ht-002</a></td>
        <td><a href="reference/c548-ln-ht-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr></td>
        <td>line-height
        </td>
      </tr>
      <tr id="c548-ln-ht-003-10.8.1" class="ahem image">
        <td>
            <a href="c548-ln-ht-003.xht">c548-ln-ht-003</a></td>
        <td><a href="reference/c548-ln-ht-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>line-height
        </td>
      </tr>
      <tr id="c548-ln-ht-004-10.8.1" class="ahem image">
        <td>
            <a href="c548-ln-ht-004.xht">c548-ln-ht-004</a></td>
        <td><a href="reference/c548-ln-ht-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>line-height
        </td>
      </tr>
      <tr id="empty-inline-002-10.8.1" class="ahem">
        <td>
            <a href="empty-inline-002.xht">empty-inline-002</a></td>
        <td><a href="reference/empty-inline-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Empty line box influence
          <ul class="assert">
            <li>Empty inline elements still influence calculation just like elements with content.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-000-10.8.1" class="">
        <td>
            <a href="inline-block-000.xht">inline-block-000</a></td>
        <td><a href="reference/inline-block-000-ref.xht">=</a> </td>
        <td></td>
        <td>Test for inline-block
          <ul class="assert">
            <li>This value causes an element to generate a block box, which itself is flowed as a single inline box, similar to a replaced element. The inside of an inline-block is formatted as a block box, and the element itself is formatted as an inline replaced element.</li>
            <li>The baseline of an 'inline-block' is the baseline of its last line box in the normal flow, unless it has either no in-flow line boxes or if its 'overflow' property has a computed value other than 'visible', in which case the baseline is the bottom margin edge.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-valign-001-10.8.1" class="">
        <td>
            <a href="inline-block-valign-001.xht">inline-block-valign-001</a></td>
        <td><a href="reference/inline-block-valign-001-ref.xht">=</a> </td>
        <td></td>
        <td>Test for vertical alignment on inline-block
          <ul class="assert">
            <li>This value causes an element to generate a block box, which itself is flowed as a single inline box, similar to a replaced element. The inside of an inline-block is formatted as a block box, and the element itself is formatted as an inline replaced element.</li>
            <li>The baseline of an 'inline-block' is the baseline of its last line box in the normal flow, unless it has either no in-flow line boxes or if its 'overflow' property has a computed value other than 'visible', in which case the baseline is the bottom margin edge.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-block-valign-002-10.8.1" class="">
        <td>
            <a href="inline-block-valign-002.xht">inline-block-valign-002</a></td>
        <td><a href="reference/inline-block-valign-002-ref.xht">=</a> </td>
        <td></td>
        <td>Test for vertical alignment on inline-block
          <ul class="assert">
            <li>This value causes an element to generate a block box, which itself is flowed as a single inline box, similar to a replaced element. The inside of an inline-block is formatted as a block box, and the element itself is formatted as an inline replaced element.</li>
            <li>The baseline of an 'inline-block' is the baseline of its last line box in the normal flow, unless it has either no in-flow line boxes or if its 'overflow' property has a computed value other than 'visible', in which case the baseline is the bottom margin edge.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-table-002a-10.8.1" class="">
        <td>
            <a href="inline-table-002a.xht">inline-table-002a</a></td>
        <td><a href="reference/inline-table-002-ref.xht">=</a> </td>
        <td></td>
        <td>Test for inline-table
          <ul class="assert">
            <li>it is a rectangular block that participates in an inline formatting context).</li>
            <li>The baseline of an 'inline-table' is the baseline of the first row of the table.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-table-002b-10.8.1" class="">
        <td>
            <a href="inline-table-002b.xht">inline-table-002b</a></td>
        <td><a href="reference/inline-table-002-ref.xht">=</a> </td>
        <td></td>
        <td>Test for inline-table
          <ul class="assert">
            <li>it is a rectangular block that participates in an inline formatting context).</li>
            <li>The baseline of an 'inline-table' is the baseline of the first row of the table.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-table-003-10.8.1" class="">
        <td>
            <a href="inline-table-003.xht">inline-table-003</a></td>
        <td><a href="reference/inline-table-003-ref.xht">=</a> </td>
        <td></td>
        <td>Test for inline-table
          <ul class="assert">
            <li>it is a rectangular block that participates in an inline formatting context).</li>
            <li>The baseline of an 'inline-table' is the baseline of the first row of the table.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-table-alignment-002-10.8.1" class="ahem">
        <td>
            <a href="inline-table-alignment-002.xht">inline-table-alignment-002</a></td>
        <td><a href="reference/inline-table-alignment-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>inline-table alignment - central alignment with vertical layout
          <ul class="assert">
            <li>This test checks the generation of inline-table baseline. When 'writing-mode' is 'vertical-rl' and when 'text-orientation' is 'mixed', then the central baseline is used as the dominant baseline.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-table-alignment-003-10.8.1" class="ahem">
        <td>
            <a href="inline-table-alignment-003.xht">inline-table-alignment-003</a></td>
        <td><a href="reference/inline-table-alignment-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>inline-table alignment - central alignment with vertical layout
          <ul class="assert">
            <li>This test checks the generation of inline-table baseline. When 'writing-mode' is 'vertical-lr' and when 'text-orientation' is 'mixed', then the central baseline is used as the dominant baseline.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-table-alignment-004-10.8.1" class="ahem">
        <td>
            <a href="inline-table-alignment-004.xht">inline-table-alignment-004</a></td>
        <td><a href="reference/inline-table-alignment-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>inline-table alignment - central alignment with vertical layout
          <ul class="assert">
            <li>This test checks the generation of inline-table baseline. When 'writing-mode' is 'vertical-rl' and when 'text-orientation' is 'upright', then the central baseline is used as the dominant baseline.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-table-alignment-005-10.8.1" class="ahem">
        <td>
            <a href="inline-table-alignment-005.xht">inline-table-alignment-005</a></td>
        <td><a href="reference/inline-table-alignment-003-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>inline-table alignment - central alignment with vertical layout
          <ul class="assert">
            <li>This test checks the generation of inline-table baseline. When 'writing-mode' is 'vertical-lr' and when 'text-orientation' is 'upright', then the central baseline is used as the dominant baseline.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-table-valign-001-10.8.1" class="">
        <td>
            <a href="inline-table-valign-001.xht">inline-table-valign-001</a></td>
        <td><a href="reference/inline-table-valign-001-ref.xht">=</a> </td>
        <td></td>
        <td>Test for vertical alignment on inline-table
          <ul class="assert">
            <li>it is a rectangular block that participates in an inline formatting context).</li>
            <li>The baseline of an 'inline-table' is the baseline of the first row of the table.</li>
          </ul>
        </td>
      </tr>
      <tr id="inline-table-valign-002-10.8.1" class="ahem">
        <td>
            <a href="inline-table-valign-002.xht">inline-table-valign-002</a></td>
        <td><a href="reference/inline-table-valign-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>vertical baseline alignment of an element with 'display' set to 'inline-table' with a 'border-bottom' and with a first row made of empty cells
          <ul class="assert">
            <li>The baseline of an 'inline-table' is the baseline of the first row of the table. If the content of cells in such first row are empty, then the baseline of such first row coincides with the bottom edge of the content box of cells.</li>
          </ul>
        </td>
      </tr>
      <tr id="leading-001-10.8.1" class="ahem">
        <td>
            <a href="leading-001.xht">leading-001</a></td>
        <td><a href="reference/leading-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Leading and half leading line heights
          <ul class="assert">
            <li>Line-height can be different from the content area so space is above and below.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-box-height-001-10.8.1" class="ahem">
        <td>
            <a href="line-box-height-001.xht">line-box-height-001</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height for inline elements when 'line-height' is smaller than 'height'
          <ul class="assert">
            <li>The 'line-height' property sets the initial height but that height is increased if the content height is larger.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-box-height-002-10.8.1" class="image">
        <td>
            <a href="line-box-height-002.xht">line-box-height-002</a></td>
        <td><a href="reference/line-box-height-002-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Height for inline replaced elements and 'line-height'
          <ul class="assert">
            <li>The 'line-height' property doe not set the height for inline replaced elements. The height of the replaced element sets the line-height'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-001-10.8.1" class="ahem invalid should">
        <td>
            <a href="line-height-001.xht">line-height-001</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using pixels with a minimum minus one value, -1px
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-002-10.8.1" class="ahem">
        <td>
            <a href="line-height-002.xht">line-height-002</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using pixels with a minimum value, 0px
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-003-10.8.1" class="ahem">
        <td>
            <a href="line-height-003.xht">line-height-003</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using pixels with a minimum plus one value, 1px
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-004-10.8.1" class="ahem">
        <td>
            <a href="line-height-004.xht">line-height-004</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using pixels with a negative zero value, -0px
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-005-10.8.1" class="ahem">
        <td>
            <a href="line-height-005.xht">line-height-005</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using pixels with a positive zero value, +0px
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-006-10.8.1" class="ahem">
        <td>
            <a href="line-height-006.xht">line-height-006</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-007-10.8.1" class="ahem">
        <td>
            <a href="line-height-007.xht">line-height-007</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-012-10.8.1" class="ahem invalid should">
        <td>
            <a href="line-height-012.xht">line-height-012</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using points with a minimum minus one value, -1pt
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-013-10.8.1" class="ahem">
        <td>
            <a href="line-height-013.xht">line-height-013</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using points with a minimum value, 0pt
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-014-10.8.1" class="96dpi ahem">
        <td>
            <a href="line-height-014.xht">line-height-014</a></td>
        <td></td>
        <td><abbr class="96dpi" title="Only valid on 96dpi displays">96</abbr><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using points with a minimum plus one value, 1pt
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-015-10.8.1" class="ahem">
        <td>
            <a href="line-height-015.xht">line-height-015</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using points with a negative zero value, -0pt
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-016-10.8.1" class="ahem">
        <td>
            <a href="line-height-016.xht">line-height-016</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using points with a positive zero value, +0pt
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-017-10.8.1" class="ahem">
        <td>
            <a href="line-height-017.xht">line-height-017</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-018-10.8.1" class="ahem">
        <td>
            <a href="line-height-018.xht">line-height-018</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-023-10.8.1" class="ahem invalid should">
        <td>
            <a href="line-height-023.xht">line-height-023</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using picas with a minimum minus one value, -1pc
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-024-10.8.1" class="ahem">
        <td>
            <a href="line-height-024.xht">line-height-024</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using picas with a minimum value, 0pc
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-025-10.8.1" class="ahem">
        <td>
            <a href="line-height-025.xht">line-height-025</a></td>
        <td><a href="reference/line-height-025-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using picas with a minimum plus one value, 1pc
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-026-10.8.1" class="ahem">
        <td>
            <a href="line-height-026.xht">line-height-026</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using picas with a negative zero value, -0pc
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-027-10.8.1" class="ahem">
        <td>
            <a href="line-height-027.xht">line-height-027</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using picas with a positive zero value, +0pc
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-028-10.8.1" class="ahem">
        <td>
            <a href="line-height-028.xht">line-height-028</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-029-10.8.1" class="ahem">
        <td>
            <a href="line-height-029.xht">line-height-029</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-034-10.8.1" class="ahem invalid should">
        <td>
            <a href="line-height-034.xht">line-height-034</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using centimeters with a minimum minus one value, -1cm
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-035-10.8.1" class="ahem">
        <td>
            <a href="line-height-035.xht">line-height-035</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using centimeters with a minimum value, 0cm
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-036-10.8.1" class="ahem">
        <td>
            <a href="line-height-036.xht">line-height-036</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using centimeters with a minimum plus one value, 1cm
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-037-10.8.1" class="ahem">
        <td>
            <a href="line-height-037.xht">line-height-037</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using centimeters with a negative zero value, -0cm
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-038-10.8.1" class="ahem">
        <td>
            <a href="line-height-038.xht">line-height-038</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using centimeters with a positive zero value, +0cm
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-039-10.8.1" class="ahem">
        <td>
            <a href="line-height-039.xht">line-height-039</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-040-10.8.1" class="ahem">
        <td>
            <a href="line-height-040.xht">line-height-040</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-045-10.8.1" class="ahem invalid should">
        <td>
            <a href="line-height-045.xht">line-height-045</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using millimeters with a minimum minus one value, -1mm
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-046-10.8.1" class="ahem">
        <td>
            <a href="line-height-046.xht">line-height-046</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using millimeters with a minimum value, 0mm
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-047-10.8.1" class="ahem">
        <td>
            <a href="line-height-047.xht">line-height-047</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using millimeters with a minimum plus one value, 1mm
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-048-10.8.1" class="ahem">
        <td>
            <a href="line-height-048.xht">line-height-048</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using millimeters with a negative zero value, -0mm
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-049-10.8.1" class="ahem">
        <td>
            <a href="line-height-049.xht">line-height-049</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using millimeters with a positive zero value, +0mm
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-050-10.8.1" class="ahem">
        <td>
            <a href="line-height-050.xht">line-height-050</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-051-10.8.1" class="ahem">
        <td>
            <a href="line-height-051.xht">line-height-051</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-056-10.8.1" class="ahem invalid should">
        <td>
            <a href="line-height-056.xht">line-height-056</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using inches with a minimum minus one value, -1in
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-057-10.8.1" class="ahem">
        <td>
            <a href="line-height-057.xht">line-height-057</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using inches with a minimum value, 0in
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-058-10.8.1" class="ahem">
        <td>
            <a href="line-height-058.xht">line-height-058</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using inches with a minimum plus one value, 1in
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-059-10.8.1" class="ahem">
        <td>
            <a href="line-height-059.xht">line-height-059</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using inches with a negative zero value, -0in
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-060-10.8.1" class="ahem">
        <td>
            <a href="line-height-060.xht">line-height-060</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using inches with a positive zero value, +0in
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-061-10.8.1" class="ahem">
        <td>
            <a href="line-height-061.xht">line-height-061</a></td>
        <td><a href="reference/line-height-061-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using inches with a nominal value, 3in
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-062-10.8.1" class="ahem">
        <td>
            <a href="line-height-062.xht">line-height-062</a></td>
        <td><a href="reference/line-height-061-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using inches with a positive nominal value, +3in
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-067-10.8.1" class="ahem invalid should">
        <td>
            <a href="line-height-067.xht">line-height-067</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using 'em' units with a minimum minus one value, -1em
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-068-10.8.1" class="ahem">
        <td>
            <a href="line-height-068.xht">line-height-068</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'em' units with a minimum value, 0em
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-069-10.8.1" class="ahem">
        <td>
            <a href="line-height-069.xht">line-height-069</a></td>
        <td><a href="reference/line-height-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'em' units with a minimum plus one value, 1em
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-070-10.8.1" class="ahem">
        <td>
            <a href="line-height-070.xht">line-height-070</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'em' units with a negative zero value, -0em
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-071-10.8.1" class="ahem">
        <td>
            <a href="line-height-071.xht">line-height-071</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'em' units with a positive zero value, +0em
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-072-10.8.1" class="ahem">
        <td>
            <a href="line-height-072.xht">line-height-072</a></td>
        <td><a href="reference/line-height-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-073-10.8.1" class="ahem">
        <td>
            <a href="line-height-073.xht">line-height-073</a></td>
        <td><a href="reference/line-height-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-078-10.8.1" class="ahem invalid should">
        <td>
            <a href="line-height-078.xht">line-height-078</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using 'ex' units with a minimum minus one value, -1ex
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-079-10.8.1" class="ahem">
        <td>
            <a href="line-height-079.xht">line-height-079</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'ex' units with a minimum value, 0ex
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-080-10.8.1" class="ahem">
        <td>
            <a href="line-height-080.xht">line-height-080</a></td>
        <td><a href="reference/line-height-025-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'ex' units with a minimum plus one value, 1ex
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-081-10.8.1" class="ahem">
        <td>
            <a href="line-height-081.xht">line-height-081</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'ex' units with a negative zero value, -0ex
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-082-10.8.1" class="ahem">
        <td>
            <a href="line-height-082.xht">line-height-082</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'ex' units with a positive zero value, +0ex
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-083-10.8.1" class="ahem">
        <td>
            <a href="line-height-083.xht">line-height-083</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-084-10.8.1" class="ahem">
        <td>
            <a href="line-height-084.xht">line-height-084</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-089-10.8.1" class="ahem invalid should">
        <td>
            <a href="line-height-089.xht">line-height-089</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using percentages with a minimum minus one value, -1%
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-090-10.8.1" class="ahem">
        <td>
            <a href="line-height-090.xht">line-height-090</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using percentages with a minimum value, 0%
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-091-10.8.1" class="96dpi ahem">
        <td>
            <a href="line-height-091.xht">line-height-091</a></td>
        <td></td>
        <td><abbr class="96dpi" title="Only valid on 96dpi displays">96</abbr><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using percentages with a minimum plus one value, 1%
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-092-10.8.1" class="ahem">
        <td>
            <a href="line-height-092.xht">line-height-092</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using percentages with a negative zero value, -0%
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-093-10.8.1" class="ahem">
        <td>
            <a href="line-height-093.xht">line-height-093</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using percentages with a positive zero value, +0%
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-094-10.8.1" class="ahem">
        <td>
            <a href="line-height-094.xht">line-height-094</a></td>
        <td><a href="reference/line-height-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-095-10.8.1" class="ahem">
        <td>
            <a href="line-height-095.xht">line-height-095</a></td>
        <td><a href="reference/line-height-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-100-10.8.1" class="ahem invalid should">
        <td>
            <a href="line-height-100.xht">line-height-100</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height with a minimum minus one value, -1
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one number value.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-101-10.8.1" class="ahem">
        <td>
            <a href="line-height-101.xht">line-height-101</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height with a minimum value, 0
          <ul class="assert">
            <li>The 'line-height' property sets a minimum number value.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-102-10.8.1" class="ahem">
        <td>
            <a href="line-height-102.xht">line-height-102</a></td>
        <td><a href="reference/line-height-102-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using pixels with a minimum plus one value, 1
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one number value.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-103-10.8.1" class="ahem">
        <td>
            <a href="line-height-103.xht">line-height-103</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using pixels with a negative zero value, -0
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero number value.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-104-10.8.1" class="ahem">
        <td>
            <a href="line-height-104.xht">line-height-104</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height with a positive zero value, +0
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero number value.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-105-10.8.1" class="ahem">
        <td>
            <a href="line-height-105.xht">line-height-105</a></td>
        <td><a href="reference/line-height-105-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height with a nominal value, 5
          <ul class="assert">
            <li>The 'line-height' property sets a nominal number value.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-106-10.8.1" class="ahem">
        <td>
            <a href="line-height-106.xht">line-height-106</a></td>
        <td><a href="reference/line-height-105-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height with a positive nominal value, +5
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal number value.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-111-10.8.1" class="ahem should">
        <td>
            <a href="line-height-111.xht">line-height-111</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height with keyword value of 'normal'
          <ul class="assert">
            <li>The 'line-height' property set to 'normal' uses the default line-height.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-112-10.8.1" class="ahem">
        <td>
            <a href="line-height-112.xht">line-height-112</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height with keyword value of 'inherit'
          <ul class="assert">
            <li>The 'line-height' property set to 'inherit' uses the default line-height.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-129-10.8.1" class="image">
        <td>
            <a href="line-height-129.xht">line-height-129</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>height of line box and inline replaced elements
          <ul class="assert">
            <li>This test checks the height determination of a line box when such line box is made of a single inline replaced element. In this test, we verify that the margin box of an inline replaced element does indeed determine the line box height. div {line-height: 0px} rule only determines the minimum of the line box height.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-001-10.8.1" class="">
        <td>
            <a href="line-height-applies-to-001.xht">line-height-applies-to-001</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-002-10.8.1" class="">
        <td>
            <a href="line-height-applies-to-002.xht">line-height-applies-to-002</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-003-10.8.1" class="">
        <td>
            <a href="line-height-applies-to-003.xht">line-height-applies-to-003</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-004-10.8.1" class="">
        <td>
            <a href="line-height-applies-to-004.xht">line-height-applies-to-004</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-005-10.8.1" class="">
        <td>
            <a href="line-height-applies-to-005.xht">line-height-applies-to-005</a></td>
        <td><a href="reference/line-height-applies-to-005-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-006-10.8.1" class="">
        <td>
            <a href="line-height-applies-to-006.xht">line-height-applies-to-006</a></td>
        <td><a href="reference/line-height-applies-to-005-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-007-10.8.1" class="">
        <td>
            <a href="line-height-applies-to-007.xht">line-height-applies-to-007</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-008-10.8.1" class="">
        <td>
            <a href="line-height-applies-to-008.xht">line-height-applies-to-008</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'inline'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-009-10.8.1" class="">
        <td>
            <a href="line-height-applies-to-009.xht">line-height-applies-to-009</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'block'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-010-10.8.1" class="">
        <td>
            <a href="line-height-applies-to-010.xht">line-height-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'list-item'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'list-item'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-011-10.8.1" class="">
        <td>
            <a href="line-height-applies-to-011.xht">line-height-applies-to-011</a></td>
        <td></td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'run-in'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-012-10.8.1" class="">
        <td>
            <a href="line-height-applies-to-012.xht">line-height-applies-to-012</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'inline-block'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-013-10.8.1" class="">
        <td>
            <a href="line-height-applies-to-013.xht">line-height-applies-to-013</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-014-10.8.1" class="">
        <td>
            <a href="line-height-applies-to-014.xht">line-height-applies-to-014</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-015-10.8.1" class="">
        <td>
            <a href="line-height-applies-to-015.xht">line-height-applies-to-015</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-016-10.8.1" class="">
        <td>
            <a href="line-height-applies-to-016.xht">line-height-applies-to-016</a></td>
        <td><a href="reference/line-height-applies-to-016-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'none'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'none'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-bleed-001-10.8.1" class="">
        <td>
            <a href="line-height-bleed-001.xht">line-height-bleed-001</a></td>
        <td><a href="reference/line-height-bleed-001-ref.xht">=</a> </td>
        <td></td>
        <td>Glyphs overflow line box
          <ul class="assert">
            <li>Glyphs bleed out of the box when 'line-height' is less than the content height and the height of the box is not increased.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-bleed-002-10.8.1" class="ahem">
        <td>
            <a href="line-height-bleed-002.xht">line-height-bleed-002</a></td>
        <td><a href="reference/line-height-bleed-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Glyphs overflow when line height of container is less than content height
          <ul class="assert">
            <li>That glyphs bleed out of the box when 'line-height' can overlap adjoining line boxes.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-bleed-003-10.8.1" class="">
        <td>
            <a href="line-height-bleed-003.xht">line-height-bleed-003</a></td>
        <td></td>
        <td></td>
        <td>Leading and half leading line heights leads to space above and below
          <ul class="assert">
            <li>Line-height can be different from the content area so there is space above and below.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-largest-001-10.8.1" class="may">
        <td>
            <a href="line-height-largest-001.xht">line-height-largest-001</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Line-height with multiple font sizes
          <ul class="assert">
            <li>The 'line-height' value may use the largest font size when there is more than one font size.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-normal-recommendation-001-10.8.1" class="ahem should">
        <td>
            <a href="line-height-normal-recommendation-001.xht">line-height-normal-recommendation-001</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height recommended 'normal' value
          <ul class="assert">
            <li>It is recommended that the 'normal' value for 'line-height' is set to 1.0 or 1.2 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="table-height-algorithm-031-10.8.1" class="">
        <td>
            <a href="table-height-algorithm-031.xht">table-height-algorithm-031</a></td>
        <td></td>
        <td></td>
        <td>Table baseline and caption
          <ul class="assert">
            <li>A table caption does not set the baseline for a table.</li>
          </ul>
        </td>
      </tr>
      <tr id="table-height-algorithm-032-10.8.1" class="">
        <td>
            <a href="table-height-algorithm-032.xht">table-height-algorithm-032</a></td>
        <td></td>
        <td></td>
        <td>Inline-table baseline and caption
          <ul class="assert">
            <li>A table caption does not set the baseline for an inline-table.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-004-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-004.xht">vertical-align-004</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using pixels with a negative zero value, -0px
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-005-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-005.xht">vertical-align-005</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using pixels with a zero value, 0px
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-006-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-006.xht">vertical-align-006</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using pixels with a positive zero value, +0px
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-007-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-007.xht">vertical-align-007</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-008-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-008.xht">vertical-align-008</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-016-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-016.xht">vertical-align-016</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using points with a negative zero value, -0pt
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-017-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-017.xht">vertical-align-017</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using points with a zero value, 0pt
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-018-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-018.xht">vertical-align-018</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using points with a positive zero value, +0pt
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-019-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-019.xht">vertical-align-019</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-020-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-020.xht">vertical-align-020</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-028-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-028.xht">vertical-align-028</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using picas with a negative zero value, -0pc
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-029-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-029.xht">vertical-align-029</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using picas with a zero value, 0pc
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-030-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-030.xht">vertical-align-030</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using picas with a positive zero value, +0pc
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-031-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-031.xht">vertical-align-031</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-032-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-032.xht">vertical-align-032</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-040-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-040.xht">vertical-align-040</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using centimeters with a negative zero value, -0cm
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-041-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-041.xht">vertical-align-041</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using centimeters with a zero value, 0cm
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-042-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-042.xht">vertical-align-042</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using centimeters with a positive zero value, +0cm
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-043-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-043.xht">vertical-align-043</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-044-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-044.xht">vertical-align-044</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-052-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-052.xht">vertical-align-052</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using millimeters with a negative zero value, -0mm
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-053-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-053.xht">vertical-align-053</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using millimeters with a zero value, 0mm
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-054-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-054.xht">vertical-align-054</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using millimeters with a positive zero value, +0mm
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-055-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-055.xht">vertical-align-055</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-056-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-056.xht">vertical-align-056</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-064-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-064.xht">vertical-align-064</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using inches with a negative zero value, -0in
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-065-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-065.xht">vertical-align-065</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using inches with a zero value, 0in
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-066-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-066.xht">vertical-align-066</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using inches with a positive zero value, +0in
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-067-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-067.xht">vertical-align-067</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using inches with a nominal value, 1in
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-068-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-068.xht">vertical-align-068</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using inches with a positive nominal value, +1in
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-076-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-076.xht">vertical-align-076</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'em' units with a negative zero value, -0em
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-077-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-077.xht">vertical-align-077</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'em' units with a zero value, 0em
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-078-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-078.xht">vertical-align-078</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'em' units with a positive zero value, +0em
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-079-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-079.xht">vertical-align-079</a></td>
        <td><a href="reference/vertical-align-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-080-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-080.xht">vertical-align-080</a></td>
        <td><a href="reference/vertical-align-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-088-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-088.xht">vertical-align-088</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'ex' units with a negative zero value, -0ex
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-089-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-089.xht">vertical-align-089</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'ex' units with a zero value, 0ex
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-090-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-090.xht">vertical-align-090</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'ex' units with a positive zero value, +0ex
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-091-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-091.xht">vertical-align-091</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-092-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-092.xht">vertical-align-092</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-100-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-100.xht">vertical-align-100</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using percentages with a negative zero value, -0%
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-101-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-101.xht">vertical-align-101</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using percentages with a zero value, 0%
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-102-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-102.xht">vertical-align-102</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using percentages with a positive zero value, +0%
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-103-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-103.xht">vertical-align-103</a></td>
        <td><a href="reference/vertical-align-103-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-104-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-104.xht">vertical-align-104</a></td>
        <td><a href="reference/vertical-align-103-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-109-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-109.xht">vertical-align-109</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a negative zero value and no units, -0
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-110-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-110.xht">vertical-align-110</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a zero value and no units, 0
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-111-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-111.xht">vertical-align-111</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a positive zero value and no units, +0
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-112-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-112.xht">vertical-align-112</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'baseline'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'baseline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-113-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-113.xht">vertical-align-113</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'bottom'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-114-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-114.xht">vertical-align-114</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'middle'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'middle'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-115-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-115.xht">vertical-align-115</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'sub'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'sub'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-116-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-116.xht">vertical-align-116</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'super'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'super'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-117-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-117.xht">vertical-align-117</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'text-bottom'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'text-bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-117a-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-117a.xht">vertical-align-117a</a></td>
        <td><a href="reference/vertical-align-117a-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'vertical-align: text-bottom' - line-height
          <ul class="assert">
            <li>For inline non-replaced elements (such as the span element in this testcase), the box used for vertical-alignment is the box whose height is the 'line-height' (containing the box's glyphs and the half-leading on each side). 'vertical-align: text-bottom' will align the bottom of such box with the bottom of the parent's content area and not with the bottom of the parent's box.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-118-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-118.xht">vertical-align-118</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'text-top'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'text-top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-118a-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-118a.xht">vertical-align-118a</a></td>
        <td><a href="reference/vertical-align-118a-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'vertical-align: text-top' - line-height
          <ul class="assert">
            <li>For inline non-replaced elements (such as the span element in this testcase), the box used for vertical-alignment is the box whose height is the 'line-height' (containing the box's glyphs and the half-leading on each side). 'vertical-align: text-top' will align the top of such box with the top of the parent's content area and not with the bottom of the parent's box.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-119-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-119.xht">vertical-align-119</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'top'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-120-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-120.xht">vertical-align-120</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'inherit'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'inherit' and inherits the computed value from the parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-001-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-applies-to-001.xht">vertical-align-applies-to-001</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-002-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-applies-to-002.xht">vertical-align-applies-to-002</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-003-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-applies-to-003.xht">vertical-align-applies-to-003</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-004-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-applies-to-004.xht">vertical-align-applies-to-004</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-005-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-applies-to-005.xht">vertical-align-applies-to-005</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-006-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-applies-to-006.xht">vertical-align-applies-to-006</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-007-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-applies-to-007.xht">vertical-align-applies-to-007</a></td>
        <td><a href="reference/vertical-align-applies-to-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'vertical-align' property applies to elements with 'display' set to 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-008-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-applies-to-008.xht">vertical-align-applies-to-008</a></td>
        <td><a href="reference/vertical-align-applies-to-008-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'inline'
          <ul class="assert">
            <li>The 'vertical-align' property applies to elements with 'display' set to 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-009-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-applies-to-009.xht">vertical-align-applies-to-009</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'block'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-010-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-applies-to-010.xht">vertical-align-applies-to-010</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'list-item'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'list-item'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-011-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-applies-to-011.xht">vertical-align-applies-to-011</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'run-in'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-012-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-applies-to-012.xht">vertical-align-applies-to-012</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'inline-block'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-013-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-applies-to-013.xht">vertical-align-applies-to-013</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-014-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-applies-to-014.xht">vertical-align-applies-to-014</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-015-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-applies-to-015.xht">vertical-align-applies-to-015</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-001-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-baseline-001.xht">vertical-align-baseline-001</a></td>
        <td><a href="reference/vertical-align-baseline-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align set to '0%' is equal to 'baseline'
          <ul class="assert">
            <li>The 'vertical-align' property set to '0%' means the same as the 'baseline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-002-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-baseline-002.xht">vertical-align-baseline-002</a></td>
        <td><a href="reference/vertical-align-baseline-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align set to '0' is equal to 'baseline'
          <ul class="assert">
            <li>The 'vertical-align' property set to '0' means the same as the 'baseline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-003-10.8.1" class="">
        <td>
            <a href="vertical-align-baseline-003.xht">vertical-align-baseline-003</a></td>
        <td><a href="reference/vertical-align-baseline-003-ref.xht">=</a> </td>
        <td></td>
        <td>Vertical-align applied to 'inline-block' and baseline alignment
          <ul class="assert">
            <li>The 'vertical-align' property aligns the last line box of 'inline-block' elements with the baseline.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-004-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-baseline-004.xht">vertical-align-baseline-004</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to empty 'inline-block' and baseline alignment
          <ul class="assert">
            <li>The 'vertical-align' property aligns an empty 'inline-block' elements' bottom margin edge with the baseline.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-004a-10.8.1" class="ahem image">
        <td>
            <a href="vertical-align-baseline-004a.xht">vertical-align-baseline-004a</a></td>
        <td><a href="reference/vertical-align-baseline-004a-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Vertical-align applied to empty 'inline-block' and baseline alignment
          <ul class="assert">
            <li>The baseline of an 'inline-block' that has no in-flow line boxes is at its bottom margin edge. The bottom margin edge of an 'inline-block' that has no inflow line boxes will 'sit' on the baseline, will be located on the baseline of such 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-005-10.8.1" class="ahem">
        <td>
            <a href="vertical-align-baseline-005.xht">vertical-align-baseline-005</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to an 'inline-block' with 'overflow' not set to 'visible' and baseline alignment
          <ul class="assert">
            <li>The 'vertical-align' property aligns an 'inline-block' elements' bottom margin edge with the baseline when 'overflow' is not set to 'visible'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-005a-10.8.1" class="ahem image">
        <td>
            <a href="vertical-align-baseline-005a.xht">vertical-align-baseline-005a</a></td>
        <td><a href="reference/vertical-align-baseline-004a-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Vertical-align applied to an 'inline-block' with 'overflow' not set to 'visible' and baseline alignment
          <ul class="assert">
            <li>The baseline of an 'inline-block' whose 'overflow' property has a computed value other than 'visible' is located at its bottom margin edge.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-006-10.8.1" class="">
        <td>
            <a href="vertical-align-baseline-006.xht">vertical-align-baseline-006</a></td>
        <td></td>
        <td></td>
        <td>Baseline alignment with an inline element parent
          <ul class="assert">
            <li>The baseline of an inline element is aligned with the baseline of its child inline-block when 'vertical-align: baseline' is specified on the child.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-006a-10.8.1" class="">
        <td>
            <a href="vertical-align-baseline-006a.xht">vertical-align-baseline-006a</a></td>
        <td></td>
        <td></td>
        <td>Baseline alignment of an inline-block with vertical padding and margin
          <ul class="assert">
            <li>The baseline of an (anonymous) inline element is aligned with the baseline of the last line box of an 'inline-block' in the normal flow as 'vertical-align: baseline' is by default applied. In such case, the vertical padding and vertical margin have no influence on the position of the baseline line of an 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-007-10.8.1" class="">
        <td>
            <a href="vertical-align-baseline-007.xht">vertical-align-baseline-007</a></td>
        <td><a href="reference/vertical-align-baseline-007-ref.xht">=</a> </td>
        <td></td>
        <td>Baseline alignment with a block element parent
          <ul class="assert">
            <li>The baseline of a block element is aligned with the baseline of its child inline element when 'vertical-align: baseline' is specified on the child.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-008-10.8.1" class="">
        <td>
            <a href="vertical-align-baseline-008.xht">vertical-align-baseline-008</a></td>
        <td><a href="reference/vertical-align-baseline-008-ref.xht">=</a> </td>
        <td></td>
        <td>Baseline alignment with a table-cell element parent
          <ul class="assert">
            <li>The baseline of a table cell element is aligned with the baseline of its child inline element when 'vertical-align: baseline' is specified on the child.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-009-10.8.1" class="">
        <td>
            <a href="vertical-align-baseline-009.xht">vertical-align-baseline-009</a></td>
        <td><a href="reference/vertical-align-baseline-007-ref.xht">=</a> </td>
        <td></td>
        <td>Baseline alignment with a table caption element parent
          <ul class="assert">
            <li>The baseline of a table caption element is aligned with the baseline of its child inline element when 'vertical-align: baseline' is specified on the child.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-010-10.8.1" class="">
        <td>
            <a href="vertical-align-baseline-010.xht">vertical-align-baseline-010</a></td>
        <td></td>
        <td></td>
        <td>Baseline alignment with an inline-block element parent
          <ul class="assert">
            <li>The baseline of an inline-block element is aligned with the baseline of its child inline element when 'vertical-align: baseline' is specified on the child.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-sub-001-10.8.1" class="">
        <td>
            <a href="vertical-align-sub-001.xht">vertical-align-sub-001</a></td>
        <td><a href="reference/vertical-align-sub-001-ref.xht">=</a> </td>
        <td></td>
        <td>Vertical-align set to 'sub' does not adjust font-size
          <ul class="assert">
            <li>The 'vertical-align' property value 'sub' has no effect on the font-size of an element's text.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-super-001-10.8.1" class="">
        <td>
            <a href="vertical-align-super-001.xht">vertical-align-super-001</a></td>
        <td><a href="reference/vertical-align-sub-001-ref.xht">=</a> </td>
        <td></td>
        <td>Vertical-align set to 'super' does not adjust font-size
          <ul class="assert">
            <li>The 'vertical-align' property value 'super' has no effect on the font-size of an element's text.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.8.1.#inline-box-height">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.8.1.#propdef-line-height">
      <!-- 95 tests -->
      <tr id="empty-inline-002-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="empty-inline-002.xht">empty-inline-002</a></td>
        <td><a href="reference/empty-inline-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Empty line box influence
          <ul class="assert">
            <li>Empty inline elements still influence calculation just like elements with content.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-box-height-001-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-box-height-001.xht">line-box-height-001</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Height for inline elements when 'line-height' is smaller than 'height'
          <ul class="assert">
            <li>The 'line-height' property sets the initial height but that height is increased if the content height is larger.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-box-height-002-10.8.1.#propdef-line-height" class="image">
        <td>
            <a href="line-box-height-002.xht">line-box-height-002</a></td>
        <td><a href="reference/line-box-height-002-ref.xht">=</a> </td>
        <td><abbr class="image" title="Requires bitmap graphic support">Bitmaps</abbr></td>
        <td>Height for inline replaced elements and 'line-height'
          <ul class="assert">
            <li>The 'line-height' property doe not set the height for inline replaced elements. The height of the replaced element sets the line-height'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-001-10.8.1.#propdef-line-height" class="ahem invalid should">
        <td>
            <a href="line-height-001.xht">line-height-001</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using pixels with a minimum minus one value, -1px
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-002-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-002.xht">line-height-002</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using pixels with a minimum value, 0px
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-003-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-003.xht">line-height-003</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using pixels with a minimum plus one value, 1px
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-004-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-004.xht">line-height-004</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using pixels with a negative zero value, -0px
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-005-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-005.xht">line-height-005</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using pixels with a positive zero value, +0px
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-006-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-006.xht">line-height-006</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-007-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-007.xht">line-height-007</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-012-10.8.1.#propdef-line-height" class="ahem invalid should">
        <td>
            <a href="line-height-012.xht">line-height-012</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using points with a minimum minus one value, -1pt
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-013-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-013.xht">line-height-013</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using points with a minimum value, 0pt
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-014-10.8.1.#propdef-line-height" class="96dpi ahem">
        <td>
            <a href="line-height-014.xht">line-height-014</a></td>
        <td></td>
        <td><abbr class="96dpi" title="Only valid on 96dpi displays">96</abbr><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using points with a minimum plus one value, 1pt
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-015-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-015.xht">line-height-015</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using points with a negative zero value, -0pt
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-016-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-016.xht">line-height-016</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using points with a positive zero value, +0pt
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-017-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-017.xht">line-height-017</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-018-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-018.xht">line-height-018</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-023-10.8.1.#propdef-line-height" class="ahem invalid should">
        <td>
            <a href="line-height-023.xht">line-height-023</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using picas with a minimum minus one value, -1pc
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-024-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-024.xht">line-height-024</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using picas with a minimum value, 0pc
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-025-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-025.xht">line-height-025</a></td>
        <td><a href="reference/line-height-025-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using picas with a minimum plus one value, 1pc
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-026-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-026.xht">line-height-026</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using picas with a negative zero value, -0pc
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-027-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-027.xht">line-height-027</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using picas with a positive zero value, +0pc
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-028-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-028.xht">line-height-028</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-029-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-029.xht">line-height-029</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-034-10.8.1.#propdef-line-height" class="ahem invalid should">
        <td>
            <a href="line-height-034.xht">line-height-034</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using centimeters with a minimum minus one value, -1cm
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-035-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-035.xht">line-height-035</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using centimeters with a minimum value, 0cm
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-036-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-036.xht">line-height-036</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using centimeters with a minimum plus one value, 1cm
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-037-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-037.xht">line-height-037</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using centimeters with a negative zero value, -0cm
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-038-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-038.xht">line-height-038</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using centimeters with a positive zero value, +0cm
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-039-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-039.xht">line-height-039</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-040-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-040.xht">line-height-040</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-045-10.8.1.#propdef-line-height" class="ahem invalid should">
        <td>
            <a href="line-height-045.xht">line-height-045</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using millimeters with a minimum minus one value, -1mm
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-046-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-046.xht">line-height-046</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using millimeters with a minimum value, 0mm
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-047-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-047.xht">line-height-047</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using millimeters with a minimum plus one value, 1mm
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-048-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-048.xht">line-height-048</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using millimeters with a negative zero value, -0mm
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-049-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-049.xht">line-height-049</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using millimeters with a positive zero value, +0mm
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-050-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-050.xht">line-height-050</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-051-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-051.xht">line-height-051</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-056-10.8.1.#propdef-line-height" class="ahem invalid should">
        <td>
            <a href="line-height-056.xht">line-height-056</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using inches with a minimum minus one value, -1in
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-057-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-057.xht">line-height-057</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using inches with a minimum value, 0in
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-058-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-058.xht">line-height-058</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using inches with a minimum plus one value, 1in
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-059-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-059.xht">line-height-059</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using inches with a negative zero value, -0in
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-060-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-060.xht">line-height-060</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using inches with a positive zero value, +0in
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-061-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-061.xht">line-height-061</a></td>
        <td><a href="reference/line-height-061-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using inches with a nominal value, 3in
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-062-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-062.xht">line-height-062</a></td>
        <td><a href="reference/line-height-061-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using inches with a positive nominal value, +3in
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-067-10.8.1.#propdef-line-height" class="ahem invalid should">
        <td>
            <a href="line-height-067.xht">line-height-067</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using 'em' units with a minimum minus one value, -1em
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-068-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-068.xht">line-height-068</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'em' units with a minimum value, 0em
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-069-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-069.xht">line-height-069</a></td>
        <td><a href="reference/line-height-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'em' units with a minimum plus one value, 1em
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-070-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-070.xht">line-height-070</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'em' units with a negative zero value, -0em
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-071-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-071.xht">line-height-071</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'em' units with a positive zero value, +0em
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-072-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-072.xht">line-height-072</a></td>
        <td><a href="reference/line-height-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-073-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-073.xht">line-height-073</a></td>
        <td><a href="reference/line-height-072-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-078-10.8.1.#propdef-line-height" class="ahem invalid should">
        <td>
            <a href="line-height-078.xht">line-height-078</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using 'ex' units with a minimum minus one value, -1ex
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-079-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-079.xht">line-height-079</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'ex' units with a minimum value, 0ex
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-080-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-080.xht">line-height-080</a></td>
        <td><a href="reference/line-height-025-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'ex' units with a minimum plus one value, 1ex
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-081-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-081.xht">line-height-081</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'ex' units with a negative zero value, -0ex
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-082-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-082.xht">line-height-082</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'ex' units with a positive zero value, +0ex
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-083-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-083.xht">line-height-083</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-084-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-084.xht">line-height-084</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-089-10.8.1.#propdef-line-height" class="ahem invalid should">
        <td>
            <a href="line-height-089.xht">line-height-089</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height using percentages with a minimum minus one value, -1%
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-090-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-090.xht">line-height-090</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using percentages with a minimum value, 0%
          <ul class="assert">
            <li>The 'line-height' property sets a minimum length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-091-10.8.1.#propdef-line-height" class="96dpi ahem">
        <td>
            <a href="line-height-091.xht">line-height-091</a></td>
        <td></td>
        <td><abbr class="96dpi" title="Only valid on 96dpi displays">96</abbr><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using percentages with a minimum plus one value, 1%
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-092-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-092.xht">line-height-092</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using percentages with a negative zero value, -0%
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-093-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-093.xht">line-height-093</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using percentages with a positive zero value, +0%
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-094-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-094.xht">line-height-094</a></td>
        <td><a href="reference/line-height-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'line-height' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-095-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-095.xht">line-height-095</a></td>
        <td><a href="reference/line-height-069-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-100-10.8.1.#propdef-line-height" class="ahem invalid should">
        <td>
            <a href="line-height-100.xht">line-height-100</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="invalid" title="Tests invalid CSS">Invalid</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height with a minimum minus one value, -1
          <ul class="assert">
            <li>The 'line-height' property sets a minimum minus one number value.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-101-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-101.xht">line-height-101</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height with a minimum value, 0
          <ul class="assert">
            <li>The 'line-height' property sets a minimum number value.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-102-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-102.xht">line-height-102</a></td>
        <td><a href="reference/line-height-102-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using pixels with a minimum plus one value, 1
          <ul class="assert">
            <li>The 'line-height' property sets a minimum plus one number value.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-103-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-103.xht">line-height-103</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height using pixels with a negative zero value, -0
          <ul class="assert">
            <li>The 'line-height' property sets a negative zero number value.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-104-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-104.xht">line-height-104</a></td>
        <td><a href="reference/line-height-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height with a positive zero value, +0
          <ul class="assert">
            <li>The 'line-height' property sets a positive zero number value.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-105-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-105.xht">line-height-105</a></td>
        <td><a href="reference/line-height-105-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height with a nominal value, 5
          <ul class="assert">
            <li>The 'line-height' property sets a nominal number value.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-106-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-106.xht">line-height-106</a></td>
        <td><a href="reference/line-height-105-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height with a positive nominal value, +5
          <ul class="assert">
            <li>The 'line-height' property sets a positive nominal number value.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-111-10.8.1.#propdef-line-height" class="ahem should">
        <td>
            <a href="line-height-111.xht">line-height-111</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height with keyword value of 'normal'
          <ul class="assert">
            <li>The 'line-height' property set to 'normal' uses the default line-height.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-112-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-112.xht">line-height-112</a></td>
        <td><a href="reference/line-height-006-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Line-height with keyword value of 'inherit'
          <ul class="assert">
            <li>The 'line-height' property set to 'inherit' uses the default line-height.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-001-10.8.1.#propdef-line-height" class="">
        <td>
            <a href="line-height-applies-to-001.xht">line-height-applies-to-001</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-002-10.8.1.#propdef-line-height" class="">
        <td>
            <a href="line-height-applies-to-002.xht">line-height-applies-to-002</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-003-10.8.1.#propdef-line-height" class="">
        <td>
            <a href="line-height-applies-to-003.xht">line-height-applies-to-003</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-004-10.8.1.#propdef-line-height" class="">
        <td>
            <a href="line-height-applies-to-004.xht">line-height-applies-to-004</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-005-10.8.1.#propdef-line-height" class="">
        <td>
            <a href="line-height-applies-to-005.xht">line-height-applies-to-005</a></td>
        <td><a href="reference/line-height-applies-to-005-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-006-10.8.1.#propdef-line-height" class="">
        <td>
            <a href="line-height-applies-to-006.xht">line-height-applies-to-006</a></td>
        <td><a href="reference/line-height-applies-to-005-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-007-10.8.1.#propdef-line-height" class="">
        <td>
            <a href="line-height-applies-to-007.xht">line-height-applies-to-007</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-008-10.8.1.#propdef-line-height" class="">
        <td>
            <a href="line-height-applies-to-008.xht">line-height-applies-to-008</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'inline'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-009-10.8.1.#propdef-line-height" class="">
        <td>
            <a href="line-height-applies-to-009.xht">line-height-applies-to-009</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'block'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-010-10.8.1.#propdef-line-height" class="">
        <td>
            <a href="line-height-applies-to-010.xht">line-height-applies-to-010</a></td>
        <td></td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'list-item'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'list-item'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-011-10.8.1.#propdef-line-height" class="">
        <td>
            <a href="line-height-applies-to-011.xht">line-height-applies-to-011</a></td>
        <td></td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'run-in'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-012-10.8.1.#propdef-line-height" class="">
        <td>
            <a href="line-height-applies-to-012.xht">line-height-applies-to-012</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'inline-block'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-013-10.8.1.#propdef-line-height" class="">
        <td>
            <a href="line-height-applies-to-013.xht">line-height-applies-to-013</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-014-10.8.1.#propdef-line-height" class="">
        <td>
            <a href="line-height-applies-to-014.xht">line-height-applies-to-014</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-015-10.8.1.#propdef-line-height" class="">
        <td>
            <a href="line-height-applies-to-015.xht">line-height-applies-to-015</a></td>
        <td><a href="reference/line-height-applies-to-001-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-applies-to-016-10.8.1.#propdef-line-height" class="">
        <td>
            <a href="line-height-applies-to-016.xht">line-height-applies-to-016</a></td>
        <td><a href="reference/line-height-applies-to-016-ref.xht">=</a> </td>
        <td></td>
        <td>Line-height applied to elements with 'display' set to 'none'
          <ul class="assert">
            <li>The 'line-height' property applies to elements with 'display' set to 'none'.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-bleed-001-10.8.1.#propdef-line-height" class="">
        <td>
            <a href="line-height-bleed-001.xht">line-height-bleed-001</a></td>
        <td><a href="reference/line-height-bleed-001-ref.xht">=</a> </td>
        <td></td>
        <td>Glyphs overflow line box
          <ul class="assert">
            <li>Glyphs bleed out of the box when 'line-height' is less than the content height and the height of the box is not increased.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-bleed-002-10.8.1.#propdef-line-height" class="ahem">
        <td>
            <a href="line-height-bleed-002.xht">line-height-bleed-002</a></td>
        <td><a href="reference/line-height-bleed-002-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Glyphs overflow when line height of container is less than content height
          <ul class="assert">
            <li>That glyphs bleed out of the box when 'line-height' can overlap adjoining line boxes.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-largest-001-10.8.1.#propdef-line-height" class="may">
        <td>
            <a href="line-height-largest-001.xht">line-height-largest-001</a></td>
        <td></td>
        <td><abbr class="may" title="Behavior tested is preferred but optional">Optional</abbr></td>
        <td>Line-height with multiple font sizes
          <ul class="assert">
            <li>The 'line-height' value may use the largest font size when there is more than one font size.</li>
          </ul>
        </td>
      </tr>
      <tr id="line-height-normal-recommendation-001-10.8.1.#propdef-line-height" class="ahem should">
        <td>
            <a href="line-height-normal-recommendation-001.xht">line-height-normal-recommendation-001</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr><abbr class="should" title="Behavior tested is recommended but not required">Recommend</abbr></td>
        <td>Line-height recommended 'normal' value
          <ul class="assert">
            <li>It is recommended that the 'normal' value for 'line-height' is set to 1.0 or 1.2 'em' units.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.8.1.#propdef-vertical-align">
      <!-- 86 tests -->
      <tr id="grid-inline-vertical-align-001-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="grid-inline-vertical-align-001.xht">grid-inline-vertical-align-001</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'vertical-align' has no effect on grid items within an inline grid
        </td>
      </tr>
      <tr id="grid-vertical-align-001-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="grid-vertical-align-001.xht">grid-vertical-align-001</a></td>
        <td><a href="reference/ref-filled-green-100px-square.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>'vertical-align' has no effect on grid items
        </td>
      </tr>
      <tr id="vertical-align-004-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-004.xht">vertical-align-004</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using pixels with a negative zero value, -0px
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-005-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-005.xht">vertical-align-005</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using pixels with a zero value, 0px
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-006-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-006.xht">vertical-align-006</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using pixels with a positive zero value, +0px
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-007-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-007.xht">vertical-align-007</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using pixels with a nominal value, 96px
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-008-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-008.xht">vertical-align-008</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using pixels with a positive nominal value, +96px
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive nominal length value in pixels.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-016-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-016.xht">vertical-align-016</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using points with a negative zero value, -0pt
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-017-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-017.xht">vertical-align-017</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using points with a zero value, 0pt
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-018-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-018.xht">vertical-align-018</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using points with a positive zero value, +0pt
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-019-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-019.xht">vertical-align-019</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using points with a nominal value, 72pt
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-020-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-020.xht">vertical-align-020</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using points with a positive nominal value, +72pt
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in points.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-028-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-028.xht">vertical-align-028</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using picas with a negative zero value, -0pc
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-029-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-029.xht">vertical-align-029</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using picas with a zero value, 0pc
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-030-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-030.xht">vertical-align-030</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using picas with a positive zero value, +0pc
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-031-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-031.xht">vertical-align-031</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using picas with a nominal value, 6pc
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-032-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-032.xht">vertical-align-032</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using picas with a positive nominal value, +6pc
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive nominal length value in picas.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-040-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-040.xht">vertical-align-040</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using centimeters with a negative zero value, -0cm
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-041-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-041.xht">vertical-align-041</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using centimeters with a zero value, 0cm
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-042-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-042.xht">vertical-align-042</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using centimeters with a positive zero value, +0cm
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-043-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-043.xht">vertical-align-043</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using centimeters with a nominal value, 2.54cm
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-044-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-044.xht">vertical-align-044</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using centimeters with a positive nominal value, +2.54cm
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive nominal length value in centimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-052-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-052.xht">vertical-align-052</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using millimeters with a negative zero value, -0mm
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-053-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-053.xht">vertical-align-053</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using millimeters with a zero value, 0mm
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-054-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-054.xht">vertical-align-054</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using millimeters with a positive zero value, +0mm
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-055-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-055.xht">vertical-align-055</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using millimeters with a nominal value, 25.4mm
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-056-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-056.xht">vertical-align-056</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using millimeters with a positive nominal value, +25.4mm
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive nominal length value in millimeters.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-064-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-064.xht">vertical-align-064</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using inches with a negative zero value, -0in
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-065-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-065.xht">vertical-align-065</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using inches with a zero value, 0in
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-066-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-066.xht">vertical-align-066</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using inches with a positive zero value, +0in
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-067-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-067.xht">vertical-align-067</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using inches with a nominal value, 1in
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-068-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-068.xht">vertical-align-068</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using inches with a positive nominal value, +1in
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive nominal length value in inches.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-076-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-076.xht">vertical-align-076</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'em' units with a negative zero value, -0em
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-077-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-077.xht">vertical-align-077</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'em' units with a zero value, 0em
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-078-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-078.xht">vertical-align-078</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'em' units with a positive zero value, +0em
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-079-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-079.xht">vertical-align-079</a></td>
        <td><a href="reference/vertical-align-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'em' units with a nominal value, 6em
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-080-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-080.xht">vertical-align-080</a></td>
        <td><a href="reference/vertical-align-079-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'em' units with a positive nominal value, +6em
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive nominal length value in 'em' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-088-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-088.xht">vertical-align-088</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'ex' units with a negative zero value, -0ex
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-089-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-089.xht">vertical-align-089</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'ex' units with a zero value, 0ex
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-090-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-090.xht">vertical-align-090</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'ex' units with a positive zero value, +0ex
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-091-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-091.xht">vertical-align-091</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'ex' units with a nominal value, 6ex
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-092-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-092.xht">vertical-align-092</a></td>
        <td><a href="reference/vertical-align-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using 'ex' units with a positive nominal value, +6ex
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive nominal length value in 'ex' units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-100-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-100.xht">vertical-align-100</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using percentages with a negative zero value, -0%
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-101-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-101.xht">vertical-align-101</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using percentages with a zero value, 0%
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-102-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-102.xht">vertical-align-102</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using percentages with a positive zero value, +0%
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-103-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-103.xht">vertical-align-103</a></td>
        <td><a href="reference/vertical-align-103-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using percentages with a nominal value, 100%
          <ul class="assert">
            <li>The 'vertical-align' property sets a nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-104-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-104.xht">vertical-align-104</a></td>
        <td><a href="reference/vertical-align-103-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align using percentages with a positive nominal value, +100%
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive nominal length value in percentages.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-109-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-109.xht">vertical-align-109</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a negative zero value and no units, -0
          <ul class="assert">
            <li>The 'vertical-align' property sets a negative zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-110-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-110.xht">vertical-align-110</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a zero value and no units, 0
          <ul class="assert">
            <li>The 'vertical-align' property sets a zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-111-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-111.xht">vertical-align-111</a></td>
        <td><a href="reference/vertical-align-004-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a positive zero value and no units, +0
          <ul class="assert">
            <li>The 'vertical-align' property sets a positive zero length value with no units.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-112-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-112.xht">vertical-align-112</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'baseline'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'baseline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-113-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-113.xht">vertical-align-113</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'bottom'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-114-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-114.xht">vertical-align-114</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'middle'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'middle'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-115-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-115.xht">vertical-align-115</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'sub'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'sub'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-116-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-116.xht">vertical-align-116</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'super'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'super'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-117-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-117.xht">vertical-align-117</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'text-bottom'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'text-bottom'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-118-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-118.xht">vertical-align-118</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'text-top'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'text-top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-119-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-119.xht">vertical-align-119</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'top'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'top'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-120-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-120.xht">vertical-align-120</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align with a keyword, 'inherit'
          <ul class="assert">
            <li>The 'vertical-align' property sets the keyword 'inherit' and inherits the computed value from the parent element.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-001-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-applies-to-001.xht">vertical-align-applies-to-001</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table-row-group'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'table-row-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-002-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-applies-to-002.xht">vertical-align-applies-to-002</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table-header-group'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'table-header-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-003-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-applies-to-003.xht">vertical-align-applies-to-003</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table-footer-group'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'table-footer-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-004-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-applies-to-004.xht">vertical-align-applies-to-004</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table-row'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'table-row'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-005-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-applies-to-005.xht">vertical-align-applies-to-005</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table-column-group'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'table-column-group'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-006-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-applies-to-006.xht">vertical-align-applies-to-006</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table-column'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'table-column'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-007-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-applies-to-007.xht">vertical-align-applies-to-007</a></td>
        <td><a href="reference/vertical-align-applies-to-007-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table-cell'
          <ul class="assert">
            <li>The 'vertical-align' property applies to elements with 'display' set to 'table-cell'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-008-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-applies-to-008.xht">vertical-align-applies-to-008</a></td>
        <td><a href="reference/vertical-align-applies-to-008-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'inline'
          <ul class="assert">
            <li>The 'vertical-align' property applies to elements with 'display' set to 'inline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-009-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-applies-to-009.xht">vertical-align-applies-to-009</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'block'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-010-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-applies-to-010.xht">vertical-align-applies-to-010</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'list-item'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'list-item'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-011-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-applies-to-011.xht">vertical-align-applies-to-011</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'run-in'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'run-in'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-012-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-applies-to-012.xht">vertical-align-applies-to-012</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'inline-block'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'inline-block'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-013-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-applies-to-013.xht">vertical-align-applies-to-013</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-014-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-applies-to-014.xht">vertical-align-applies-to-014</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'inline-table'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'inline-table'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-applies-to-015-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-applies-to-015.xht">vertical-align-applies-to-015</a></td>
        <td><a href="reference/vertical-align-applies-to-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to elements with 'display' set to 'table-caption'
          <ul class="assert">
            <li>The 'vertical-align' property does not apply to elements with 'display' set to 'table-caption'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-001-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-baseline-001.xht">vertical-align-baseline-001</a></td>
        <td><a href="reference/vertical-align-baseline-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align set to '0%' is equal to 'baseline'
          <ul class="assert">
            <li>The 'vertical-align' property set to '0%' means the same as the 'baseline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-002-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-baseline-002.xht">vertical-align-baseline-002</a></td>
        <td><a href="reference/vertical-align-baseline-001-ref.xht">=</a> </td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align set to '0' is equal to 'baseline'
          <ul class="assert">
            <li>The 'vertical-align' property set to '0' means the same as the 'baseline'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-003-10.8.1.#propdef-vertical-align" class="">
        <td>
            <a href="vertical-align-baseline-003.xht">vertical-align-baseline-003</a></td>
        <td><a href="reference/vertical-align-baseline-003-ref.xht">=</a> </td>
        <td></td>
        <td>Vertical-align applied to 'inline-block' and baseline alignment
          <ul class="assert">
            <li>The 'vertical-align' property aligns the last line box of 'inline-block' elements with the baseline.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-004-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-baseline-004.xht">vertical-align-baseline-004</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to empty 'inline-block' and baseline alignment
          <ul class="assert">
            <li>The 'vertical-align' property aligns an empty 'inline-block' elements' bottom margin edge with the baseline.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-005-10.8.1.#propdef-vertical-align" class="ahem">
        <td>
            <a href="vertical-align-baseline-005.xht">vertical-align-baseline-005</a></td>
        <td></td>
        <td><abbr class="ahem" title="Requires Ahem font">Ahem</abbr></td>
        <td>Vertical-align applied to an 'inline-block' with 'overflow' not set to 'visible' and baseline alignment
          <ul class="assert">
            <li>The 'vertical-align' property aligns an 'inline-block' elements' bottom margin edge with the baseline when 'overflow' is not set to 'visible'.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-006-10.8.1.#propdef-vertical-align" class="">
        <td>
            <a href="vertical-align-baseline-006.xht">vertical-align-baseline-006</a></td>
        <td></td>
        <td></td>
        <td>Baseline alignment with an inline element parent
          <ul class="assert">
            <li>The baseline of an inline element is aligned with the baseline of its child inline-block when 'vertical-align: baseline' is specified on the child.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-007-10.8.1.#propdef-vertical-align" class="">
        <td>
            <a href="vertical-align-baseline-007.xht">vertical-align-baseline-007</a></td>
        <td><a href="reference/vertical-align-baseline-007-ref.xht">=</a> </td>
        <td></td>
        <td>Baseline alignment with a block element parent
          <ul class="assert">
            <li>The baseline of a block element is aligned with the baseline of its child inline element when 'vertical-align: baseline' is specified on the child.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-008-10.8.1.#propdef-vertical-align" class="">
        <td>
            <a href="vertical-align-baseline-008.xht">vertical-align-baseline-008</a></td>
        <td><a href="reference/vertical-align-baseline-008-ref.xht">=</a> </td>
        <td></td>
        <td>Baseline alignment with a table-cell element parent
          <ul class="assert">
            <li>The baseline of a table cell element is aligned with the baseline of its child inline element when 'vertical-align: baseline' is specified on the child.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-009-10.8.1.#propdef-vertical-align" class="">
        <td>
            <a href="vertical-align-baseline-009.xht">vertical-align-baseline-009</a></td>
        <td><a href="reference/vertical-align-baseline-007-ref.xht">=</a> </td>
        <td></td>
        <td>Baseline alignment with a table caption element parent
          <ul class="assert">
            <li>The baseline of a table caption element is aligned with the baseline of its child inline element when 'vertical-align: baseline' is specified on the child.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-baseline-010-10.8.1.#propdef-vertical-align" class="">
        <td>
            <a href="vertical-align-baseline-010.xht">vertical-align-baseline-010</a></td>
        <td></td>
        <td></td>
        <td>Baseline alignment with an inline-block element parent
          <ul class="assert">
            <li>The baseline of an inline-block element is aligned with the baseline of its child inline element when 'vertical-align: baseline' is specified on the child.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-sub-001-10.8.1.#propdef-vertical-align" class="">
        <td>
            <a href="vertical-align-sub-001.xht">vertical-align-sub-001</a></td>
        <td><a href="reference/vertical-align-sub-001-ref.xht">=</a> </td>
        <td></td>
        <td>Vertical-align set to 'sub' does not adjust font-size
          <ul class="assert">
            <li>The 'vertical-align' property value 'sub' has no effect on the font-size of an element's text.</li>
          </ul>
        </td>
      </tr>
      <tr id="vertical-align-super-001-10.8.1.#propdef-vertical-align" class="">
        <td>
            <a href="vertical-align-super-001.xht">vertical-align-super-001</a></td>
        <td><a href="reference/vertical-align-sub-001-ref.xht">=</a> </td>
        <td></td>
        <td>Vertical-align set to 'super' does not adjust font-size
          <ul class="assert">
            <li>The 'vertical-align' property value 'super' has no effect on the font-size of an element's text.</li>
          </ul>
        </td>
      </tr>
    </tbody>
    <tbody id="s10.8.1.#sTypoAscender">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.8.1.#strut">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.8.1.#x18">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.8.1.#x19">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.8.1.#x20">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.8.1.#x21">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.8.1.#x23">
      <!-- 0 tests -->
    </tbody>
    <tbody id="s10.8.1.#x24">
      <!-- 0 tests -->
    </tbody>
  </table>

 </body>
</html>