// GENERATED CONTENT - DO NOT EDIT
// Content was automatically extracted by Reffy into webref
// (https://github.com/w3c/webref)
// Source: Compute Pressure Level 1 (https://wicg.github.io/compute-pressure/)

enum PressureState { "nominal", "fair", "serious", "critical" };

enum PressureFactor { "thermal", "power-supply" };

callback PressureUpdateCallback = undefined (
  sequence<PressureRecord> changes,
  PressureObserver observer
);

enum PressureSource { "cpu" };

[Exposed=(DedicatedWorker,SharedWorker,Window), SecureContext]
interface PressureObserver {
  constructor(PressureUpdateCallback callback, optional PressureObserverOptions options = {});

  undefined observe(PressureSource source);
  undefined unobserve(PressureSource source);
  undefined disconnect();
  sequence<PressureRecord> takeRecords();

  [SameObject] static readonly attribute FrozenArray<PressureSource> supportedSources;

  [Exposed=Window] static Promise<PermissionState> requestPermission();
};

dictionary PressureRecord {
  PressureSource source;
  PressureState state;
  sequence<PressureFactor> factors;
  DOMHighResTimeStamp time;
};

dictionary PressureObserverOptions {
  double frequency;
};
