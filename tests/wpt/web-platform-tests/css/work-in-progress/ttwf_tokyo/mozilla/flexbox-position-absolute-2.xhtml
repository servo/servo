<?xml version="1.0" encoding="UTF-8"?>
<!--
     Any copyright is dedicated to the Public Domain.
     http://creativecommons.org/publicdomain/zero/1.0/
-->
<!--
     Testcase with absolutely positioned children of a flex container.
     In this testcase, we simply specify "position: absolute" without
     actually doing any positioning, to test the "static position" of these
     children.
-->
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <style>
      div.containingBlock {
        top: 15px;
        left: 20px;
        height: 400px;
        position: absolute;
        border: 2px dashed purple;
      }
      .abspos {
        position: absolute;
        border: 2px dotted black;
      }
      div.flexbox {
        width: 200px;
        height: 100px;
        display: flex;
      }
      div.a {
        flex: 1 0 auto;
        width: 30px;
        height: 100px;
        background: lightgreen;
      }
      div.b {
        flex: 2 0 auto;
        width: 20px;
        height: 100px;
        background: yellow;
      }
      div.inflex {
        flex: none;
        width: 20px;
        height: 100px;
        background: gray;
      }
      div.noFlexFn {
        width: 15px;
        height: 15px;
        background: teal;
      }
    </style>
  </head>
  <body>
    <div class="containingBlock">
      <!-- First child abspos: -->
      <div class="flexbox"><div class="a abspos"/><div class="b"/></div>
      <!-- Second child abspos: -->
      <div class="flexbox"><div class="a"/><div class="b abspos"/></div>
      <!-- Middle child abspos: -->
      <div class="flexbox"
           ><div class="a"/><div class="inflex abspos"/><div class="b"/></div>
      <!-- Third child abspos, w/ inflexible items & justify-content: space-around: -->
      <div class="flexbox" style="justify-content: space-around"
           ><div class="inflex"/><div class="inflex"/><div class="inflex"
          /><div class="noFlexFn abspos"/><div class="inflex"/></div>
    </div>
  </body>
</html>
