<!DOCTYPE html PUBLIC "-//W3C//DTD//XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>CSSOM - StyleSheet - Interface</title>
    <link rel="author" title="Glenn Adams" href="mailto:glenn@skynav.com"/>
    <link rel="help" href="http://www.w3.org/TR/cssom-1/#the-stylesheet-interface"/>
    <meta name="flags" content="dom"/>
    <script src="/resources/testharness.js"/>
    <script src="/resources/testharnessreport.js"/>
  </head>
  <body>
    <div id="log"></div>
    <div id="box"></div>
    <script><![CDATA[

      test(function(){

        assert_true('StyleSheet' in window);

      }, '\'StyleSheet\' in window');

      test(function(){

        assert_true(StyleSheet instanceof Function);

      }, 'StyleSheet instanceof Function');

      test(function(){

        assert_true('prototype' in StyleSheet);

      }, '\'prototype\' in StyleSheet');

      test(function(){

        assert_equals(StyleSheet.prototype.toString(), '[object StyleSheetPrototype]');

      }, 'StyleSheet.prototype.toString() == \'[object StyleSheetPrototype]\'');

      test(function(){

        assert_true('constructor' in StyleSheet.prototype);

      }, '\'constructor\' in StyleSheet.prototype');

      test(function(){

        assert_equals(StyleSheet.prototype.constructor,StyleSheet);

      }, 'StyleSheet.prototype.constructor === StyleSheet');

      test(function(){

        assert_true('type' in StyleSheet.prototype);

      }, '\'type\' in StyleSheet.prototype');

      test(function(){

        assert_equals(typeof(StyleSheet.prototype.type),'string');

      }, 'typeof(StyleSheet.prototype.type) == \'string\'');

      test(function(){

        assert_true('href' in StyleSheet.prototype);

      }, '\'href\' in StyleSheet.prototype');

      test(function(){

        assert_equals(typeof(StyleSheet.prototype.href),'string');

      }, 'typeof(StyleSheet.prototype.href) == \'string\'');

      test(function(){

        assert_true('ownerNode' in StyleSheet.prototype);

      }, '\'ownerNode\' in StyleSheet.prototype');

      test(function(){

        assert_equals(typeof(StyleSheet.prototype.ownerNode),'object');

      }, 'typeof(StyleSheet.prototype.ownerNode) == \'object\'');

      test(function(){

        assert_true(StyleSheet.prototype.ownerNode instanceof Node);

      }, 'StyleSheet.prototype.ownerNode instanceof Node');

      test(function(){

        assert_true('parentStyleSheet' in StyleSheet.prototype);

      }, '\'parentStyleSheet\' in StyleSheet.prototype');

      test(function(){

        assert_equals(typeof(StyleSheet.prototype.parentStyleSheet),'object');

      }, 'typeof(StyleSheet.prototype.parentStyleSheet) == \'object\'');

      test(function(){

        assert_true(StyleSheet.prototype.parentStyleSheet instanceof StyleSheet);

      }, 'StyleSheet.prototype.parentStyleSheet instanceof StyleSheet');

      test(function(){

        assert_true('title' in StyleSheet.prototype);

      }, '\'title\' in StyleSheet.prototype');

      test(function(){

        assert_equals(typeof(StyleSheet.prototype.title),'string');

      }, 'typeof(StyleSheet.prototype.title) == \'string\'');

      test(function(){

        assert_true('media' in StyleSheet.prototype);

      }, '\'media\' in StyleSheet.prototype');

      test(function(){

        assert_equals(typeof(StyleSheet.prototype.media),'object');

      }, 'typeof(StyleSheet.prototype.media) == \'object\'');

      test(function(){

        assert_true(StyleSheet.prototype.media instanceof MediaList);

      }, 'StyleSheet.prototype.media instanceof MediaList');

      test(function(){

        assert_true('disabled' in StyleSheet.prototype);

      }, '\'disabled\' in StyleSheet.prototype');

      test(function(){

        assert_equals(typeof(StyleSheet.prototype.disabled),'boolean');

      }, 'typeof(StyleSheet.prototype.disabled) == \'boolean\'');

    ]]>
    </script>
  </body>
</html>
