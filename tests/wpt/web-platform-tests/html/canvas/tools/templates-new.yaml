offscreen: |
    <!DOCTYPE html>
    <!-- DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py. -->
    <title>OffscreenCanvas test: %(name)s</title>%(timeout)s
    <script src="/resources/testharness.js"></script>
    <script src="/resources/testharnessreport.js"></script>
    <script src="/html/canvas/resources/canvas-tests.js"></script>

    <h1>%(name)s</h1>
    <p class="desc">%(desc)s</p>

    %(notes)s
    <script>
    var t = async_test("%(escaped_desc)s");
    var t_pass = t.done.bind(t);
    var t_fail = t.step_func(function(reason) {
        throw reason;
    });
    t.step(async function() {

    var canvas = new OffscreenCanvas(%(width)s, %(height)s);
    var ctx = canvas.getContext(%(context_args)s);

    await (function(canvas, ctx) {
    %(code)s
    })(canvas, ctx);
    t.done();

    });
    </script>


worker: |
    %(timeout_js)s// DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py.
    // OffscreenCanvas test in a worker:%(name)s
    // Description:%(desc)s
    // Note:%(notes)s

    importScripts("/resources/testharness.js");
    importScripts("/html/canvas/resources/canvas-tests.js");

    var t = async_test("%(escaped_desc)s");
    var t_pass = t.done.bind(t);
    var t_fail = t.step_func(function(reason) {
        throw reason;
    });
    t.step(function() {

    var canvas = new OffscreenCanvas(%(width)s, %(height)s);
    var ctx = canvas.getContext(%(context_args)s);

    %(code)s
    t.done();

    });
    done();


element: |
    <!DOCTYPE html>
    <!-- DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py. -->
    <title>Canvas test: %(name)s</title>
    <script src="/resources/testharness.js"></script>
    <script src="/resources/testharnessreport.js"></script>
    <script src="/html/canvas/resources/canvas-tests.js"></script>
    <link rel="stylesheet" href="/html/canvas/resources/canvas-tests.css">
    %(fonts)s<body class="show_output">

    <h1>%(name)s</h1>
    <p class="desc">%(desc)s</p>

    %(notes)s
    %(fonthack)s<p class="output">Actual output:</p>
    <canvas id="c" class="output" width="%(width)s" height="%(height)s"%(canvas)s>%(fallback)s</canvas>
    %(expected)s
    <ul id="d"></ul>
    <script>
    var t = async_test("%(escaped_desc)s");
    _addTest(function(canvas, ctx) {

    %(code)s


    }%(attributes)s);
    </script>
    %(images)s


offscreen_ref_test: |-
    <!DOCTYPE html>
    <!-- DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py. -->%(links)s%(fuzzy)s%(timeout)s
    <title>Canvas test: %(name)s</title>
    <h1>%(name)s</h1>
    <p class="desc">%(desc)s</p>
    %(fonts)s%(fonthack)s%(notes)s<canvas id="canvas" width="%(width)s" height="%(height)s"%(canvas)s>
      %(fallback)s
    </canvas>
    <script>
      const offscreen_canvas = new OffscreenCanvas(%(width)s, %(height)s);
      const ctx = offscreen_canvas.getContext(%(context_args)s);

    %(code)s

      const canvas = document.getElementById("canvas");
      canvas.getContext(%(context_args)s).drawImage(offscreen_canvas, 0, 0);
    </script>
    %(images)s


worker_ref_test: |
    <!DOCTYPE html>
    <!-- DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py. -->
    <html class="reftest-wait">%(links)s%(fuzzy)s%(timeout)s
    <title>Canvas test: %(name)s</title>
    <h1>%(name)s</h1>
    <p class="desc">%(desc)s</p>
    %(fonts)s%(fonthack)s%(notes)s<canvas id="canvas" width="%(width)s" height="%(height)s"%(canvas)s>
      %(fallback)s
    </canvas>
    <script id='myWorker' type='text/worker'>
      self.onmessage = function(e) {
        const oc = new OffscreenCanvas(%(width)s, %(height)s);
        const ctx = oc.getContext('2d');

    %(code)s

        const bitmap = oc.transferToImageBitmap();
        self.postMessage(bitmap, bitmap);
      };
    </script>
    <script>
      const blob = new Blob([document.getElementById('myWorker').textContent]);
      const worker = new Worker(URL.createObjectURL(blob));
      worker.addEventListener('message', msg => {
        const outputCtx = document.getElementById("canvas").getContext('2d');
        outputCtx.drawImage(msg.data, 0, 0);
        document.documentElement.classList.remove("reftest-wait");
      });
      worker.postMessage(null);
    </script>
    %(images)s</html>


element_ref_test: |-
    <!DOCTYPE html>
    <!-- DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py. -->%(links)s%(fuzzy)s%(timeout)s
    <title>Canvas test: %(name)s</title>
    <h1>%(name)s</h1>
    <p class="desc">%(desc)s</p>
    %(fonts)s%(fonthack)s%(notes)s<canvas id="canvas" width="%(width)s" height="%(height)s"%(canvas)s>
      %(fallback)s
    </canvas>
    <script>
      const canvas = document.getElementById("canvas");
      const ctx = canvas.getContext(%(context_args)s);

    %(code)s
    </script>
    %(images)s


html_ref_test: |-
    <!DOCTYPE html>
    <!-- DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py. -->%(links)s%(fuzzy)s%(timeout)s
    <title>Canvas test: %(name)s</title>
    <h1>%(name)s</h1>
    <p class="desc">%(desc)s</p>
    %(fonts)s%(fonthack)s%(notes)s
    %(code)s
    %(images)s
