[idlharness.window.html]
  [UIEvent interface: operation initUIEvent(DOMString, optional boolean, optional boolean, optional Window?, optional long)]
    expected: FAIL

  [UIEvent interface: attribute which]
    expected: FAIL

  [UIEvent interface: new UIEvent("event") must inherit property "which" with the proper type]
    expected: FAIL

  [UIEvent interface: new FocusEvent("event") must inherit property "which" with the proper type]
    expected: FAIL

  [MouseEvent interface: operation getModifierState(DOMString)]
    expected: FAIL

  [MouseEvent interface: operation initMouseEvent(DOMString, optional boolean, optional boolean, optional Window?, optional long, optional long, optional long, optional long, optional long, optional boolean, optional boolean, optional boolean, optional boolean, optional short, optional EventTarget?)]
    expected: FAIL

  [MouseEvent interface: new MouseEvent("event") must inherit property "getModifierState(DOMString)" with the proper type]
    expected: FAIL

  [MouseEvent interface: calling getModifierState(DOMString) on new MouseEvent("event") with too few arguments must throw TypeError]
    expected: FAIL

  [UIEvent interface: new MouseEvent("event") must inherit property "which" with the proper type]
    expected: FAIL

  [MouseEvent interface: new WheelEvent("event") must inherit property "getModifierState(DOMString)" with the proper type]
    expected: FAIL

  [MouseEvent interface: calling getModifierState(DOMString) on new WheelEvent("event") with too few arguments must throw TypeError]
    expected: FAIL

  [UIEvent interface: new WheelEvent("event") must inherit property "which" with the proper type]
    expected: FAIL

  [InputEvent interface: attribute inputType]
    expected: FAIL

  [InputEvent interface: new InputEvent("event") must inherit property "inputType" with the proper type]
    expected: FAIL

  [UIEvent interface: new InputEvent("event") must inherit property "which" with the proper type]
    expected: FAIL

  [KeyboardEvent interface: operation initKeyboardEvent(DOMString, optional boolean, optional boolean, optional Window?, optional DOMString, optional unsigned long, optional boolean, optional boolean, optional boolean, optional boolean)]
    expected: FAIL

  [CompositionEvent interface: existence and properties of interface object]
    expected: FAIL

  [CompositionEvent interface object length]
    expected: FAIL

  [CompositionEvent interface object name]
    expected: FAIL

  [CompositionEvent interface: existence and properties of interface prototype object]
    expected: FAIL

  [CompositionEvent interface: existence and properties of interface prototype object's "constructor" property]
    expected: FAIL

  [CompositionEvent interface: existence and properties of interface prototype object's @@unscopables property]
    expected: FAIL

  [CompositionEvent interface: attribute data]
    expected: FAIL

  [CompositionEvent interface: operation initCompositionEvent(DOMString, optional boolean, optional boolean, optional WindowProxy?, optional DOMString)]
    expected: FAIL

  [CompositionEvent must be primary interface of new CompositionEvent("event")]
    expected: FAIL

  [Stringification of new CompositionEvent("event")]
    expected: FAIL

  [CompositionEvent interface: new CompositionEvent("event") must inherit property "data" with the proper type]
    expected: FAIL

  [CompositionEvent interface: new CompositionEvent("event") must inherit property "initCompositionEvent(DOMString, optional boolean, optional boolean, optional WindowProxy?, optional DOMString)" with the proper type]
    expected: FAIL

  [CompositionEvent interface: calling initCompositionEvent(DOMString, optional boolean, optional boolean, optional WindowProxy?, optional DOMString) on new CompositionEvent("event") with too few arguments must throw TypeError]
    expected: FAIL

  [UIEvent interface: new CompositionEvent("event") must inherit property "view" with the proper type]
    expected: FAIL

  [UIEvent interface: new CompositionEvent("event") must inherit property "detail" with the proper type]
    expected: FAIL

  [UIEvent interface: new CompositionEvent("event") must inherit property "initUIEvent(DOMString, optional boolean, optional boolean, optional Window?, optional long)" with the proper type]
    expected: FAIL

  [UIEvent interface: calling initUIEvent(DOMString, optional boolean, optional boolean, optional Window?, optional long) on new CompositionEvent("event") with too few arguments must throw TypeError]
    expected: FAIL

  [UIEvent interface: new CompositionEvent("event") must inherit property "which" with the proper type]
    expected: FAIL

  [MutationEvent interface: existence and properties of interface object]
    expected: FAIL

  [MutationEvent interface object length]
    expected: FAIL

  [MutationEvent interface object name]
    expected: FAIL

  [MutationEvent interface: existence and properties of interface prototype object]
    expected: FAIL

  [MutationEvent interface: existence and properties of interface prototype object's "constructor" property]
    expected: FAIL

  [MutationEvent interface: existence and properties of interface prototype object's @@unscopables property]
    expected: FAIL

  [MutationEvent interface: constant MODIFICATION on interface object]
    expected: FAIL

  [MutationEvent interface: constant MODIFICATION on interface prototype object]
    expected: FAIL

  [MutationEvent interface: constant ADDITION on interface object]
    expected: FAIL

  [MutationEvent interface: constant ADDITION on interface prototype object]
    expected: FAIL

  [MutationEvent interface: constant REMOVAL on interface object]
    expected: FAIL

  [MutationEvent interface: constant REMOVAL on interface prototype object]
    expected: FAIL

  [MutationEvent interface: attribute relatedNode]
    expected: FAIL

  [MutationEvent interface: attribute prevValue]
    expected: FAIL

  [MutationEvent interface: attribute newValue]
    expected: FAIL

  [MutationEvent interface: attribute attrName]
    expected: FAIL

  [MutationEvent interface: attribute attrChange]
    expected: FAIL

  [MutationEvent interface: operation initMutationEvent(DOMString, optional boolean, optional boolean, optional Node?, optional DOMString, optional DOMString, optional DOMString, optional unsigned short)]
    expected: FAIL

  [MouseEvent interface: attribute layerX]
    expected: FAIL

  [MouseEvent interface: attribute layerY]
    expected: FAIL

  [MouseEvent interface: new MouseEvent("event") must inherit property "layerX" with the proper type]
    expected: FAIL

  [MouseEvent interface: new MouseEvent("event") must inherit property "layerY" with the proper type]
    expected: FAIL

  [MouseEvent interface: new WheelEvent("event") must inherit property "layerX" with the proper type]
    expected: FAIL

  [MouseEvent interface: new WheelEvent("event") must inherit property "layerY" with the proper type]
    expected: FAIL

  [TextEvent interface: existence and properties of interface object]
    expected: FAIL

  [TextEvent interface object length]
    expected: FAIL

  [TextEvent interface object name]
    expected: FAIL

  [TextEvent interface: existence and properties of interface prototype object]
    expected: FAIL

  [TextEvent interface: existence and properties of interface prototype object's "constructor" property]
    expected: FAIL

  [TextEvent interface: existence and properties of interface prototype object's @@unscopables property]
    expected: FAIL

  [TextEvent interface: attribute data]
    expected: FAIL

  [TextEvent interface: operation initTextEvent(DOMString, optional boolean, optional boolean, optional Window?, optional DOMString)]
    expected: FAIL

  [TextEvent must be primary interface of (() => { const ev = document.createEvent("TextEvent"); ev.initTextEvent("event"); return ev; })()]
    expected: FAIL

  [Stringification of (() => { const ev = document.createEvent("TextEvent"); ev.initTextEvent("event"); return ev; })()]
    expected: FAIL

  [TextEvent interface: (() => { const ev = document.createEvent("TextEvent"); ev.initTextEvent("event"); return ev; })() must inherit property "data" with the proper type]
    expected: FAIL

  [TextEvent interface: (() => { const ev = document.createEvent("TextEvent"); ev.initTextEvent("event"); return ev; })() must inherit property "initTextEvent(DOMString, optional boolean, optional boolean, optional Window?, optional DOMString)" with the proper type]
    expected: FAIL

  [TextEvent interface: calling initTextEvent(DOMString, optional boolean, optional boolean, optional Window?, optional DOMString) on (() => { const ev = document.createEvent("TextEvent"); ev.initTextEvent("event"); return ev; })() with too few arguments must throw TypeError]
    expected: FAIL

  [UIEvent interface: (() => { const ev = document.createEvent("TextEvent"); ev.initTextEvent("event"); return ev; })() must inherit property "view" with the proper type]
    expected: FAIL

  [UIEvent interface: (() => { const ev = document.createEvent("TextEvent"); ev.initTextEvent("event"); return ev; })() must inherit property "detail" with the proper type]
    expected: FAIL

  [UIEvent interface: (() => { const ev = document.createEvent("TextEvent"); ev.initTextEvent("event"); return ev; })() must inherit property "initUIEvent(DOMString, optional boolean, optional boolean, optional Window?, optional long)" with the proper type]
    expected: FAIL

  [UIEvent interface: calling initUIEvent(DOMString, optional boolean, optional boolean, optional Window?, optional long) on (() => { const ev = document.createEvent("TextEvent"); ev.initTextEvent("event"); return ev; })() with too few arguments must throw TypeError]
    expected: FAIL

  [UIEvent interface: (() => { const ev = document.createEvent("TextEvent"); ev.initTextEvent("event"); return ev; })() must inherit property "which" with the proper type]
    expected: FAIL
