[getdisplaymedia.https.html]
  [getDisplayMedia in navigator.mediaDevices]
    expected: FAIL

  [getDisplayMedia() must require user activation]
    expected: FAIL

  [getDisplayMedia({"video":true}) must succeed with video]
    expected: FAIL

  [getDisplayMedia({"video":true,"audio":false}) must succeed with video]
    expected: FAIL

  [getDisplayMedia({"video":{}}) must succeed with video]
    expected: FAIL

  [getDisplayMedia({"audio":false}) must succeed with video]
    expected: FAIL

  [getDisplayMedia({}) must succeed with video]
    expected: FAIL

  [getDisplayMedia(undefined) must succeed with video]
    expected: FAIL

  [getDisplayMedia({"video":false}) must fail with TypeError]
    expected: FAIL

  [getDisplayMedia({"video":{"advanced":[{"width":320}\]}}) must fail with TypeError]
    expected: FAIL

  [getDisplayMedia({"video":{"width":{"min":320}}}) must fail with TypeError]
    expected: FAIL

  [getDisplayMedia({"video":{"width":{"exact":320}}}) must fail with TypeError]
    expected: FAIL

  [getDisplayMedia({"video":{"height":{"min":240}}}) must fail with TypeError]
    expected: FAIL

  [getDisplayMedia({"video":{"height":{"exact":240}}}) must fail with TypeError]
    expected: FAIL

  [getDisplayMedia({"video":{"frameRate":{"min":4}}}) must fail with TypeError]
    expected: FAIL

  [getDisplayMedia({"video":{"frameRate":{"exact":4}}}) must fail with TypeError]
    expected: FAIL

  [getDisplayMedia({"video":true,"audio":true}) must succeed with video maybe audio]
    expected: FAIL

  [getDisplayMedia({"audio":true}) must succeed with video maybe audio]
    expected: FAIL

  [getDisplayMedia({video: {"width":{"max":360}}}) must be constrained]
    expected: FAIL

  [getDisplayMedia({video: {"height":{"max":240}}}) must be constrained]
    expected: FAIL

  [getDisplayMedia({video: {"width":{"max":360},"height":{"max":240}}}) must be constrained]
    expected: FAIL

  [getDisplayMedia({video: {"frameRate":{"max":4}}}) must be constrained]
    expected: FAIL

  [getDisplayMedia({video: {"frameRate":{"max":4},"width":{"max":360}}}) must be constrained]
    expected: FAIL

  [getDisplayMedia({video: {"frameRate":{"max":4},"height":{"max":240}}}) must be constrained]
    expected: FAIL

  [getDisplayMedia({video: {"frameRate":{"max":4},"width":{"max":360},"height":{"max":240}}}) must be constrained]
    expected: FAIL

  [getDisplayMedia({video: {"width":160}}) must be downscaled precisely]
    expected: FAIL

  [getDisplayMedia({video: {"height":120}}) must be downscaled precisely]
    expected: FAIL

  [getDisplayMedia({video: {"width":80}}) must be downscaled precisely]
    expected: FAIL

  [getDisplayMedia({video: {"height":60}}) must be downscaled precisely]
    expected: FAIL

  [getDisplayMedia({video: {"width":158}}) must be downscaled precisely]
    expected: FAIL

  [getDisplayMedia({video: {"height":118}}) must be downscaled precisely]
    expected: FAIL

  [applyConstraints(width or height) must downscale precisely]
    expected: FAIL

  [getDisplayMedia({"video":{"width":{"max":0}}}) must fail with OverconstrainedError]
    expected: FAIL

  [getDisplayMedia({"video":{"height":{"max":0}}}) must fail with OverconstrainedError]
    expected: FAIL

  [getDisplayMedia({"video":{"frameRate":{"max":0}}}) must fail with OverconstrainedError]
    expected: FAIL

  [getDisplayMedia({"video":{"width":{"max":-1}}}) must fail with OverconstrainedError]
    expected: FAIL

  [getDisplayMedia({"video":{"height":{"max":-1}}}) must fail with OverconstrainedError]
    expected: FAIL

  [getDisplayMedia({"video":{"frameRate":{"max":-1}}}) must fail with OverconstrainedError]
    expected: FAIL

  [getDisplayMedia() resolves with stream with video track]
    expected: FAIL

  [getDisplayMedia({"video":{"displaySurface":"monitor"}}) with getSettings]
    expected: FAIL

  [getDisplayMedia({"video":{"displaySurface":"window"}}) with getSettings]
    expected: FAIL

  [getDisplayMedia({"video":{"displaySurface":"browser"}}) with getSettings]
    expected: FAIL

  [displaySurface is supported]
    expected: FAIL

  [getDisplayMedia({"video":{"displaySurface":"monitor"}}) must succeed]
    expected: FAIL

  [getDisplayMedia({"video":{"displaySurface":"window"}}) must succeed]
    expected: FAIL

  [getDisplayMedia({"video":{"displaySurface":"browser"}}) must succeed]
    expected: FAIL

  [getDisplayMedia({"selfBrowserSurface":"include"}) must succeed]
    expected: FAIL

  [getDisplayMedia({"selfBrowserSurface":"exclude"}) must succeed]
    expected: FAIL

  [getDisplayMedia({"surfaceSwitching":"include"}) must succeed]
    expected: FAIL

  [getDisplayMedia({"surfaceSwitching":"exclude"}) must succeed]
    expected: FAIL

  [getDisplayMedia({"systemAudio":"include"}) must succeed]
    expected: FAIL

  [getDisplayMedia({"systemAudio":"exclude"}) must succeed]
    expected: FAIL

  [getDisplayMedia({"windowAudio":"exclude"}) must succeed]
    expected: FAIL

  [getDisplayMedia({"windowAudio":"window"}) must succeed]
    expected: FAIL

  [getDisplayMedia({"windowAudio":"system"}) must succeed]
    expected: FAIL

  [getDisplayMedia({"selfBrowserSurface":"invalid"}) must fail with TypeError]
    expected: FAIL

  [getDisplayMedia({"surfaceSwitching":"invalid"}) must fail with TypeError]
    expected: FAIL

  [getDisplayMedia({"systemAudio":"invalid"}) must fail with TypeError]
    expected: FAIL

  [getDisplayMedia({"windowAudio":"invalid"}) must fail with TypeError]
    expected: FAIL

  [getDisplayMedia({"monitorTypeSurfaces":"invalid"}) must fail with TypeError]
    expected: FAIL

  [suppressLocalAudioPlayback is supported]
    expected: FAIL

  [getDisplayMedia({"audio":{"suppressLocalAudioPlayback":true}}) with getSettings]
    expected: FAIL

  [getDisplayMedia({"audio":{"suppressLocalAudioPlayback":false}}) with getSettings]
    expected: FAIL

  [getDisplayMedia() with getCapabilities]
    expected: FAIL

  [getDisplayMedia({"video":{"displaySurface":"monitor"},"monitorTypeSurfaces":"exclude"}) rejects with TypeError]
    expected: FAIL

  [getDisplayMedia({"video":{"displaySurface":"monitor"},"monitorTypeSurfaces":"include"}) resolves with a monitor track]
    expected: FAIL

  [getDisplayMedia({"monitorTypeSurfaces":"exclude"}) resolves with a non monitor track]
    expected: FAIL
