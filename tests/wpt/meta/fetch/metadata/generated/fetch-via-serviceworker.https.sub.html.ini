[fetch-via-serviceworker.https.sub.html]
  [sec-fetch-site - Same origin, init: mode=no-cors - respondWith]
    expected: FAIL

  [sec-fetch-site - Same origin, init: mode=no-cors - fallback]
    expected: FAIL

  [sec-fetch-site - Cross-site, init: mode=no-cors - respondWith]
    expected: FAIL

  [sec-fetch-site - Cross-site, init: mode=no-cors - fallback]
    expected: FAIL

  [sec-fetch-site - Same site, init: mode=no-cors - respondWith]
    expected: FAIL

  [sec-fetch-site - Same site, init: mode=no-cors - fallback]
    expected: FAIL

  [sec-fetch-site - Same-Origin -> Cross-Site -> Same-Origin redirect, init: mode=no-cors - respondWith]
    expected: FAIL

  [sec-fetch-site - Same-Origin -> Cross-Site -> Same-Origin redirect, init: mode=no-cors - fallback]
    expected: FAIL

  [sec-fetch-site - Same-Origin -> Same-Site -> Same-Origin redirect, init: mode=no-cors - respondWith]
    expected: FAIL

  [sec-fetch-site - Same-Origin -> Same-Site -> Same-Origin redirect, init: mode=no-cors - fallback]
    expected: FAIL

  [sec-fetch-site - Cross-Site -> Same Origin, init: mode=no-cors - respondWith]
    expected: FAIL

  [sec-fetch-site - Cross-Site -> Same Origin, init: mode=no-cors - fallback]
    expected: FAIL

  [sec-fetch-site - Cross-Site -> Same-Site, init: mode=no-cors - respondWith]
    expected: FAIL

  [sec-fetch-site - Cross-Site -> Same-Site, init: mode=no-cors - fallback]
    expected: FAIL

  [sec-fetch-site - Cross-Site -> Cross-Site, init: mode=no-cors - respondWith]
    expected: FAIL

  [sec-fetch-site - Cross-Site -> Cross-Site, init: mode=no-cors - fallback]
    expected: FAIL

  [sec-fetch-site - Same-Origin -> Same Origin, init: mode=no-cors - respondWith]
    expected: FAIL

  [sec-fetch-site - Same-Origin -> Same Origin, init: mode=no-cors - fallback]
    expected: FAIL

  [sec-fetch-site - Same-Origin -> Same-Site, init: mode=no-cors - respondWith]
    expected: FAIL

  [sec-fetch-site - Same-Origin -> Same-Site, init: mode=no-cors - fallback]
    expected: FAIL

  [sec-fetch-site - Same-Origin -> Cross-Site, init: mode=no-cors - respondWith]
    expected: FAIL

  [sec-fetch-site - Same-Origin -> Cross-Site, init: mode=no-cors - fallback]
    expected: FAIL

  [sec-fetch-site - Same-Site -> Same Origin, init: mode=no-cors - respondWith]
    expected: FAIL

  [sec-fetch-site - Same-Site -> Same Origin, init: mode=no-cors - fallback]
    expected: FAIL

  [sec-fetch-site - Same-Site -> Same-Site, init: mode=no-cors - respondWith]
    expected: FAIL

  [sec-fetch-site - Same-Site -> Same-Site, init: mode=no-cors - fallback]
    expected: FAIL

  [sec-fetch-site - Same-Site -> Cross-Site, init: mode=no-cors - respondWith]
    expected: FAIL

  [sec-fetch-site - Same-Site -> Cross-Site, init: mode=no-cors - fallback]
    expected: FAIL

  [sec-fetch-mode - no init - respondWith]
    expected: FAIL

  [sec-fetch-mode - no init - fallback]
    expected: FAIL

  [sec-fetch-mode - init: mode=cors - respondWith]
    expected: FAIL

  [sec-fetch-mode - init: mode=cors - fallback]
    expected: FAIL

  [sec-fetch-mode - init: mode=no-cors - respondWith]
    expected: FAIL

  [sec-fetch-mode - init: mode=no-cors - fallback]
    expected: FAIL

  [sec-fetch-mode - init: mode=same-origin - respondWith]
    expected: FAIL

  [sec-fetch-mode - init: mode=same-origin - fallback]
    expected: FAIL

  [sec-fetch-dest - no init - respondWith]
    expected: FAIL

  [sec-fetch-dest - no init - fallback]
    expected: FAIL

  [sec-fetch-user - no init - respondWith]
    expected: FAIL

  [sec-fetch-user - no init - fallback]
    expected: FAIL
