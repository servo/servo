[idbobjectstore-request-source.any.worker.html]
  expected: CRASH
  [The source of the request from store => store.put(0) is the object store itself]
    expected: FAIL

  [The source of the request from store => store.add(0) is the object store itself]
    expected: FAIL

  [The source of the request from store => store.delete(0) is the object store itself]
    expected: FAIL

  [The source of the request from store => store.clear() is the object store itself]
    expected: FAIL

  [The source of the request from store => store.get(0) is the object store itself]
    expected: FAIL

  [The source of the request from store => store.getKey(0) is the object store itself]
    expected: FAIL

  [The source of the request from store => store.getAll() is the object store itself]
    expected: FAIL

  [The source of the request from store => store.getAllKeys() is the object store itself]
    expected: FAIL

  [The source of the request from store => store.count() is the object store itself]
    expected: FAIL

  [The source of the request from store => store.openCursor() is the object store itself]
    expected: FAIL

  [The source of the request from store => store.openKeyCursor() is the object store itself]
    expected: FAIL


[idbobjectstore-request-source.any.serviceworker.html]
  expected: ERROR

[idbobjectstore-request-source.any.sharedworker.html]
  expected: ERROR

[idbobjectstore-request-source.any.html]
  expected: CRASH
  [The source of the request from store => store.put(0) is the object store itself]
    expected: FAIL

  [The source of the request from store => store.add(0) is the object store itself]
    expected: FAIL

  [The source of the request from store => store.delete(0) is the object store itself]
    expected: FAIL

  [The source of the request from store => store.clear() is the object store itself]
    expected: FAIL

  [The source of the request from store => store.get(0) is the object store itself]
    expected: FAIL

  [The source of the request from store => store.getKey(0) is the object store itself]
    expected: FAIL

  [The source of the request from store => store.getAll() is the object store itself]
    expected: FAIL

  [The source of the request from store => store.getAllKeys() is the object store itself]
    expected: FAIL

  [The source of the request from store => store.count() is the object store itself]
    expected: FAIL

  [The source of the request from store => store.openCursor() is the object store itself]
    expected: FAIL

  [The source of the request from store => store.openKeyCursor() is the object store itself]
    expected: FAIL
