[observable-catch.any.html]
  [catch(): Returns an Observable that is a pass-through for next()/complete()]
    expected: FAIL

  [catch(): Handle errors from source and flatten to a new Observable]
    expected: FAIL

  [catch(): Errors thrown in the catch() callback are sent to the consumer's error handler]
    expected: FAIL

  [catch(): CatchHandler can return an empty iterable]
    expected: FAIL

  [catch(): CatchHandler can return a Promise]
    expected: FAIL

  [catch(): should handle returning an async iterable]
    expected: FAIL

  [catch(): CatchHandler emits an error if the value returned is not convertible to an Observable]
    expected: FAIL

  [catch(): CatchHandler returns an Observable that throws immediately on subscription]
    expected: FAIL

  [catch(): Abort order between outer AbortSignal and inner CatchHandler subscriber's AbortSignal]
    expected: FAIL


[observable-catch.any.worker.html]
  [catch(): Returns an Observable that is a pass-through for next()/complete()]
    expected: FAIL

  [catch(): Handle errors from source and flatten to a new Observable]
    expected: FAIL

  [catch(): Errors thrown in the catch() callback are sent to the consumer's error handler]
    expected: FAIL

  [catch(): CatchHandler can return an empty iterable]
    expected: FAIL

  [catch(): CatchHandler can return a Promise]
    expected: FAIL

  [catch(): should handle returning an async iterable]
    expected: FAIL

  [catch(): CatchHandler emits an error if the value returned is not convertible to an Observable]
    expected: FAIL

  [catch(): CatchHandler returns an Observable that throws immediately on subscription]
    expected: FAIL

  [catch(): Abort order between outer AbortSignal and inner CatchHandler subscriber's AbortSignal]
    expected: FAIL
