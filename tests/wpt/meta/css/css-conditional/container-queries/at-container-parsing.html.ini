[at-container-parsing.html]
  [Query condition should be valid: (width)]
    expected: FAIL

  [Query condition should be valid: (min-width: 0px)]
    expected: FAIL

  [Query condition should be valid: (max-width: 0px)]
    expected: FAIL

  [Query condition should be valid: (height)]
    expected: FAIL

  [Query condition should be valid: (min-height: 0px)]
    expected: FAIL

  [Query condition should be valid: (max-height: 0px)]
    expected: FAIL

  [Query condition should be valid: (aspect-ratio)]
    expected: FAIL

  [Query condition should be valid: (min-aspect-ratio: 1/2)]
    expected: FAIL

  [Query condition should be valid: (max-aspect-ratio: 1/2)]
    expected: FAIL

  [Query condition should be valid: (orientation: portrait)]
    expected: FAIL

  [Query condition should be valid: (inline-size)]
    expected: FAIL

  [Query condition should be valid: (min-inline-size: 0px)]
    expected: FAIL

  [Query condition should be valid: (max-inline-size: 0px)]
    expected: FAIL

  [Query condition should be valid: (block-size)]
    expected: FAIL

  [Query condition should be valid: (min-block-size: 0px)]
    expected: FAIL

  [Query condition should be valid: (max-block-size: 0px)]
    expected: FAIL

  [Query condition should be valid: (width: 100px)]
    expected: FAIL

  [Query condition should be valid: ((width: 100px))]
    expected: FAIL

  [Query condition should be valid: (not (width: 100px))]
    expected: FAIL

  [Query condition should be valid: ((width: 100px) and (height: 100px))]
    expected: FAIL

  [Query condition should be valid: (((width: 40px) or (width: 50px)) and (height: 100px))]
    expected: FAIL

  [Query condition should be valid: ((width: 100px) and ((height: 40px) or (height: 50px)))]
    expected: FAIL

  [Query condition should be valid: (((width: 40px) and (height: 50px)) or (height: 100px))]
    expected: FAIL

  [Query condition should be valid: ((width: 50px) or ((width: 40px) and (height: 50px)))]
    expected: FAIL

  [Query condition should be valid: ((width: 100px) and (not (height: 100px)))]
    expected: FAIL

  [Query condition should be valid: (width < 100px)]
    expected: FAIL

  [Query condition should be valid: (width <= 100px)]
    expected: FAIL

  [Query condition should be valid: (width = 100px)]
    expected: FAIL

  [Query condition should be valid: (width > 100px)]
    expected: FAIL

  [Query condition should be valid: (width >= 100px)]
    expected: FAIL

  [Query condition should be valid: (100px < width)]
    expected: FAIL

  [Query condition should be valid: (100px <= width)]
    expected: FAIL

  [Query condition should be valid: (100px = width)]
    expected: FAIL

  [Query condition should be valid: (100px > width)]
    expected: FAIL

  [Query condition should be valid: (100px >= width)]
    expected: FAIL

  [Query condition should be valid: (100px < width < 200px)]
    expected: FAIL

  [Query condition should be valid: (100px < width <= 200px)]
    expected: FAIL

  [Query condition should be valid: (100px <= width < 200px)]
    expected: FAIL

  [Query condition should be valid: (100px > width > 200px)]
    expected: FAIL

  [Query condition should be valid: (100px > width >= 200px)]
    expected: FAIL

  [Query condition should be valid: (100px >= width > 200px)]
    expected: FAIL

  [Query condition should be valid: (width: calc(10px))]
    expected: FAIL

  [Query condition should be valid: (width: calc(10em))]
    expected: FAIL

  [Query condition should be valid: (width: calc(10px + 10em))]
    expected: FAIL

  [Query condition should be valid: (width < calc(10px + 10em))]
    expected: FAIL

  [Query condition should be valid: (width < max(10px, 10em))]
    expected: FAIL

  [Query condition should be valid: (calc(10px + 10em) < width)]
    expected: FAIL

  [Query condition should be valid: (calc(10px + 10em) < width < max(30px, 30em))]
    expected: FAIL

  [Query condition should be valid: (width: 100px) and (height: 100px)]
    expected: FAIL

  [Query condition should be valid: (width: 100px) or (height: 100px)]
    expected: FAIL

  [Query condition should be valid: not (width: 100px)]
    expected: FAIL

  [Query condition should be valid but unknown: foo(width)]
    expected: FAIL

  [Query condition should be valid but unknown: size(width)]
    expected: FAIL

  [Query condition should be valid but unknown: (asdf)]
    expected: FAIL

  [Query condition should be valid but unknown: (resolution > 100dpi)]
    expected: FAIL

  [Query condition should be valid but unknown: (resolution: 150dpi)]
    expected: FAIL

  [Query condition should be valid but unknown: (resolution: calc(2x))]
    expected: FAIL

  [Query condition should be valid but unknown: (color)]
    expected: FAIL

  [Query condition should be valid but unknown: (min-color: 1)]
    expected: FAIL

  [Query condition should be valid but unknown: (color-index >= 1)]
    expected: FAIL

  [Query condition should be valid but unknown: size(grid)]
    expected: FAIL

  [Query condition should be valid but unknown: (grid)]
    expected: FAIL

  [Query condition should be valid but unknown: (width == 100px)]
    expected: FAIL

  [Query condition should be valid but unknown: (100px == width)]
    expected: FAIL

  [Query condition should be valid but unknown: (100px = width = 200px)]
    expected: FAIL

  [Query condition should be valid but unknown: (100px < width > 200px)]
    expected: FAIL

  [Query condition should be valid but unknown: (100px <= width >= 200px)]
    expected: FAIL

  [Query condition should be valid but unknown: (100px <= width > 200px)]
    expected: FAIL

  [Query condition should be valid but unknown: (100px < width >= 200px)]
    expected: FAIL

  [Query condition should be valid but unknown: (100px : width : 200px)]
    expected: FAIL

  [@container rule should be valid: @container name not (width <= 500px) {} {}]
    expected: FAIL

  [@container rule should be valid: @container not (width <= 500px) {} {}]
    expected: FAIL

  [@container rule should be valid: @container (width: 100px), (height: 100px) {} {}]
    expected: FAIL

  [@container rule should be valid: @container (width),(height)  , (inline-size > 20px) {} {}]
    expected: FAIL

  [@container rule should be valid: @container (width), name (height) {} {}]
    expected: FAIL

  [@container rule should be valid: @container --foo {} {}]
    expected: FAIL

  [@container rule should be valid: @container container {} {}]
    expected: FAIL

  [@container rule should be valid: @container container, container2 {} {}]
    expected: FAIL

  [Container name: foo]
    expected: FAIL

  [Container name:  foo]
    expected: FAIL

  [Container name:  foo ]
    expected: FAIL

  [Container name: normal]
    expected: FAIL

  [Container name: Normal]
    expected: FAIL

  [Container name: auto]
    expected: FAIL

  [Container name: Auto]
    expected: FAIL
