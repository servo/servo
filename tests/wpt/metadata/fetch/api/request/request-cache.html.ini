[request-cache.html]
  type: testharness
  [RequestCache "default" mode checks the cache for previously cached content and goes to the network for stale responses with Etag and stale response]
    expected: FAIL

  [RequestCache "default" mode checks the cache for previously cached content and goes to the network for stale responses with date and stale response]
    expected: FAIL

  [RequestCache "default" mode checks the cache for previously cached content and avoids going to the network if a fresh response exists with Etag and fresh response]
    expected: FAIL

  [RequestCache "default" mode checks the cache for previously cached content and avoids going to the network if a fresh response exists with date and fresh response]
    expected: FAIL

  [RequestCache "no-cache" mode revalidates stale responses found in the cache with Etag and stale response]
    expected: FAIL

  [RequestCache "no-cache" mode revalidates stale responses found in the cache with date and stale response]
    expected: FAIL

  [RequestCache "no-cache" mode revalidates fresh responses found in the cache with Etag and fresh response]
    expected: FAIL

  [RequestCache "no-cache" mode revalidates fresh responses found in the cache with date and fresh response]
    expected: FAIL

  [RequestCache "force-cache" mode checks the cache for previously cached content and avoid revalidation for stale responses with Etag and stale response]
    expected: FAIL

  [RequestCache "force-cache" mode checks the cache for previously cached content and avoid revalidation for stale responses with date and stale response]
    expected: FAIL

  [RequestCache "force-cache" mode checks the cache for previously cached content and avoid revalidation for fresh responses with Etag and fresh response]
    expected: FAIL

  [RequestCache "force-cache" mode checks the cache for previously cached content and avoid revalidation for fresh responses with date and fresh response]
    expected: FAIL

  [RequestCache "force-cache" mode checks the cache for previously cached content and goes to the network if a cached response is not found with Etag and stale response]
    expected: FAIL

  [RequestCache "force-cache" mode checks the cache for previously cached content and goes to the network if a cached response is not found with date and stale response]
    expected: FAIL

  [RequestCache "force-cache" mode checks the cache for previously cached content and goes to the network if a cached response is not found with Etag and fresh response]
    expected: FAIL

  [RequestCache "force-cache" mode checks the cache for previously cached content and goes to the network if a cached response is not found with date and fresh response]
    expected: FAIL

  [RequestCache "force-cache" mode checks the cache for previously cached content and goes to the network if a cached response would vary with Etag and stale response]
    expected: FAIL

  [RequestCache "force-cache" mode checks the cache for previously cached content and goes to the network if a cached response would vary with date and stale response]
    expected: FAIL

  [RequestCache "force-cache" mode checks the cache for previously cached content and goes to the network if a cached response would vary with Etag and fresh response]
    expected: FAIL

  [RequestCache "force-cache" mode checks the cache for previously cached content and goes to the network if a cached response would vary with date and fresh response]
    expected: FAIL

  [RequestCache "force-cache" stores the response in the cache if it goes to the network with Etag and stale response]
    expected: FAIL

  [RequestCache "force-cache" stores the response in the cache if it goes to the network with date and stale response]
    expected: FAIL

  [RequestCache "force-cache" stores the response in the cache if it goes to the network with Etag and fresh response]
    expected: FAIL

  [RequestCache "force-cache" stores the response in the cache if it goes to the network with date and fresh response]
    expected: FAIL

  [RequestCache "only-if-cached" mode checks the cache for previously cached content and avoids revalidation for stale responses with Etag and stale response]
    expected: FAIL

  [RequestCache "only-if-cached" mode checks the cache for previously cached content and avoids revalidation for stale responses with date and stale response]
    expected: FAIL

  [RequestCache "only-if-cached" mode checks the cache for previously cached content and avoids revalidation for fresh responses with Etag and fresh response]
    expected: FAIL

  [RequestCache "only-if-cached" mode checks the cache for previously cached content and avoids revalidation for fresh responses with date and fresh response]
    expected: FAIL

  [RequestCache "only-if-cached" mode checks the cache for previously cached content and does not go to the network if a cached response is not found with Etag and fresh response]
    expected: FAIL

  [RequestCache "only-if-cached" mode checks the cache for previously cached content and does not go to the network if a cached response is not found with date and fresh response]
    expected: FAIL

  [RequestCache "only-if-cached" (with "same-origin") uses cached same-origin redirects to same-origin content with Etag and fresh response]
    expected: FAIL

  [RequestCache "only-if-cached" (with "same-origin") uses cached same-origin redirects to same-origin content with date and fresh response]
    expected: FAIL

  [RequestCache "only-if-cached" (with "same-origin") uses cached same-origin redirects to same-origin content with Etag and stale response]
    expected: FAIL

  [RequestCache "only-if-cached" (with "same-origin") uses cached same-origin redirects to same-origin content with date and stale response]
    expected: FAIL

  [RequestCache "only-if-cached" (with "same-origin") does not follow redirects across origins and rejects with Etag and fresh response]
    expected: FAIL

  [RequestCache "only-if-cached" (with "same-origin") does not follow redirects across origins and rejects with date and fresh response]
    expected: FAIL

  [RequestCache "only-if-cached" (with "same-origin") does not follow redirects across origins and rejects with Etag and stale response]
    expected: FAIL

  [RequestCache "only-if-cached" (with "same-origin") does not follow redirects across origins and rejects with date and stale response]
    expected: FAIL

  [RequestCache "no-store" mode does not check the cache for previously cached content and goes to the network regardless with Etag and stale response]
    expected: FAIL

  [RequestCache "no-store" mode does not check the cache for previously cached content and goes to the network regardless with date and stale response]
    expected: FAIL

  [RequestCache "no-store" mode does not check the cache for previously cached content and goes to the network regardless with Etag and fresh response]
    expected: FAIL

  [RequestCache "no-store" mode does not check the cache for previously cached content and goes to the network regardless with date and fresh response]
    expected: FAIL

  [RequestCache "no-store" mode does not store the response in the cache with Etag and stale response]
    expected: FAIL

  [RequestCache "no-store" mode does not store the response in the cache with date and stale response]
    expected: FAIL

  [RequestCache "no-store" mode does not store the response in the cache with Etag and fresh response]
    expected: FAIL

  [RequestCache "no-store" mode does not store the response in the cache with date and fresh response]
    expected: FAIL

  [RequestCache "default" mode with an If-Modified-Since header is treated similarly to "no-store" with Etag and stale response]
    expected: FAIL

  [RequestCache "default" mode with an If-Modified-Since header is treated similarly to "no-store" with date and stale response]
    expected: FAIL

  [RequestCache "default" mode with an If-Modified-Since header is treated similarly to "no-store" with Etag and fresh response]
    expected: FAIL

  [RequestCache "default" mode with an If-Modified-Since header is treated similarly to "no-store" with date and fresh response]
    expected: FAIL

  [RequestCache "default" mode with an If-None-Match header is treated similarly to "no-store" with Etag and stale response]
    expected: FAIL

  [RequestCache "default" mode with an If-None-Match header is treated similarly to "no-store" with date and stale response]
    expected: FAIL

  [RequestCache "default" mode with an If-None-Match header is treated similarly to "no-store" with Etag and fresh response]
    expected: FAIL

  [RequestCache "default" mode with an If-None-Match header is treated similarly to "no-store" with date and fresh response]
    expected: FAIL

  [RequestCache "default" mode with an If-Unmodified-Since header is treated similarly to "no-store" with Etag and stale response]
    expected: FAIL

  [RequestCache "default" mode with an If-Unmodified-Since header is treated similarly to "no-store" with date and stale response]
    expected: FAIL

  [RequestCache "default" mode with an If-Unmodified-Since header is treated similarly to "no-store" with Etag and fresh response]
    expected: FAIL

  [RequestCache "default" mode with an If-Unmodified-Since header is treated similarly to "no-store" with date and fresh response]
    expected: FAIL

  [RequestCache "default" mode with an If-Match header is treated similarly to "no-store" with Etag and stale response]
    expected: FAIL

  [RequestCache "default" mode with an If-Match header is treated similarly to "no-store" with date and stale response]
    expected: FAIL

  [RequestCache "default" mode with an If-Match header is treated similarly to "no-store" with Etag and fresh response]
    expected: FAIL

  [RequestCache "default" mode with an If-Match header is treated similarly to "no-store" with date and fresh response]
    expected: FAIL

  [RequestCache "default" mode with an If-Range header is treated similarly to "no-store" with Etag and stale response]
    expected: FAIL

  [RequestCache "default" mode with an If-Range header is treated similarly to "no-store" with date and stale response]
    expected: FAIL

  [RequestCache "default" mode with an If-Range header is treated similarly to "no-store" with Etag and fresh response]
    expected: FAIL

  [RequestCache "default" mode with an If-Range header is treated similarly to "no-store" with date and fresh response]
    expected: FAIL

  [Responses with the "Cache-Control: no-store" header are not stored in the cache with Etag and stale response]
    expected: FAIL

  [Responses with the "Cache-Control: no-store" header are not stored in the cache with date and stale response]
    expected: FAIL

  [Responses with the "Cache-Control: no-store" header are not stored in the cache with Etag and fresh response]
    expected: FAIL

  [Responses with the "Cache-Control: no-store" header are not stored in the cache with date and fresh response]
    expected: FAIL

  [RequestCache "reload" mode does not check the cache for previously cached content and goes to the network regardless with Etag and stale response]
    expected: FAIL

  [RequestCache "reload" mode does not check the cache for previously cached content and goes to the network regardless with date and stale response]
    expected: FAIL

  [RequestCache "reload" mode does not check the cache for previously cached content and goes to the network regardless with Etag and fresh response]
    expected: FAIL

  [RequestCache "reload" mode does not check the cache for previously cached content and goes to the network regardless with date and fresh response]
    expected: FAIL

  [RequestCache "reload" mode does store the response in the cache with Etag and stale response]
    expected: FAIL

  [RequestCache "reload" mode does store the response in the cache with date and stale response]
    expected: FAIL

  [RequestCache "reload" mode does store the response in the cache with Etag and fresh response]
    expected: FAIL

  [RequestCache "reload" mode does store the response in the cache with date and fresh response]
    expected: FAIL

  [RequestCache "reload" mode does store the response in the cache even if a previous response is already stored with Etag and stale response]
    expected: FAIL

  [RequestCache "reload" mode does store the response in the cache even if a previous response is already stored with date and stale response]
    expected: FAIL

  [RequestCache "reload" mode does store the response in the cache even if a previous response is already stored with Etag and fresh response]
    expected: FAIL

  [RequestCache "reload" mode does store the response in the cache even if a previous response is already stored with date and fresh response]
    expected: FAIL

