[location-prototype-setting-cross-origin-domain.sub.html]
  type: testharness
  [Cross-origin via document.domain: the prototype is null]
    expected: FAIL

  [Cross-origin via document.domain: setting the prototype to an empty object via __proto__ should throw a "SecurityError" DOMException]
    expected: FAIL

  [Cross-origin via document.domain: setting the prototype to an empty object via Reflect.setPrototypeOf should return false]
    expected: FAIL

  [Cross-origin via document.domain: setting the prototype to its original value via Object.setPrototypeOf should not throw]
    expected: FAIL

  [Cross-origin via document.domain: setting the prototype to its original value via __proto__ should throw a "SecurityError" since it ends up in CrossOriginGetOwnProperty]
    expected: FAIL

  [Cross-origin via document.domain: setting the prototype to its original value via Reflect.setPrototypeOf should return true]
    expected: FAIL

