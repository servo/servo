[draw-elements-out-of-bounds.html]
  type: testharness
  expected: ERROR
  [WebGL test #0: getError expected: NO_ERROR. Was INVALID_OPERATION : after evaluating: gl.drawElements(gl.TRIANGLES, 0, gl.UNSIGNED_BYTE, 0)]
    expected: FAIL

  [WebGL test #1: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawElements(gl.TRIANGLES, 3, gl.UNSIGNED_BYTE, 0)]
    expected: FAIL

  [WebGL test #2: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawElements(gl.TRIANGLES, 10000, gl.UNSIGNED_BYTE, 0)]
    expected: FAIL

  [WebGL test #3: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawElements(gl.TRIANGLES, 10000000000000, gl.UNSIGNED_BYTE, 0)]
    expected: FAIL

  [WebGL test #4: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawElements(gl.TRIANGLES, 1, gl.UNSIGNED_BYTE, 0)]
    expected: FAIL

  [WebGL test #5: getError expected: INVALID_VALUE. Was INVALID_OPERATION : after evaluating: gl.drawElements(gl.TRIANGLES, -1, gl.UNSIGNED_BYTE, 0)]
    expected: FAIL

  [WebGL test #6: getError expected: INVALID_VALUE. Was INVALID_OPERATION : after evaluating: gl.drawElements(gl.TRIANGLES, 0, gl.UNSIGNED_BYTE, -1)]
    expected: FAIL

  [WebGL test #7: getError expected: INVALID_VALUE. Was INVALID_OPERATION : after evaluating: gl.drawElements(gl.TRIANGLES, -1, gl.UNSIGNED_BYTE, 1)]
    expected: FAIL

  [WebGL test #9: getError expected: INVALID_VALUE. Was INVALID_OPERATION : after evaluating: gl.drawElements(gl.TRIANGLES, 0xffffffff, gl.UNSIGNED_BYTE, 0)]
    expected: FAIL

  [WebGL test #11: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawElements(gl.TRIANGLES, 3, gl.UNSIGNED_BYTE, 2)]
    expected: FAIL

  [WebGL test #12: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawElements(gl.TRIANGLES, 10000, gl.UNSIGNED_BYTE, 0)]
    expected: FAIL

  [WebGL test #13: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawElements(gl.TRIANGLES, 10000000000000, gl.UNSIGNED_BYTE, 0)]
    expected: FAIL

  [WebGL test #14: getError expected: INVALID_VALUE. Was INVALID_OPERATION : after evaluating: gl.drawElements(gl.TRIANGLES, -1, gl.UNSIGNED_BYTE, 0)]
    expected: FAIL

  [WebGL test #15: getError expected: INVALID_VALUE. Was INVALID_OPERATION : after evaluating: gl.drawElements(gl.TRIANGLES, 0, gl.UNSIGNED_BYTE, -1)]
    expected: FAIL

  [WebGL test #16: getError expected: INVALID_VALUE. Was INVALID_OPERATION : after evaluating: gl.drawElements(gl.TRIANGLES, -1, gl.UNSIGNED_BYTE, 1)]
    expected: FAIL

  [WebGL test #18: getError expected: INVALID_VALUE. Was INVALID_OPERATION : after evaluating: gl.drawElements(gl.TRIANGLES, 0xffffffff, gl.UNSIGNED_BYTE, 0)]
    expected: FAIL

  [WebGL test #19: getError expected: NO_ERROR. Was INVALID_OPERATION : after evaluating: gl.drawElements(gl.TRIANGLES, 0, gl.UNSIGNED_BYTE, 4)]
    expected: FAIL

  [WebGL test #20: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawElements(gl.TRIANGLES, 0x7fffffff, gl.UNSIGNED_BYTE, 0)]
    expected: FAIL

  [WebGL test #21: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawElements(gl.TRIANGLES, 0x7fffffff, gl.UNSIGNED_BYTE, 0x7fffffff)]
    expected: FAIL

  [WebGL test #25: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawElements(gl.TRIANGLES, 3, gl.UNSIGNED_BYTE, 0)]
    expected: FAIL

  [WebGL test #28: getError expected: NO_ERROR. Was INVALID_OPERATION : after evaluating: gl.drawElements(gl.TRIANGLES, 0, gl.UNSIGNED_BYTE, 0)]
    expected: FAIL

  [WebGL test #30: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawElements(gl.TRIANGLES, 9, gl.UNSIGNED_SHORT, 1000)]
    expected: FAIL

  [WebGL test #31: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawElements(gl.TRIANGLES, 12, gl.UNSIGNED_SHORT, 0)]
    expected: FAIL

  [WebGL test #32: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawElements(gl.TRIANGLES, 15, gl.UNSIGNED_SHORT, 0)]
    expected: FAIL

  [WebGL test #33: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawElements(gl.TRIANGLES, 18, gl.UNSIGNED_SHORT, 0)]
    expected: FAIL

  [WebGL test #34: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawElements(gl.TRIANGLES, 3, gl.UNSIGNED_SHORT, 30)]
    expected: FAIL

  [WebGL test #35: getError expected: INVALID_VALUE. Was INVALID_OPERATION : after evaluating: gl.drawElements(gl.TRIANGLES, 0xffffffff, gl.UNSIGNED_SHORT, 0)]
    expected: FAIL

  [WebGL test #37: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawElements(gl.TRIANGLES, 0x7fffffff, gl.UNSIGNED_SHORT, 0)]
    expected: FAIL

  [WebGL test #38: getError expected: NO_ERROR. Was INVALID_OPERATION : after evaluating: gl.drawElements(gl.TRIANGLES, 0, gl.UNSIGNED_SHORT, 0)]
    expected: FAIL

  [WebGL test #43: successfullyParsed should be true (of type boolean). Was undefined (of type undefined).]
    expected: FAIL

