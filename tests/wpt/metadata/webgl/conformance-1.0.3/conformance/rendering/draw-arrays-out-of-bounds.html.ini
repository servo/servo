[draw-arrays-out-of-bounds.html]
  type: testharness
  [WebGL test #0: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawArrays(gl.TRIANGLES, 0, 1)]
    expected: FAIL

  [WebGL test #1: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawArrays(gl.TRIANGLES, 0, 10000)]
    expected: FAIL

  [WebGL test #2: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawArrays(gl.TRIANGLES, 0, 10000000000000)]
    expected: FAIL

  [WebGL test #12: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawArrays(gl.TRIANGLES, 3, 2)]
    expected: FAIL

  [WebGL test #13: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawArrays(gl.TRIANGLES, 0, 10000)]
    expected: FAIL

  [WebGL test #14: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawArrays(gl.TRIANGLES, 0, 10000000000000)]
    expected: FAIL

  [WebGL test #29: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawArrays(gl.TRIANGLES, 0, 200)]
    expected: FAIL

  [WebGL test #30: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawArrays(gl.TRIANGLES, 0, 0x7fffffff)]
    expected: FAIL

  [WebGL test #31: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawArrays(gl.TRIANGLES, 0x7fffffff, 1)]
    expected: FAIL

  [WebGL test #32: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: gl.drawArrays(gl.TRIANGLES, 0x7fffffff, 0x7fffffff)]
    expected: FAIL

