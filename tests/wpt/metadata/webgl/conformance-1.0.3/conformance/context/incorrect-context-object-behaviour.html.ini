[incorrect-context-object-behaviour.html]
  type: testharness
  expected:
    if os == "mac": CRASH
  [WebGL test #0: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: contextA.compileShader(shaderB)]
    expected: FAIL

  [WebGL test #1: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: contextA.linkProgram(programB)]
    expected: FAIL

  [WebGL test #5: contextA.detachShader(programA, shaderB) threw exception TypeError: contextA.detachShader is not a function]
    expected: FAIL

  [WebGL test #6: contextA.detachShader(programB, shaderA) threw exception TypeError: contextA.detachShader is not a function]
    expected: FAIL

  [WebGL test #7: contextA.detachShader(programB, shaderB) threw exception TypeError: contextA.detachShader is not a function]
    expected: FAIL

  [WebGL test #8: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: contextA.shaderSource(shaderB, 'foo')]
    expected: FAIL

  [WebGL test #9: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: contextA.bindAttribLocation(programB, 0, 'foo')]
    expected: FAIL

  [WebGL test #10: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: contextA.bindFramebuffer(contextA.FRAMEBUFFER, frameBufferB)]
    expected: FAIL

  [WebGL test #11: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: contextA.bindRenderbuffer(contextA.RENDERBUFFER, renderBufferB)]
    expected: FAIL

  [WebGL test #12: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: contextA.bindTexture(contextA.TEXTURE_2D, textureB)]
    expected: FAIL

  [WebGL test #13: contextA.framebufferRenderbuffer(contextA.FRAMEBUFFER, contextA.DEPTH_ATTACHMENT, contextA.RENDERBUFFER, renderBufferB) threw exception TypeError: contextA.framebufferRenderbuffer is not a function]
    expected: FAIL

  [WebGL test #14: contextA.framebufferTexture2D(contextA.FRAMEBUFFER, contextA.COLOR_ATTACHMENT0, contextA.TEXTURE_2D, textureB, 0) threw exception TypeError: contextA.framebufferTexture2D is not a function]
    expected: FAIL

  [WebGL test #15: getError expected: INVALID_OPERATION. Was INVALID_ENUM : after evaluating: contextA.getProgramParameter(programB, 0)]
    expected: FAIL

  [WebGL test #16: contextA.getProgramInfoLog(programB, 0) threw exception TypeError: contextA.getProgramInfoLog is not a function]
    expected: FAIL

  [WebGL test #17: getError expected: INVALID_OPERATION. Was INVALID_ENUM : after evaluating: contextA.getShaderParameter(shaderB, 0)]
    expected: FAIL

  [WebGL test #18: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: contextA.getShaderInfoLog(shaderB, 0)]
    expected: FAIL

  [WebGL test #19: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: contextA.getShaderSource(shaderB)]
    expected: FAIL

  [WebGL test #20: contextA.getUniform(programB, locationA) threw exception TypeError: contextA.getUniform is not a function]
    expected: FAIL

  [WebGL test #21: getError expected: INVALID_OPERATION. Was NO_ERROR : after evaluating: contextA.getUniformLocation(programB, 'u_modelViewProjMatrix')]
    expected: FAIL

