[RTCPeerConnection-transceivers.https.html]
  [setLocalDescription(answer): transceiver.currentDirection is recvonly]
    expected: FAIL

  [setRemoteDescription(offer): ontrack fires with a track]
    expected: FAIL

  [Can setup two-way call using a single transceiver]
    expected: FAIL

  [setRemoteDescription(offer): transceiver.mid is the same on both ends]
    expected: FAIL

  [addTransceiver(track, init): initialize sendEncodings[0\].active to false]
    expected: FAIL

  [addTransceiver('video'): transceiver.receiver.track.kind == 'video']
    expected: FAIL

  [addTransceiver('audio'): transceiver.stopped is false]
    expected: FAIL

  [setLocalDescription(answer): transceiver.currentDirection is sendonly]
    expected: FAIL

  [addTrack: transceiver is not associated with an m-section]
    expected: FAIL

  [transceiver.sender.track does not revert to an old state]
    expected: FAIL

  [addTrack: transceiver.receiver has its own track]
    expected: FAIL

  [addTrack: "transceiver == {sender,receiver}"]
    expected: FAIL

  [setLocalDescription(offer): transceiver.mid matches the offer SDP]
    expected: FAIL

  [setRemoteDescription(offer): transceiver.direction is recvonly]
    expected: FAIL

  [Changing transceiver direction to 'sendrecv' makes ontrack fire]
    expected: FAIL

  [addTrack: transceiver is not stopped]
    expected: FAIL

  [addTrack(1 stream): ontrack fires with corresponding stream]
    expected: FAIL

  [addTransceiver(track, init): initialize direction to inactive]
    expected: FAIL

  [addTrack(0 streams): ontrack fires with no stream]
    expected: FAIL

  [addTrack: transceiver's direction is sendrecv]
    expected: FAIL

  [addTrack(2 streams): ontrack fires with corresponding two streams]
    expected: FAIL

  [addTransceiver(0 streams): ontrack fires with no stream]
    expected: FAIL

  [addTransceiver(1 stream): ontrack fires with corresponding stream]
    expected: FAIL

  [setRemoteDescription(offer): transceiver.currentDirection is null]
    expected: FAIL

  [addTrack: transceiver.sender is associated with the track]
    expected: FAIL

  [addTransceiver does not reuse reusable transceivers]
    expected: FAIL

  [addTransceiver(track): "transceiver == {sender,receiver}"]
    expected: FAIL

  [transceiver.direction does not revert to an old state]
    expected: FAIL

  [addTransceiver('audio'): transceiver.sender.track == null]
    expected: FAIL

  [addTransceiver('audio'): creates a transceiver with direction sendrecv]
    expected: FAIL

  [setLocalDescription(offer): transceiver gets associated with an m-section]
    expected: FAIL

  [addTransceiver('audio'): transceiver.currentDirection is null]
    expected: FAIL

  [setRemoteDescription(offer): ontrack's stream.id is the same as stream.id]
    expected: FAIL

  [setRemoteDescription(offer): transceiver.stopped is false]
    expected: FAIL

  [addTransceiver('audio'): transceiver.receiver.track.kind == 'audio']
    expected: FAIL

  [addTransceiver(track): creates a transceiver for the track]
    expected: FAIL

  [addTransceiver(2 streams): ontrack fires with corresponding two streams]
    expected: FAIL

  [setRemoteDescription(offer): "transceiver == {sender,receiver}"]
    expected: FAIL

  [addTrack: transceiver's currentDirection is null]
    expected: FAIL

  [addTrack reuses reusable transceivers]
    expected: FAIL

  [addTrack: creates a transceiver for the sender]
    expected: FAIL

  [Closing the PC stops the transceivers]
    expected: FAIL

  [setRemoteDescription(offer): ontrack fires with a transceiver.]
    expected: FAIL

  [addTrack: transceiver.receiver's track is muted]
    expected: FAIL

