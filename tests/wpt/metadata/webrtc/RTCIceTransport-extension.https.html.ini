[RTCIceTransport-extension.https.html]
  [RTCIceTransport initial properties are set]
    expected: FAIL

  [gather() with { iceServers: null } should throw TypeError]
    expected: FAIL

  [gather() returns no candidates with { gatherPolicy: 'relay'} and no turn servers]
    expected: FAIL

  [gather() throws if called twice]
    expected: FAIL

  [gather() returns at least one host candidate]
    expected: FAIL

  [gather() with one turns server, one turn server, username, credential should succeed]
    expected: FAIL

  [onicecandidate fires with null candidate before gatheringState transitions to 'complete']
    expected: FAIL

  [start() does not transition state to 'checking' if no remote candidates added]
    expected: FAIL

  [gather() transitions gatheringState to 'gathering']
    expected: FAIL

  [start() with default role sets role attribute to 'controlled']
    expected: FAIL

  [eventually transition gatheringState to 'complete']
    expected: FAIL

  [gather() with { iceServers: undefined } should succeed]
    expected: FAIL

  [RTCIceTransport constructor does not throw]
    expected: FAIL

  [gather() with 2 stun servers should succeed]
    expected: FAIL

  [start() throws if usernameFragment or password not set]
    expected: FAIL

  [start() sets role attribute to 'controlling']
    expected: FAIL

  [start() throws if closed]
    expected: FAIL

  [gather() throws if closed]
    expected: FAIL

  [addRemoteCandidate() throws if closed]
    expected: FAIL

  [Two RTCIceTransports configured with the controlled role resolve the conflict in band and still connect.]
    expected: FAIL

  [addRemoteCandidate() transitions state to 'checking' if start() had been called before]
    expected: FAIL

  [Selected candidate pair changes once the RTCIceTransports connect.]
    expected: FAIL

  [Two RTCIceTransports connect to each other]
    expected: FAIL

  [start() flushes remote candidates and transitions state to 'new' if later called with different remote parameters]
    expected: FAIL

  [start() throws if later called with a different role]
    expected: FAIL

  [addRemoteCandidate() throws on invalid candidate]
    expected: FAIL

  [Two RTCIceTransports configured with the controlling role resolve the conflict in band and still connect.]
    expected: FAIL

  [start() transitions state to 'checking' if one remote candidate had been added]
    expected: FAIL

  [getSelectedCandidatePair() returns null once the RTCIceTransport is stopped.]
    expected: FAIL

