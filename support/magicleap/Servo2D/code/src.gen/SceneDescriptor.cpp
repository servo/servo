// -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- 
//
// THE CONTENTS OF THIS FILE IS GENERATED BY CODE AND
// ANY MODIFICATIONS WILL BE OVERWRITTEN
//
// -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- WARNING -- 

// %BANNER_BEGIN%
// ---------------------------------------------------------------------
// %COPYRIGHT_BEGIN%
//
// Copyright (c) 2018 Magic Leap, Inc. All Rights Reserved.
// Use of this file is governed by the Creator Agreement, located
// here: https://id.magicleap.com/creator-terms
//
// %COPYRIGHT_END%
// ---------------------------------------------------------------------
// %BANNER_END%

#include <SceneDescriptor.h>

SceneDescriptor::SceneDescriptor(const char * exportedName, const char * id, const char * sceneGraphPath, const char * resourceModelPath, const ExportedNodeReferences& exportedNodeReferences, bool initiallyInstanced)
:
  exportedName_(exportedName),
  id_(id),
  sceneGraphPath_(sceneGraphPath),
  resourceModelPath_(resourceModelPath),
  exportedNodeReferences_(exportedNodeReferences),
  initiallyInstanced_(initiallyInstanced) {
}

const std::string & SceneDescriptor::getExportedName() const {
	return exportedName_;
}

const std::string & SceneDescriptor::getId() const {
	return id_;
}

const std::string & SceneDescriptor::getSceneGraphPath() const {
	return sceneGraphPath_;
}

const std::string & SceneDescriptor::getResourceModelPath() const {
	return resourceModelPath_;
}

const SceneDescriptor::ExportedNodeReferences & SceneDescriptor::getExportedNodeReferences() const {
	return exportedNodeReferences_;
}

bool SceneDescriptor::getInitiallyInstanced() const {
	return initiallyInstanced_;
}
