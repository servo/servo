[package]
name = "script_bindings"
build = "build.rs"
version.workspace = true
authors.workspace = true
license.workspace = true
edition.workspace = true
publish.workspace = true
rust-version.workspace = true

# https://github.com/rust-lang/cargo/issues/3544
links = "script_bindings_crate"

[lib]
name = "script_bindings"
path = "lib.rs"

[dependencies]
bitflags = { workspace = true }
crossbeam-channel = { workspace = true }
cssparser = { workspace = true }
deny_public_fields = { path = "../deny_public_fields" }
dom_struct = { path = "../dom_struct" }
domobject_derive = { path = "../domobject_derive" }
html5ever = { workspace = true }
indexmap = { workspace = true }
js = { workspace = true }
jstraceable_derive = { path = "../jstraceable_derive" }
libc = { workspace = true }
log = { workspace = true }
malloc_size_of = { workspace = true }
malloc_size_of_derive = { workspace = true }
num-traits = { workspace = true }
parking_lot = { workspace = true }
phf = "0.11"
regex = { workspace = true }
servo_arc = { workspace = true }
servo_config = { path = "../config" }
servo_url = { path = "../url" }
smallvec = { workspace = true }
stylo = { workspace = true }
stylo_atoms = { workspace = true }
tendril = { version = "0.4.1", features = ["encoding_rs"] }
tracing = { workspace = true, optional = true }
webxr-api = { workspace = true, optional = true }
xml5ever = { workspace = true }

[build-dependencies]
phf_codegen = "0.11"
phf_shared = "0.11"
serde_json = { workspace = true }

[features]
bluetooth = []
tracing = ["dep:tracing"]
webgpu = []
webxr = ["webxr-api"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crown)'] }
unsafe_op_in_unsafe_fn = { level = "allow" }
