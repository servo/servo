#!/bin/sh
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# The beginning of this script is both valid shell and valid python,
# such that the script starts with the shell and is reexecuted with
# the right python.
'''true'
HERE=`readlink -f $0`
HERE=`dirname $HERE`
export PYTHONUSERBASE=$HERE/python/_virtualenv
which python2.7 > /dev/null && exec python2.7 "$0" "$@" || exec python "$0" "$@"
'''

from __future__ import print_function, unicode_literals

import os
import sys

def main(args):
    topdir = os.path.dirname(args[0])
    try:
        import mach.main as _dummy
    except ImportError:
        import pip
        requirements = os.path.join(topdir, 'python', 'requirements.txt')
        ret = pip.main(['install', '--ignore-installed', '--user', '-r', requirements])
        if ret != 0:
            sys.exit(ret)
        # re-exec to pick up the new libraries
        python = sys.executable
        os.execl(python, python, *sys.argv)
    sys.path.insert(0, os.path.join(topdir, "python"))
    import mach_bootstrap
    mach = mach_bootstrap.bootstrap(topdir)
    sys.exit(mach.run(args[1:]))

if __name__ == '__main__':
    main(sys.argv)
